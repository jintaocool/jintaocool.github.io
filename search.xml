<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Alertmanager高可用集群搭建</title>
    <url>/2023/12/22/Alertmanager%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="26b785ae1f1398623f9efcfbcecf3e72d58047351262813a48d69af3cd000fe9"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Alertmanager</category>
      </categories>
      <tags>
        <tag>Alertmanager</tag>
      </tags>
  </entry>
  <entry>
    <title>CMDB与监控系统的融合[三]</title>
    <url>/2023/12/29/CMDB%E4%B8%8E%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9A%84%E8%9E%8D%E5%90%88-%E4%B8%89/</url>
    <content><![CDATA[<p>运维人都知道，CMDB和监控是运维必备的2大核心基础系统，这2个系统不构建好，那根本不用提高效运维、智能运维了。本篇主要讲在这2个系统的基础之上，如何让它们融合起来，提高运维服务能力。</p>
<p>CMDB在之前的文章中有介绍，这里简单介绍下<strong>监控系统</strong>，并着重讲解如何将两者结合，以发挥CMDB的价值以及提高监控的能力。</p>
<p>对于监控系统，我们一般有开源的监控系统Zabbix、Prometheus，还有其他一些优秀开源系统，当然也有很多商业的监控系统。这些监控系统都能满足我们的绝大部分需求，但是如何与我们的CMDB系统结合使用，很少有现成的方案，很多时候需要我们去做对接，有时候甚至是二次开发。</p>
<p>想要监控系统与CMDB的融合，提高监控的能力，有哪些方面可以去考虑呢？要回答这个问题，首先得明确监控系统的核心。监控系统的核心包括数据的<strong>采集、分析、运营</strong>等几个方面。</p>
<p><strong>一</strong></p>
<p> <strong>数据采集</strong></p>
<p>采集数据是监控的基础，比如主机监控，我们需要确定采集哪些主机；不同的主机，监控的指标、频率等可能存在差异；监控某个应用，我们则需要关注这个应用部署在哪些服务器上，一般监控系统并未内置这些功能。在配置采集规则的时候，需要与CMDB中的数据、接口进行对接，实现监控采集对象与CMDB的融合。这样我们在大多数场景下，配置采集规则的时候就可以跳过机器本身，而从其他的维度对采集对象进行定义，如部门、业务、应用等。同时，CMDB中的数据在自动发现、流程驱动、手动编辑等多方面作用下，一直都在变更，监控系统也应该能够根据CMDB的变化自动调整监控对象。</p>
<p>监控系统中数据采集的使用场景：当CMDB中发生变化时，监控系统会自动同步到最新的服务器列表；采集关键字表示需要监控的对象，其中的变量也是根据CMDB中的返回值进行动态赋值的。</p>
<p><strong>二</strong></p>
<p> <strong>监控分析</strong></p>
<p>分析主要包括告警数据的完善、告警策略的触发、告警通知、关联分析、根因分析等。</p>
<p>告警数据的完善，主要是通过通过查询CMDB信息，补充告警信息，为后续处理提供更多信息。对于告警策略，很多时候，不同的业务或者应用，对系统资源的使用存在很大的差异，甚至是在不同的时间段都存在巨大的差异，这种差异也需要告警规则通过结合CMDB来设置。</p>
<p>当告警发生时需要将告警推送给相应的哪些人，例如当主机负载过高时，我们可能要将告警推送给相应的开发负责人等。告警发生之后的关联分析、根因分析，我们需要结合CMDB中的相关的模型之间关系等进行拓扑分析等。</p>
<p><strong>三</strong></p>
<p> <strong>数据运营</strong></p>
<p>常见的应用场景包括资源的使用、业务的健康度分析、成本核算等。多维度结合CMDB，对公司内部不同团队的工作质量进行准确评价，让监控数据发挥更大的价值。 很多场景下，我们甚至只有将CMDB和监控结合才能有效达到我们的目的，没有这种关联，监控很难做到与业务的关联，也不能很好地体现监控系统和CMDB的价值。</p>
<p>综合来说，只有将监控和CMDB融合，才能最大限度地提升CMDB和监控系统的价值，实现1+1&gt;2的效果。</p>
]]></content>
      <categories>
        <category>技术咖</category>
      </categories>
      <tags>
        <tag>技术咖</tag>
      </tags>
  </entry>
  <entry>
    <title>ES读取写入原理详解</title>
    <url>/2023/12/19/ES%E8%AF%BB%E5%8F%96%E5%86%99%E5%85%A5%E5%8E%9F%E7%90%86%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h4 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h4><p>[elasticsearch]设计的理念就是分布式搜索引擎，底层实现还是基于Lucene的，核心思想是在多态机器上启动多个es进程实例，组成一个es集群。</p>
<h5 id="es的基本概念"><a href="#es的基本概念" class="headerlink" title="es的基本概念"></a>es的基本概念</h5><p>1.集群（cluster）</p>
<p>一个集群有多个节点（[服务器]）组成，通过所有的节点一起保存你的全部数据并且通过联合索引和搜索功能的节点的集合，每一个集群有一个唯一的名称标识</p>
<p>2.节点（node）</p>
<p>一个节点就是一个单一的服务器，是你的集群的一部分，存储数据，并且参与集群和搜索功能，一个节点可以通过配置特定的名称来加入特定的集群，在一个集群中，你想启动多少个节点就可以启动多少个节点</p>
<p>3.索引（index）</p>
<p>一个索引就是还有某些共有特性的文档的集合，一个索引被一个名称唯一标识，并且这个名称被用于索引通过文档去执行搜索，更新和删除操作</p>
<p>4.类型（type）</p>
<p>6.0以上的版本已经不建议使用type了，默认为<code>_doc</code></p>
<p>5.文档（document）</p>
<p>一个文档是一个基本的搜索单元</p>
<p>总结:es 中存储数据的基本单位是索引，比如说你现在要在 es 中存储一些订单数据，你就应该在 es 中创建一个索引 order_idx，所有的订单数据就都写到这个索引里面去，一个索引差不多就是相当于是 mysql 里的一张表。</p>
<blockquote>
<p>index -&gt; type -&gt; mapping -&gt; document -&gt; field。</p>
</blockquote>
<p>index 相当于 mysql 里的一张表。在高版本的es里已经不建议使用type了(es7.x 已经完全移除了<code>mapping type</code>)， 可以认为你可以认为 index 是一个类别的表，具体的每个 type 代表了 mysql中的一个表。而 mapping 就是这个 type 的表结构定义，定义了这个表的字段和类型。你往 index 里的一个 type 里面写的一条数据，叫做一条 document，一条 document 就代表了 mysql 中某个表里的一行，每个 document 有多个 field，每个 field 就代表了这个 document 中的一个字段的值。</p>
<h5 id="扩展和高可用概念"><a href="#扩展和高可用概念" class="headerlink" title="扩展和高可用概念"></a>扩展和高可用概念</h5><p>ES默认为一个索引创建5个主分片, 并分别为其创建一个副本分片. 也就是说每个索引都由5个主分片成本, 而每个主分片都相应的有一个copy</p>
<p>1.分片（shards）</p>
<p>在一个搜索里存储的数据，潜在的情况下可能会超过单个节点的硬件的存储限制，为了解决这个问题，elasticsearch便提供了分片的功能，它可以将索引划分为多个分片，当你创建一个索引的时候，你就可以简单的定义你想要的分片的数量，每一个分片本身是一个全功能的完全独立的索引，可以部署到集群中的任何一个节点。</p>
<p>2.复制（replica）</p>
<p>在一个网络情况下，故障可能会随时发生，有一个故障恢复机制是必须的，为了达到这个目的，ES允许你制作一个或多个拷贝放入一个叫做复制分片或短暂的复制品中。replica 主要解决以下两个问题:</p>
<p>(1)高可用:它提供了高可用的以来防止分片或者节点宕机，为此，一个非常重要的注意点就是绝对不要讲一个分片的拷贝放在跟这个分片相同的机器上</p>
<p>(2)高并发:它允许你的分片可以提供超出自身吞吐量的搜索服务，搜索行为可以在分片所有的拷贝中并行执行。</p>
<p>总之，一个完整的流程就是，ES客户端将一份数据写入primary shard,它会将分成成对的shard分片，并将数据进行复制，ES客户端取数据的时候就会在replica或primary 的shard中去读。ES集群有多个节点，会自动选举一个节点为master节点，这个master节点其实就是干一些管理类的操作，比如维护元数据，负责切换primary shard 和replica shard的身份之类的，要是master节点宕机了，那么就会重新选举下一个节点为master为节点。如果时非master宕机了，那么就会有master节点，让那个宕机的节点上的primary shard的身份转移到replica shard上，如果修复了宕机的那台机器，重启之后，master节点就会控制将缺失的replica shard 分配过去，同步后续的修改工作，让集群恢复正常。</p>
<h4 id="es读写过程和原理"><a href="#es读写过程和原理" class="headerlink" title="es读写过程和原理"></a>es读写过程和原理</h4><h5 id="es写入数据过程"><a href="#es写入数据过程" class="headerlink" title="es写入数据过程"></a>es写入数据过程</h5><p><img src="/assets/1702974923-862e705a0082b88ce2572f72b1dee0a8.png"></p>
<ol>
<li>客户端选择一个node发送请求过去，这个node就是coordinating node (协调节点)</li>
<li>coordinating node，对document进行路由，将请求转发给对应的node</li>
<li>实际上的node上的primary shard处理请求，然后将数据同步到replica node</li>
<li>coordinating node，如果发现primary node和所有的replica node都搞定之后，就会返回请求到客户端</li>
</ol>
<h6 id="es写入数据底层原理"><a href="#es写入数据底层原理" class="headerlink" title="es写入数据底层原理"></a>es写入数据底层原理</h6><p><img src="/assets/1702974923-15456b91e285bfe7c39a8183fc4587e6.png"></p>
<ol>
<li>数据先写入到buffer里面，在buffer里面的数据时搜索不到的，同时将数据写入到 <code>translog</code> 日志文件之中</li>
<li>如果 buffer 快满了，或者到一定时间，就会将内存 buffer 数据 <code>refresh</code> 到一个新的 <code>segment file</code> 中，但是此时数据不是直接进入 <code>segment file</code> 磁盘文件，而是先进入 <code>os cache</code> 。这个过程就是 <code>refresh</code>。(操作系统里面，磁盘文件其实都有一个东西，叫做 <code>os cache</code>，即操作系统缓存，就是说数据写入磁盘文件之前，会先进入 os cache，先进入操作系统级别的一个内存缓存中去。只要 buffer 中的数据被 refresh 操作刷入 os cache中，这个数据就可以被搜索到了。)</li>
<li>每隔 1 秒钟，es 将 buffer 中的数据写入一个新的 <code>segment file</code>，每秒钟会产生一个新的磁盘文件 segment file，这个 segment file 中就存储最近 1 秒内 buffer 中写入的数据。但是如果 buffer 里面此时没有数据，那当然不会执行 refresh 操作，如果buffer里面有数据，默认 1 秒钟执行一次 refresh 操作，刷入一个新的 segment file 中。(为什么叫 es 是准实时的？ <code>NRT</code>，全称 <code>near real-time</code>。默认是每隔 1 秒 refresh 一次的，所以 es 是准实时的，因为写入的数据 1 秒之后才能被看到。可以通过 es 的 restful api 或者 java api，手动执行一次 refresh 操作，就是手动将 buffer 中的数据刷入 os cache中，让数据立马就可以被搜索到。只要数据被输入 os cache 中，buffer 就会被清空了，因为不需要保留 buffer 了，数据在 translog 里面已经持久化到磁盘去一份了。)</li>
<li>重复上面的步骤，新的数据不断进入 buffer 和 translog，不断将 buffer 数据写入一个又一个新的 segment file 中去，每次 refresh 完 buffer 清空，translog保留。随着这个过程推进，translog 会变得越来越大。当 translog 达到一定长度的时候，就会触发 <code>commit</code> 操作。commit 操作发生第一步，就是将 <code>buffer</code> 中现有数据 <code>refresh</code> 到 <code>os cache</code> 中去，清空 buffer。然后，将一个 <code>commit point</code> 写入磁盘文件，里面标识着这个 commit point 对应的所有 <code>segment file</code>，同时强行将 os cache 中目前所有的数据都 fsync 到磁盘文件中去。最后清空 现有 translog 日志文件，重启一个 translog，此时 commit 操作完成。这个 commit 操作叫做 flush。默认 30 分钟自动执行一次 flush，但如果 translog 过大，也会触发 <code>flush</code>。flush 操作就对应着 commit 的全过程，我们可以通过 es api，手动执行 flush 操作，手动将 os cache 中的数据 fsync 强刷到磁盘上去。</li>
<li>translog 日志文件的作用是什么？你执行 commit 操作之前，数据要么是停留在 buffer 中，要么是停留在 os cache 中，无论是 buffer 还是 os cache 都是内存，一旦这台机器死了，内存中的数据就全丢了。所以需要将数据对应的操作写入一个专门的日志文件 translog 中，一旦此时机器宕机，再次重启的时候，es 会自动读取 translog 日志文件中的数据，恢复到内存 buffer 和 os cache 中去。translog 其实也是先写入 os cache 的，默认每隔 5 秒刷一次到磁盘中去，所以默认情况下，可能有 5 秒的数据会仅仅停留在 buffer 或者 translog 文件的 os cache中，如果此时机器挂了，会丢失 5 秒钟的数据。但是这样性能比较好，最多丢 5 秒的数据。也可以将 translog 设置成每次写操作必须是直接 fsync 到磁盘，但是性能会差很多。（这里说明一个情况:es 是准实时的，数据写入 1 秒后可以搜索到；可能会丢失数据的。有 5 秒的数据，停留在 buffer、translog os cache、segment file os cache 中，而不在磁盘上，此时如果宕机，会导致 5 秒的数据丢失）</li>
</ol>
<blockquote>
<p>数据写入 segment file 之后，同时就建立好了倒排索引。</p>
</blockquote>
<h6 id="删除-更新数据底层原理"><a href="#删除-更新数据底层原理" class="headerlink" title="删除&#x2F;更新数据底层原理"></a>删除&#x2F;更新数据底层原理</h6><ul>
<li>如果是删除操作，commit 的时候会生成一个 <code>.del</code> 文件，里面将某个 doc 标识为 <code>deleted</code> 状态，那么搜索的时候根据 .del 文件就知道这个 doc 是否被删除了</li>
<li>如果是更新操作，就是将原来的 doc 标识为 <code>deleted</code> 状态，然后新写入一条数据。</li>
</ul>
<p>buffer 每次 refresh 一次，就会产生一个 <code>segment file</code>，所以默认情况下是 1 秒钟一个 segment file，这样下来 segment file 会越来越多，此时会定期执行 merge。每次 merge 的时候，会将多个 segment file 合并成一个，同时这里会将标识为 deleted 的 doc 给物理删除掉，然后将新的 segment file 写入磁盘，这里会写一个 commit point，标识所有新的 segment file，然后打开 segment file 供搜索使用，同时删除旧的 segment file。</p>
<h5 id="读数据过程"><a href="#读数据过程" class="headerlink" title="读数据过程"></a>读数据过程</h5><p>可以通过 <code>doc id</code> 来查询，会根据 doc id 进行 hash，判断出来当时把 doc id 分配到了哪个 shard 上面去，从那个 shard 去查询。</p>
<ol>
<li>客户端发送请求到任意一个 node，成为 <code>coordinate node</code></li>
<li><code>coordinate node</code> 对 <code>doc id</code> 进行哈希路由，将请求转发到对应的 node，此时会使用 <code>round-robin</code> 随机轮询算法，在 <code>primary shard</code> 以及其所有 replica 中随机选择一个，让读请求[负载均衡]</li>
<li>接收请求的 node 返回 document 给 coordinate node。</li>
<li>coordinate node 返回 document 给客户端</li>
</ol>
<h6 id="搜索数据的过程"><a href="#搜索数据的过程" class="headerlink" title="搜索数据的过程"></a>搜索数据的过程</h6><ol>
<li>客户端发送请求到一个 coordinate node</li>
<li>协调节点将搜索请求转发到所有的 shard 对应的 primary shard 或 replica shard，都可以</li>
<li>query phase：每个 shard 将自己的搜索结果（其实就是一些 doc id）返回给协调节点，由协调节点进行数据的合并、排序、分页等操作，产出最终结果</li>
<li>fetch phase：接着由协调节点根据 doc id 去各个节点上拉取实际的 document 数据，最终返回给客户端</li>
</ol>
<h6 id="倒排索引"><a href="#倒排索引" class="headerlink" title="倒排索引"></a>倒排索引</h6><p>在搜索引擎中，每个文档都有一个对应的文档 ID，文档内容被表示为一系列关键词的集合。例如，文档 1 经过分词，提取了 20 个关键词，每个关键词都会记录它在文档中出现的次数和出现位置。</p>
<p>那么，倒排索引就是关键词(分词)到文档 ID 的映射，每个关键词都对应着一系列的文件，这些文件中都出现了关键词</p>
<p>假如文档如下</p>
<table>
<thead>
<tr>
<th>DocId</th>
<th>Doc</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>谷歌地图之父跳槽 Facebook</td>
</tr>
<tr>
<td>2</td>
<td>谷歌地图之父加盟 Facebook</td>
</tr>
<tr>
<td>3</td>
<td>谷歌地图创始人拉斯离开谷歌加盟 Facebook</td>
</tr>
<tr>
<td>4</td>
<td>谷歌地图之父跳槽 Facebook 与 Wave 项目取消有关</td>
</tr>
<tr>
<td>5</td>
<td>谷歌地图之父拉斯加盟社交网站 Facebook</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>对文档进行分词之后，得到以下倒排索引。</td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td>WordId</td>
<td>Word</td>
</tr>
<tr>
<td>——</td>
<td>——</td>
</tr>
<tr>
<td>1</td>
<td>谷歌</td>
</tr>
<tr>
<td>2</td>
<td>地图</td>
</tr>
<tr>
<td>3</td>
<td>之父</td>
</tr>
<tr>
<td>4</td>
<td>跳槽</td>
</tr>
<tr>
<td>5</td>
<td>Facebook</td>
</tr>
<tr>
<td>6</td>
<td>加盟</td>
</tr>
<tr>
<td>7</td>
<td>创始人</td>
</tr>
<tr>
<td>8</td>
<td>拉斯</td>
</tr>
<tr>
<td>9</td>
<td>离开</td>
</tr>
<tr>
<td>10</td>
<td>与</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<h4 id="es提升查询效率"><a href="#es提升查询效率" class="headerlink" title="es提升查询效率"></a>es提升查询效率</h4><h5 id="filesystem-cache"><a href="#filesystem-cache" class="headerlink" title="filesystem cache"></a>filesystem cache</h5><p><img src="/assets/1702974923-b75f39ab58c17602330114f3d2ba396c.png"></p>
<p>往 es 里写的数据，实际上都写到磁盘文件里去了，查询的时候，操作系统会将磁盘文件里的数据自动缓存到 <code>filesystem cache</code> 里面去</p>
<p>es 的搜索引擎严重依赖于底层的 filesystem cache，你如果给 filesystem cache 更多的内存，尽量让内存可以容纳所有的 <code>idx segment file</code> 索引数据文件，那么你搜索的时候就基本都是走内存的，性能会非常高。如果走磁盘一般肯定上秒，搜索性能绝对是秒级别的，1秒、5秒、10秒。但如果是走 filesystem cache，是走纯内存的，那么一般来说性能比走磁盘要高一个数量级，基本上就是毫秒级的，从几毫秒到几百毫秒不等。</p>
<p>如果要利用好<code>filesystem cache</code>的空间，就需要只存储常用来检索的几个字段就好了， 其他不常用的字段存储在mysql或hbase中， 常用的是采用 <code>es + hbase</code> 这种架构</p>
<p>写入 es 的数据最好小于等于，或者是略微大于 es 的 filesystem cache 的内存容量。然后你从 es 检索可能就花费 20ms，然后再根据 es 返回的 id 去 hbase 里查询在花个 30ms，查 20 条数据，可能也就耗费个 30ms。如果1T数据全部存es会每次查询都是 5~10s。</p>
<h5 id="数据预热"><a href="#数据预热" class="headerlink" title="数据预热"></a>数据预热</h5><p>如果数据实在太大，远超<code>filesystem cache</code>， 就可以采用数据预热</p>
<p>举个例子，拿微博来说，你可以把一些大V，平时看的人很多的数据，你自己提前后台搞个系统，每隔一会儿，自己的后台系统去搜索一下热数据，刷到 filesystem cache 里去，后面用户实际上来看这个热数据的时候，他们就是直接从内存里搜索了，很快。</p>
<p>或者是电商，你可以将平时查看最多的一些商品，比如说 iphone 8，热数据提前后台搞个程序，每隔 1 分钟自己主动访问一次，刷到 filesystem cache 里去。</p>
<p>对于那些你觉得比较热的，经常会有人访问的数据，最好做一个专门的缓存预热子系统，就是对热数据每隔一段时间，就提前访问一下，让数据进入 filesystem cache 里面去。这样下次别人访问的时候，一定性能会好一些。</p>
<h5 id="冷热分离"><a href="#冷热分离" class="headerlink" title="冷热分离"></a>冷热分离</h5><p>es 可以做类似于 mysql 的水平拆分，就是说将大量的访问很少、频率很低的数据，单独写一个索引，然后将访问很频繁的热数据单独写一个索引。最好是将冷数据写入一个索引中，然后热数据写入另外一个索引中，这样可以确保热数据在被预热之后，尽量都让他们留在 filesystem os cache 里，别让冷数据给冲刷掉。</p>
<h5 id="document-模型设计"><a href="#document-模型设计" class="headerlink" title="document 模型设计"></a>document 模型设计</h5><p>对于 MySQL，我们经常有一些复杂的关联查询。在 es 里该怎么玩儿，es 里面的复杂的关联查询尽量别用，一旦用了性能一般都不太好。</p>
<p>最好是先在 Java 系统里就完成关联，将关联好的数据直接写入 es 中。搜索的时候，就不需要利用 es 的搜索语法来完成 join 之类的关联搜索了。</p>
<p>document 模型设计是非常重要的，很多操作，不要在搜索的时候才想去执行各种复杂的乱七八糟的操作。es 能支持的操作就是那么多，不要考虑用 es 做一些它不好操作的事情。如果真的有那种操作，尽量在 document 模型设计的时候，写入的时候就完成。另外对于一些太复杂的操作，比如 join&#x2F;nested&#x2F;parent-child 搜索都要尽量避免，性能都很差的。</p>
<h5 id="分页性能优化"><a href="#分页性能优化" class="headerlink" title="分页性能优化"></a>分页性能优化</h5><p>es 的分页是较坑的，为啥呢？举个例子吧，假如你每页是 10 条数据，你现在要查询第 100 页，实际上是会把每个 shard 上存储的前 1000 条数据都查到一个协调节点上，如果你有个 5 个 shard，那么就有 5000 条数据，接着协调节点对这 5000 条数据进行一些合并、处理，再获取到最终第 100 页的 10 条数据。</p>
<p>分布式的，你要查第 100 页的 10 条数据，不可能说从 5 个 shard，每个 shard 就查 2 条数据？最后到协调节点合并成 10 条数据？你必须得从每个 shard 都查 1000 条数据过来，然后根据你的需求进行排序、筛选等等操作，最后再次分页，拿到里面第 100 页的数据。你翻页的时候，翻的越深，每个 shard 返回的数据就越多，而且协调节点处理的时间越长，非常坑爹。所以用 es 做分页的时候，你会发现越翻到后面，就越是慢。</p>
<p>对此的解决方案是:</p>
<ul>
<li>不允许深度分页(深度分页性能很低)</li>
<li>类似于 app 里的推荐商品不断下拉出来一页一页的</li>
</ul>
]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana的使用技巧</title>
    <url>/2023/12/29/Grafana%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>Grafana 是一个开源的时序性统计和监控平台，支持例如 elasticsearch、graphite、influxdb 等众多的数据源，并以功能强大的界面编辑器著称。我们在前端监控方面引入 grafana 后取得了一些不错的反馈，但是很多用户由于之前没有接触过 Grafana 经常会来询问相关问题，因此希望本文对大家在 grafana 使用方面有所帮助。</p>
<p>Grafana 的权限分为三个等级：Viewer、Editor 和 Admin，Viewer 只能查看 Grafana 已经存在的面板而不能编辑，Editor 可以编辑面板，Admin 则拥有全部权限例如添加数据源、添加插件、增加 API KEY。</p>
<p>对于普通用户来说，Viewer 权限已经足够，本文接下来的内容主要和 Editor 权限有关。由于篇幅有限，本文作为范例的数据源为 graphite，同时也只介绍最常用的 Graph 图表的配置方法。</p>
<h2 id="数值类型的常用指标含义"><a href="#数值类型的常用指标含义" class="headerlink" title="数值类型的常用指标含义"></a>数值类型的常用指标含义</h2><ul>
<li><p>count_ps</p>
</li>
<li><p>每秒的数量</p>
</li>
<li><p>count</p>
</li>
<li><p>每十秒的数量</p>
</li>
<li><p>mean_90</p>
</li>
<li><p>去除最高10%的数据后的平均值</p>
</li>
<li><p>upper_90</p>
</li>
<li><p>去除最高10%的数据后的最高值</p>
</li>
</ul>
<h2 id="总量误区"><a href="#总量误区" class="headerlink" title="总量误区"></a>总量误区</h2><p>这里有一个常见的 Grafana 误区，因为经常有用数值类型的 count_ps来顺便获取每秒打点数量的情况，注意在这种情况下，一段时间内的打点总量需要使用 count___ps 的 avg 平均值来乘以这段时间的秒数来计算，而不是通过界面上的 Total 直接读取。</p>
<p>这是因为，在界面上一条曲线能够展示的点的数量是有限的，Grafana 会根据你的窗口宽度来决定返回的点数，因为像<code>一天</code>这样的时间段肯定没办法在界面上展示每一秒的点，毕竟总量为86400个点就算带鱼屏也不可能挤得下。对于无法展示的点，Grafana 默认是使用 avg 平均值的行为来修正返回点的值，举个栗子，如下图：</p>
<p><img src="/images/1703817654-da741bf9da37ec3cbfdb27ed2cbe6f11.webp"></p>
<p>上图时间范围是一天，上部分为曲线面板的值，下部分为 面饼图表的值，并且上部分图标的曲线为 count 类型（十秒聚一次），可以看到 avg 平均值为 683，那么总量应该为 682 乘以 6 （如果是 count_ps 这里则是60） 乘以 60 （一小时60分钟）再乘以 24 （一天24小时）得到589万，与图片中下部分的582万相近，因此上部分 total 的117万是一个完完全全让人误解的值，可以认为它毫无意义进而直接无视掉。</p>
<h2 id="误差"><a href="#误差" class="headerlink" title="误差"></a>误差</h2><p>上文中我们计算出来的589万和界面上的582万其实也有一点误差，不过这是可以接受的，因为 statsd 一般情况下是 UDP 的形式（它其实有 TCP 的形式），所以如果想要完全正确的数据，那么最好把打点相关的数据也入库，从数据库里后置查询出来的才是完全可靠。</p>
<h2 id="模板变量"><a href="#模板变量" class="headerlink" title="模板变量"></a>模板变量</h2><p>模板变量能够动态地控制面板中的查询语句，是十分重要的功能。经常可以在面板的左上角发现它们，如下图：</p>
<p><img src="/images/1703817654-b2928bf6b280e8c770918193b7191e18.svg"></p>
<h2 id="模板变量的写法"><a href="#模板变量的写法" class="headerlink" title="模板变量的写法"></a>模板变量的写法</h2><p>模板变量支持 <code>$name</code> 和 <code>[[name]]</code> 的写法，针对 graphite 数据源主要使用前者，例如：<code>stats.timers.fe.test.$key.count_ps</code></p>
<h2 id="新建模板变量"><a href="#新建模板变量" class="headerlink" title="新建模板变量"></a>新建模板变量</h2><p>Grafana 界面上齿轮按钮 -&gt; Templating -&gt; 点击 New，即可出现类似如下的界面：</p>
<p><img src="/images/1703817654-ef7ea0c94b737a215402a7432df34bc9.svg"></p>
<p>本段主要介绍 Query 类型的写法。</p>
<ul>
<li><p>Name</p>
</li>
<li><p>该变量的名称，不支持特殊字符例如$</p>
</li>
<li><p>Refresh</p>
</li>
<li><p>可选<code>Never</code>，<code>On Dashboard Load</code>和<code>On Time Range Change</code></p>
</li>
<li><p>如果该变量的值经常动态增加的话则选 <code>On Time Range Change</code>，否则 <code>On Dashboard Load</code> 就足够了，Query 类型千万不要选 Never，否则变量只会在你点进来编辑变量时才会更新</p>
</li>
<li><p>Query</p>
</li>
<li><p>查询语句，例如 stats.timers.fe.test.*</p>
</li>
<li><p>编写时 Grafana 不会触发请求，需要在输入框外面点击一下，查询到的值就会显示在下边了</p>
</li>
</ul>
<p>模板变量中的 Query 其实也支持模板变量，例如<code>stats.timers.fe.test.$key.*</code> 这样的语句，会在 $key 变量变化时自动刷新值，是不是有一点 MVVM 的感觉。这个功能用来联动多个模板变量可以大幅度减少 Grafana 一次查询的时间。</p>
<h2 id="模板变量的隐藏玩法"><a href="#模板变量的隐藏玩法" class="headerlink" title="模板变量的隐藏玩法"></a>模板变量的隐藏玩法</h2><p>模板变量甚至可以用在 Grafana 的跳转中，这个隐藏玩法带来了很多便利。在 <code>Link</code> 或者 <code>Dashboard</code> 里 URL 中任意位置填入 $name ，那么用户点击该链接跳转时 Grafana 同样会替换该变量来让你跳到正确的链接去。这和其他系统整合起来能够做到很不错的用户体验，例如跳转到 kibana 那边去查询日志。</p>
<p>另外，Custom 类型的模板变量可以允许用户在变量下拉框中自行输入值，也是一个经常用到的类型，并且模板变量会和当前链接中的 querystring 部分的<code>var-$&#123;name&#125;</code> 同步，配合起来可以轻松地让第三方系统和 Grafana 互相精准地跳转</p>
<h2 id="Grafana-面板编辑器"><a href="#Grafana-面板编辑器" class="headerlink" title="Grafana 面板编辑器"></a>Grafana 面板编辑器</h2><p>以 Editor 权限的账号进入到任意面板中，点击某个图表继而点击小弹窗中的 Edit 按钮，即可进入图表的编辑器界面。对于编辑器本文只介绍图表的重要配置，Metrics，Legend 和 Display</p>
<h2 id="Metrcis"><a href="#Metrcis" class="headerlink" title="Metrcis"></a>Metrcis</h2><p><img src="/images/1703817654-78c4f4f168e7ab1377b1235f4b3c89f6.svg"></p>
<ul>
<li><p>编辑模式</p>
</li>
<li><p>上图箭头指向的 <code>toggle editor mode</code> 可以控制编辑模式，关闭则需要手动输入查询语句，开启则是如上图的可以在界面上动态增删改的模式。</p>
</li>
<li><p>数据源</p>
</li>
<li><p><code>Panel data source</code> 一定要选对，否则查不到对应的路径，并且很有可能冒出来 Mock 数据让人一脸懵逼。</p>
</li>
</ul>
<p><img src="/images/1703817654-59dc1882427981465c6be535a1f9917c.svg"></p>
<p>开启动态编辑模式时可以在点击上图中每个框框，这时 Grafana 会自动加载该位置在数据源中的值，并且你也可以在这里选择模板变量来动态控制。</p>
<p><img src="/images/1703817654-868cfe72bf63ff2338b11f2a156dec91.svg"></p>
<p>点击尾巴上的加号，会冒出来对应数据源的函数，可以做一些高级的功能，这个也是本文下半部分的重点，稍后再做介绍。graphite 的函数比较多，其他数据源会少一些。</p>
<h2 id="Legend"><a href="#Legend" class="headerlink" title="Legend"></a>Legend</h2><p>Legend 主要控制曲线的名称和值的展示，比较简单，这里列出一下他们的含义</p>
<ul>
<li><p>As Table</p>
</li>
<li><p>是否以表格形式展示</p>
</li>
<li><p>To the right</p>
</li>
<li><p>是展示在图表右边还是在下面</p>
</li>
<li><p>Width</p>
</li>
<li><p>面板时间段内的最小值否则强制限定宽度</p>
</li>
<li><p>Min</p>
</li>
<li><p>面板时间段内的最小值</p>
</li>
<li><p>Avg</p>
</li>
<li><p>面板时间段内的平均值</p>
</li>
<li><p>Total</p>
</li>
<li><p>面板时间段内的值的总量，如上文所说获取数值类型的总量时这个 Total 是一个很让人误解的参数</p>
</li>
<li><p>Max</p>
</li>
<li><p>面板时间段内的最大值</p>
</li>
<li><p>Current</p>
</li>
<li><p>面板时间段内的当前值</p>
</li>
</ul>
<h2 id="Display"><a href="#Display" class="headerlink" title="Display"></a>Display</h2><p>Display 控制图表的点和线的展示，有一些比较重要的参数</p>
<ul>
<li><p>Draw Modes -&gt; Lines</p>
</li>
<li><p>是否绘制点之间的线段</p>
</li>
<li><p>Draw Modes -&gt; Points</p>
</li>
<li><p>是否绘制点</p>
</li>
<li><p>Hover info -&gt; Mode</p>
</li>
<li><p>悬浮面板上展示的方式，值为 <code>All serires</code>（展示该时间点的所有线段的值）和 <code>single</code>（只展示鼠标指着的那一条线段）</p>
</li>
<li><p>Hover info -&gt; Sort Order</p>
</li>
<li><p>悬浮面板上线条的排序，一般选择 Decreasing</p>
</li>
<li><p>Stacking &amp; Null value -&gt; Null value</p>
</li>
<li><p>这个比较重要，需要根据点的密度来动态决定，如果点少很容易让人误解两个点中间也存在点。</p>
</li>
<li><p>点多时，选择 connected</p>
</li>
<li><p>点少时，选择 null</p>
</li>
</ul>
<h2 id="高级函数"><a href="#高级函数" class="headerlink" title="高级函数"></a>高级函数</h2><p>以 graphite 为例子，打点路径中的 KEY 只支持大小写字母、数字、中划线和下划线，这会导致前端的路径（经常包含 # 和 :path）存不下来，因此我们只能提前转译，例如将 # 转译为 ANCHOR，将 :path 转译为 PATH ，再将 &#x2F; 转译为 -，这样在变量模板中展示的就是比较怪异的前端路径，不过好在我们有函数，可以在界面上把它替换回来。</p>
<p><img src="/images/1703817654-07ee04e476f13473e8a5f95f57d72163.svg"></p>
<p>点击编辑界面 Metrics 面板中编辑模式的加号，添加 <code>aliaSub</code> 函数，并依此填入上图的三种的替换规则，在界面上就可以看到如下图的正常路径了：</p>
<p><img src="/images/1703817654-42cb4786c1c5cbea296066067a49ec87.svg"></p>
<p>aliaSub 只是其中一个简单的 alias 函数，用来处理曲线的名称，更多的函数是被用来处理单个查询的聚合、多条曲线的聚合、展示不同时间线、计算和过滤，本节会介绍其中一些经常用到的函数。</p>
<h2 id="聚合单个查询的多条匹配曲线的总量-Combine-sumSeries"><a href="#聚合单个查询的多条匹配曲线的总量-Combine-sumSeries" class="headerlink" title="聚合单个查询的多条匹配曲线的总量 Combine -&gt; sumSeries"></a>聚合单个查询的多条匹配曲线的总量 Combine -&gt; sumSeries</h2><p>例如，假设 <code>stats_count.fe.test.*</code> 有几十个匹配值，那么这个查询就会在图表中展示几十条曲线，此时如何获取所有曲线的总值呢？</p>
<p>不需要在打点时多打一份总量数据，直接使用 <code>sumSeries</code> 函数即可，<code>sumSeries(stats_count.fe.test.*)</code></p>
<h2 id="时间线迁移-Transform-timeShift"><a href="#时间线迁移-Transform-timeShift" class="headerlink" title="时间线迁移 Transform -&gt; timeShift"></a>时间线迁移 Transform -&gt; timeShift</h2><p>想要在这个时间段内同时展示前一天的的曲线？<code>timeShift(Query, &#39;-1d&#39;)</code>即可</p>
<h2 id="去除异常值-Filter-removeAboveValue"><a href="#去除异常值-Filter-removeAboveValue" class="headerlink" title="去除异常值 Filter -&gt; removeAboveValue"></a>去除异常值 Filter -&gt; removeAboveValue</h2><p>如果数值类型中出现了异常的值，例如平均为 1秒 的情况下出现了几百万秒的情况，那么就可以通过众多的过滤函数在界面上直接过滤掉而不是去修改打点代码，<code>removeAboveValue(Query, 10000)</code>即可</p>
<h2 id="重命名函数"><a href="#重命名函数" class="headerlink" title="重命名函数"></a>重命名函数</h2><ul>
<li><p>alias</p>
</li>
<li><p>直接重命名该曲线，参数为曲线名称</p>
</li>
<li><p>aliasByNode(4, 5, 6)</p>
</li>
<li><p>将曲线命名为原名称的第4、5、6段</p>
</li>
<li><p>aliasSub</p>
</li>
<li><p>正则替换名称中的某一段</p>
</li>
</ul>
<h2 id="多条曲线数值的聚合-Special-groupByNode"><a href="#多条曲线数值的聚合-Special-groupByNode" class="headerlink" title="多条曲线数值的聚合 Special -&gt; groupByNode"></a>多条曲线数值的聚合 Special -&gt; groupByNode</h2><p>sumSeries 函数只能简单地将多条数据的最终值加起来，如果不是末尾位置的就不行了，而且也不支持除了 sum 外的功能，例如 avg 平均，使用 groupByNode 就可以动态地对指定位置的多个数值类型进行聚合了，如下图：</p>
<p><img src="/images/1703817654-76c82d41b168617077f427594b588591.svg"></p>
<h2 id="计算多个-Query-组成的成功率-Calculate-asPercent"><a href="#计算多个-Query-组成的成功率-Calculate-asPercent" class="headerlink" title="计算多个 Query 组成的成功率 Calculate -&gt; asPercent"></a>计算多个 Query 组成的成功率 Calculate -&gt; asPercent</h2><p>假设我们有如下几条打点：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">stats.timers.fe.test.error1.count</span><br><span class="line">stats.timers.fe.test.error2.count</span><br><span class="line">stats.timers.fe.test.error3.count</span><br><span class="line">stats.timers.fe.test.success.count</span><br></pre></td></tr></table></figure>

<p>此时想要计算 success 的成功比例，如何做呢？</p>
<p>在这种相较复杂的情况下，就不能只靠一个 Query 来解决了，首先我们创建两个 Query，如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">stats.timers.fe.test.*.count （Query 序列号为 #A）</span><br><span class="line">stats.timers.fe.test.success.count （Query 序列号为 #B）</span><br></pre></td></tr></table></figure>

<p>再创建第三个 Query，值为 <code>asPercent(#B, sumSeries(#A)</code>，顾名思义，首先将 #A 的查询聚合起来得到总值，再用 asPercent 来进行除法即可。</p>
<p>通过如上的几个例子，可以看到函数强大的功能，即使是很复杂的在以前需要用后端代码来实现的部分，都可以通过多条Query和多个函数的互相嵌套来在界面上简单地实现。</p>
<p>每个数据源都有对应的函数开发文档，例如 graphite。Grafana 正是凭借着对众多数据源以及函数的支持，才能在一个网页界面上完成这么多强大的功能。</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h2 id="报警"><a href="#报警" class="headerlink" title="报警"></a>报警</h2><p>Grafana 在 4.0 版本后增加了报警功能，不过 Grafana 的报警属于数据源的后置查询，实时性不大能满足需求，我们公司有一个开源的 banshee ，就是为了解决这个问题。</p>
<p>banshee 使用了三西格马定律，支持基于阈值和趋势的报警，同时提供开放的 API 和 webhook 并默认集成了 Slack。banshee 和数据源位于同一个位置（statsd 的后端），因此可以保证时效性，也因为报警的独立性质所以对 Grafana 版本没有任何要求。</p>
<h2 id="statsd-打点的限制"><a href="#statsd-打点的限制" class="headerlink" title="statsd 打点的限制"></a>statsd 打点的限制</h2><p>Grafana 依赖的如果是时序性数据库，那么每一个 KEY 都会对应一个文件来存储数据，例如 <code>stats.timers.fe.test.*</code> 相当于 <code>stats/timers/fe/test</code> 文件夹下的所有文件，因此必须注意打点路径不要有过多的组合，比如将省份和市作为 KEY 时的组合很容易就能占到 1G 以上的数据导致磁盘爆掉。</p>
<p>为了避免组合过多导致路径污染，请尽量保证每个 KEY 中格式化掉点，例如替换成下划线，另外打点路径可以尽量多加一点前缀，例如将<code>stats.timers.fe.test.*</code> 改为 <code>stats.timers.fe.test.v1.*</code> ，这样一旦污染后，清理数据时可以直接把 v1 整个文件夹删除而不是删除 test 这个根路径，用以保留你的历史正常的打点数据。</p>
<h2 id="后端查询-Grafana-数据"><a href="#后端查询-Grafana-数据" class="headerlink" title="后端查询 Grafana 数据"></a>后端查询 Grafana 数据</h2><p>一般推荐使用 API KEY 来查询 Grafana 的数据，Admin 权限账号可以在界面中生成上文三种权限的 API KEY，不过 Grafana 默认会开启 Basic Auth，使用账号密码即可通过 Grafana 的鉴权，例如<code>http://$&#123;account&#125;:$&#123;password&#125;@$&#123;grafana_host&#125;/api/org</code>。</p>
<p>当然，最好是拥有数据源的读权限来直接读取数据。</p>
<h2 id="匿名模式"><a href="#匿名模式" class="headerlink" title="匿名模式"></a>匿名模式</h2><p>有时候用户确实没有 Grafana 的账号，但他就是想看面板，怎么办？此时就得 Grafana 的匿名模式出马了。</p>
<p>Grafana 配置文件中有 <code>auth.anonymous</code> 配置段，<code>enabled</code> 控制开关，<code>org_name</code> 控制开启匿名模式的组织，<code>org_role</code> 控制匿名者的权限。组织开启匿名意味着非登录用户能够直接跳过 Grafana 无权限地查询数据源，因此请保证数据源的安全，例如限定内网访问。</p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>本文介绍了 Grafana 相对高级的一些使用技巧，除了可以看到 Grafana 的强大功能以外，也应该注意到 Grafana 只是一个时序性很强的统计监控平台，一些非时序性质的功能例如报错的聚合和报错的日志等应该交给更专业的去做，例如 sentry 和 ELK。</p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Keepalived部署与配置详解</title>
    <url>/2024/01/02/Keepalived%E9%83%A8%E7%BD%B2%E4%B8%8E%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h2><p>Keepalived本质就是为ipvs服务的，它也不需要共享存储。IPVS其实就是一些规则，Keepalived主要的任务就是去调用ipvsadm命令，来生成规则，并自动实现将用户需要访问的地址转移到可用LVS节点实现。所以keepalive的高可用是属于具有很强针对性的高可用，它和corosync这种通用性HA方案不同。</p>
<p>Keepalived的主要目的就是它自身启动为一个服务，它工作在多个LVS主机节点上，当前活动的节点叫做Master备用节点叫做Backup，_Master会不停的向Backup节点通告自己的心跳，这种通告是基于VRRP协议的。Backup节点一旦接收不到Master的通告信息，它就会把LVS的VIP拿过来，并且把ipvs的规则也拿过来，在自己身上生效，从而替代Master节点_。</p>
<p>Keepalived除了可以监控和转移LVS资源之外，它还可以直接配置LVS而不需要直接使用ipvsadm命令，因为它可以调用，也就是说在LVS+KEEPALIVED模型中，你所有的工作在Keepalived中配置就可以了，而且它还有对后端应用服务器健康检查的功能。</p>
<p>直接一句话Keepalived就是VRRP协议的实现，该协议是虚拟冗余路由协议。</p>
<h3 id="VRRP工作原理简述"><a href="#VRRP工作原理简述" class="headerlink" title="VRRP工作原理简述"></a>VRRP工作原理简述</h3><p>那么这个VRRP协议是干嘛用呢？传统上来说我们通过一个路由器上网，如果故障那就不能用了，如果使用2个路由器，有一个故障你就需要手动的设置客户端切换到另外的路由器上，或者使用ARP客户端也可以实现，但总之部署比较麻烦不利于管理，就像下图：</p>
<p><img src="/images/1704164528-2977377c8b0ca0ba4cfd9c981a19ff57.png"></p>
<p>有没有一种办法可以自动转移而省去手动配置呢？我们就可以通过VRRP协议来实现路由器的故障转移。如下图：</p>
<p><img src="/images/1704164528-7ba2c38225cafea124860bef937458e2.png"></p>
<p>这里有个问题，VRRP提供一个VIP，它可以来设定那个路由器是活动节点，然后出现故障进行切换，VIP也随之对应到新的路由器上，但是内网是用过MAC地址来寻址的，虽然VIP对应到了新的路由器上，可是MAC变了，客户端的ARP表也没有更新，所以还是用不了，为了解决这个问题VRRP不但提供VIP还提供VMAC地址，这个VMAC地址是VRRP单独申请的，大家都可以正常使用。</p>
<p>故障切换的时候虽然改变了后端路由器，但是由于客户端使用的是VIP和VMAC地址，这样就不会有任何影响了。</p>
<p>所以Keepalived就是在Linux系统上提供了VRRP功能，当然还提供了服务监控功能，比如监控后端服务器的健康检查、LVS服务可用性检查。</p>
<p>VRRP的工作过程是这样的：</p>
<ol>
<li>虚拟路由器中的路由器根据优先级选举出Master，Master路由器通过发送免费ARP报文，将自己的虚拟MAC地址通告给与它连接的设备。</li>
<li>Master路由器周期性发送VRRP报文，以公布自己的配置信息（优先级等）和工作状态</li>
<li>如果Master故障，虚拟路由器中的Backup路由器将根据优先级重新选举新的Master</li>
<li>虚拟路由器状态切换时，Master路由器由一台设备切换会另外一台设备，新的Master路由器只是简单的发送一个携带虚拟MAC地址和虚拟IP的免费ARP报文，这样就可以更新其他设备中缓存的ARP信息</li>
<li>Backup路由器的优先级高于Master时，由Backup的工作方式（抢占式或者非抢占式）决定是否重新选举Master。</li>
</ol>
<p>VRRP还支持认证，就是为了防止随意一个VRRP设备加入到当前的虚拟路由组离来，它提供无认证、简单8位字符串认证和MD5认证（该认证方式Keepalive不支持）。</p>
<h3 id="Keepalive软件结构"><a href="#Keepalive软件结构" class="headerlink" title="Keepalive软件结构"></a>Keepalive软件结构</h3><p><img src="/images/1704164528-ebac6d787cbc3c572478d674ba020b85.png"></p>
<p>Keepalived启动后以后会有一个主进程Master，它会生成还有2个子进程，一个是VRRP Stack负责VRRP（也就是VRRP协议的实现）、一个是Checkers负责IPVS的后端的应用服务器的健康检查，当检测失败就会调用IPVS规则删除后端服务器的IP地址，检测成功了再加回来。当检测后端有失败的情况可以使用SMTP通知管理员。另外VRRP如果检测到另外一个Keepalive失败也可以通过SMTP通知管理员。</p>
<p>Control Plane：这个就是主进程，主进程的功能是分析配置文件，读取、配置和生效配置文件，指挥那2个子进程工作。</p>
<p>WatchDog：看门狗，这个是Linux系统内核的一个模块，它的作用是帮助主进程盯着那2个子进程，因为主进程并不负责具体工作，具体工作都是子进程完成的。如果子进程挂了，那Keepalived就不完整了，所以那2个子进程会定期的向主进程打开的一个内部Unix Socket文件写心跳信息。如果有某个子进程不写信息了，它就会重启子进程，主进程就是让WatchDog来监控子进程的。下面我们就使用Keepalive来做LVS的高可用讲解。关于后端服务器上的设置我这里就不说了请看另外一篇博文。</p>
<h2 id="Keepalive安装和配置"><a href="#Keepalive安装和配置" class="headerlink" title="Keepalive安装和配置"></a>Keepalive安装和配置</h2><table>
<thead>
<tr>
<th>服务器</th>
<th>IP地址</th>
<th>角色</th>
</tr>
</thead>
<tbody><tr>
<td>Srv01</td>
<td>172.16.42.100  <br>VIP: 172.16.42.111</td>
<td>LVS+Keepalive</td>
</tr>
<tr>
<td>Srv02</td>
<td>172.16.42.101  <br>VIP: 192.168.100.1</td>
<td>LVS+Keepalive</td>
</tr>
<tr>
<td>Srv03</td>
<td>172.16.42.102  <br>VIP: 172.16.42.111</td>
<td>Nginx</td>
</tr>
<tr>
<td>Srv04</td>
<td>172.16.42.103  <br>VIP: 172.16.42.111</td>
<td>Nginx</td>
</tr>
</tbody></table>
<h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><ol>
<li><p>禁用SElinux、清除iptables规则、关闭防火墙。就算因某种原因不能清除iptables规则，那么你需要增加一条规则放行多播</p>
</li>
<li><p>各个节点时间同步，启用时间同步服务<code>systemctl start chronyd</code></p>
</li>
<li><p>确保Keepalive使用的网卡开启了多播，如下图：</p>
</li>
</ol>
<p><img src="/images/1704164528-24f71ba30da666fbc7066e5034c83df8.png"></p>
<p>如果没有开启，可以使用该命令打开<code>ip link set multicast on dev ens33</code>，ens33是网卡名称。</p>
<h3 id="安装keepalive"><a href="#安装keepalive" class="headerlink" title="安装keepalive"></a>安装keepalive</h3><p>之间通过yum安装即可<code>yum install -y keepalived</code>。我这里使用的是阿里云的源，它默认就在里面，如下图：</p>
<p><img src="/images/1704164528-1e1ca7272d9fdbc9d445dc00719c68ac.png"></p>
<p>在2个节点都安装。</p>
<table>
<thead>
<tr>
<th>文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;usr&#x2F;sbin&#x2F;keepalived</td>
<td>二进制程序</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf</td>
<td>配置文件</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;keepalived.service</td>
<td>服务文件</td>
</tr>
</tbody></table>
<h3 id="Keepalive配置文件说明"><a href="#Keepalive配置文件说明" class="headerlink" title="Keepalive配置文件说明"></a>Keepalive配置文件说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   <span class="comment"># 邮件通知信息</span></span><br><span class="line">   notification_email &#123;</span><br><span class="line">     <span class="comment"># 定义收件人</span></span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment"># 定义发件人</span></span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   <span class="comment"># SMTP服务器地址</span></span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   <span class="comment"># 路由器标识，一般不用改，也可以写成每个主机自己的主机名</span></span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   <span class="comment"># VRRP的ipv4和ipv6的广播地址，配置了VIP的网卡向这个地址广播来宣告自己的配置信息，下面是默认值</span></span><br><span class="line">   vrrp_mcast_group4 224.0.0.18</span><br><span class="line">   vrrp_mcast_group6 ff02::12</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义用于实例执行的脚本内容，比如可以在线降低优先级，用于强制切换</span></span><br><span class="line">vrrp_script SCRIPT_NAME &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个vrrp_instance就是定义一个虚拟路由器的，实例名称</span></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    <span class="comment"># 定义初始状态，可以是MASTER或者BACKUP</span></span><br><span class="line">    state MASTER</span><br><span class="line">    <span class="comment"># 工作接口，通告选举使用哪个接口进行</span></span><br><span class="line">    interface ens33</span><br><span class="line">    <span class="comment"># 虚拟路由ID，如果是一组虚拟路由就定义一个ID，如果是多组就要定义多个，而且这个虚拟</span></span><br><span class="line">    <span class="comment"># ID还是虚拟MAC最后一段地址的信息，取值范围0-255</span></span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    <span class="comment"># 使用哪个虚拟MAC地址</span></span><br><span class="line">    use_vmac XX:XX:XX:XX:XX</span><br><span class="line">    <span class="comment"># 监控本机上的哪个网卡，网卡一旦故障则需要把VIP转移出去</span></span><br><span class="line">    track_interface &#123;</span><br><span class="line">        eth0</span><br><span class="line">        ens33</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 如果你上面定义了MASTER,这里的优先级就需要定义的比其他的高</span></span><br><span class="line">    priority 100</span><br><span class="line">    <span class="comment"># 通告频率，单位为秒</span></span><br><span class="line">    advert_int 1</span><br><span class="line">    <span class="comment"># 通信认证机制，这里是明文认证还有一种是加密认证</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 设置虚拟VIP地址，一般就设置一个，在LVS中这个就是为LVS主机设置VIP的，这样你就不用自己手动设置了</span></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="comment"># IP/掩码 dev 配置在哪个网卡</span></span><br><span class="line">        192.168.200.16/24 dev eth1</span><br><span class="line">        <span class="comment"># IP/掩码 dev 配置在哪个网卡的哪个别名上</span></span><br><span class="line">        192.168.200.17/24 dev label eth1:1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 虚拟路由，在需要的情况下可以设置lvs主机 数据包在哪个网卡进来从哪个网卡出去</span></span><br><span class="line">    virtual_routes &#123;</span><br><span class="line">        192.168.110.0/24 dev eth2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 工作模式，nopreempt表示工作在非抢占模式，默认是抢占模式 preempt</span></span><br><span class="line">    nopreempt|preempt</span><br><span class="line">    <span class="comment"># 如果是抢占默认则可以设置等多久再抢占，默认5分钟</span></span><br><span class="line">    preempt delay 300</span><br><span class="line">    <span class="comment"># 追踪脚本，通常用于去执行上面的vrrp_script定义的脚本内容</span></span><br><span class="line">    track_script &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 三个指令，如果主机状态变成Master|Backup|Fault之后会去执行的通知脚本，脚本要自己写</span></span><br><span class="line">    notify_master <span class="string">&quot;&quot;</span></span><br><span class="line">    notify_backup <span class="string">&quot;&quot;</span></span><br><span class="line">    notify_fault <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义LVS集群服务，可以是IP+PORT；也可以是fwmark 数字，也就是防火墙规则</span></span><br><span class="line"><span class="comment"># 所以通过这里就可以看出来keepalive天生就是为ipvs而设计的</span></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    <span class="comment"># 算法</span></span><br><span class="line">    lb_algo rr|wrr|lc|wlc|lblc|sh|dh </span><br><span class="line">    <span class="comment"># LVS的模式</span></span><br><span class="line">    lb_kind NAT|DR|TUN</span><br><span class="line">    <span class="comment"># 子网掩码，这个掩码是VIP的掩码</span></span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    <span class="comment"># 持久连接超时时间</span></span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    <span class="comment"># 定义协议</span></span><br><span class="line">    protocol TCP</span><br><span class="line">    <span class="comment"># 如果后端应用服务器都不可用，就会定向到那个服务器上</span></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 后端应用服务器 IP PORT</span></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        <span class="comment"># 权重</span></span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># MSIC_CHECK|SMTP_CHEKC|TCP_CHECK|SSL_GET|HTTP_GET这些都是</span></span><br><span class="line">        <span class="comment"># 针对应用服务器做健康检查的方法</span></span><br><span class="line">        MISC_CHECK &#123;&#125;</span><br><span class="line">        <span class="comment"># 用于检查SMTP服务器的</span></span><br><span class="line">        SMTP_CHEKC &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果应用服务器不是WEB服务器，就用TCP_CHECK检查</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">          <span class="comment"># 向哪一个端口检查，如果不指定默认使用上面定义的端口</span></span><br><span class="line">          connect_port &lt;PORT&gt;</span><br><span class="line">          <span class="comment"># 向哪一个IP检测，如果不指定默认使用上面定义的IP地址</span></span><br><span class="line">          bindto &lt;IP&gt;</span><br><span class="line">          <span class="comment"># 连接超时时间</span></span><br><span class="line">          connect_timeout 3</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 如果对方是HTTPS服务器就用SSL_GET方法去检查，里面配置的内容和HTTP_GET一样</span></span><br><span class="line">        SSL_GET &#123;&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;这里写的是路径，如果脚本后有参数，整体路径+参数引起来&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/PATH/SCRIPTS.sh 参数&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 使用HTTP_GET方法去检查</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              <span class="comment"># 具体检测哪一个URL</span></span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              <span class="comment"># 检测内容的哈希值</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># 向哪一个端口检查，如果不指定默认使用上面定义的端口</span></span><br><span class="line">            connect_port &lt;PORT&gt;</span><br><span class="line">            <span class="comment"># 向哪一个IP检测，如果不指定默认使用上面定义的IP地址</span></span><br><span class="line">            bindto &lt;IP&gt;</span><br><span class="line">            <span class="comment"># 连接超时时间</span></span><br><span class="line">            connect_timeout 3</span><br><span class="line">            <span class="comment"># 尝试次数</span></span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            <span class="comment"># 每次尝试之间间隔几秒</span></span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="配置Srv01和Srv02"><a href="#配置Srv01和Srv02" class="headerlink" title="配置Srv01和Srv02"></a>配置Srv01和Srv02</h3><h4 id="配置VRRP部分"><a href="#配置VRRP部分" class="headerlink" title="配置VRRP部分"></a>配置VRRP部分</h4><p>Srv01上的keepalived.conf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id srv01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.16.42.111/24 brd 172.16.42.111 dev ens33 label ens33:0</span><br><span class="line">    &#125;</span><br><span class="line">    preempt delay 60</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Srv02上的keepalived.conf，唯一不同的就是state、priority以及router_id。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id srv02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.16.42.111/24 brd 172.16.42.111 dev ens33 label ens33:0</span><br><span class="line">    &#125;</span><br><span class="line">    preempt delay 60</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动2个节点，启动后会自动配置ens33:0这个子接口的虚拟IP</p>
<p><img src="/images/1704164528-6ac8bcc796422e40f179648b720689f3.png"></p>
<p>在主节点上你通过<code>systemctl status keepalived</code>看不到它到底是什么角色，不过在BACKUP节点上你可以看到，但是你在主节点日志中<code>cat /var/log/message</code>里可以看到Srv01进入到MASTER状态，如下图：</p>
<p><img src="/images/1704164528-e9266218e78e73d035b4b4378495eb7c.png"></p>
<p>查看Srv02的状态</p>
<p><img src="/images/1704164528-17947a1fcca350d00eef4970cf05051f.png"></p>
<p>那么你通过停止Srv01上的keepalived服务就看到MASTER会被转移到Srv02上。</p>
<p>使用该命令查看VRRP通告<code>tcpdum -i ens33 -nn host 224.0.0.18</code>，你在2台主机都会看到相同的信息。</p>
<p><img src="/images/1704164528-d2d98f084a19e208e82ff7343ac1ed7d.png"></p>
<p>Srv01使用真实物理IP对该地址进行发送通告，那么Srv02也会收到，如果Srv01宕机，那么Srv02就会使用自己的物理IP向该地址发送通告，由于Srv01已经宕机那么此时Srv02的优先级就是最高的，所以Srv02就变成了MASTER。</p>
<h4 id="配置LVS部分"><a href="#配置LVS部分" class="headerlink" title="配置LVS部分"></a>配置LVS部分</h4><p>这里只是用了LVS来说明如何配置Keepalived：</p>
<p>在keepalived.conf文件中增加下面的内容，2台服务器增加的内容一致，所以这里就写一份。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virtual_server 172.16.42.111 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    persistence_timeout 0</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 后端应用服务器 IP PORT</span></span><br><span class="line">    real_server 172.16.42.102 80 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;/usr/local/notify.sh up&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/usr/local/notify.sh down&quot;</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              path /index.html</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 172.16.42.103 80 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;/usr/local/notify.sh up&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/usr/local/notify.sh down&quot;</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              path /index.html</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里的notify_up|down脚本我写的很简单就是为了使用一下这个功能，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 不同的是2个主机上的echo部分不一样，因为主机名不同。</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> == <span class="string">&quot;up&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Srv02 is UP&quot;</span> &gt; /tmp/notify.txt</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$1</span> == <span class="string">&quot;down&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Srv02 is DOWN&quot;</span> &gt; /tmp/notify.txt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>重启Keepalived服务之后你就可以通过<code>ipvsadm -Ln</code>查看ipvs规则了，这些规则在2台服务器上都会有，如下图：</p>
<p><img src="/images/1704164528-307a99579cefad29ed42892c976468ea.png"></p>
<p>测试访问</p>
<p>使用下面的命令快速访问<code>for i in &#123;1..20&#125;; do curl http://172.16.42.111/ | grep &quot;Srv0&quot; --color ; done</code></p>
<p><img src="/images/1704164528-d9aa7bb6af1bc0dcedb35f87ceb86a85.png"></p>
<p>可以看到2台服务器交替，因为我们使用的rr调度算法。</p>
<h3 id="故障转移测试"><a href="#故障转移测试" class="headerlink" title="故障转移测试"></a>故障转移测试</h3><p>连续访问VIP，然后停止Srv01上面的keepalived服务，这就意味着Srv01也就是失去了VIP，然后观察请求情况以及是否触发之前设定的脚本。</p>
<p><img src="/images/1704164528-b14d6fdb51f1a44c730b8c4b9e67810e.png"></p>
<p>在Srv01上查看脚本执行情况</p>
<p><img src="/images/1704164528-1302b714370323c73340905db25d9748.png"></p>
<p>查看Srv02上面的日志</p>
<p><img src="/images/1704164528-a4047cce8a5c2ac318b4127ef5941a39.png"></p>
]]></content>
      <categories>
        <category>Keepalived</category>
      </categories>
      <tags>
        <tag>Keepalived</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux内存使用情况分析</title>
    <url>/2023/12/28/Linux%E5%86%85%E5%AD%98%E4%BD%BF%E7%94%A8%E6%83%85%E5%86%B5%E5%88%86%E6%9E%90/</url>
    <content><![CDATA[<h2 id="什么是内存"><a href="#什么是内存" class="headerlink" title="什么是内存"></a>什么是内存</h2><p>内存(Memory)是计算机的重要部件之一，也称内存储器和主存储器，它<strong>用于暂时存放CPU中的运算数据，与硬盘等外部存储器交换的数据</strong>。</p>
<p>它是外存与CPU进行沟通的桥梁，计算机中所有程序的运行都在内存中进行，内存性能的强弱影响计算机整体发挥的水平。</p>
<p>只要计算机开始运行，操作系统就会把需要运算的数据从内存调到CPU中进行运算，当运算完成，CPU将结果传送出来。</p>
<p>内存的运行也决定计算机整体运行快慢的程度。</p>
<h3 id="Linux内存回收机制"><a href="#Linux内存回收机制" class="headerlink" title="Linux内存回收机制"></a>Linux内存回收机制</h3><p>为啥要回收：</p>
<ul>
<li>内核需要为任何时刻突发到来的内存申请提供足够的内存，以便cache的使用和其他相关内存的使用不至于让系统的剩余内存长期处于很少的状态。</li>
<li>当真的有大于空闲内存的申请到来的时候，会触发强制内存回收。</li>
</ul>
<p>内存回收针对的目标有两种，一种是针对zone的，另一种是针对一个memcg的，把针对zone的内存回收方式分为三种，分别是快速内存回收、直接内存回收、kswapd内存回收。</p>
<h2 id="查看Linux内存情况"><a href="#查看Linux内存情况" class="headerlink" title="查看Linux内存情况"></a>查看Linux内存情况</h2><h3 id="查看-proc-meminfo"><a href="#查看-proc-meminfo" class="headerlink" title="查看_&#x2F;proc&#x2F;meminfo_"></a>查看_&#x2F;proc&#x2F;meminfo_</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># cat /proc/meminfo</span></span><br><span class="line">MemTotal:       16166688 kB</span><br><span class="line">MemFree:        14051412 kB</span><br><span class="line">MemAvailable:   14772588 kB</span><br><span class="line">Buffers:            2116 kB</span><br><span class="line">Cached:          1073260 kB</span><br><span class="line">SwapCached:            0 kB</span><br><span class="line">Active:           770384 kB</span><br><span class="line">Inactive:         698264 kB</span><br><span class="line">Active(anon):     450156 kB</span><br><span class="line">Inactive(anon):    76748 kB</span><br><span class="line">Active(file):     320228 kB</span><br><span class="line">Inactive(file):   621516 kB</span><br><span class="line">Unevictable:           0 kB</span><br><span class="line">Mlocked:               0 kB</span><br><span class="line">SwapTotal:      33554428 kB</span><br><span class="line">SwapFree:       33554428 kB</span><br><span class="line">Dirty:               476 kB</span><br><span class="line">Writeback:             0 kB</span><br><span class="line">AnonPages:        393328 kB</span><br><span class="line">Mapped:           153828 kB</span><br><span class="line">Shmem:            133628 kB</span><br><span class="line">Slab:             246448 kB</span><br><span class="line">SReclaimable:     133892 kB</span><br><span class="line">SUnreclaim:       112556 kB</span><br><span class="line">KernelStack:       13472 kB</span><br><span class="line">PageTables:        30496 kB</span><br><span class="line">NFS_Unstable:          0 kB</span><br><span class="line">Bounce:                0 kB</span><br><span class="line">WritebackTmp:          0 kB</span><br><span class="line">CommitLimit:    41637772 kB</span><br><span class="line">Committed_AS:    4257776 kB</span><br><span class="line">VmallocTotal:   34359738367 kB</span><br><span class="line">VmallocUsed:      320696 kB</span><br><span class="line">VmallocChunk:   34350426108 kB</span><br><span class="line">HardwareCorrupted:     0 kB</span><br><span class="line">AnonHugePages:    155648 kB</span><br><span class="line">CmaTotal:              0 kB</span><br><span class="line">CmaFree:               0 kB</span><br><span class="line">HugePages_Total:       0</span><br><span class="line">HugePages_Free:        0</span><br><span class="line">HugePages_Rsvd:        0</span><br><span class="line">HugePages_Surp:        0</span><br><span class="line">Hugepagesize:       2048 kB</span><br><span class="line">DirectMap4k:      279276 kB</span><br><span class="line">DirectMap2M:     6965248 kB</span><br><span class="line">DirectMap1G:    11534336 kB</span><br></pre></td></tr></table></figure>

<h3 id="使用free命令查看"><a href="#使用free命令查看" class="headerlink" title="使用free命令查看"></a>使用<code>free</code>命令查看</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@<span class="built_in">test</span> ~]<span class="comment"># free -h</span></span><br><span class="line">              total        used        free      shared  buff/cache   available</span><br><span class="line">Mem:            15G        874M         13G        130M        1.2G         14G</span><br><span class="line">Swap:           31G          0B         31G</span><br></pre></td></tr></table></figure>

<p>参数说明：</p>
<ul>
<li>total：总内存大小。</li>
<li>used：已经使用的内存大小（这里面包含cached和buffers和shared部分）。</li>
<li>free：空闲的内存大小。</li>
<li>shared：进程间共享内存（一般不会用，可以忽略）。</li>
<li>buffers：<strong>内存中写完的东西缓存起来</strong>，这样快速响应请求，后面数据再定期刷到磁盘上。</li>
<li>cached：<strong>内存中读完缓存起来内容占的大小</strong>（这部分是为了下次查询时快速返回）。</li>
<li>available：还可以被<strong>应用程序</strong>使用的物理内存大小，和free的区别是，free是真正未被使用的内存，available是包括buffers、cached的。</li>
<li>Swap：硬盘上交换分区的使用大小。</li>
</ul>
<h3 id="Buffer和Cache"><a href="#Buffer和Cache" class="headerlink" title="Buffer和Cache"></a>Buffer和Cache</h3><p>Cache（缓存），为了调高CPU和内存之间数据交换而设计，Buffer（缓冲）为了提高内存和硬盘（或其他I&#x2F;O设备的数据交换而设计）。</p>
<p>Cache主要是针对<strong>读操作</strong>设计的，不过Cache概念可能容易混淆，我理解为CPU本身就有Cache，包括一级缓存、二级缓存、三级缓存，我们知道CPU所有的指令操作对接的都是内存，而CPU的处理能力远高于内存速度，所以为了不让CPU资源闲置，Intel等公司在CPU内部集成了一些Cache，但毕竟不能放太多电路在里面，所以这部分Cache并不是很大，主要是用来存放一些常用的指令和常用数据，真正大部分Cache的数据应该是占用内存的空间来缓存请求过的数据，即上面的Cached部分（这部分纯属个人理解，正确与否有待考证）。</p>
<p>Buffer主要是针对<strong>写操作</strong>设计的，更细的说是针对内存和硬盘之间的写操作来设计的，目的是将写的操作集中起来进行，减少磁盘碎片和硬盘反复寻址过程，提高性能。</p>
<p>在Linux系统内部有一个守护进程会定期清空Buffer中的内容，将其写入硬盘内，当手动执行sync命令时也会触发上述操作。</p>
<h3 id="Swap"><a href="#Swap" class="headerlink" title="Swap"></a>Swap</h3><p>虽然现在的内存已经变得非常廉价，但是swap仍然有很大的使用价值，合理的规划和使用swap分区，对系统稳定运行至关重要。</p>
<p>Linux下可以使用文件系统中的一个常规文件或者一个独立分区作为交换空间使用。同时linux允许使用多个交换分区或者交换文件。</p>
<h2 id="内存泄漏和内存溢出"><a href="#内存泄漏和内存溢出" class="headerlink" title="内存泄漏和内存溢出"></a>内存泄漏和内存溢出</h2><p>内存溢出（OOM，out of memory），是指程序在申请内存时，没有足够的内存空间供其使用，出现out of memory；比如申请了一个integer，但给它存了long才能存下的数，那就是内存溢出。</p>
<p>内存泄露（memory leak），是指程序在申请内存后，无法释放已申请的内存空间，一次内存泄露危害可以忽略，但内存泄露堆积后果很严重，无论多少内存，迟早会被占光。</p>
<h3 id="如何判断内存泄露"><a href="#如何判断内存泄露" class="headerlink" title="如何判断内存泄露"></a>如何判断内存泄露</h3><p>用 <code>jstat -gcutil PID</code>，观察Old这个参数，如果每次执行完FULLGC之后Old区的值一次比一次升高，就可以判断为发生了内存泄漏。</p>
<h3 id="如何判断内存溢出"><a href="#如何判断内存溢出" class="headerlink" title="如何判断内存溢出"></a>如何判断内存溢出</h3><p>Heap Dump（堆转储文件）它是一个Java进程在某个时间点上的内存快照。Heap Dump是有着多种类型的。不过总体上heap dump在触发快照的时候都保存了java对象和类的信息。通常在写heap dump文件前会触发一次FullGC，所以heap dump文件中保存的是FullGC后留下的对象信息。</p>
<p>通过设置如下的JVM参数，可以在发生OutOfMemoryError后获取到一份HPROF二进制Heap Dump文件：</p>
<p><code>-XX:+HeapDumpOnOutOfMemoryError</code></p>
<p>生成的文件会直接写入到工作目录。</p>
<p>注意：该方法需要JDK5以上版本。</p>
<p>转存堆内存信息后，需要对文件进行分析，从而找到OOM的原因。可以使用以下方式：</p>
<p>mat：eclipse memory analyzer, 基于eclipse RCP的内存分析工具。具体使用参考：<a href="http://www.eclipse.org/mat/">http://www.eclipse.org/mat/</a></p>
<p>jhat：JDK自带的java heap analyze tool，可以将堆中的对象以html的形式显示出来，包括对象的数量，大小等等，并支持对象查询语言OQL，分析相关的应用后，可以通过<a href="http://localhost:7000来访问分析结果。不推荐使用。">http://localhost:7000来访问分析结果。不推荐使用。</a></p>
<h4 id="OOM常见原因及解决方案"><a href="#OOM常见原因及解决方案" class="headerlink" title="OOM常见原因及解决方案"></a>OOM常见原因及解决方案</h4><p>可参考<a href="https://zhuanlan.zhihu.com/p/79355050">高手总结的9种 OOM 常见原因及解决方案</a></p>
<h2 id="释放内存"><a href="#释放内存" class="headerlink" title="释放内存"></a>释放内存</h2><p>在Linux系统下，我们一般不需要去释放内存，因为系统已经将内存管理的很好。但是凡事也有例外，有的时候内存会被缓存占用掉，导致系统使用SWAP空间影响性能，例如当你在linux下频繁存取文件后,物理内存会很快被用光,当程序结束后，内存不会被正常释放，而是一直作为caching。此时就需 要执行释放内存（清理缓存）的操作了。</p>
<p>释放内存操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sync</span>  <span class="comment"># 强制将内存中的缓存写入磁盘</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> 数字 &gt; /proc/sys/vm/drop_caches <span class="comment">#数字可以是0-3的整数</span></span><br></pre></td></tr></table></figure>

<p>数字含义：</p>
<ul>
<li>0：不释放（系统默认值）</li>
<li>1：释放页缓存</li>
<li>2：释放dentries和inodes</li>
<li>3：释放所有缓存</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL基础：show命令</title>
    <url>/2023/12/28/MySQL%E5%9F%BA%E7%A1%80%EF%BC%9Ashow%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="show命令"><a href="#show命令" class="headerlink" title="show命令"></a>show命令</h2><p><strong>show</strong>命令可以提供关于数据库、表、列，或关于服务器的状态信息。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># 显示二进制文件以及文件大小（需要开启二进制日志记录功能）</span><br><span class="line"><span class="keyword">SHOW</span> &#123;<span class="type">BINARY</span> <span class="operator">|</span> MASTER&#125; LOGS</span><br><span class="line"></span><br><span class="line"># 显示二进制文件的执行过程</span><br><span class="line"><span class="keyword">SHOW</span> BINLOG EVENTS [<span class="keyword">IN</span> <span class="string">&#x27;log_name&#x27;</span>] [<span class="keyword">FROM</span> pos] [LIMIT [<span class="keyword">offset</span>,] row_count]</span><br><span class="line"></span><br><span class="line"># 显示MySQL当前支持哪些字符集</span><br><span class="line"><span class="keyword">SHOW</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span> [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示MySQL支持字符集的排序规则</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">COLLATION</span> [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示表的列信息（等同于<span class="keyword">DESC</span>，需要先创建表）</span><br><span class="line"><span class="keyword">SHOW</span> [<span class="keyword">FULL</span>] COLUMNS <span class="keyword">FROM</span> tbl_name [<span class="keyword">FROM</span> db_name] [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示已经创建的库，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE db_name</span><br><span class="line"></span><br><span class="line"># 显示已经创建的事件，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> EVENT event_name</span><br><span class="line"></span><br><span class="line"># 显示已经创建的函数，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> func_name</span><br><span class="line"></span><br><span class="line"># 显示已经创建的存储过程，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">PROCEDURE</span> proc_name</span><br><span class="line"></span><br><span class="line"># 显示已经创建的表，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> tbl_name</span><br><span class="line"></span><br><span class="line"># 显示已经创建的触发器，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> trigger_name</span><br><span class="line"></span><br><span class="line"># 显示已经创建的视图，创建时的语句</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">VIEW</span> view_name</span><br><span class="line"></span><br><span class="line"># 显示mysql中所有数据库的名称</span><br><span class="line"><span class="keyword">SHOW</span> DATABASES [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示存储引擎的详细信息</span><br><span class="line"><span class="keyword">SHOW</span> ENGINE engine_name &#123;STATUS <span class="operator">|</span> MUTEX&#125;</span><br><span class="line"></span><br><span class="line"># 显示数据库支持的存储引擎和默认存储引擎</span><br><span class="line"><span class="keyword">SHOW</span> [STORAGE] ENGINES</span><br><span class="line"></span><br><span class="line"># 显示最后一个执行语句所产生的错误信息</span><br><span class="line"><span class="keyword">SHOW</span> ERRORS [LIMIT [<span class="keyword">offset</span>,] row_count]</span><br><span class="line"></span><br><span class="line"># 显示事件信息</span><br><span class="line"><span class="keyword">SHOW</span> EVENTS</span><br><span class="line"></span><br><span class="line"># 服务器内部调试，显示一个指定存储的内部实现的表示形式过程</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">FUNCTION</span> CODE func_name</span><br><span class="line"></span><br><span class="line"># 显示存储函数信息（需要先创建存储函数）</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">FUNCTION</span> STATUS [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示指定用户拥有的权限</span><br><span class="line"><span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> <span class="keyword">user</span></span><br><span class="line"></span><br><span class="line"># 显示表索引信息（需要先创建索引）</span><br><span class="line"><span class="keyword">SHOW</span> INDEX <span class="keyword">FROM</span> tbl_name [<span class="keyword">FROM</span> db_name]</span><br><span class="line"></span><br><span class="line"># 显示Master当前正在使用的二进制信息</span><br><span class="line"><span class="keyword">SHOW</span> MASTER STATUS</span><br><span class="line"></span><br><span class="line"># 列举在表缓存中当前被打开的非TEMPORARY表</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">OPEN</span> TABLES [<span class="keyword">FROM</span> db_name] [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示MySQL插件信息</span><br><span class="line"><span class="keyword">SHOW</span> PLUGINS</span><br><span class="line"></span><br><span class="line"># 服务器内部调试，显示一个指定存储的内部实现的表示形式过程</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">PROCEDURE</span> CODE proc_name</span><br><span class="line"></span><br><span class="line"># 显示存储过程信息（需要先创建存储过程）</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">PROCEDURE</span> STATUS [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示MySQL所支持的所有权限，及权限可操作的对象</span><br><span class="line"><span class="keyword">SHOW</span> PRIVILEGES</span><br><span class="line"></span><br><span class="line"># 显示系统中正在运行的所有进程，普通用户只能查看自己的进行信息</span><br><span class="line"><span class="keyword">SHOW</span> [<span class="keyword">FULL</span>] PROCESSLIST</span><br><span class="line"></span><br><span class="line"># 显示当前会话执行语句资源使用情况</span><br><span class="line"><span class="keyword">SHOW</span> PROFILE [types] [<span class="keyword">FOR</span> QUERY n] [<span class="keyword">OFFSET</span> n] [LIMIT n]</span><br><span class="line"></span><br><span class="line"># 显示当前会话执行语句资源使用情况</span><br><span class="line"><span class="keyword">SHOW</span> PROFILES</span><br><span class="line"></span><br><span class="line"># 显示relaylog事件信息（需要先做主从复制）</span><br><span class="line"><span class="keyword">SHOW</span> RELAYLOG EVENTS [<span class="keyword">IN</span> <span class="string">&#x27;log_name&#x27;</span>] [<span class="keyword">FROM</span> pos] [LIMIT [<span class="keyword">offset</span>,] row_count]</span><br><span class="line"></span><br><span class="line"># 显示Master主机上已注册的复制主机列表（需要先做主从复制）</span><br><span class="line"><span class="keyword">SHOW</span> SLAVE HOSTS</span><br><span class="line"></span><br><span class="line"># 显示Slave主机状态信息（需要先做主从复制）</span><br><span class="line"><span class="keyword">SHOW</span> SLAVE STATUS [<span class="keyword">FOR</span> CHANNEL channel]</span><br><span class="line"></span><br><span class="line"># 显示MySQL状态信息</span><br><span class="line"><span class="keyword">SHOW</span> [<span class="keyword">GLOBAL</span> <span class="operator">|</span> SESSION] STATUS [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示表属性信息</span><br><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLE</span> STATUS [<span class="keyword">FROM</span> db_name] [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示当前数据库中所有表的名称</span><br><span class="line"><span class="keyword">SHOW</span> [<span class="keyword">FULL</span>] TABLES [<span class="keyword">FROM</span> db_name] [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示触发器信息（需要先创建触发器）</span><br><span class="line"><span class="keyword">SHOW</span> TRIGGERS [<span class="keyword">FROM</span> db_name] [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示MySQL变量信息</span><br><span class="line"><span class="keyword">SHOW</span> [<span class="keyword">GLOBAL</span> <span class="operator">|</span> SESSION] VARIABLES [like_or_where]</span><br><span class="line"></span><br><span class="line"># 显示最后一个执行语句所产生的警告信息</span><br><span class="line"><span class="keyword">SHOW</span> WARNINGS [LIMIT [<span class="keyword">offset</span>,] row_count]</span><br></pre></td></tr></table></figure>

<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="显示建表建库语句"><a href="#显示建表建库语句" class="headerlink" title="显示建表建库语句"></a>显示建表建库语句</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> DATABASES;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> Database           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="operator">|</span> information_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> performance_schema <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> pubmmrpg           <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> student            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sys                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+</span></span><br><span class="line"><span class="number">6</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> DATABASE MYSQL;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Database <span class="operator">|</span> <span class="keyword">Create</span> Database                                                <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> MYSQL    <span class="operator">|</span> <span class="keyword">CREATE</span> DATABASE `MYSQL` <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+----------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> USE mysql;</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> TABLES;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> Tables_in_mysql           <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> columns_priv              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> db                        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> engine_cost               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> event                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> func                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> general_log               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gtid_executed             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> help_category             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> help_keyword              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> help_relation             <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> help_topic                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_index_stats        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> innodb_table_stats        <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ndb_binlog_index          <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> plugin                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> proc                      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> procs_priv                <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> proxies_priv              <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> server_cost               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> servers                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave_master_info         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave_relay_log_info      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave_worker_info         <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slow_log                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tables_priv               <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone                 <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone_leap_second     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone_name            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone_transition      <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> time_zone_transition_type <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">user</span>                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="number">31</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mysql.user\G;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">       <span class="keyword">Table</span>: <span class="keyword">user</span></span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">Table</span>: <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `<span class="keyword">user</span>` (</span><br><span class="line">  `Host` <span class="type">char</span>(<span class="number">60</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `<span class="keyword">User</span>` <span class="type">char</span>(<span class="number">32</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `Select_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Insert_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Update_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Delete_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Create_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Drop_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Reload_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Shutdown_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Process_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `File_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Grant_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `References_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Index_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Alter_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Show_db_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Super_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Create_tmp_table_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Lock_tables_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Execute_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Repl_slave_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Repl_client_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Create_view_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Show_view_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Create_routine_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Alter_routine_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Create_user_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Event_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Trigger_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `Create_tablespace_priv` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `ssl_type` enum(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;ANY&#x27;</span>,<span class="string">&#x27;X509&#x27;</span>,<span class="string">&#x27;SPECIFIED&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">  `ssl_cipher` <span class="type">blob</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `x509_issuer` <span class="type">blob</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `x509_subject` <span class="type">blob</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `max_questions` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `max_updates` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `max_connections` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `max_user_connections` <span class="type">int</span>(<span class="number">11</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  `plugin` <span class="type">char</span>(<span class="number">64</span>) <span class="keyword">COLLATE</span> utf8_bin <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;mysql_native_password&#x27;</span>,</span><br><span class="line">  `authentication_string` text <span class="keyword">COLLATE</span> utf8_bin,</span><br><span class="line">  `password_expired` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  `password_last_changed` <span class="type">timestamp</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `password_lifetime` <span class="type">smallint</span>(<span class="number">5</span>) unsigned <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `account_locked` enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8 <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`Host`,`<span class="keyword">User</span>`)</span><br><span class="line">) ENGINE<span class="operator">=</span>MyISAM <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8_bin COMMENT<span class="operator">=</span><span class="string">&#x27;Users and global privileges&#x27;</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> COLUMNS <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-----------------------------------+------+-----+-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Field                  <span class="operator">|</span> Type                              <span class="operator">|</span> <span class="keyword">Null</span> <span class="operator">|</span> Key <span class="operator">|</span> <span class="keyword">Default</span>               <span class="operator">|</span> Extra <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-----------------------------------+------+-----+-----------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Host                   <span class="operator">|</span> <span class="type">char</span>(<span class="number">60</span>)                          <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span>                       <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">User</span>                   <span class="operator">|</span> <span class="type">char</span>(<span class="number">32</span>)                          <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span> PRI <span class="operator">|</span>                       <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Select_priv            <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Insert_priv            <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Update_priv            <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Delete_priv            <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Create_priv            <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Drop_priv              <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Reload_priv            <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Shutdown_priv          <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Process_priv           <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> File_priv              <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Grant_priv             <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> References_priv        <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Index_priv             <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alter_priv             <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Show_db_priv           <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Super_priv             <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Create_tmp_table_priv  <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Lock_tables_priv       <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Execute_priv           <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Repl_slave_priv        <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Repl_client_priv       <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Create_view_priv       <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Show_view_priv         <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Create_routine_priv    <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Alter_routine_priv     <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Create_user_priv       <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Event_priv             <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Trigger_priv           <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Create_tablespace_priv <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ssl_type               <span class="operator">|</span> enum(<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;ANY&#x27;</span>,<span class="string">&#x27;X509&#x27;</span>,<span class="string">&#x27;SPECIFIED&#x27;</span>) <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span>                       <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ssl_cipher             <span class="operator">|</span> <span class="type">blob</span>                              <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>                  <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> x509_issuer            <span class="operator">|</span> <span class="type">blob</span>                              <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>                  <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> x509_subject           <span class="operator">|</span> <span class="type">blob</span>                              <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>                  <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_questions          <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) unsigned                  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_updates            <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) unsigned                  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_connections        <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) unsigned                  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> max_user_connections   <span class="operator">|</span> <span class="type">int</span>(<span class="number">11</span>) unsigned                  <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> <span class="number">0</span>                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> plugin                 <span class="operator">|</span> <span class="type">char</span>(<span class="number">64</span>)                          <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> mysql_native_password <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> authentication_string  <span class="operator">|</span> text                              <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>                  <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password_expired       <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password_last_changed  <span class="operator">|</span> <span class="type">timestamp</span>                         <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>                  <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> password_lifetime      <span class="operator">|</span> <span class="type">smallint</span>(<span class="number">5</span>) unsigned              <span class="operator">|</span> YES  <span class="operator">|</span>     <span class="operator">|</span> <span class="keyword">NULL</span>                  <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> account_locked         <span class="operator">|</span> enum(<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;Y&#x27;</span>)                     <span class="operator">|</span> <span class="keyword">NO</span>   <span class="operator">|</span>     <span class="operator">|</span> N                     <span class="operator">|</span>       <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------------+-----------------------------------+------+-----+-----------------------+-------+</span></span><br><span class="line"><span class="number">45</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<h4 id="显示二进制文件相关"><a href="#显示二进制文件相关" class="headerlink" title="显示二进制文件相关"></a>显示二进制文件相关</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> MASTER LOGS;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Log_name         <span class="operator">|</span> File_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002022</span> <span class="operator">|</span>    <span class="number">817345</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002023</span> <span class="operator">|</span>    <span class="number">817932</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002024</span> <span class="operator">|</span>    <span class="number">816758</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002025</span> <span class="operator">|</span>    <span class="number">664678</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="type">BINARY</span> LOGS;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> Log_name         <span class="operator">|</span> File_size <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002022</span> <span class="operator">|</span>    <span class="number">817345</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002023</span> <span class="operator">|</span>    <span class="number">817932</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002024</span> <span class="operator">|</span>    <span class="number">816758</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.002025</span> <span class="operator">|</span>    <span class="number">665265</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+-----------+</span></span><br><span class="line"><span class="number">4</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<h4 id="显示主从相关"><a href="#显示主从相关" class="headerlink" title="显示主从相关"></a>显示主从相关</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> SLAVE HOSTS;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> SLAVE STATUS;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> RELAYLOG EVENTS limit <span class="number">10</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-----+----------------+------------+-------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Log_name           <span class="operator">|</span> Pos <span class="operator">|</span> Event_type     <span class="operator">|</span> Server_id  <span class="operator">|</span> End_log_pos <span class="operator">|</span> Info                                                                                                                                                                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-----+----------------+------------+-------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span>   <span class="number">4</span> <span class="operator">|</span> Format_desc    <span class="operator">|</span> <span class="number">1339158577</span> <span class="operator">|</span>         <span class="number">123</span> <span class="operator">|</span> Server ver: <span class="number">5.7</span><span class="number">.20</span><span class="operator">-</span>log, Binlog ver: <span class="number">4</span>                                                                                                                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">123</span> <span class="operator">|</span> Previous_gtids <span class="operator">|</span> <span class="number">1339158577</span> <span class="operator">|</span>         <span class="number">194</span> <span class="operator">|</span> <span class="number">4941480</span>b<span class="operator">-</span>c2fa<span class="number">-11e8</span><span class="number">-850</span>c<span class="number">-506</span>b4bbe1cf4:<span class="number">1</span><span class="number">-3111622</span>                                                                                                                            <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">194</span> <span class="operator">|</span> Rotate         <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>           <span class="number">0</span> <span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.001063</span>;pos<span class="operator">=</span><span class="number">4</span>                                                                                                                                                    <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">241</span> <span class="operator">|</span> Format_desc    <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>         <span class="number">123</span> <span class="operator">|</span> Server ver: <span class="number">5.7</span><span class="number">.20</span><span class="operator">-</span>log, Binlog ver: <span class="number">4</span>                                                                                                                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">360</span> <span class="operator">|</span> Rotate         <span class="operator">|</span>          <span class="number">0</span> <span class="operator">|</span>         <span class="number">407</span> <span class="operator">|</span> mysql<span class="operator">-</span>bin<span class="number">.001063</span>;pos<span class="operator">=</span><span class="number">234</span>                                                                                                                                                  <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">407</span> <span class="operator">|</span> Gtid           <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>         <span class="number">299</span> <span class="operator">|</span> <span class="keyword">SET</span> @<span class="variable">@SESSION</span>.GTID_NEXT<span class="operator">=</span> <span class="string">&#x27;4941480b-c2fa-11e8-850c-506b4bbe1cf4:3111623&#x27;</span>                                                                                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">472</span> <span class="operator">|</span> Query          <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>         <span class="number">539</span> <span class="operator">|</span> <span class="comment">/* rds internal mark */</span> <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> mysql.ha_health_check (</span><br><span class="line">  id   <span class="type">BIGINT</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>,</span><br><span class="line">  type <span class="type">CHAR</span>(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (type)</span><br><span class="line">)</span><br><span class="line">  ENGINE <span class="operator">=</span> InnoDB <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">712</span> <span class="operator">|</span> Gtid           <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>         <span class="number">604</span> <span class="operator">|</span> <span class="keyword">SET</span> @<span class="variable">@SESSION</span>.GTID_NEXT<span class="operator">=</span> <span class="string">&#x27;4941480b-c2fa-11e8-850c-506b4bbe1cf4:3111624&#x27;</span>                                                                                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">777</span> <span class="operator">|</span> Query          <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>         <span class="number">672</span> <span class="operator">|</span> <span class="keyword">BEGIN</span>                                                                                                                                                                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> slave<span class="operator">-</span>relay<span class="number">.001351</span> <span class="operator">|</span> <span class="number">845</span> <span class="operator">|</span> Table_map      <span class="operator">|</span> <span class="number">2241191473</span> <span class="operator">|</span>         <span class="number">734</span> <span class="operator">|</span> table_id: <span class="number">81659</span> (mysql.ha_health_check)                                                                                                                                   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------+-----+----------------+------------+-------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">10</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> SLAVE STATUS\G;</span><br><span class="line"><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span> <span class="number">1.</span> <span class="type">row</span> <span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span><span class="operator">*</span></span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master <span class="keyword">to</span> send event</span><br><span class="line">                  Master_Host: <span class="number">192.168</span><span class="number">.120</span><span class="number">.26</span></span><br><span class="line">                  Master_User: replicator</span><br><span class="line">                  Master_Port: <span class="number">3069</span></span><br><span class="line">                Connect_Retry: <span class="number">60</span></span><br><span class="line">              Master_Log_File: mysql<span class="operator">-</span>bin<span class="number">.001063</span></span><br><span class="line">          Read_Master_Log_Pos: <span class="number">3564725</span></span><br><span class="line">               Relay_Log_File: slave<span class="operator">-</span>relay<span class="number">.001352</span></span><br><span class="line">                Relay_Log_Pos: <span class="number">844419</span></span><br><span class="line">        Relay_Master_Log_File: mysql<span class="operator">-</span>bin<span class="number">.001063</span></span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: <span class="number">0</span></span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: <span class="number">0</span></span><br><span class="line">          Exec_Master_Log_Pos: <span class="number">3564725</span></span><br><span class="line">              Relay_Log_Space: <span class="number">3565260</span></span><br><span class="line">              Until_Condition: <span class="keyword">None</span></span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: <span class="number">0</span></span><br><span class="line">           Master_SSL_Allowed: <span class="keyword">No</span></span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: <span class="number">0</span></span><br><span class="line">Master_SSL_Verify_Server_Cert: <span class="keyword">No</span></span><br><span class="line">                Last_IO_Errno: <span class="number">0</span></span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: <span class="number">0</span></span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: <span class="number">2241191473</span></span><br><span class="line">                  Master_UUID: <span class="number">4941480</span>b<span class="operator">-</span>c2fa<span class="number">-11e8</span><span class="number">-850</span>c<span class="number">-506</span>b4bbe1cf4</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: <span class="number">0</span></span><br><span class="line">          SQL_Remaining_Delay: <span class="keyword">NULL</span></span><br><span class="line">      Slave_SQL_Running_State: Slave has read <span class="keyword">all</span> relay log; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: <span class="number">86400</span></span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">          Last_SQL_Error_Gtid: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: <span class="number">4941480</span>b<span class="operator">-</span>c2fa<span class="number">-11e8</span><span class="number">-850</span>c<span class="number">-506</span>b4bbe1cf4:<span class="number">1</span><span class="number">-3119404</span></span><br><span class="line">            Executed_Gtid_Set: <span class="number">3</span>c09db04<span class="operator">-</span>c2fa<span class="number">-11e8</span><span class="operator">-</span>b5cc<span class="number">-506</span>b4bff2084:<span class="number">1</span><span class="number">-2275307</span>,</span><br><span class="line"><span class="number">4941480</span>b<span class="operator">-</span>c2fa<span class="number">-11e8</span><span class="number">-850</span>c<span class="number">-506</span>b4bbe1cf4:<span class="number">1</span><span class="number">-3119404</span></span><br><span class="line">                Auto_Position: <span class="number">1</span></span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<h4 id="显示字符集变量相关"><a href="#显示字符集变量相关" class="headerlink" title="显示字符集变量相关"></a>显示字符集变量相关</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="type">CHARACTER</span> <span class="keyword">SET</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------------------------------+---------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> Charset  <span class="operator">|</span> Description                     <span class="operator">|</span> <span class="keyword">Default</span> <span class="keyword">collation</span>   <span class="operator">|</span> Maxlen <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------------------------------+---------------------+--------+</span></span><br><span class="line"><span class="operator">|</span> big5     <span class="operator">|</span> Big5 Traditional Chinese        <span class="operator">|</span> big5_chinese_ci     <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> dec8     <span class="operator">|</span> <span class="type">DEC</span> West European               <span class="operator">|</span> dec8_swedish_ci     <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp850    <span class="operator">|</span> DOS West European               <span class="operator">|</span> cp850_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> hp8      <span class="operator">|</span> HP West European                <span class="operator">|</span> hp8_english_ci      <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> koi8r    <span class="operator">|</span> KOI8<span class="operator">-</span>R Relcom Russian           <span class="operator">|</span> koi8r_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> latin1   <span class="operator">|</span> cp1252 West European            <span class="operator">|</span> latin1_swedish_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> latin2   <span class="operator">|</span> ISO <span class="number">8859</span><span class="number">-2</span> Central European     <span class="operator">|</span> latin2_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> swe7     <span class="operator">|</span> <span class="number">7</span>bit Swedish                    <span class="operator">|</span> swe7_swedish_ci     <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ascii    <span class="operator">|</span> US ASCII                        <span class="operator">|</span> ascii_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ujis     <span class="operator">|</span> EUC<span class="operator">-</span>JP Japanese                 <span class="operator">|</span> ujis_japanese_ci    <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> sjis     <span class="operator">|</span> Shift<span class="operator">-</span>JIS Japanese              <span class="operator">|</span> sjis_japanese_ci    <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> hebrew   <span class="operator">|</span> ISO <span class="number">8859</span><span class="number">-8</span> Hebrew               <span class="operator">|</span> hebrew_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> tis620   <span class="operator">|</span> TIS620 Thai                     <span class="operator">|</span> tis620_thai_ci      <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> euckr    <span class="operator">|</span> EUC<span class="operator">-</span>KR Korean                   <span class="operator">|</span> euckr_korean_ci     <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> koi8u    <span class="operator">|</span> KOI8<span class="operator">-</span>U Ukrainian                <span class="operator">|</span> koi8u_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gb2312   <span class="operator">|</span> GB2312 Simplified Chinese       <span class="operator">|</span> gb2312_chinese_ci   <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> greek    <span class="operator">|</span> ISO <span class="number">8859</span><span class="number">-7</span> Greek                <span class="operator">|</span> greek_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp1250   <span class="operator">|</span> Windows Central European        <span class="operator">|</span> cp1250_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gbk      <span class="operator">|</span> GBK Simplified Chinese          <span class="operator">|</span> gbk_chinese_ci      <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> latin5   <span class="operator">|</span> ISO <span class="number">8859</span><span class="number">-9</span> Turkish              <span class="operator">|</span> latin5_turkish_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> armscii8 <span class="operator">|</span> ARMSCII<span class="number">-8</span> Armenian              <span class="operator">|</span> armscii8_general_ci <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf8     <span class="operator">|</span> UTF<span class="number">-8</span> Unicode                   <span class="operator">|</span> utf8_general_ci     <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> ucs2     <span class="operator">|</span> UCS<span class="number">-2</span> Unicode                   <span class="operator">|</span> ucs2_general_ci     <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp866    <span class="operator">|</span> DOS Russian                     <span class="operator">|</span> cp866_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> keybcs2  <span class="operator">|</span> DOS Kamenicky Czech<span class="operator">-</span>Slovak      <span class="operator">|</span> keybcs2_general_ci  <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> macce    <span class="operator">|</span> Mac Central European            <span class="operator">|</span> macce_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> macroman <span class="operator">|</span> Mac West European               <span class="operator">|</span> macroman_general_ci <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp852    <span class="operator">|</span> DOS Central European            <span class="operator">|</span> cp852_general_ci    <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> latin7   <span class="operator">|</span> ISO <span class="number">8859</span><span class="number">-13</span> Baltic              <span class="operator">|</span> latin7_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf8mb4  <span class="operator">|</span> UTF<span class="number">-8</span> Unicode                   <span class="operator">|</span> utf8mb4_general_ci  <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp1251   <span class="operator">|</span> Windows Cyrillic                <span class="operator">|</span> cp1251_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf16    <span class="operator">|</span> UTF<span class="number">-16</span> Unicode                  <span class="operator">|</span> utf16_general_ci    <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf16le  <span class="operator">|</span> UTF<span class="number">-16</span>LE Unicode                <span class="operator">|</span> utf16le_general_ci  <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp1256   <span class="operator">|</span> Windows Arabic                  <span class="operator">|</span> cp1256_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp1257   <span class="operator">|</span> Windows Baltic                  <span class="operator">|</span> cp1257_general_ci   <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> utf32    <span class="operator">|</span> UTF<span class="number">-32</span> Unicode                  <span class="operator">|</span> utf32_general_ci    <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> <span class="type">binary</span>   <span class="operator">|</span> <span class="type">Binary</span> pseudo charset           <span class="operator">|</span> <span class="type">binary</span>              <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> geostd8  <span class="operator">|</span> GEOSTD8 Georgian                <span class="operator">|</span> geostd8_general_ci  <span class="operator">|</span>      <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> cp932    <span class="operator">|</span> SJIS <span class="keyword">for</span> Windows Japanese       <span class="operator">|</span> cp932_japanese_ci   <span class="operator">|</span>      <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> eucjpms  <span class="operator">|</span> UJIS <span class="keyword">for</span> Windows Japanese       <span class="operator">|</span> eucjpms_japanese_ci <span class="operator">|</span>      <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> gb18030  <span class="operator">|</span> China <span class="type">National</span> Standard GB18030 <span class="operator">|</span> gb18030_chinese_ci  <span class="operator">|</span>      <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+---------------------------------+---------------------+--------+</span></span><br><span class="line"><span class="number">41</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> <span class="keyword">GLOBAL</span> VARIABLES <span class="keyword">LIKE</span> <span class="string">&#x27;character%&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name            <span class="operator">|</span> <span class="keyword">Value</span>                      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+----------------------------+</span></span><br><span class="line"><span class="operator">|</span> character_set_client     <span class="operator">|</span> utf8                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_connection <span class="operator">|</span> utf8                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_database   <span class="operator">|</span> utf8                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_filesystem <span class="operator">|</span> <span class="type">binary</span>                     <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_results    <span class="operator">|</span> utf8                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_server     <span class="operator">|</span> utf8                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_set_system     <span class="operator">|</span> utf8                       <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> character_sets_dir       <span class="operator">|</span> <span class="operator">/</span>usr<span class="operator">/</span>share<span class="operator">/</span>mysql<span class="operator">/</span>charsets<span class="operator">/</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">--------------------------+----------------------------+</span></span><br><span class="line"><span class="number">8</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h4 id="显示用户权限相关"><a href="#显示用户权限相关" class="headerlink" title="显示用户权限相关"></a>显示用户权限相关</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> GRANTS <span class="keyword">FOR</span> test;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Grants <span class="keyword">for</span> test@<span class="operator">%</span>                         <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">GRANT</span> <span class="keyword">ALL</span> PRIVILEGES <span class="keyword">ON</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">TO</span> <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;%&#x27;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h4 id="显示运行进程"><a href="#显示运行进程" class="headerlink" title="显示运行进程"></a>显示运行进程</h4><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SHOW</span> PROCESSLIST;</span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-----------+-------+---------+------+----------+------------------+</span></span><br><span class="line"><span class="operator">|</span> Id <span class="operator">|</span> <span class="keyword">User</span> <span class="operator">|</span> Host      <span class="operator">|</span> db    <span class="operator">|</span> Command <span class="operator">|</span> <span class="type">Time</span> <span class="operator">|</span> State    <span class="operator">|</span> Info             <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-----------+-------+---------+------+----------+------------------+</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">6</span> <span class="operator">|</span> root <span class="operator">|</span> localhost <span class="operator">|</span> mysql <span class="operator">|</span> Query   <span class="operator">|</span>    <span class="number">0</span> <span class="operator">|</span> starting <span class="operator">|</span> <span class="keyword">SHOW</span> PROCESSLIST <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----+------+-----------+-------+---------+------+----------+------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql中查询执行SQL记录的语句</title>
    <url>/2023/12/14/Mysql%E4%B8%AD%E6%9F%A5%E8%AF%A2%E6%89%A7%E8%A1%8CSQL%E8%AE%B0%E5%BD%95%E7%9A%84%E8%AF%AD%E5%8F%A5/</url>
    <content><![CDATA[<h2 id="表名：performance-schema-events-statements-summary-by-digest"><a href="#表名：performance-schema-events-statements-summary-by-digest" class="headerlink" title="表名：performance_schema.events_statements_summary_by_digest"></a>表名：performance_schema.events_statements_summary_by_digest</h2><h4 id="说明：此表只保留10000行，超出会循序更新。"><a href="#说明：此表只保留10000行，超出会循序更新。" class="headerlink" title="说明：此表只保留10000行，超出会循序更新。"></a>说明：此表只保留10000行，超出会循序更新。</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT digest AS `digest`,</span><br><span class="line">       schema_name AS `schema`,</span><br><span class="line">       count_star AS `execCount`,</span><br><span class="line">       IFNULL(sum_timer_wait * 0.000001, 0) AS `execTimeTotal`,</span><br><span class="line">       IFNULL(min_timer_wait * 0.000001, 0) AS `execTimeMin`,</span><br><span class="line">       IFNULL(max_timer_wait * 0.000001, 0) AS `execTimeMax`,</span><br><span class="line">       IFNULL(sum_lock_time * 0.000001, 0) AS `lockTimeTotal`,</span><br><span class="line">       sum_errors AS `errorCount`,</span><br><span class="line">       sum_warnings AS `warningCount`,</span><br><span class="line">       sum_rows_affected + sum_rows_sent AS `rowsTotal`,</span><br><span class="line">       sum_rows_examined AS `rowsExaminedTotal`,</span><br><span class="line">       sum_created_tmp_disk_tables AS `createdTmpDiskTables`,</span><br><span class="line">       sum_created_tmp_tables AS `createdTmpTables`,</span><br><span class="line">       sum_select_full_join AS `selectFullJoin`,</span><br><span class="line">       sum_select_full_range_join AS `selectFullRangeJoin`,</span><br><span class="line">       sum_select_range AS `selectRange`,</span><br><span class="line">       sum_select_range_check AS `selectRangeCheck`,</span><br><span class="line">       sum_select_scan AS `selectScan`,</span><br><span class="line">       sum_sort_merge_passes AS `sortMergePasses`,</span><br><span class="line">       sum_sort_range AS `sortRange`,</span><br><span class="line">       sum_sort_rows AS `sortRows`,</span><br><span class="line">       sum_sort_scan AS `sortScan`,</span><br><span class="line">       sum_no_index_used AS `noIndexUsedCount`,</span><br><span class="line">       sum_no_good_index_used AS `noGoodIndexUsedCount`,</span><br><span class="line">       digest_text AS `normalizedText`,</span><br><span class="line">       unix_timestamp(first_seen)*1000 AS `firstSeen`,</span><br><span class="line">       unix_timestamp(last_seen)*1000 AS `lastSeen`</span><br><span class="line"> FROM  performance_schema.events_statements_summary_by_digest</span><br><span class="line"> WHERE digest IS NOT NULL</span><br><span class="line">   -- even though i want a (from,to] set based on last_seen, it&#x27;s only at 1s</span><br><span class="line">   -- precision, so if i elide a seconds worth of samples, it could miss some.</span><br><span class="line">   -- note, then this requires the delta&#x27;izing algorithm to elide exec counts</span><br><span class="line">   -- that haven&#x27;t changed</span><br><span class="line">   AND UNIX_TIMESTAMP(last_seen)*1000  &gt;= 1679891400000;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>PMM监控工具</title>
    <url>/2023/12/19/PMM%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<p>环境： </p>
<p>AWS ec2 CentOS7一台</p>
<h2 id="1-Percona监控和管理概述"><a href="#1-Percona监控和管理概述" class="headerlink" title="1. Percona监控和管理概述"></a>1. Percona监控和管理概述</h2><p>Percona监控和管理（PMM）是一个用于管理和监控MySQL和MongoDB性能的开源平台。 它由Percona与托管数据库服务，支持和咨询领域的专家合作开发。 PMM是一个免费的开源解决方案，您可以在自己的环境中运行，以实现最大的安全性和可靠性。 它为mysql和mongodb服务器提供全面的基于时间的分析，以确保您的数据尽可能高效地工作。</p>
<h3 id="1-1-Percona监控和管理架构"><a href="#1-1-Percona监控和管理架构" class="headerlink" title="1.1 Percona监控和管理架构"></a>1.1 Percona监控和管理架构</h3><p>PMM平台基于简单的客户端 - 服务器模型，可实现高效的可扩展性。它包括以下模块： </p>
<p>PMM Client安装在您要监视的每个数据库主机上。它收集服务器指标，一般系统指标和查询分析数据，以获得完整的性能概述。收集的数据发送到PMM服务器。 </p>
<p>PMM Server是PMM的核心部分，它聚合收集的数据，并以Web界面的表格，仪表板和图形的形式呈现。 </p>
<p>PMM是旨在无缝协同工作的工具集合。一些是由Percona开发的，一些是第三方开源工具。 </p>
<p>下图说明了PMM当前的结构：</p>
<p>​<a href="https://s2.51cto.com//wyfs02/M00/9C/3D/wKioL1lt0iWh8IT2AAEmCUkPjUs149.png"><img src="/images/1705485675-d6d2fc88307de30321170733e2c0c8a7.png" alt="Percona Monitoring and Management (PMM) 监控MongoDB_监控">​</a>​</p>
<h3 id="1-2-PMM-Client"><a href="#1-2-PMM-Client" class="headerlink" title="1.2 PMM Client"></a>1.2 PMM Client</h3><p>PMM客户端软件包适用于大多数流行的Linux发行版：</p>
<ul>
<li><p>Red Hat Enterprise linux衍生产品的RPM（包括CentOS，Oracle Linux，Amazon Linux等）</p>
</li>
<li><p>DEB用于基于Debian的发行版（包括Ubuntu等）</p>
</li>
</ul>
<p>PMM客户端软件包包含以下内容： </p>
<p>pmm-admin是用于管理PMM客户端的命令行工具，例如，添加和删除要监视的数据库实例。 </p>
<p>percona-qan-agent是一种在收集查询性能数据时管理查询分析（QAN）代理的服务。它还与PMM服务器中的QAN API连接，并发送收集的数据。 </p>
<p>node_exporter是收集一般系统指标的Prometheus exporter。有关详细信息，请参阅​ <a href="https://github.com/prometheus/node_exporter">​</a> <a href="https://github.com/prometheus/node_exporter">​https://github.com/prometheus/node_exporter​</a>​​。 </p>
<p>mysqld_exporter是收集MySQL服务器指标的Prometheus exporter。有关详细信息，请参阅​ <a href="https://github.com/percona/mysqld_exporter">​</a> <a href="https://github.com/percona/mysqld_exporter">​https://github.com/percona/mysqld_exporter​</a>​​。 </p>
<p>mongodb_exporter是收集MongoDB服务器指标的Prometheus exporter。有关详细信息，请参阅​ <a href="https://github.com/percona/mongodb_exporter">​</a> <a href="https://github.com/percona/mongodb_exporter">​https://github.com/percona/mongodb_exporter​</a>​​。 </p>
<p>proxysql_exporter是收集ProxySQL性能指标的Prometheus exporter。有关详细信息，请参阅​ <a href="https://github.com/percona/proxysql_exporter">​</a> <a href="https://github.com/percona/proxysql_exporter">​https://github.com/percona/proxysql_exporter​</a>​​。</p>
<h3 id="1-3-PMM-Server"><a href="#1-3-PMM-Server" class="headerlink" title="1.3 PMM Server"></a>1.3 PMM Server</h3><p>PMM服务器将作为您的中央监控主机的机器运行。它通过以下方式作为设备分发： </p>
<p>可以用于运行容器的Docker映像 </p>
<p>可以在VirtualBox或其他管理程序中运行 </p>
<p>可以通过Amazon Web Services（AWS）运行的Amazon Machine Image（AMI） </p>
<p>PMM服务器由以下工具组成： </p>
<p>查询分析（QAN）使您能够在一段时间内分析MySQL查询性能。除客户端QAN代理外，还包括以下内容：</p>
<p>QAN API是用于存储和访问在PMM客户端上运行的percona-qan-agent收集的查询数据的后端 </p>
<p>QAN Web App是用于可视化收集的Query Analytics数据的Web应用程序。 </p>
<p>度量监视器（MM）提供对MySQL或MongoDB服务器实例至关重要的度量的历史视图。它包括以下内容：</p>
<p>Prometheus是一个第三方时间序列数据库，连接到在PMM客户端上运行的出口商，并汇总了收集的指标. </p>
<p>Consul提供一个PMM客户端可以远程列出，添加和删除Prometheus主机的API。 </p>
<p>Grafana是一个第三方仪表板和图形构建器，用于在直观的Web界面中可视化由Prometheus汇总的数据. </p>
<p>Percona仪表板是由Percona开发的Grafana仪表板 </p>
<p>Orchestrator是MySQL复制拓扑管理和可视化工具。 </p>
<p>部署方案(​ <a href="https://www.percona.com/doc/percona-monitoring-and-management/architecture.html#id13">​</a> <a href="https://www.percona.com/doc/percona-monitoring-and-management/architecture.html#id13">​https://www.percona.com/doc/percona-monitoring-and-management/architecture.html#id13​</a>​​)</p>
<p>参考： </p>
<p>[1] ​ <a href="https://prometheus.io/docs/introduction/overview/">​</a> <a href="https://prometheus.io/docs/introduction/overview/">​https://prometheus.io/docs/introduction/overview/​</a>​​ </p>
<p>[2] ​ <a href="https://www.consul.io/docs/">​</a> <a href="https://www.consul.io/docs/">​https://www.consul.io/docs/​</a>​​ </p>
<p>[3] ​ <a href="http://docs.grafana.org/">​</a> <a href="http://docs.grafana.org/">​http://docs.grafana.org/​</a>​​ </p>
<p>[4] ​ <a href="https://github.com/outbrain/orchestrator/wiki/Orchestrator-Manual">​</a> <a href="https://github.com/outbrain/orchestrator/wiki/Orchestrator-Manual">​https://github.com/outbrain/orchestrator/wiki/Orchestrator-Manual​</a>​​</p>
<h2 id="2-安装MongoDB"><a href="#2-安装MongoDB" class="headerlink" title="2. 安装MongoDB"></a>2. 安装MongoDB</h2><h3 id="2-1-配置Percona-yum源"><a href="#2-1-配置Percona-yum源" class="headerlink" title="2.1 配置Percona yum源"></a>2.1 配置Percona yum源</h3><p>安装命令如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install http://www.percona.com/downloads/percona-release/redhat/0.1-4/percona-release-0.1-4.noarch.rpm</span><br></pre></td></tr></table></figure>

<p>请确保有安装成功结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Installed:</span><br><span class="line">  percona-release.noarch 0:0.1-4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Complete!</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum list | grep percona</span><br></pre></td></tr></table></figure>

<p>显示部分的安装包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">percona-release.noarch                0.1-4                         installed   </span><br><span class="line">Percona-SQL-50-debuginfo.x86_64       5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-SQL-client-50.x86_64          5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-SQL-devel-50.x86_64           5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-SQL-server-50.x86_64          5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-SQL-shared-50.x86_64          5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-SQL-shared-compat.x86_64      5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-SQL-test-50.x86_64            5.0.92-b23.89.rhel6           percona-release-x86_64</span><br><span class="line">Percona-Server-51-debuginfo.x86_64    5.1.73-rel14.12.624.rhel6     percona-release-x86_64</span><br><span class="line">Percona-Server-55-debuginfo.x86_64    5.5.55-rel38.8.el6            percona-release-x86_64</span><br><span class="line">Percona-Server-56-debuginfo.x86_64    5.6.36-rel82.0.el6            percona-release-x86_64</span><br><span class="line">Percona-Server-57-debuginfo.x86_64    5.7.18-15.1.el6               percona-release-x86_64</span><br><span class="line">Percona-Server-MongoDB.x86_64         3.0.15-1.10.el6               percona-release-x86_64</span><br><span class="line">Percona-Server-MongoDB-32.x86_64      3.2.13-3.3.el6                percona-release-x86_64</span><br><span class="line">                                      3.2.13-3.3.el6                percona-release-x86_64</span><br><span class="line">                                      3.2.13-3.3.el6                percona-release-x86_64</span><br><span class="line">                                      3.2.13-3.3.el6                percona-release-x86_64</span><br><span class="line">                                      3.2.13-3.3.el6                percona-release-x86_64</span><br><span class="line">                                      3.2.13-3.3.el6                percona-release-x86_64</span><br><span class="line">Percona-Server-MongoDB-34.x86_64      3.4.5-1.5.el6                 percona-release-x86_64</span><br></pre></td></tr></table></figure>

<p>这里我们安装MongoDB3.4版本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install Percona-Server-MongoDB-34</span><br></pre></td></tr></table></figure>

<p>​<strong>如果您已经启用SELinux，则需要做配置相关，这里不做详细说明。我是禁用SELinux状态。</strong>​</p>
<p>MongoDB默认配置文件​<code>​/etc/mongod.conf​</code>​​，数据目录默认是​<code>​/var/lib/mongodb/​</code>​ 。有需要，请自行修改配置文件。</p>
<p>查看MongoDB是否启动：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/etc/init.d/mongod status</span><br></pre></td></tr></table></figure>

<h2 id="3-部署Percona监控和管理"><a href="#3-部署Percona监控和管理" class="headerlink" title="3. 部署Percona监控和管理"></a>3. 部署Percona监控和管理</h2><p>以下过程介绍如何正确部署PMM： </p>
<p>在主机上运行PMM Server，用于访问收集的数据，查看基于时间的图表，并执行性能分析。</p>
<p>以下安装的选项可用：</p>
<ul>
<li><p>使用Docker运行PMM服务器</p>
</li>
<li><p>使用VirtualBox运行PMM服务器</p>
</li>
<li><p>使用Amazon Machine Image（AMI）运行PMM服务器</p>
</li>
</ul>
<p>这里我们选择使用Docker运行PMM服务器。</p>
<p>使用docker运行PMM Server </p>
<p>PMM服务器的Docker映像公开托管在​ <a href="https://hub.docker.com/r/percona/pmm-server/">​</a> <a href="https://hub.docker.com/r/percona/pmm-server/">​https://hub.docker.com/r/percona/pmm-server/​</a>​​。 如果要从docker映像运行PMM Server，则主机必须能够运行Docker 1.12.6或更高版本，并具有网络访问权限。 有关使用Docker的更多信息，请参阅​ <a href="https://docs.docker.com/">​Docker文档​</a>​。</p>
<h3 id="3-1-yum安装Docker"><a href="#3-1-yum安装Docker" class="headerlink" title="3.1 yum安装Docker"></a>3.1 yum安装Docker</h3><p>一般CentOS需要安装​<code>​epel​</code>​源，我这里是aws ec2 linux，所以直接使用如下命令安装：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install docker</span><br><span class="line">service docker start</span><br><span class="line">chkconfig docker on</span><br></pre></td></tr></table></figure>

<blockquote>
<p>​注意​： </p>
<p>使用pmm-server映像时，请使用特定的版本标签，而不是最新的标签。目前的最新稳定版本是1.2.0。</p>
</blockquote>
<h3 id="3-2-创建一个PMM数据容器"><a href="#3-2-创建一个PMM数据容器" class="headerlink" title="3.2 创建一个PMM数据容器"></a>3.2 创建一个PMM数据容器</h3><p>要创建持久PMM数据的容器，请运行以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker create \</span><br><span class="line">   -v /opt/prometheus/data \</span><br><span class="line">   -v /opt/consul-data \</span><br><span class="line">   -v /var/lib/mysql \</span><br><span class="line">   -v /var/lib/grafana \</span><br><span class="line">   --name pmm-data \</span><br><span class="line">   percona/pmm-server:1.2.0 /bin/true</span><br></pre></td></tr></table></figure>

<p>运行结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Unable to find p_w_picpath &#x27;percona/pmm-server:1.2.0&#x27; locally</span><br><span class="line">1.2.0: Pulling from percona/pmm-server</span><br><span class="line">45a2e645736c: Pull complete </span><br><span class="line">fe1f1770c826: Pull complete </span><br><span class="line">4f1bdb417453: Pull complete </span><br><span class="line">a2f3207fd166: Pull complete </span><br><span class="line">2f8fffdaf5ef: Pull complete </span><br><span class="line">46e8ca929fde: Pull complete </span><br><span class="line">5c89a1a51b6b: Pull complete </span><br><span class="line">fceac4be9a77: Pull complete </span><br><span class="line">fb79d7de9adf: Pull complete </span><br><span class="line">Digest: sha256:b9e200c9bc66bb2c31d75d57852474cf00a292d3ccb8301fdd55cc6e25738e3d</span><br><span class="line">Status: Downloaded newer p_w_picpath for percona/pmm-server:1.2.0</span><br><span class="line">a93b2e74a10afe3b47e127e7ef43072cff8e9b060c2a0e1cbdf7a0baae8dd712</span><br></pre></td></tr></table></figure>

<blockquote>
<p>​注意​： </p>
<p>这个容器不运行，它只是为了确保在升级到更新的PMM - server映像时保留所有PMM数据。不要删除或重新创建这个容器，除非您打算删除所有PMM数据并从头开始。</p>
</blockquote>
<p>前面的命令解释： </p>
<p>​<code>​docker create​</code>​命令表示docker守护进程从镜像中创建容器。 </p>
<p>​<code>​- v​</code>​选项对​<code>​volumes​</code>​进行指定初始化 。 </p>
<p>​<code>​--name​</code>​选项为容器指定一个自定义名称，用于在Docker网络中引用容器。例如名字：​<code>​pmm-server​</code>​。 </p>
<p>​<code>​percona/pmm-server:1.2.0​</code>​是自源的镜像的名字和版本标识。 </p>
<p>​<code>​/bin/true​</code>​容器进行运行的命令。</p>
<h3 id="3-3-创建并运行PMM服务器容器"><a href="#3-3-创建并运行PMM服务器容器" class="headerlink" title="3.3 创建并运行PMM服务器容器"></a>3.3 创建并运行PMM服务器容器</h3><p>要运行PMM服务器，请使用以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">   -p 80:80 \</span><br><span class="line">   --volumes-from pmm-data \</span><br><span class="line">   --name pmm-server \</span><br><span class="line">   --restart always \</span><br><span class="line">   percona/pmm-server:1.2.0</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">e8e133c3af3669257debdbce89bd36080510b2b2be30b0595cf295eb891f7d42</span><br></pre></td></tr></table></figure>

<p>前面的命令解释： </p>
<p>​<code>​docker run​</code>​命令运行一个docker守护进程以运行容器。 </p>
<p>​<code>​- d​</code>​选项以分离模式(即在后台)启动容器。 </p>
<p>​<code>​- p​</code>​选项用于映射访问PMM服务器web UI的端口。如果端口80不可用，您可以使用​<code>​- p 8080:80​</code>​将登录页面映射到端口8080。 </p>
<p>​<code>​--volumes-from​</code>​表示挂载容器来自前面步骤指定的​<code>​pmm-data​</code>​。 </p>
<p>​<code>​--name​</code>​选项为容器指定一个自定义名称，用于在Docker网络中引用容器。例如名字：​<code>​pmm-server​</code>​。 </p>
<p>​<code>​--restart​</code>​选项定义容器的重新启动策略。设置它始终确保Docker守护进程在启动时启动容器，如果容器退出，则重新启动它。 </p>
<p>​<code>​percona/pmm-server:1.2.0​</code>​是自源的镜像的名字和版本标识。</p>
<p>使用如下命令确认PMM 安装运行是否正确：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat -tpln|grep 80</span><br></pre></td></tr></table></figure>

<p>通过使用运行容器的主机的IP地址连接到PMM Web界面来验证PMM服务器是否正在运行，然后在要监视的所有数据库主机上安装PMM Client </p>
<p>Component URL </p>
<p>PMM landing page ​ <a href="http://172.31.27.176/">​</a> <a href="http://172.31.27.176/">​http://172.31.27.176:80​</a>​​ </p>
<p>Query Analytics (QAN web app) ​ <a href="http://172.31.27.176/qan/">​</a> <a href="http://172.31.27.176/qan/">​http://172.31.27.176/qan/​</a>​​ </p>
<p>Metrics Monitor (Grafana) ​ <a href="http://172.31.27.176/graph/User">​</a> <a href="http://172.31.27.176/graph/User">​http://172.31.27.176/graph/User​</a>​​ name: admin Password: admin </p>
<p>Orchestrator ​ <a href="http://172.31.27.176/orchestrator">​</a> <a href="http://172.31.27.176/orchestrator">​http://172.31.27.176/orchestrator​</a>​​</p>
<h3 id="3-4-安装PMM客户端"><a href="#3-4-安装PMM客户端" class="headerlink" title="3.4 安装PMM客户端"></a>3.4 安装PMM客户端</h3><p>PMM客户端是安装在您要监视的MySQL或MongoDB主机的客户端和数据提供采集方。 组件收集关于一般系统和数据库性能的各种数据，并将该数据发送到相应的PMM服务器组件。</p>
<blockquote>
<p>​注意​： </p>
<p>不应该在具有相同主机名的数据库服务器上安装代理，因为PMM服务器使用主机名来标识收集的数据。</p>
</blockquote>
<p>安装PMM客户端</p>
<p>安装pmm-client软件包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install pmm-client -y</span><br></pre></td></tr></table></figure>

<p>将PMM客户端连接到PMM服务器</p>
<p>使用​<code>​pmm-admin config --help​</code>​，查看帮助</p>
<p>​<code>​pmm-admin config --server 172.31.27.176:80​</code>​</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">OK, PMM server is alive.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PMM Server      | 172.31.27.176:80 </span><br><span class="line">Client Name     | ip-172-31-27-176</span><br><span class="line">Client Address  | 172.17.0.1</span><br></pre></td></tr></table></figure>

<h3 id="3-5-pmm-server与pmm-client通信"><a href="#3-5-pmm-server与pmm-client通信" class="headerlink" title="3.5 pmm server与pmm client通信"></a>3.5 pmm server与pmm client通信</h3><p>从以下操作也可以看出，pmm并不支持代理，是C&#x2F;S构架。</p>
<p>​<code>​pmm-admin check-network​</code>​检查结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PMM Network Status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Address | 172.31.27.176:80</span><br><span class="line">  ient Address | 172.17.0.1 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* System Time</span><br><span class="line">NTP Server (0.pool.ntp.org)         | 2017-07-17 07:55:57 +0000 UTC</span><br><span class="line">PMM Server                          | 2017-07-17 07:55:57 +0000 GMT</span><br><span class="line">PMM Client                          | 2017-07-17 07:55:57 +0000 UTC</span><br><span class="line">PMM Server Time Drift               | OK</span><br><span class="line">PMM Client Time Drift               | OK</span><br><span class="line">PMM Client to PMM Server Time Drift | OK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Connection: Client --&gt; Server</span><br><span class="line">-------------------- -------      </span><br><span class="line">SERVER SERVICE       STATUS       </span><br><span class="line">-------------------- -------      </span><br><span class="line">Consul API           OK</span><br><span class="line">Prometheus API       OK</span><br><span class="line">Query Analytics API  OK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connection duration | 75.404μs</span><br><span class="line">Request duration    | 625.358μs</span><br><span class="line">Full round trip     | 700.762μs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Connection: Client &lt;-- Server</span><br><span class="line">---------------- ----------------- ----------------- ------- ---------- ---------</span><br><span class="line">SERVICE TYPE     NAME              REMOTE ENDPOINT   STATUS  HTTPS/TLS  PASSWORD </span><br><span class="line">---------------- ----------------- ----------------- ------- ---------- ---------</span><br><span class="line">linux:metrics    ip-172-31-27-176  172.17.0.1:42000  DOWN    YES        -        </span><br><span class="line">mongodb:metrics  ip-172-31-27-176  172.17.0.1:42003  DOWN    YES        -        </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">When an endpoint is down it may indicate that the corresponding service is stopped (run &#x27;pmm-admin list&#x27; to verify).</span><br><span class="line">If it&#x27;s running, check out the logs /var/log/pmm-*.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">When all endpoints are down but &#x27;pmm-admin list&#x27; shows they are up and no errors in the logs,</span><br><span class="line">check the firewall settings whether this system allows incoming connections from server to address:port in question.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Also you can check the endpoint status by the URL: http://172.31.27.176:80/prometheus/targets</span><br></pre></td></tr></table></figure>

<p>防火墙开启与docker容器通信：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptables -A INPUT -s 172.0.0.1/8 -j ACCEPT</span><br><span class="line">service iptables save</span><br></pre></td></tr></table></figure>

<p>​<code>​pmm-admin check-network​</code>​再次查看结果，则通信正常。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PMM Network Status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Server Address | 172.31.27.176:80</span><br><span class="line">Client Address | 172.17.0.1 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* System Time</span><br><span class="line">NTP Server (0.pool.ntp.org)         | 2017-07-17 07:56:40 +0000 UTC</span><br><span class="line">PMM Server                          | 2017-07-17 07:56:40 +0000 GMT</span><br><span class="line">PMM Client                          | 2017-07-17 07:56:40 +0000 UTC</span><br><span class="line">PMM Server Time Drift               | OK</span><br><span class="line">PMM Client Time Drift               | OK</span><br><span class="line">PMM Client to PMM Server Time Drift | OK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Connection: Client --&gt; Server</span><br><span class="line">-------------------- -------      </span><br><span class="line">SERVER SERVICE       STATUS       </span><br><span class="line">-------------------- -------      </span><br><span class="line">Consul API           OK</span><br><span class="line">Prometheus API       OK</span><br><span class="line">Query Analytics API  OK</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connection duration | 67.174μs</span><br><span class="line">Request duration    | 595.339μs</span><br><span class="line">Full round trip     | 662.513μs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">* Connection: Client &lt;-- Server</span><br><span class="line">---------------- ----------------- ----------------- ------- ---------- ---------</span><br><span class="line">SERVICE TYPE     NAME              REMOTE ENDPOINT   STATUS  HTTPS/TLS  PASSWORD </span><br><span class="line">---------------- ----------------- ----------------- ------- ---------- ---------</span><br><span class="line">linux:metrics    ip-172-31-27-176  172.17.0.1:42000  OK      YES        -        </span><br><span class="line">mongodb:metrics  ip-172-31-27-176  172.17.0.1:42003  OK      YES        -</span><br></pre></td></tr></table></figure>

<h3 id="3-6-pmm-client添加监控项"><a href="#3-6-pmm-client添加监控项" class="headerlink" title="3.6 pmm client添加监控项"></a>3.6 pmm client添加监控项</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pmm-admin add linux:metrics  # 监控linux系统</span><br><span class="line">pmm-admin add mongodb:metrics  # 监控mongodb</span><br><span class="line">pmm-admin add mongodb:queries --dev-enable  # 此处为实验功能，所以需要加 --dev-enable</span><br><span class="line">pmm-admin purge linux:metrics  # 清除数据</span><br><span class="line">pmm-admin purge mongodb:metrics</span><br></pre></td></tr></table></figure>

<p>管理PMM客户端的一些命令说明：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 添加监控服务</span><br><span class="line">pmm-admin add</span><br><span class="line"># 检查PMM客户端和PMM服务器之间的网络连接。</span><br><span class="line">pmm-admin check-network</span><br><span class="line"># 配置PMM Client如何与PMM服务器通信。</span><br><span class="line">pmm-admin config</span><br><span class="line"># 打印任何命令和退出的帮助</span><br><span class="line">pmm-admin help</span><br><span class="line"># 打印有关PMM客户端的信息</span><br><span class="line">pmm-admin info</span><br><span class="line"># 列出此PMM客户端添加的所有监控服务</span><br><span class="line">pmm-admin list</span><br><span class="line"># 检查PMM服务器是否存活</span><br><span class="line">pmm-admin ping</span><br><span class="line"># 在PMM服务器上清除度量数据。</span><br><span class="line">pmm-admin purge</span><br><span class="line"># 清除监控服务</span><br><span class="line">pmm-admin remove</span><br><span class="line"># 修复安装</span><br><span class="line">pmm-admin repair</span><br><span class="line"># 重启pmm客户端</span><br><span class="line">pmm-admin restart</span><br><span class="line"># 打印PMM Client使用的密码</span><br><span class="line">pmm-admin show-passwords</span><br><span class="line"># 开启监控服务</span><br><span class="line">pmm-admin start</span><br><span class="line"># 停止监控服务</span><br><span class="line">pmm-admin stop</span><br><span class="line"># 在卸载之前清理PMM Client</span><br><span class="line">pmm-admin uninstall</span><br></pre></td></tr></table></figure>

<h3 id="3-7-一些效果图"><a href="#3-7-一些效果图" class="headerlink" title="3.7 一些效果图"></a>3.7 一些效果图</h3><p>​<a href="https://s2.51cto.com/wyfs02/M00/9C/3D/wKioL1lt0mWwHqZ1AAG6ChvAw9I154.png"><img src="/images/1705485675-254f46428b792aea3cbfec0d43815e5f.png" alt="Percona Monitoring and Management (PMM) 监控MongoDB_监控_02">​</a>​</p>
<p>​<a href="https://s2.51cto.com//wyfs02/M01/9C/3E/wKiom1lt0mbzNtX0AAHvyodG73A344.png"><img src="/images/1705485675-a28375f5a2b0b7d08a0aaf8b46785dd8.png" alt="Percona Monitoring and Management (PMM) 监控MongoDB_监控_03">​</a>​</p>
<p>​<a href="https://s2.51cto.com/wyfs02/M02/9C/3E/wKiom1lt0meSZbyAAAGnYVTeEd8325.png"><img src="/images/1705485675-055dfa2a2bf831cd8f5bffc3681736de.png" alt="Percona Monitoring and Management (PMM) 监控MongoDB_mongodb_04">​</a>​</p>
<p>​<a href="https://s2.51cto.com/wyfs02/M02/9C/3D/wKioL1lt0miga5NTAAHWsp7brKo304.png"><img src="/images/1705485675-ac9095ed454118fd9ec5fc03f53021f9.png" alt="Percona Monitoring and Management (PMM) 监控MongoDB_mongodb_05">​</a>​</p>
<p>参考： </p>
<p>[1] ​ <a href="https://www.percona.com/doc/percona-monitoring-and-management/index.html">​</a> <a href="https://www.percona.com/doc/percona-monitoring-and-management/index.html">​https://www.percona.com/doc/percona-monitoring-and-management/index.html​</a>​​ </p>
<p>[2] ​ <a href="https://www.percona.com/doc/percona-repo-config/index.html">​</a> <a href="https://www.percona.com/doc/percona-repo-config/index.html">​https://www.percona.com/doc/percona-repo-config/index.html​</a>​​ </p>
<p>[3] ​ <a href="https://www.percona.com/doc/percona-monitoring-and-management/architecture.html">​</a> <a href="https://www.percona.com/doc/percona-monitoring-and-management/architecture.html">​https://www.percona.com/doc/percona-monitoring-and-management/architecture.html​</a>​​ </p>
<p>[4] ​ <a href="https://www.percona.com/doc/percona-monitoring-and-management/deploy/server/docker.html#run-server-docker">​</a> <a href="https://www.percona.com/doc/percona-monitoring-and-management/deploy/server/docker.html#run-server-docker">​https://www.percona.com/doc/percona-monitoring-and-management/deploy/server/docker.html#run-server-docker​</a>​​ </p>
<p>[5] ​ <a href="https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html">​</a> <a href="https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html">​https://www.percona.com/doc/percona-monitoring-and-management/pmm-admin.html​</a>​​</p>
]]></content>
      <categories>
        <category>PMM</category>
      </categories>
      <tags>
        <tag>PMM</tag>
      </tags>
  </entry>
  <entry>
    <title>PromQL进阶与运用</title>
    <url>/2023/12/28/PromQL%E8%BF%9B%E9%98%B6%E4%B8%8E%E8%BF%90%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p><em>PromQL是_Prometheus内置的数据查询语言，其提供对时间序列数据丰富的查询，聚合以及逻辑运算能力的支持。并且被广泛应用在Prometheus的日常应用当中，包括对数据查询、可视化、告警处理当中。</em></p>
</blockquote>
<h3 id="嵌套结构"><a href="#嵌套结构" class="headerlink" title="嵌套结构"></a><strong>嵌套结构</strong></h3><p>    PromQL是一种用于查询和分析时间序列数据的语言，它和SQL有一些相似之处，但也有一些明显的区别。下面我们将详细介绍PromQL的嵌套结构，并给出具体的例子，同时将其与SQL进行对比。</p>
<h4 id="函数嵌套"><a href="#函数嵌套" class="headerlink" title="函数嵌套"></a><strong>函数嵌套</strong></h4><p><strong>PromQL中支持函数嵌套，例如：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">sum</span>(<span class="title function_">rate</span>(http_requests_total[5m])) by (job)</span><br></pre></td></tr></table></figure>

<p>这个查询中，我们使用了两个函数，rate() 和 sum()。rate()函数用于计算速率，sum()函数用于计算总和。这个查询的作用是计算最近5分钟内每个job的http请求总数。</p>
<p><strong>SQL中也支持函数嵌套，例如：</strong></p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">SELECT</span> <span class="title function_">AVG</span>(<span class="title function_">SUM</span>(column)) <span class="variable constant_">FROM</span> table <span class="variable constant_">GROUP</span> <span class="variable constant_">BY</span> column</span><br></pre></td></tr></table></figure>

<p>这个查询中，我们使用了两个函数，AVG()和SUM()。AVG()函数用于计算平均值，SUM()函数用于计算总和。这个查询的作用是计算每个分组的平均值。</p>
<h4 id="向量选择器嵌套"><a href="#向量选择器嵌套" class="headerlink" title="向量选择器嵌套"></a><strong>向量选择器嵌套</strong></h4><p>PromQL中的向量选择器用于选择指定标签的时间序列数据，并支持嵌套，例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">sum</span>(<span class="title function_">rate</span>(http_requests_total&#123;job=<span class="string">&quot;frontend&quot;</span>&#125;[5m])) by (instance)</span><br></pre></td></tr></table></figure>

<p>这个查询中，我们选择了job&#x3D;”frontend”的时间序列数据，并使用rate()函数计算请求速率，然后使用sum()函数计算每个实例的请求总数。</p>
<p>SQL中的向量选择器通常是通过嵌套查询实现的，例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">SELECT</span> <span class="title function_">COUNT</span>(*) <span class="variable constant_">FROM</span> table <span class="variable constant_">WHERE</span> column <span class="variable constant_">IN</span> (<span class="variable constant_">SELECT</span> column <span class="variable constant_">FROM</span> table2)</span><br></pre></td></tr></table></figure>

<p>这个查询中，我们使用嵌套查询选择了一个列，然后使用COUNT()函数计算符合条件的行数。</p>
<h4 id="操作符嵌套"><a href="#操作符嵌套" class="headerlink" title="操作符嵌套"></a><strong>操作符嵌套</strong></h4><p>PromQL中支持操作符嵌套，例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">sum</span>(<span class="title function_">rate</span>(http_requests_total&#123;job=<span class="string">&quot;frontend&quot;</span>&#125;[5m])) / <span class="title function_">sum</span>(<span class="title function_">rate</span>(http_requests_total[5m])) * <span class="number">100</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">这个查询中，我们使用了两个除法操作符/和一个乘法操作符*，用于计算前端请求占总请求的百分比。</span><br></pre></td></tr></table></figure>

<p>SQL中也支持操作符嵌套，例如：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable constant_">SELECT</span> column1 / column2 * <span class="number">100</span> <span class="variable constant_">FROM</span> table</span><br></pre></td></tr></table></figure>

<p>这个查询中，我们使用了两个除法操作符&#x2F;和一个乘法操作符*，用于计算一个列的值占另一个列的值的百分比。</p>
<h3 id="PromQL的结果类型"><a href="#PromQL的结果类型" class="headerlink" title="PromQL的结果类型"></a><strong>PromQL的结果类型</strong></h3><p>    PromQL的结果类型主要有四种：标量（Scalar）、向量（Vector）、字符串（String）、以及布尔类型（Boolean）。下面我们将逐一介绍这些结果类型，并给出具体的例子。</p>
<h4 id="标量（Scalar）"><a href="#标量（Scalar）" class="headerlink" title="标量（Scalar）"></a><strong>标量（Scalar）</strong></h4><p>标量是一个单独的数值结果。标量通常用于表示聚合计算的结果，例如计算平均值或总和。标量的单位可以是任何支持的单位，例如字节、秒、毫秒等。</p>
<p>例如，以下PromQL查询返回当前可用内存的平均值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">avg</span>(node_memory_MemAvailable)</span><br></pre></td></tr></table></figure>

<p>该查询的结果是一个标量，表示平均可用内存。</p>
<h4 id="向量（Vector）"><a href="#向量（Vector）" class="headerlink" title="向量（Vector）"></a><strong>向量（Vector）</strong></h4><p>向量是一组带有标签的时间序列数据。向量通常用于表示单个指标在时间上的变化情况，例如CPU使用率或磁盘空间使用率。向量的每个时间序列数据都具有相同的标签集，每个标签都有一个唯一的名称和值。</p>
<p>例如，以下PromQL查询返回CPU使用率：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cpu_usage&#123;instance=<span class="string">&quot;webserver-01&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>该查询的结果是一个向量，其中每个时间序列表示webserver-01实例的CPU使用率。</p>
<h4 id="字符串（String）"><a href="#字符串（String）" class="headerlink" title="字符串（String）"></a><strong>字符串（String）</strong></h4><p>字符串是一个文本字符串结果。字符串通常用于表示元数据信息或用户友好的错误消息。</p>
<p>例如，以下PromQL查询返回Prometheus的版本信息：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">prometheus_version</span><br></pre></td></tr></table></figure>

<p>该查询的结果是一个字符串，表示当前Prometheus的版本信息。</p>
<h4 id="布尔类型（Boolean）"><a href="#布尔类型（Boolean）" class="headerlink" title="布尔类型（Boolean）"></a><strong>布尔类型（Boolean）</strong></h4><p>布尔类型是一个只有两个值（true或false）的结果。布尔类型通常用于表示条件表达式的结果。</p>
<p>例如，以下PromQL查询返回http_requests_total是否存在：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">http_requests_total &gt; <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>该查询的结果是一个布尔类型，如果http_requests_total存在且其值大于0，则结果为true，否则为false。</p>
<p>    PromQL的结果类型非常丰富，可以满足各种不同的查询需求。了解这些结果类型可以帮助我们更好地理解PromQL的查询结果。</p>
<h3 id="PromQL的运算符"><a href="#PromQL的运算符" class="headerlink" title="PromQL的运算符"></a><strong>PromQL的运算符</strong></h3><p>PromQL的运算符包括算术运算符、比较运算符、逻辑运算符、聚合函数和函数操作符等。下面我们将逐一介绍这些运算符，并给出具体的例子。</p>
<h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a><strong>算术运算符</strong></h4><p>算术运算符用于执行基本算术操作，例如加减乘除和取模等。PromQL支持的算术运算符如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">+：加法运算符</span><br><span class="line">-：减法运算符</span><br><span class="line">*：乘法运算符</span><br><span class="line">/：除法运算符</span><br><span class="line">%：取模运算符</span><br></pre></td></tr></table></figure>

<p>例如，以下PromQL查询计算node_memory_MemAvailable和node_memory_MemTotal的差值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">node_memory_MemTotal - node_memory_MemAvailable</span><br></pre></td></tr></table></figure>

<h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a><strong>比较运算符</strong></h4><p>比较运算符用于比较两个数值或时间戳。PromQL支持的比较运算符如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">==：等于运算符</span><br><span class="line">!=：不等于运算符</span><br><span class="line">&lt;：小于运算符</span><br><span class="line">&gt;：大于运算符</span><br><span class="line">&lt;=：小于等于运算符</span><br><span class="line">&gt;=：大于等于运算符</span><br></pre></td></tr></table></figure>

<p>例如，以下PromQL查询返回node_load1是否大于1：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">node_load1 &gt; <span class="number">1</span></span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">逻辑运算符</span><br></pre></td></tr></table></figure>

<p>逻辑运算符用于将多个表达式组合在一起，从而形成更复杂的查询。PromQL支持的逻辑运算符如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">and：逻辑与运算符</span><br><span class="line">or：逻辑或运算符</span><br><span class="line">unless：逻辑否定运算符</span><br></pre></td></tr></table></figure>

<p>例如，以下PromQL查询返回同时满足node_cpu_seconds_total和node_memory_MemAvailable大于0的时间序列数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">node_cpu_seconds_total and node_memory_MemAvailable &gt; <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a><strong>聚合函数</strong></h4><p>聚合函数用于对多个时间序列数据进行聚合操作，从而生成单个时间序列数据。PromQL支持的聚合函数如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">sum (在指定维度上求和)</span><br><span class="line">max (在指定维度上求最大值)用于计算所有时间序列数据的最大值，并返回一个新的时间序列数据</span><br><span class="line">min (在指定维度上求最小值)</span><br><span class="line">avg (在指定维度上求平均值)</span><br><span class="line">stddev (在指定维度上求标准差)</span><br><span class="line">stdvar (在指定维度上求方差)</span><br><span class="line">count (统计向量元素的个数)</span><br><span class="line">count_values (统计具有相同数值的元素数量)</span><br><span class="line">bottomk (样本值中最小的 k个值)</span><br><span class="line">topk (样本值中最大的 k个值)</span><br><span class="line">quantile (在指定维度上统计 φ-quantile 分位数(<span class="number">0</span> ≤ φ ≤ <span class="number">1</span>))</span><br></pre></td></tr></table></figure>

<p>例如，以下PromQL查询返回node_cpu_seconds_total的平均值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">avg</span>(node_cpu_seconds_total)</span><br></pre></td></tr></table></figure>

<p>计算node_cpu_seconds_total时间序列数据中cpu标签值为cpu0的最大值：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">max</span>(node_cpu_seconds_total&#123;cpu=<span class="string">&quot;cpu0&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>

<h4 id="函数操作符"><a href="#函数操作符" class="headerlink" title="函数操作符"></a><strong>函数操作符</strong></h4><p>函数操作符用于对时间序列数据进行变换操作。PromQL支持的函数操作符如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">rate：计算速率函数</span><br><span class="line">irate：计算瞬时速率函数</span><br><span class="line">delta：计算增量函数</span><br><span class="line">abs：取绝对值函数</span><br></pre></td></tr></table></figure>

<p>例如，以下PromQL查询返回node_cpu_seconds_total的速率：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">rate</span>(node_cpu_seconds_total[1m])</span><br></pre></td></tr></table></figure>


<p><strong>PromQL与监控策略的结合</strong></p>
<p>告警引擎会根据用户的配置，周期性地执行查询。</p>
<p>监控k8s-master节点的内存可用率低于 10%的时候告警，配合for 1m 标识连续一分钟的都命中策略才告警</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">groups</span>:</span><br><span class="line">- <span class="attr">name</span>: host</span><br><span class="line">  <span class="attr">rules</span>:</span><br><span class="line">  - <span class="attr">alert</span>: <span class="title class_">MemUtil</span></span><br><span class="line">    <span class="attr">expr</span>: mem_available&#123;app=<span class="string">&quot;k8s-master&quot;</span>&#125; / mem_total&#123;app=<span class="string">&quot;k8s-master&quot;</span>&#125; * <span class="number">100</span> &lt; <span class="number">10</span></span><br><span class="line">    <span class="attr">for</span>: 1m</span><br><span class="line">    <span class="attr">labels</span>:</span><br><span class="line">      <span class="attr">severity</span>: error</span><br><span class="line">    <span class="attr">annotations</span>:</span><br><span class="line">      <span class="attr">summary</span>: <span class="title class_">Mem</span> available less than <span class="number">20</span>%, <span class="attr">host</span>:&#123;&#123; $labels.<span class="property">ident</span> &#125;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="Google的四个黄金指标与PromQL"><a href="#Google的四个黄金指标与PromQL" class="headerlink" title="Google的四个黄金指标与PromQL"></a>Google的四个黄金指标与PromQL</h3><p><strong>请求量（Request Rate）</strong>：表示单位时间内系统接收到的请求数量，通常用每秒请求数（QPS）来表示。</p>
<p>示例：使用rate函数来计算每秒请求量。例如，计算过去 5 分钟内的请求量</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">rate</span>(http_requests_total[5m])</span><br></pre></td></tr></table></figure>

<p><strong>延迟（Latency）</strong>：表示系统处理请求所需的时间。延迟通常以平均延迟或百分位数来表示，例如平均延迟、90th 百分位延迟、99th 百分位延迟等。</p>
<p>示例：使用histogram_quantile函数来计算某个百分位数的延迟。例如，计算过去 5 分钟内的 90th 百分位延迟</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">histogram_quantile</span>(<span class="number">0.9</span>, <span class="title function_">rate</span>(http_request_duration_seconds_bucket[5m]))</span><br></pre></td></tr></table></figure>

<p><strong>失败率（Error Rate）</strong>：表示请求失败的比例。例如，HTTP 500 错误、超时等都可以被认为是错误。</p>
<p>示例：使用irate函数来计算每秒的错误数，然后除以请求总数。例如，计算过去 5 分钟内的失败率</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">irate</span>(http_request_duration_seconds_count&#123;status_code=<span class="string">&quot;500&quot;</span>&#125;[5m]) / <span class="title function_">rate</span>(http_requests_total[5m])</span><br></pre></td></tr></table></figure>

<p><strong>饱和度（Saturation）</strong>：表示系统资源使用的情况，通常以某个资源的使用率或队列长度等指标来衡量。当系统处于高负载状态时，饱和度指标将趋近于 100%。</p>
<p>示例：使用资源使用率或队列长度等指标来衡量系统资源的使用情况。例如，计算过去 5 分钟内 CPU 使用率的平均值</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">avg</span>(<span class="title function_">rate</span>(container_cpu_usage_seconds_total&#123;container_name!=<span class="string">&quot;POD&quot;</span>&#125;[5m])) by (pod_name)</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>PromQL</category>
      </categories>
      <tags>
        <tag>PromQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus之标签的操作</title>
    <url>/2023/12/26/Prometheus%E4%B9%8B%E6%A0%87%E7%AD%BE%E7%9A%84%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="一、Prometheus配置文件官网翻译（可直接忽略）"><a href="#一、Prometheus配置文件官网翻译（可直接忽略）" class="headerlink" title="一、Prometheus配置文件官网翻译（可直接忽略）"></a>一、Prometheus配置文件官网翻译（可直接忽略）</h2><h3 id="1-1-官网配置文件介绍"><a href="#1-1-官网配置文件介绍" class="headerlink" title="1.1 官网配置文件介绍"></a>1.1 官网配置文件介绍</h3><p>&lt;static_config&gt;</p>
<p>     static_config允许指定目标列表和目标的通用标签集。 这是在抓取配置中指定静态目标的规范方法。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#静态配置指定的目标。</span></span><br><span class="line">targets:</span><br><span class="line">  [ - <span class="string">&#x27;&lt;host&gt;&#x27;</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#分配给从目标中抓取的所有指标的标签。</span></span><br><span class="line">labels:</span><br><span class="line">  [ &lt;labelname&gt;: &lt;labelvalue&gt; ... ]</span><br></pre></td></tr></table></figure>

<p>&lt;relabel_config&gt;  </p>
<p>       重新标记是功能强大的工具，可在scraped目标之前动态重写目标的标签集。 每个scraped配置可以配置多个重新标记步骤。 它们按照在配置文件中出现的顺序应用于每个目标的标签集。</p>
<p>      最初，除了配置的每个目标标签外，目标的作业标签还设置为相应的抓取配置的job_name值。 __address__标签设置为目标的<host>:<port>地址。 重新标记后，如果在重新标记期间未设置实例标签，则默认情况下将其设置为__address__的值。 __scheme__和__metrics_path__标签分别设置为目标的方案和指标路径。__param_<name>标签设置为第一个传递的URL参数称为<name>的值。</p>
<p>      在重新标记阶段，可能会加上以__meta_开头的其他标签。 它们由提供目标的服务发现机制设置，并且在机制之间有所不同。目标重新标记完成后，将从__ will的标签将从标签集中删除。如果重新标记步骤仅需要临时存储标签值（作为后续重新标记步骤的输入），请使用__tmp标签名称前缀。 保证该前缀不会被Prometheus自己使用。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#source标签从现有标签中选择值。 它们的内容使用配置的分隔符连接起来，并与配置的正则表达式匹配，以进行替换，保留和放置操作。</span></span><br><span class="line">[ source_labels: <span class="string">&#x27;[&#x27;</span> &lt;labelname&gt; [, ...] <span class="string">&#x27;]&#x27;</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#在连接的source标签值之间放置分隔符。</span></span><br><span class="line">[ separator: &lt;string&gt; | default = ; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#在替换操作中将结果值写入的标签。在替换操作中将结果值写入的标签。</span></span><br><span class="line">[ target_label: &lt;labelname&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#与提取的值匹配的正则表达式。</span></span><br><span class="line">[ regex: &lt;regex&gt; | default = (.*) ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#源标签值哈希值的取模。</span></span><br><span class="line">[ modulus: &lt;uint64&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果正则表达式匹配，则执行正则表达式替换的替换值。 正则表达式捕获组可用。</span></span><br><span class="line">[ replacement: &lt;string&gt; | default = <span class="variable">$1</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#基于正则表达式匹配执行的操作。</span></span><br><span class="line">[ action: &lt;relabel_action&gt; | default = replace ]</span><br></pre></td></tr></table></figure>

<p>       <regex>是任何有效的RE2正则表达式。这是必需的replace, keep, drop, labelmap,labeldrop and labelkeep行动。 正则表达式固定在两端。 要取消锚定正则表达式，请使用.*<regex>.*。&lt;relabel_action&gt;确定要执行的重新标记操作：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">replace: 将正则表达式与串联的source_labels匹配。然后，将target_label设置为replace，用替换中的匹配组引用(<span class="variable">$&#123;1&#125;</span>, <span class="variable">$&#123;2&#125;</span>, ...)替换为其值。 如果正则表达式不匹配，则不会进行替换。</span><br><span class="line">keep: 删除其正则表达式与串联的source_labels不匹配的目标。</span><br><span class="line">drop: 删除其正则表达式与串联的source_labels匹配的目标。</span><br><span class="line">hashmod: 将target_label设置为串联的source_labels的哈希的模数。</span><br><span class="line">labelmap: 将正则表达式与所有标签名称匹配。 然后，将匹配标签的值复制到通过替换为它们的值替换的匹配组引用(<span class="variable">$&#123;1&#125;</span>, <span class="variable">$&#123;2&#125;</span>, ...)给出的标签名称。</span><br><span class="line">labeldrop: 将正则表达式与所有标签名称匹配。 任何匹配的标签将从标签集中删除。</span><br><span class="line">labelkeep: 将正则表达式与所有标签名称匹配。 任何不匹配的标签将从标签集中删除。</span><br></pre></td></tr></table></figure>

<p>       必须谨慎对待labeldrop和labelkeep，以确保一旦删除标签，度量标准仍会唯一地进行标签。</p>
<p>&lt;metric_relabel_configs&gt;</p>
<p>       ingestion前的最后一步是对样品进行公制重新标记。 它具有与目标重新标记相同的配置格式和操作。 指标重新标记不适用于自动生成的时间序列，例如up。这样做的一种用途是将太expensive而无法摄取的时间序列列入黑名单。</p>
<p>&lt;alert_relabel_configs&gt;  </p>
<p>       警报重新标记将应用于警报，然后再将其发送到Alertmanager。 它具有与目标重新标记相同的配置格式和操作。 警报重新贴标签在外部标签之后应用。一种用途是确保具有不同外部标签的HA对Prometheus服务器对发送相同的警报。</p>
<h3 id="1-2-Prometheus的Relabeling机制"><a href="#1-2-Prometheus的Relabeling机制" class="headerlink" title="1.2 Prometheus的Relabeling机制"></a>1.2 Prometheus的Relabeling机制</h3><p>在Prometheus所有的Target实例中，都包含一些默认的Metadata标签信息。可以通过Prometheus UI的Targets页面中查看这些实例的Metadata标签的内容：</p>
<p><img src="/assets/1703581087-7b9b2e8e473c2be85ecce3ad4cbb72c4.png" alt="image.png"></p>
<p>默认情况下，当Prometheus加载Target实例完成后，这些Target时候都会包含一些默认的标签：</p>
<ul>
<li><p><code>__address__</code>：当前Target实例的访问地址<code>&lt;host&gt;:&lt;port&gt;</code></p>
</li>
<li><p><code>__scheme__</code>：采集目标服务访问地址的HTTP Scheme，HTTP或者HTTPS</p>
</li>
<li><p><code>__metrics_path__</code>：采集目标服务访问地址的访问路径</p>
</li>
<li><p><code>__param_&lt;name&gt;</code>：采集任务目标服务的中包含的请求参数</p>
</li>
</ul>
<p>上面这些标签将会告诉Prometheus如何从该Target实例中获取监控数据。除了这些默认的标签以外，我们还可以为Target添加自定义的标签。</p>
<p>      一般来说，Target以__作为前置的标签是在系统内部使用的，因此这些标签不会被写入到样本数据中。不过这里有一些例外，例如，我们会发现所有通过Prometheus采集的样本数据中都会包含一个名为instance的标签，该标签的内容对应到Target实例的<code>__address__</code>。 这里实际上是发生了一次标签的重写处理。</p>
<p>      这种发生在采集样本数据之前，对Target实例的标签进行重写的机制在Prometheus被称为Relabeling。Prometheus允许用户在采集任务设置中通过relabel_configs来添加自定义的Relabeling过程。</p>
<h3 id="1-3-action字段"><a href="#1-3-action字段" class="headerlink" title="1.3 action字段"></a>1.3 action字段</h3><p>可以用到的action以及对应所需的字段</p>
<table>
<thead>
<tr>
<th>动作</th>
<th>所需字段</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>replace</td>
<td>regex source_labels target_label replacement</td>
<td>根据正则匹配标签的<strong>值</strong>,替换标签target_label必须</td>
</tr>
<tr>
<td>keep</td>
<td>regex source_labels</td>
<td>根据正则匹配标签的<strong>值</strong>保留数据采集源</td>
</tr>
<tr>
<td>drop</td>
<td>regex source_labels</td>
<td>根据正则匹配标签的<strong>值</strong>剔除数据采集源</td>
</tr>
<tr>
<td>hashmod</td>
<td>source_labels target_label modulus</td>
<td>hash模式</td>
</tr>
<tr>
<td>labelmap</td>
<td>regex replacement</td>
<td>根据正则匹配标签的<strong>名称</strong>进行映射</td>
</tr>
<tr>
<td>labeldrop</td>
<td>regex</td>
<td>根据正则匹配标签的<strong>名称</strong>剔除标签</td>
</tr>
<tr>
<td>labelkeep</td>
<td>regex</td>
<td>根据正则匹配标签的<strong>名称</strong>保留标签</td>
</tr>
</tbody></table>
<h2 id="二、relabel-configs对标签实例操作"><a href="#二、relabel-configs对标签实例操作" class="headerlink" title="二、relabel_configs对标签实例操作"></a>二、relabel_configs对标签实例操作</h2><h3 id="2-1-给target增加标签"><a href="#2-1-给target增加标签" class="headerlink" title="2.1  给target增加标签"></a>2.1  给target增加标签</h3><p># vim prometheus.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line">  static_configs:</span><br><span class="line">  - targets: [ <span class="string">&#x27;localhost:9090&#x27;</span>]</span><br><span class="line">    labels:</span><br><span class="line">      <span class="built_in">env</span>: <span class="string">&#x27;prod&#x27;</span></span><br><span class="line">      __hostname__: <span class="string">&#x27;localhost&#x27;</span></span><br></pre></td></tr></table></figure>

<p># curl -XPOST <a href="http://localhost:9090/-/reload">http://localhost:9090/-/reload</a></p>
<p><img src="/assets/1703581087-bb45770be6d330fa8b972697f2e630e4.png" alt="image.png"></p>
<p>#从上图可以看到已经从原来的标签基础之上又增加了两个标签。要注意的是内部标签默认是不现实的，只有把鼠标移动到Labels那里才会显示。只有在Labels里面显示的标签才会出现在杨蓓数据中,也就是说比如我们的环境分为prod,dev,sandbox之类的，集群太多了区分不过来，我们想针对env这个变量做不同的报警区分，是一个不错的注意。</p>
<p>#要注意__这种开头的是不会写到metrics指标里面的，因为这属于系统内置标签。env这种没有__作为前缀的是可以写到metrics指标中的。</p>
<h3 id="2-2-将target的初始标签里面的值替换到新的标签中"><a href="#2-2-将target的初始标签里面的值替换到新的标签中" class="headerlink" title="2.2 将target的初始标签里面的值替换到新的标签中"></a>2.2 将target的初始标签里面的值替换到新的标签中</h3><p># vim prometheus.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: <span class="string">&#x27;prometheus&#x27;</span></span><br><span class="line">  static_configs:</span><br><span class="line">  - targets: [ <span class="string">&#x27;localhost:9090&#x27;</span>]</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [ <span class="string">&#x27;__address__&#x27;</span> ]</span><br><span class="line">      target_label:  <span class="string">&#x27;addr&#x27;</span></span><br><span class="line">    - source_labels: [ <span class="string">&#x27;__metrics_path__&#x27;</span> ]</span><br><span class="line">      target_label:  <span class="string">&#x27;path&#x27;</span></span><br></pre></td></tr></table></figure>

<p>#上面是一个例子，上面直接替换了两个标签，action那些都有默认值都可以先不加，如果只替换一个标签就不用写两个source_lables了，还有一点要注意，目标标签不能用__标签名__。  </p>
<p># curl -XPOST <a href="http://localhost:9090/-/reload">http://localhost:9090/-/reload</a></p>
<p>#上图在Service Discovery上面就可以看到替换效果了。</p>
<p>如果要替换成指定值呢？</p>
<p>    relabel_configs:</p>
<p>      - source_labels: [ ‘__address__‘ ]</p>
<p>        target_label:  ‘addr’</p>
<p>        replacement: ‘localhost’</p>
<p>#上面就是将__address__替换成addr，然后再让addr&#x3D;localhost</p>
<p>如果要正则匹配替换呢？</p>
<p>    relabel_configs:</p>
<p>      - source_labels: [ ‘__address__‘ ]</p>
<p>        target_label:  ‘addr’</p>
<p>        #regex: “(.*):.*“     #如果只是取$1,那么这句话跟下面的意思一样</p>
<p>        regex: “(.*):(.*)”</p>
<p>        replacement: $1</p>
<p>#上面就是将localhost:9090通过正则截图成两段，然后将第一段交给replacement去替换addr的值也就是替换（localhost:9090）。这其实挺好的，比如我们配置targets的时候一般是IP:port的时候，不同的主机可能端口不一样，这时候我们想通过instance去匹配的话还要精确匹配其端口，如果做了正则替换我们就不用关心这个Nodeip的被采集端口是多少了。</p>
<p>#当然也可以使用下面的写法：</p>
<p>    relabel_configs:</p>
<p>    - action: replace</p>
<p>      source_labels: [ ‘__address__‘ ]</p>
<p>      regex: “(.*):(.*)”</p>
<p>      replacement: $1</p>
<p>      target_label:  ‘addr’</p>
<h3 id="2-3-根据标签drop一下"><a href="#2-3-根据标签drop一下" class="headerlink" title="2.3 根据标签drop一下"></a>2.3 根据标签drop一下</h3><p>#这里只是打个比方啊不要删哈。比方说我们有的job_name下面有个实例我想暂时想不采集了怎么办呢？  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#可以通过graph界面查看一下我们有哪些Job，job也就是prom配置文件的job_name</span></span><br><span class="line">count by (job) (&#123;job=~<span class="string">&quot;.+&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>
<p># vim prometheus.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [<span class="string">&#x27;instance&#x27;</span>]</span><br><span class="line">    action: drop</span><br></pre></td></tr></table></figure>

<p>或者像下面写法：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">- action: drop</span><br><span class="line">  source_labels: [<span class="string">&#x27;instance&#x27;</span>]</span><br></pre></td></tr></table></figure>

<p>或者像下面写法：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [<span class="string">&#x27;instance&#x27;</span>]</span><br><span class="line">    regex: <span class="string">&quot;instance&quot;</span>   <span class="comment">#这里匹配不上，keep是丢弃 source_labels 的值中没有匹配到 regex 正则表达式内容的 Target 实例</span></span><br><span class="line">    action: keep</span><br></pre></td></tr></table></figure>

<p>#这三种都可以，但是意义不大啊，不想采集这些节点了不在tagets那里填写不就好了吗，当然这里重要说的是这个drop，这个drop是把匹配到的标签的target直接将这些数据丢弃掉了，也就是不采集数据了。特别注意当你设置了drop之后，那么这个target在drop期间是没数据，但是不要担心历史数据还是再的，只是你drop的这段时间没有数据了。  </p>
<h3 id="2-4-labelmap标签名替换"><a href="#2-4-labelmap标签名替换" class="headerlink" title="2.4 labelmap标签名替换"></a>2.4 labelmap标签名替换</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;__metrics_path__&#x27;</span> ]</span><br><span class="line">    regex: __metrics_(.+)__   <span class="comment">#这相当于将path截取出来作为新的标签名称</span></span><br><span class="line">    action: labelmap</span><br></pre></td></tr></table></figure>

<p>#或者下面的方式</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - regex:  __metrics_(.+)__</span><br><span class="line">    action: labelmap</span><br></pre></td></tr></table></figure>

<p>#labelmap: 根据 regex 去匹配 Target 实例所有标签的名称（注意是名称），并且将捕获到的内容作为为新的标签名称，regex 匹配到标签的的值作为新标签的值.当然这个新的标签也会加到样本数据中。也就是你可以通过container_cpu_user_seconds_total{path&#x3D;”&#x2F;metrics”}  进行查询</p>
<h3 id="2-5-根据hashmod来选择采集哪些target"><a href="#2-5-根据hashmod来选择采集哪些target" class="headerlink" title="2.5 根据hashmod来选择采集哪些target"></a>2.5 根据hashmod来选择采集哪些target</h3><p>当relabel_config设置为hashmod时，Prometheus会根据modulus的值作为系数，计算source_labels值的hash值。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;__address__&#x27;</span> ]</span><br><span class="line">    modulus: 10</span><br><span class="line">    target_label: tmp_hash</span><br><span class="line">    action: hashmod</span><br></pre></td></tr></table></figure>

<p>#根据当前Target实例<code>__address__</code>的值以10作为系数，这样每个Target实例都会包含一个新的标签tmp_hash，并且该值的范围在1~10之间.看下图.比如我又三个实例，还是把这个系数搞大一点吧，这样tmp_hash的值不容易重复。</p>
<p>这时候比如我们想把tmp_hash&#x3D;5这个的实例给drop掉(regex正则貌似对于IP那种正则匹配不好匹配上，通过这种可以屏蔽那个问题)：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;__address__&#x27;</span> ]</span><br><span class="line">    modulus: 10</span><br><span class="line">    target_label: tmp_hash</span><br><span class="line">    action: hashmod</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;tmp_hash&#x27;</span> ]</span><br><span class="line">    regex: <span class="string">&quot;^5$&quot;</span></span><br><span class="line">    action: drop</span><br></pre></td></tr></table></figure>

<p>#上面就是将tmp_hash是5的给target给drop掉。重启服务效果就可以看到了哈，这里就不截图了。</p>
<p>下面的写法也是可以的：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;__address__&#x27;</span> ]</span><br><span class="line">    modulus: 10</span><br><span class="line">    target_label: tmp_hash</span><br><span class="line">    action: hashmod</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;tmp_hash&#x27;</span> ]</span><br><span class="line">    regex: <span class="string">&quot;(^1$|^9$)&quot;</span></span><br><span class="line">    action: keep</span><br></pre></td></tr></table></figure>

<p>#解决了吗？还没有结束虽然效果实现了，但是所有的数据里面都有了tmp_hash标签了如下图：</p>
<p>#所以可以首先用tmp_hash这种显示标签获得不同实例的值，然后得到instance对应的hash值之后，可以将tmp_hash改为__tmp_hash__，这样此通过该前缀定义的标签就不会写入到Target或者采集到的样本的标签中。如下面：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;__address__&#x27;</span> ]</span><br><span class="line">    modulus: 10</span><br><span class="line">    target_label: __tmp_hash__</span><br><span class="line">    action: hashmod</span><br><span class="line">  - source_labels: [ <span class="string">&#x27;__tmp_hash__&#x27;</span> ]</span><br><span class="line">    regex: <span class="string">&quot;(^1$)&quot;</span></span><br><span class="line">    action: drop</span><br></pre></td></tr></table></figure>

<p>#当然此例子只是为了演示一下hash_mod的作用。  </p>
<h3 id="2-6-labeldrop使用"><a href="#2-6-labeldrop使用" class="headerlink" title="2.6 labeldrop使用"></a>2.6 labeldrop使用</h3><p>#此操作并不是修改metric中的标签操作。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">  - source_labels:   </span><br><span class="line">      - <span class="string">&#x27;__address__&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;job&#x27;</span></span><br><span class="line">    separator: _  </span><br><span class="line">    target_label: test_id</span><br><span class="line">  - regex: <span class="string">&#x27;(job)&#x27;</span></span><br><span class="line">    action: labeldrop</span><br></pre></td></tr></table></figure>

<p>#separator是分隔符，__address__和job的值就会用_做分割拼接在一起，然后传给test_id这个标签。这时候比如把job标签去掉。这时候再查询发现多了一个test_id标签，并且metrics数据中多了一个test_id的标签并且已经没有job标签了。当然labelkeep就相反了就不举例子了</p>
<h2 id="三、metric-relabel-configs对拉取数据的操作"><a href="#三、metric-relabel-configs对拉取数据的操作" class="headerlink" title="三、metric_relabel_configs对拉取数据的操作"></a>三、metric_relabel_configs对拉取数据的操作</h2><p>       Prometheus 从数据源拉取数据后，会对原始数据进行编辑；其中 metric_relabel_configs是 Prometheus 在保存数据前的最后一步标签重新编辑（relabel_configs）。哪怕你将 metric_relabel_configs模块放在 job_name模块的最前端，Prometheus 解析编辑文件后，也会将 metric_relabel_configs放在最后。</p>
<p>      metric_relabel_configs 模块和 relabel_config 模块很相似。metric_relabel_configs一个很常用的用途：将监控不需要的数据，直接丢掉，不在Prometheus 中保存。  </p>
<h3 id="3-1-删除不需要的metric"><a href="#3-1-删除不需要的metric" class="headerlink" title="3.1 删除不需要的metric"></a>3.1 删除不需要的metric</h3><p>#还是以cAdvisor采集的数据为例。先介绍__name__ 标签，此标签是标识指标名称的预留标签。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">metric_relabel_configs:</span><br><span class="line">- source_labels: [ __name__ ]</span><br><span class="line">  regex: <span class="string">&#x27;container_cpu_cfs_periods_total&#x27;</span></span><br><span class="line">  action: drop</span><br></pre></td></tr></table></figure>

<p>#如上面我们用不到这个container_cpu_cfs_periods_total，那么我们就可以不采集这个metric来节省空间了，特别强调是metric的名称而不是metric里面那些标签哦。这样你再通过：container_cpu_cfs_periods_total{job&#x3D;”cadvisor”}  已经查询不到数据了。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">metric_relabel_configs:</span><br><span class="line">- source_labels: [ __name__ ]</span><br><span class="line">  regex: <span class="string">&#x27;container_cpu_cfs_.*&#x27;</span></span><br><span class="line">  action: drop</span><br></pre></td></tr></table></figure>

<p>#上面就是将container_cpu_cfs开头的metric全不采集了。</p>
<h3 id="3-2-修改指标-metric-中的标签-label"><a href="#3-2-修改指标-metric-中的标签-label" class="headerlink" title="3.2 修改指标(metric) 中的标签(label)"></a>3.2 修改指标(metric) 中的标签(label)</h3><p>#比如有些标签是采集程序自己加上去的，我们想把这些各个程序采集的标签名改成统一的标签名也方便我们程序去做判断应该怎么弄呢？</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- source_labels: [ <span class="string">&#x27;container_label_io_kubernetes_pod_name&#x27;</span> ]</span><br><span class="line">  regex: (.+)</span><br><span class="line">  target_label: pod_name</span><br><span class="line">  replacement: <span class="variable">$1</span></span><br><span class="line">  action: replace</span><br></pre></td></tr></table></figure>

<p>#上面就是让metric标签中的container_label_io_kubernetes_pod_name这个标签的值赋给新的标签pod_name，但是不等于，则不会处理此label。再次强调必须是&#x3D;&#x3D;这种完全匹配关系，不然新增标签是添加不了的，就算使用了separator: ; 如果只是单标签匹配也不会给新标签赋予;这个值，另外新标签也不会出现。</p>
<p>#如果批量多条呢？  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- source_labels: [ <span class="string">&#x27;container_label_io_kubernetes_pod_name&#x27;</span> ]</span><br><span class="line">  regex: (.+)</span><br><span class="line">  target_label: pod_name</span><br><span class="line">  replacement: <span class="variable">$1</span></span><br><span class="line">  action: replace</span><br><span class="line">- source_labels: [ <span class="string">&#x27;container_label_io_kubernetes_docker_type&#x27;</span> ]</span><br><span class="line">  regex: (.+)</span><br><span class="line">  target_label: pod_type</span><br><span class="line">  replacement: <span class="variable">$1</span></span><br><span class="line">  action: replace</span><br></pre></td></tr></table></figure>

<p># curl -XPOST <a href="http://localhost:9090/-/reload">http://localhost:9090/-/reload</a></p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">container_cpu_user_seconds_total&#123;job=<span class="string">&quot;cadvisor&quot;</span>&#125;</span><br><span class="line"><span class="comment">#下面查询结果最后的一小部分：</span></span><br><span class="line">pod_name=<span class="string">&quot;kubernetes-dashboard-f9bd45cd6-6vk8n&quot;</span>,pod_type=<span class="string">&quot;container&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>#如果要多条合并呢？  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- source_labels: [ <span class="string">&#x27;container_label_io_kubernetes_docker_type&#x27;</span>,<span class="string">&#x27;container_label_io_kubernetes_container_name&#x27;</span> ]</span><br><span class="line">  regex: (.+)</span><br><span class="line">  separator: ;</span><br><span class="line">  target_label: pod_type</span><br><span class="line">  replacement: <span class="variable">$1</span></span><br><span class="line">  action: replace</span><br></pre></td></tr></table></figure>

<p>#从上图可以看到把docker_type和container_name的值通过;分割合并到了一起。</p>
<p>#如果多条合并并不完全匹配会怎么样呢？</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- source_labels: [ <span class="string">&#x27;docker_type&#x27;</span>,<span class="string">&#x27;container_name&#x27;</span> ]</span><br><span class="line">  regex: (.+)</span><br><span class="line">  separator: ;</span><br><span class="line">  target_label: pod_type</span><br><span class="line">  replacement: <span class="variable">$1</span></span><br><span class="line">  action: replace</span><br></pre></td></tr></table></figure>

<p>下面是语句查询的结果：</p>
<p>pod_name&#x3D;”kubernetes-dashboard-f9bd45cd6-6vk8n”,pod_type&#x3D;”;”}</p>
<p>#从上面的结果可以看到直接给了一个;，因为是有值的所以给pod_type标签一个;。</p>
<h3 id="3-3-删除标签"><a href="#3-3-删除标签" class="headerlink" title="3.3 删除标签"></a>3.3 删除标签</h3><p>#既然我们已经将metrics里面将老的标签里面的值赋予给了新的标签，那么是不是可以把老的标签去掉了呢？至少让我的prom界面显得简洁一点呢？</p>
<p>首先删除单个标签：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- regex: <span class="string">&#x27;container_label_io_kubernetes_docker_type&#x27;</span></span><br><span class="line">  action: labeldrop</span><br></pre></td></tr></table></figure>

<p>然后删除多个标签：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- regex: <span class="string">&#x27;container_label_io_kubernetes_docker_type&#x27;</span></span><br><span class="line">  action: labeldrop</span><br><span class="line">- regex: <span class="string">&#x27;(container_label_io_kubernetes_container_logpath|container_label_io_kubernetes_container_name)&#x27;</span></span><br><span class="line">  action: labeldrop</span><br></pre></td></tr></table></figure>

<p>然后我想正则匹配删除标签呢？</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- regex: container_label_io_kubernetes_.*</span><br><span class="line">  action: labeldrop</span><br></pre></td></tr></table></figure>

<p>然后我想多个正则匹配删除多个标签呢？  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- regex: <span class="string">&#x27;(container_label_io_kubernetes_.*|container_label_annotation_io_kubernetes_.*)&#x27;</span></span><br><span class="line">  action: labeldrop</span><br></pre></td></tr></table></figure>

<p>#可以看到很多标签都删除消失了。什么时候把这些drop去掉了，再刷这些标签的值就又出现了，当然drop这段时间是没有的。</p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus之自动发现</title>
    <url>/2023/12/26/Prometheus%E4%B9%8B%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="一、官方配置（可直接忽略）"><a href="#一、官方配置（可直接忽略）" class="headerlink" title="一、官方配置（可直接忽略）"></a>一、官方配置（可直接忽略）</h2><h3 id="1-1-配置文件总览"><a href="#1-1-配置文件总览" class="headerlink" title="1.1 配置文件总览"></a>1.1 配置文件总览</h3><p>Configuration file：</p>
<p>       Prometheus通过命令行标志和配置文件进行配置。尽管命令行标志配置了不可变的系统参数（例如存储位置，要保留在磁盘和内存中的数据量等),但配置文件定义了与抓取作业及其实例相关的所有内容，以及哪些规则文件装载。要查看所有可用的命令行标志，请运行.&#x2F;prometheus -h。Prometheus可以在运行时重新加载其配置。 如果新配置格式不正确，则更改将不会应用。 通过向Prometheus进程发送SIGHUP或向&#x2F;-&#x2F; reload端点发送HTTP POST请求（启用–web.enable-lifecycle标志时）来触发配置重载。 这还将重新加载所有已配置的规则文件。</p>
<p>      要指定要加载的配置文件，请使用–config.file标志。该文件以YAML格式写入，由以下描述的方案定义。 方括号表示参数是可选的。 对于非列表参数，该值设置为指定的默认值。通用占位符定义如下：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;boolean&gt;: 布尔值，可以采用<span class="literal">true</span>或<span class="literal">false</span>值</span><br><span class="line">&lt;duration&gt;: 与正则表达式[0-9]+(ms|[smhdwy])匹配的持续时间</span><br><span class="line">&lt;labelname&gt;: 与正则表达式[a-zA-Z_][a-zA-Z0-9_]*匹配的字符串</span><br><span class="line">&lt;labelvalue&gt;: 一串unicode字符</span><br><span class="line">&lt;filename&gt;: 当前工作目录中的有效路径</span><br><span class="line">&lt;host&gt;: 由主机名或IP后跟可选端口号组成的有效字符串</span><br><span class="line">&lt;path&gt;: 有效的URL路径</span><br><span class="line">&lt;scheme&gt;: 一个字符串，可以使用值http或https</span><br><span class="line">&lt;string&gt;: 常规字符串</span><br><span class="line">&lt;secret&gt;: 包含密码的常规字符串，例如密码</span><br><span class="line">&lt;tmpl_string&gt;: 使用前已模板扩展的字符串</span><br></pre></td></tr></table></figure>

<p>       其他占位符分别指定。在这里可以找到有效的示例文件:<a href="https://github.com/prometheus/prometheus/blob/release-2.13/config/testdata/conf.good.yml">https://github.com/prometheus/prometheus/blob/release-2.13/config/testdata/conf.good.yml</a></p>
<p>       全局配置指定在所有其他配置上下文中有效的参数。 它们还用作其他配置部分的默认设置。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  <span class="comment">#默认情况下收集目标的频率。</span></span><br><span class="line">  [ scrape_interval: &lt;duration&gt; | default = 1m ]</span><br><span class="line"></span><br><span class="line">  <span class="comment">#收集数据请求超时之前的时间。</span></span><br><span class="line">  [ scrape_timeout: &lt;duration&gt; | default = 10s ]</span><br><span class="line"></span><br><span class="line">  <span class="comment">#评估规则的频率。</span></span><br><span class="line">  [ evaluation_interval: &lt;duration&gt; | default = 1m ]</span><br><span class="line"></span><br><span class="line">  <span class="comment">#与外部系统（federation, remote storage, Alertmanage）通信时添加到任何时间序列或警报的标签。</span></span><br><span class="line">  external_labels:</span><br><span class="line">    [ &lt;labelname&gt;: &lt;labelvalue&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#规则文件指定了清单列表。 从所有匹配的文件中读取规则和警报</span></span><br><span class="line">rule_files:</span><br><span class="line">  [ - &lt;filepath_glob&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#scrape配置列表。</span></span><br><span class="line">scrape_configs:</span><br><span class="line">  [ - &lt;scrape_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#警报指定与Alertmanager相关的设置。</span></span><br><span class="line">alerting:</span><br><span class="line">  alert_relabel_configs:</span><br><span class="line">    [ - &lt;relabel_config&gt; ... ]</span><br><span class="line">  alertmanagers:</span><br><span class="line">    [ - &lt;alertmanager_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#与远程写入功能相关的设置。</span></span><br><span class="line">remote_write:</span><br><span class="line">  [ - &lt;remote_write&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#与远程读取功能相关的设置。</span></span><br><span class="line">remote_read:</span><br><span class="line">  [ - &lt;remote_read&gt; ... ]</span><br></pre></td></tr></table></figure>

<p>&lt;scrape_config&gt;</p>
<p>       scrape_config部分指定了一组目标和参数，这些目标和参数描述了如何scrape它们。 在一般情况下，一个scrape配置指定一个作业。 在高级配置中，这可能会改变。可以通过static_configs参数静态配置目标，也可以使用受支持的服务发现机制之一动态发现目标。此外，relabel_configs允许在抓取之前对任何目标及其标签进行高级修改。其中，&lt;job_name&gt;在所有scrape配置中必须唯一。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#默认情况下，作业名称分配给抓取的指标。</span></span><br><span class="line">job_name: &lt;job_name&gt;</span><br><span class="line"><span class="comment">#从这项工作中scrape目标的频率。</span></span><br><span class="line">[ scrape_interval: &lt;duration&gt; | default = &lt;global_config.scrape_interval&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#抓取此作业时的每次抓取超时。</span></span><br><span class="line">[ scrape_timeout: &lt;duration&gt; | default = &lt;global_config.scrape_timeout&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#从目标获取指标的HTTP资源路径。</span></span><br><span class="line">[ metrics_path: &lt;path&gt; | default = /metrics ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#honor_labels控制Prometheus如何处理已存在于抓取数据中的标签与Prometheus将在服务器端附加的标签（“作业”和“实例”标签，手动配置的目标标签以及由服务发现实现生成的标签）之间的冲突。</span></span><br><span class="line"><span class="comment">#如果将honor_labels设置为“true”，则通过保留已抓取数据中的标签值并忽略冲突的服务器端标签来解决标签冲突。</span></span><br><span class="line"><span class="comment">#如果将honor_labels设置为“false”，则通过将已抓取数据中的冲突标签重命名为“exported_ &lt;original-label&gt;”（例如“exported_instance”，“exported_job”），然后附加服务器端标签来解决标签冲突。</span></span><br><span class="line"><span class="comment">#将honor_labels设置为“true”对于诸如联合和刮除Pushgateway的用例很有用，在这种情况下应保留目标中指定的所有标签。</span></span><br><span class="line"><span class="comment">#请注意，此设置不会影响任何全局配置的“external_labels”。在与外部系统通信时，仅在时间序列尚无给定标签时才始终应用它们，否则将忽略它们。</span></span><br><span class="line">[ honor_labels: &lt;boolean&gt; | default = <span class="literal">false</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Honor_timestamps控制Prometheus是否尊重抓取数据中的时间戳。</span></span><br><span class="line"><span class="comment">#如果将honor_timestamps设置为“true”，则将使用目标公开的指标的时间戳。</span></span><br><span class="line"><span class="comment">#如果将honor_timestamps设置为“ false”，则目标忽略的度量标准的时间戳将被忽略。</span></span><br><span class="line">[ honor_timestamps: &lt;boolean&gt; | default = <span class="literal">true</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置用于请求的网络协议方案。</span></span><br><span class="line">[ scheme: &lt;scheme&gt; | default = http ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的HTTP URL参数。</span></span><br><span class="line">params:</span><br><span class="line">  [ &lt;string&gt;: [&lt;string&gt;, ...] ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用配置的用户名和密码，在每个抓取请求上设置“ Authorization”标头。password和password_file是互斥的。</span></span><br><span class="line">basic_auth:</span><br><span class="line">  [ username: &lt;string&gt; ]</span><br><span class="line">  [ password: &lt;secret&gt; ]</span><br><span class="line">  [ password_file: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用配置的载体令牌在每个抓取请求上设置“Authorization”标头。 它与`bearer_token_file`互斥。</span></span><br><span class="line">[ bearer_token: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用从配置文件中读取的承载令牌，在每个抓取请求上设置“Authorization”标头。 它与`bearer_token`互斥。</span></span><br><span class="line">[ bearer_token_file: /path/to/bearer/token/file ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置抓取请求的TLS设置。</span></span><br><span class="line">tls_config:</span><br><span class="line">  [ &lt;tls_config&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的代理URL。</span></span><br><span class="line">[ proxy_url: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Azure服务发现配置列表。</span></span><br><span class="line">azure_sd_configs:</span><br><span class="line">  [ - &lt;azure_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Consul服务发现配置列表。</span></span><br><span class="line">consul_sd_configs:</span><br><span class="line">  [ - &lt;consul_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#DNS服务发现配置列表。</span></span><br><span class="line">dns_sd_configs:</span><br><span class="line">  [ - &lt;dns_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#EC2服务发现配置列表。</span></span><br><span class="line">ec2_sd_configs:</span><br><span class="line">  [ - &lt;ec2_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#OpenStack服务发现配置列表。</span></span><br><span class="line">openstack_sd_configs:</span><br><span class="line">  [ - &lt;openstack_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#文件服务发现配置列表。</span></span><br><span class="line">file_sd_configs:</span><br><span class="line">  [ - &lt;file_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#GCE服务发现配置列表。</span></span><br><span class="line">gce_sd_configs:</span><br><span class="line">  [ - &lt;gce_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Kubernetes服务发现配置列表。</span></span><br><span class="line">kubernetes_sd_configs:</span><br><span class="line">  [ - &lt;kubernetes_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Marathon服务发现配置列表。</span></span><br><span class="line">marathon_sd_configs:</span><br><span class="line">  [ - &lt;marathon_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#AirBnB的Nerve服务发现配置列表。</span></span><br><span class="line">nerve_sd_configs:</span><br><span class="line">  [ - &lt;nerve_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Zookeeper Serverset服务发现配置列表。</span></span><br><span class="line">serverset_sd_configs:</span><br><span class="line">  [ - &lt;serverset_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Triton服务发现配置列表。</span></span><br><span class="line">triton_sd_configs:</span><br><span class="line">  [ - &lt;triton_sd_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#此作业的带标签的静态配置目标列表。</span></span><br><span class="line">static_configs:</span><br><span class="line">  [ - &lt;static_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#目标重新标记配置的列表。</span></span><br><span class="line">relabel_configs:</span><br><span class="line">  [ - &lt;relabel_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#metric重新标记配置列表。</span></span><br><span class="line">metric_relabel_configs:</span><br><span class="line">  [ - &lt;relabel_config&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#每次scrape将接受的scraped样本数限制。</span></span><br><span class="line"><span class="comment">#如果在公制重新标记后存在的样本数量超过此数量，则整个刮擦将被视为不合格。 0表示没有限制。</span></span><br><span class="line">[ sample_limit: &lt;int&gt; | default = 0 ]</span><br></pre></td></tr></table></figure>

<p>&lt;tls_config&gt;</p>
<p>       tls_config允许配置TLS连接。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用于验证API服务器证书的CA证书。</span></span><br><span class="line">[ ca_file: &lt;filename&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#用于服务器的客户端证书身份验证的证书和密钥文件。</span></span><br><span class="line">[ cert_file: &lt;filename&gt; ]</span><br><span class="line">[ key_file: &lt;filename&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#ServerName扩展名，指示服务器的名称。 https://tools.ietf.org/html/rfc4366#section-3.1</span></span><br><span class="line">[ server_name: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#禁用服务器证书的验证。</span></span><br><span class="line">[ insecure_skip_verify: &lt;boolean&gt; ]</span><br></pre></td></tr></table></figure>

<h3 id="1-2-自动发现规则细分"><a href="#1-2-自动发现规则细分" class="headerlink" title="1.2 自动发现规则细分"></a>1.2 自动发现规则细分</h3><p>&lt;azure_sd_config&gt;</p>
<p>      Azure SD配置允许从Azure VM检索抓取目标。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_azure_machine_id: 机器ID</span><br><span class="line">__meta_azure_machine_location: 机器运行的位置</span><br><span class="line">__meta_azure_machine_name: 机器名称</span><br><span class="line">__meta_azure_machine_os_type: 机器操作系统</span><br><span class="line">__meta_azure_machine_private_ip: 机器的专用IP</span><br><span class="line">__meta_azure_machine_public_ip: 机器的公共IP（如果存在）</span><br><span class="line">__meta_azure_machine_resource_group: 机器的资源组</span><br><span class="line">__meta_azure_machine_tag_&lt;tagname&gt;: 机器的每个标签值</span><br><span class="line">__meta_azure_machine_scale_set: vm所属的比例尺集的名称（仅当使用比例尺集时才设置此值）</span><br><span class="line">__meta_azure_subscription_id: 订阅ID</span><br><span class="line">__meta_azure_tenant_id: 租户ID</span><br></pre></td></tr></table></figure>

<p>请参阅以下有关Azure发现的配置选项：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#访问Azure API的信息。Azure环境。</span></span><br><span class="line">[ environment: &lt;string&gt; | default = AzurePublicCloud ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#身份验证方法，即OAuth或ManagedIdentity。See https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview</span></span><br><span class="line">[ authentication_method: &lt;string&gt; | default = OAuth]</span><br><span class="line"><span class="comment"># 订阅ID。 始终需要。</span></span><br><span class="line">subscription_id: &lt;string&gt;</span><br><span class="line"><span class="comment">#可选的租户ID。 仅在authentication_method OAuth中需要。</span></span><br><span class="line">[ tenant_id: &lt;string&gt; ]</span><br><span class="line"><span class="comment">#可选的客户端ID。 仅在authentication_method OAuth中需要。</span></span><br><span class="line">[ client_id: &lt;string&gt; ]</span><br><span class="line"><span class="comment">#可选的客户secret。 仅在authentication_method OAuth中需要。</span></span><br><span class="line">[ client_secret: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新间隔以重新读取实例列表。</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 300s ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#从中收集指标的端口。 如果使用公共IP地址，则必须在重新标记规则中指定该地址。</span></span><br><span class="line">[ port: &lt;int&gt; | default = 80 ]</span><br></pre></td></tr></table></figure>

<p>&lt;consul_sd_config&gt;</p>
<p>Consul SD配置允许从Consul的Catalog API检索抓取目标。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_consul_address: 目标地址</span><br><span class="line">__meta_consul_dc: 目标的数据中心名称</span><br><span class="line">__meta_consul_tagged_address_&lt;key&gt;: 每个节点标记了目标的地址键值</span><br><span class="line">__meta_consul_metadata_&lt;key&gt;: 目标的每个节点元数据键值</span><br><span class="line">__meta_consul_node: 为目标定义的节点名称</span><br><span class="line">__meta_consul_service_address: 目标的服务地址</span><br><span class="line">__meta_consul_service_id: 目标的服务ID</span><br><span class="line">__meta_consul_service_metadata_&lt;key&gt;: 目标的每个服务元数据键值</span><br><span class="line">__meta_consul_service_port: 目标的服务端口</span><br><span class="line">__meta_consul_service: 目标所属服务的名称</span><br><span class="line">__meta_consul_tags: 由标签分隔符连接的目标的标签列表</span><br></pre></td></tr></table></figure>

<p>下面是示例：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#访问Consul API的信息。 将根据Consul文档要求进行定义。</span></span><br><span class="line">[ server: &lt;host&gt; | default = <span class="string">&quot;localhost:8500&quot;</span> ]</span><br><span class="line">[ token: &lt;secret&gt; ]</span><br><span class="line">[ datacenter: &lt;string&gt; ]</span><br><span class="line">[ scheme: &lt;string&gt; | default = <span class="string">&quot;http&quot;</span> ]</span><br><span class="line">[ username: &lt;string&gt; ]</span><br><span class="line">[ password: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line">tls_config:</span><br><span class="line">  [ &lt;tls_config&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#为其检索目标的服务列表。 如果省略，则将scraped所有服务。</span></span><br><span class="line">services:</span><br><span class="line">  [ - &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#See https://www.consul.io/api/catalog.html#list-nodes-for-service 去知道有关可以使用的可能过滤器的更多信息。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#标签的可选列表，用于过滤给定服务的节点。 服务必须包含列表中的所有标签。</span></span><br><span class="line">tags:</span><br><span class="line">  [ - &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#节点元数据，用于过滤给定服务的节点。</span></span><br><span class="line">[ node_meta:</span><br><span class="line">  [ &lt;name&gt;: &lt;value&gt; ... ] ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Consul标签通过其连接到标签标签中的字符串。</span></span><br><span class="line">[ tag_separator: &lt;string&gt; | default = , ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#允许过期Consul results (see https://www.consul.io/api/features/consistency.html). 将减少Consul的负担。</span></span><br><span class="line">[ allow_stale: &lt;bool&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新提供的名称之后的时间。在大型设置中，增加此值可能是个好主意，因为目录将一直更改。</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 30s ]</span><br></pre></td></tr></table></figure>

<p>       请注意，用于抓取目标的IP地址和端口被组装为&lt;__ meta_consul_address&gt;：&lt;__ meta_consul_service_port&gt;。 但是，在某些Consul设置中，相关地址在__meta_consul_service_address中。 在这种情况下，你可以使用重新标记功能来替换特殊的__address__标签。</p>
<p>      重新标记阶段是基于任意标签为服务筛选服务或节点的首选且功能更强大的方法。 对于拥有数千项服务的用户，直接使用Consul API可能会更高效，该API具有基本的过滤节点支持（当前通过节点元数据和单个标签）。</p>
<p>&lt;dns_sd_config&gt;</p>
<p>      基于DNS的服务发现配置允许指定一组DNS域名，这些域名会定期查询以发现目标列表。 从&#x2F;etc&#x2F;resolv.conf中读取要联系的DNS服务器。此服务发现方法仅支持基本DNS A，AAAA和SRV记录查询，但不支持RFC6763中指定的高级DNS-SD方法。在重新标记阶段，元标记__meta_dns_name在每个目标上均可用，并设置为产生发现的目标的记录名称。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#要查询的DNS域名列表。</span></span><br><span class="line">names:</span><br><span class="line">  [ - &lt;domain_name&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#要执行的DNS查询的类型。</span></span><br><span class="line">[ <span class="built_in">type</span>: &lt;query_type&gt; | default = <span class="string">&#x27;SRV&#x27;</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果查询类型不是SRV，则使用的端口号。</span></span><br><span class="line">[ port: &lt;number&gt;]</span><br><span class="line"></span><br><span class="line"><span class="comment">#提供的名称之后的刷新时间。</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 30s ]</span><br></pre></td></tr></table></figure>

<p>       其中&lt;domain_name&gt;是有效的DNS域名。 其中&lt;query_type&gt;是SRV，A或AAAA。</p>
<p>&lt;ec2_sd_config&gt;</p>
<p>       EC2 SD配置允许从AWS EC2实例检索抓取目标。 默认情况下使用私有IP地址，但可以通过重新标记将其更改为公共IP地址。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_ec2_availability_zone: 实例在其中运行的可用区</span><br><span class="line">__meta_ec2_instance_id: EC2实例ID</span><br><span class="line">__meta_ec2_instance_state: EC2实例的状态</span><br><span class="line">__meta_ec2_instance_type: EC2实例的类型</span><br><span class="line">__meta_ec2_owner_id: 拥有EC2实例的AWS账户的ID</span><br><span class="line">__meta_ec2_platform: 操作系统平台，在Windows服务器上设置为“ windows”，否则不存在</span><br><span class="line">__meta_ec2_primary_subnet_id: 主网络接口的子网ID（如果有）</span><br><span class="line">__meta_ec2_private_dns_name: 实例的私有DNS名称（如果有）</span><br><span class="line">__meta_ec2_private_ip: 实例的私有IP地址（如果存在）</span><br><span class="line">__meta_ec2_public_dns_name: 实例的公共DNS名称（如果有）</span><br><span class="line">__meta_ec2_public_ip: 实例的公共IP地址（如果有）</span><br><span class="line">__meta_ec2_subnet_id: 实例在其中运行的子网ID的逗号分隔列表（如果有）</span><br><span class="line">__meta_ec2_tag_&lt;tagkey&gt;: 实例的每个标签值</span><br><span class="line">__meta_ec2_vpc_id: 运行实例的VPC的ID（如果有）</span><br></pre></td></tr></table></figure>

<p>请参阅以下有关EC2发现的配置选项：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#访问EC2 API的信息。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#AWS区域。如果为空，则使用实例元数据中的区域。</span></span><br><span class="line">[ region: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Custom endpoint to be used.</span></span><br><span class="line">[ endpoint: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#AWS API密钥。 如果为空，则使用环境变量“ AWS_ACCESS_KEY_ID”和“ AWS_SECRET_ACCESS_KEY”。</span></span><br><span class="line">[ access_key: &lt;string&gt; ]</span><br><span class="line">[ secret_key: &lt;secret&gt; ]</span><br><span class="line"><span class="comment">#用于连接到API的命名AWS配置文件。</span></span><br><span class="line">[ profile: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#AWS Role ARN，是使用AWS API密钥的替代方法。 AWS Role ARN，是使用AWS API密钥的替代方法。</span></span><br><span class="line">[ role_arn: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新间隔以重新读取实例列表。</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 60s ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#从中scrape指标的端口。 如果使用公共IP地址，则必须在重新标记规则中指定该地址。</span></span><br><span class="line">[ port: &lt;int&gt; | default = 80 ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#筛选器可用于根据其他条件筛选实例列表。 可在此处找到可用的过滤条件：https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeInstances.html</span></span><br><span class="line"><span class="comment">#筛选器API文档: https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_Filter.html</span></span><br><span class="line">filters:</span><br><span class="line">  [ - name: &lt;string&gt;</span><br><span class="line">      values: &lt;string&gt;, [...] ]</span><br></pre></td></tr></table></figure>

<p>重新标记阶段是基于任意标签过滤目标的首选且功能更强大的方法。 对于具有数千个实例的用户，直接使用支持过滤实例的EC2 API可能会更有效。</p>
<p>&lt;openstack_sd_config&gt;</p>
<p>      OpenStack SD配置允许从OpenStack Nova实例检索抓取目标。可以配置以下&lt;openstack_role&gt;类型之一来发现目标：</p>
<p>      hypervisor：系统管理程序角色为每个Nova系统管理程序节点发现一个目标。 目标地址默认为虚拟机管理程序的host_ip属性。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_openstack_hypervisor_host_ip: 系统管理程序节点的IP地址。</span><br><span class="line">__meta_openstack_hypervisor_name: 系统管理程序节点的名称。</span><br><span class="line">__meta_openstack_hypervisor_state: 系统管理程序节点的状态。</span><br><span class="line">__meta_openstack_hypervisor_status: 系统管理程序节点的状态。</span><br><span class="line">__meta_openstack_hypervisor_type: 系统管理程序节点的类型。</span><br></pre></td></tr></table></figure>

<p>      instance：实例角色为Nova实例的每个网络接口发现一个目标。 目标地址默认为网络接口的专用IP地址。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_openstack_address_pool: 专用IP的池。</span><br><span class="line">__meta_openstack_instance_flavor: OpenStack实例的风格。</span><br><span class="line">__meta_openstack_instance_id: OpenStack实例ID。</span><br><span class="line">__meta_openstack_instance_name: OpenStack实例ID。</span><br><span class="line">__meta_openstack_instance_status: OpenStack实例的状态。</span><br><span class="line">__meta_openstack_private_ip: OpenStack实例的私有IP。</span><br><span class="line">__meta_openstack_project_id: 拥有此实例的项目（租户）。</span><br><span class="line">__meta_openstack_public_ip: OpenStack实例的公共IP。</span><br><span class="line">__meta_openstack_tag_&lt;tagkey&gt;: 实例的每个标记值。</span><br><span class="line">__meta_openstack_user_id: 拥有租户的用户帐户。</span><br></pre></td></tr></table></figure>

<p>请参阅以下有关OpenStack发现的配置选项：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#访问OpenStack API的信息。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#应该发现的实体的OpenStack角色。</span></span><br><span class="line">role: &lt;openstack_role&gt;  </span><br><span class="line"><span class="comment">#The OpenStack Region.</span></span><br><span class="line">region: &lt;string&gt;</span><br><span class="line"><span class="comment">#identity_endpoint指定使用适当版本的Identity API所需的HTTP端点。 尽管所有身份服务最终都需要它，但通常会由提供程序级别的功能来填充它。</span></span><br><span class="line">[ identity_endpoint: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果使用Identity V2 API，则需要用户名.请咨询提供商的控制面板，以发现你帐户的用户名。 在Identity V3中，需要userid或username和domain_id或domain_name的组合。</span></span><br><span class="line">[ username: &lt;string&gt; ]</span><br><span class="line">[ userid: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#Identity V2和V3 API的密码。 请咨询提供商的控制面板，以发现您帐户的首选身份验证方法。</span></span><br><span class="line">[ password: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果在Identity V3中使用用户名，则最多只能提供domain_id和domain_name之一。 否则，两者都是可选的。</span></span><br><span class="line">[ domain_name: &lt;string&gt; ]</span><br><span class="line">[ domain_id: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#对于Identity V2 API，project_id和project_name字段是可选的。某些提供程序允许您指定project_name而不是project_id。有些同时需要。 供应商的身份验证策略将确定这些字段如何影响身份验证。</span></span><br><span class="line">[ project_name: &lt;string&gt; ]</span><br><span class="line">[ project_id: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果使用应用程序凭据进行身份验证，则必须提供application_credential_id或application_credential_name字段。某些提供程序允许你创建用于身份验证的应用程序凭据，而不是密码。</span></span><br><span class="line">[ application_credential_name: &lt;string&gt; ]</span><br><span class="line">[ application_credential_id: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果使用应用程序凭据进行身份验证，则application_credential_secret字段为必填字段。</span></span><br><span class="line">[ application_credential_secret: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#服务发现是否应列出所有项目的所有实例。 它仅与“instance”角色相关，通常需要管理员权限。</span></span><br><span class="line">[ all_tenants: &lt;boolean&gt; | default: <span class="literal">false</span> ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新间隔以重新读取实例列表。</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 60s ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#从中scrape指标的端口。 如果使用公共IP地址，则必须在重新标记规则中指定该地址。</span></span><br><span class="line">[ port: &lt;int&gt; | default = 80 ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#TLS配置。</span></span><br><span class="line">tls_config:</span><br><span class="line">  [ &lt;tls_config&gt; ]</span><br></pre></td></tr></table></figure>

<p>&lt;file_sd_config&gt;</p>
<p>      基于文件的服务发现提供了一种配置静态目标的更通用的方法，并用作插入自定义服务发现机制的接口。它读取一组包含零个或多个&lt;static_config&gt;的列表的文件。 对所有已定义文件的更改将通过磁盘监视来检测并立即应用。 文件可以以YAML或JSON格式提供。 仅应用导致形成良好目标组的更改。JSON文件必须包含使用以下格式的静态配置列表：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;targets&quot;</span>: [ <span class="string">&quot;&lt;host&gt;&quot;</span>, ... ],</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;&lt;labelname&gt;&quot;</span>: <span class="string">&quot;&lt;labelvalue&gt;&quot;</span>, ...</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>     作为备用，文件内容也将以指定的刷新间隔定期重新读取。在重新标记阶段，每个目标都有一个元标记__meta_filepath。 它的值设置为从中提取目标的文件路径。有与此发现机制集成的列表。</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#从中提取目标组的文件的模式。</span></span><br><span class="line">files:</span><br><span class="line">  [ - &lt;filename_pattern&gt; ... ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新间隔以重新读取文件。</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 5m ]</span><br></pre></td></tr></table></figure>

<p>其中&lt;filename_pattern&gt;可能是以.json，.yml或.yaml结尾的路径。 最后的路径段可能包含与任何字符序列匹配的单个*，例如 my&#x2F;path&#x2F;tg_*.json。</p>
<p>&lt;gce_sd_config&gt;</p>
<p>      GCE SD配置允许从GCP GCE实例中检索抓取目标。 默认情况下使用私有IP地址，但可以通过重新标记将其更改为公共IP地址。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_gce_instance_id: 实例的数字ID</span><br><span class="line">__meta_gce_instance_name: 实例的名称</span><br><span class="line">__meta_gce_label_&lt;name&gt;: 实例的每个GCE标签</span><br><span class="line">__meta_gce_machine_type: 实例机器类型的完整或部分URL</span><br><span class="line">__meta_gce_metadata_&lt;name&gt;: 实例的每个元数据项</span><br><span class="line">__meta_gce_network: 实例的网络URL</span><br><span class="line">__meta_gce_private_ip: 实例的私有IP地址</span><br><span class="line">__meta_gce_project: 实例在其中运行的GCP项目</span><br><span class="line">__meta_gce_public_ip: 实例的公共IP地址（如果存在）</span><br><span class="line">__meta_gce_subnetwork: 实例的子网URL</span><br><span class="line">__meta_gce_tags: 以逗号分隔的实例标签列表</span><br><span class="line">__meta_gce_zone: 实例在其中运行的GCE区域URL</span><br></pre></td></tr></table></figure>

<p>请参阅以下有关GCE发现的配置选项：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#访问GCE API的信息。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#The GCP Project</span></span><br><span class="line">project: &lt;string&gt;</span><br><span class="line"><span class="comment">#scrape目标区域。 如果需要多个区域，请使用多个gce_sd_configs。</span></span><br><span class="line">zone: &lt;string&gt;</span><br><span class="line"><span class="comment">#可以选择使用Filter通过其他条件来过滤实例列表，此过滤字符串的语法在过滤查询参数部分中进行了描述：https://cloud.google.com/compute/docs/reference/latest/instances/list</span></span><br><span class="line">[ filter: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#刷新间隔以重新读取实例列表</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 60s ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#从中scrape指标的端口。如果使用公共IP地址，则必须在重新标记规则中指定该地址。</span></span><br><span class="line">[ port: &lt;int&gt; | default = 80 ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#标签分隔符用于在串联时分隔标签</span></span><br><span class="line">[ tag_separator: &lt;string&gt; | default = , ]</span><br></pre></td></tr></table></figure>

<p>Google Cloud SDK默认客户端通过在以下位置查找（首选找到的第一个位置）来发现凭据：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GOOGLE_APPLICATION_CREDENTIALS环境变量指定的JSON文件</span><br><span class="line">众所周知的路径<span class="variable">$HOME</span>/.config/gcloud/application_default_credentials.json中的JSON文件</span><br><span class="line">从GCE元数据服务器获取</span><br></pre></td></tr></table></figure>

<p>如果Prometheus在GCE中运行，则与其运行实例相关联的服务帐户应至少具有对计算资源的只读权限。 如果在GCE之外运行，请确保创建适当的服务帐户，并将凭据文件放在预期的位置之一。</p>
<p>&lt;marathon_sd_config&gt;</p>
<p>       Marathon SD配置允许使用Marathon REST API检索刮擦目标。 Prometheus将定期检查REST端点是否有当前正在运行的任务，并为每个至少具有一个正常任务的应用程序创建目标组。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_marathon_app: 应用程序的名称（斜杠由破折号代替）</span><br><span class="line">__meta_marathon_image: 使用的Docker映像的名称（如果可用）</span><br><span class="line">__meta_marathon_task: Mesos任务的ID</span><br><span class="line">__meta_marathon_app_label_&lt;labelname&gt;: 附加到应用程序的所有Marathon标签</span><br><span class="line">__meta_marathon_port_definition_label_&lt;labelname&gt;: 端口定义标签</span><br><span class="line">__meta_marathon_port_mapping_label_&lt;labelname&gt;: 端口映射标签</span><br><span class="line">__meta_marathon_port_index: 端口索引号（例如PORT1为1）</span><br></pre></td></tr></table></figure>

<p>请参阅以下有关Marathon发现的配置选项：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#用于联系Marathon服务器的URL列表。需要至少提供一个服务器URL。</span></span><br><span class="line">servers:</span><br><span class="line">  - &lt;string&gt;<span class="comment"># Polling interval</span></span><br><span class="line">[ refresh_interval: &lt;duration&gt; | default = 30s ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#基于令牌的身份验证的可选身份验证信息https://docs.mesosphere.com/1.11/security/ent/iam-api/#passing-an-authentication-token</span></span><br><span class="line"><span class="comment">#它与auth_token_file和其他身份验证机制互斥。</span></span><br><span class="line">[ auth_token: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#基于令牌的身份验证的可选身份验证信息https://docs.mesosphere.com/1.11/security/ent/iam-api/#passing-an-authentication-token</span></span><br><span class="line"><span class="comment">#它与auth_token和其他身份验证机制互斥。</span></span><br><span class="line">[ auth_token_file: &lt;filename&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用配置的用户名和密码在每个请求上设置``Authorization&#x27;&#x27;标头，这与其他身份验证机制互斥.password和password_file是互斥的。</span></span><br><span class="line">basic_auth:</span><br><span class="line">  [ username: &lt;string&gt; ]</span><br><span class="line">  [ password: &lt;string&gt; ]</span><br><span class="line">  [ password_file: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用配置的载体令牌在每个请求上设置“Authorization”标头。它与`bearer_token_file`和其他身份验证机制互斥。注意：当前版本的DC/OS marathon（v1.11.0）不支持标准的Bearer令牌身份验证。 使用`auth_token`代替。</span></span><br><span class="line">[ bearer_token: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用从配置文件中读取的承载令牌，对每个请求设置“ Authorization”标头。 它与`bearer_token`和其他身份验证机制互斥。注意：当前版本的DC/OS marathon（v1.11.0）不支持标准的Bearer令牌身份验证。 请改用auth_token_file。</span></span><br><span class="line">[ bearer_token_file: /path/to/bearer/token/file ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#用于连接到marathon服务器的TLS配置</span></span><br><span class="line">tls_config:</span><br><span class="line">  [ &lt;tls_config&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的代理URL。</span></span><br><span class="line">[ proxy_url: &lt;string&gt; ]</span><br></pre></td></tr></table></figure>

<p>      默认情况下，Prometheus将scraped Marathon中列出的每个应用。 如果并非所有服务都提供Prometheus指标，则可以使用Marathon标签和Prometheus重新标签来控制实际上将被scraped的实例。 有关如何设置Marathon应用程序和Prometheus配置的实际示例，请参阅Prometheus marathon-sd配置文件。默认情况下，所有应用程序都将在Prometheus（配置文件中指定的一项）中显示为单个作业，也可以使用重新标记进行更改。</p>
<p>&lt;nerve_sd_config&gt;</p>
<p>     Nerve SD配置允许从AirBnB的Nerve中检索scrape目标，这些scrape目标存储在Zookeeper中。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_nerve_path: Zookeeper中端点节点的完整路径</span><br><span class="line">__meta_nerve_endpoint_host: 端点的主机</span><br><span class="line">__meta_nerve_endpoint_port: 端点的端口</span><br><span class="line">__meta_nerve_endpoint_name: 端点名称</span><br></pre></td></tr></table></figure>

<p>配置如下：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Zookeeper服务器。</span></span><br><span class="line">servers:</span><br><span class="line">  - &lt;host&gt;</span><br><span class="line"><span class="comment">#路径可以指向单个服务，也可以指向服务树的根。</span></span><br><span class="line">paths:</span><br><span class="line">  - &lt;string&gt;[ <span class="built_in">timeout</span>: &lt;duration&gt; | default = 10s ]</span><br></pre></td></tr></table></figure>

<p>&lt;serverset_sd_config&gt;</p>
<p>       Serverset SD配置允许从存储在Zookeeper中的Serverset检索抓取目标。 服务器集通常由Finagle和Aurora使用。重新标记期间，以下meta标签可用于目标：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_serverset_path: Zookeeper中服务器集成员节点的完整路径</span><br><span class="line">__meta_serverset_endpoint_host: 默认端点的主机</span><br><span class="line">__meta_serverset_endpoint_port: 默认端点的端口</span><br><span class="line">__meta_serverset_endpoint_host_&lt;endpoint&gt;: 给定端点的主机</span><br><span class="line">__meta_serverset_endpoint_port_&lt;endpoint&gt;: 给定端点的端口</span><br><span class="line">__meta_serverset_shard: 成员的分片号</span><br><span class="line">__meta_serverset_status: 成员的状态</span><br></pre></td></tr></table></figure>

<p>配置如下：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#Zookeeper服务器。</span></span><br><span class="line">servers:</span><br><span class="line">  - &lt;host&gt;</span><br><span class="line"><span class="comment">#路径可以指向单个服务器集，也可以指向服务器集树的根。</span></span><br><span class="line">paths:</span><br><span class="line">  - &lt;string&gt;[ <span class="built_in">timeout</span>: &lt;duration&gt; | default = 10s ]</span><br></pre></td></tr></table></figure>

<p>Serverset数据必须为JSON格式，当前不支持Thrift格式。</p>
<p>&lt;triton_sd_config&gt;</p>
<p>#请参照官网</p>
<h2 id="二、基于文件的自动发现"><a href="#二、基于文件的自动发现" class="headerlink" title="二、基于文件的自动发现"></a>二、基于文件的自动发现</h2><p>static_configs: 静态服务发现。文件的自动发现配置是：file_sd_configs区域的配置，文件可以是YAML和JSON两种格式。</p>
<h3 id="2-1-通过文件自动发现多node-export"><a href="#2-1-通过文件自动发现多node-export" class="headerlink" title="2.1 通过文件自动发现多node_export"></a>2.1 通过文件自动发现多node_export</h3><p>先通过JSON方式来一波：</p>
<p>加载一个文件：</p>
<p># vim prometheus.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: k8s_node</span><br><span class="line">  file_sd_configs:</span><br><span class="line">    - files:</span><br><span class="line">      - /opt/prometheus/file_sd/k8s_node.json</span><br><span class="line">      refresh_interval: 10s</span><br></pre></td></tr></table></figure>

<p>#files下面指定文件的位置，当然也可以用- &#x2F;opt&#x2F;prometheus&#x2F;file_sd&#x2F;*.json代替匹配目录下的多个文件哈，refresh_interval表示prometheus每隔多久检测一下这些配置文件加载新的配置，当然第一次添加文件位置的时候需要重新加载prometheus，如果只是修改已经加载的json文件的话不需要重新加载prometheus，prometheus定时刷新有新的变化会重新加载。</p>
<p># vim &#x2F;opt&#x2F;prometheus&#x2F;file_sd&#x2F;k8s_node.json</p>
<p>[</p>
<p>  {</p>
<p>    “targets”:  [“192.168.1.135:9100”,”192.168.1.136:9100”]</p>
<p>  }</p>
<p>]</p>
<p># curl -XPOST <a href="http://localhost:9090/-/reload">http://localhost:9090/-/reload</a></p>
<p>#从界面可以看到两台机器已经加载到监控里面来了哈。</p>
<p>target资源如果变化大的话可以把间隔时间调小点，如果比较稳定的话可以把间隔时间调大点比如60m。</p>
<p>#用下面promql语句可以查看上次更改时间：  </p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">prometheus_sd_file_mtime_seconds</span><br></pre></td></tr></table></figure>

<p>加载多个文件：  </p>
<p># vim prometheus.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: k8s_node</span><br><span class="line">  file_sd_configs:</span><br><span class="line">    - files:</span><br><span class="line">      - /opt/prometheus/file_sd/k8s_node.json</span><br><span class="line">      - /opt/prometheus/file_sd/k8s_master.json</span><br><span class="line">      refresh_interval: 10s</span><br></pre></td></tr></table></figure>

<p># vim &#x2F;opt&#x2F;prometheus&#x2F;file_sd&#x2F;k8s_master.json</p>
<p>[</p>
<p>  {</p>
<p>    “targets”:  [“192.168.1.137:9100”]</p>
<p>  }</p>
<p>]</p>
<p># curl -XPOST <a href="http://localhost:9090/-/reload">http://localhost:9090/-/reload</a></p>
<p>然后再通过yaml文件来一波：</p>
<p># vim prometheus.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: k8s_node</span><br><span class="line">  file_sd_configs:</span><br><span class="line">    - files:</span><br><span class="line">      -  /opt/prometheus/file_sd/k8s*.yml</span><br><span class="line">      refresh_interval: 10s</span><br></pre></td></tr></table></figure>

<p># curl -XPOST <a href="http://localhost:9090/-/reload">http://localhost:9090/-/reload</a></p>
<p># vim &#x2F;opt&#x2F;prometheus&#x2F;file_sd&#x2F;k8s_node.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- targets: [<span class="string">&quot;192.168.1.136:9100&quot;</span>,<span class="string">&quot;192.168.1.137:9100&quot;</span>]</span><br><span class="line">  labels:</span><br><span class="line">    __env__: <span class="string">&quot;prod&quot;</span></span><br><span class="line">    node_type: <span class="string">&quot;node&quot;</span></span><br><span class="line">- targets: [<span class="string">&quot;192.168.1.157:9100&quot;</span>]</span><br><span class="line">  labels:</span><br><span class="line">    __env__: <span class="string">&quot;env&quot;</span></span><br><span class="line">    node_type: <span class="string">&quot;logstash&quot;</span></span><br></pre></td></tr></table></figure>

<p>#上面我们可以针对不同的targets标签，这样我们就知道这个采集的类型，然后还记得把__开头的标签是不会写到metrics数据的，但是node_type确实可以写到metrics中的。</p>
<p># vim &#x2F;opt&#x2F;prometheus&#x2F;file_sd&#x2F;k8s_master.yml</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- targets:</span><br><span class="line">  - <span class="string">&quot;192.168.1.135:9100&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    __env__: <span class="string">&quot;prod&quot;</span></span><br><span class="line">    node_type: <span class="string">&quot;master&quot;</span></span><br></pre></td></tr></table></figure>

<p>#这是targets的另外一种写法，这样我们就可以通过node_type来区分k8s的master节点和node节点的数据了。  </p>
<p>#可以看到每个targets类型的列表都打了不同的标签。如：node_cpu_seconds_total{node_type&#x3D;”master”}  我们就可以针对不同的标签做不同的数据采样和监控报警了。</p>
<h2 id="三、kube-state-metrics理论基础"><a href="#三、kube-state-metrics理论基础" class="headerlink" title="三、kube-state-metrics理论基础"></a>三、kube-state-metrics理论基础</h2><h3 id="3-1-kube-state-metrics"><a href="#3-1-kube-state-metrics" class="headerlink" title="3.1 kube-state-metrics"></a>3.1 kube-state-metrics</h3><p>概述：  </p>
<p>已经有了cadvisor、heapster、metric-server，几乎容器运行的所有指标都能拿到，但是下面这种情况却无能为力：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">我调度了多少个replicas？现在可用的有几个？</span><br><span class="line">多少个Pod是running/stopped/terminated状态？</span><br><span class="line">Pod重启了多少次？</span><br><span class="line">我有多少job在运行中</span><br></pre></td></tr></table></figure>

<p>而这些则是kube-state-metrics提供的内容，它基于client-go开发，轮询Kubernetes API，并将Kubernetes的结构化信息转换为metrics。</p>
<p>指标分类：</p>
<p>指标类别包括：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CronJob Metrics</span><br><span class="line">DaemonSet Metrics</span><br><span class="line">Deployment Metrics</span><br><span class="line">Job Metrics</span><br><span class="line">LimitRange Metrics</span><br><span class="line">Node Metrics</span><br><span class="line">PersistentVolume Metrics</span><br><span class="line">PersistentVolumeClaim Metrics</span><br><span class="line">Pod Metrics</span><br><span class="line">Pod Disruption Budget Metrics</span><br><span class="line">ReplicaSet Metrics</span><br><span class="line">ReplicationController Metrics</span><br><span class="line">ResourceQuota Metrics</span><br><span class="line">Service Metrics</span><br><span class="line">StatefulSet Metrics</span><br><span class="line">Namespace Metrics</span><br><span class="line">Horizontal Pod Autoscaler Metrics</span><br><span class="line">Endpoint Metrics</span><br><span class="line">Secret Metrics</span><br><span class="line">ConfigMap Metrics</span><br></pre></td></tr></table></figure>

<p>以pod为例：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_pod_info</span><br><span class="line">kube_pod_owner</span><br><span class="line">kube_pod_status_phase</span><br><span class="line">kube_pod_status_ready</span><br><span class="line">kube_pod_status_scheduled</span><br><span class="line">kube_pod_container_status_waiting</span><br><span class="line">kube_pod_container_status_terminated_reason</span><br><span class="line">…</span><br></pre></td></tr></table></figure>

<p>对于pod的资源限制，一般情况下：200MiB memory 0.1 cores</p>
<p>超过100节点的集群：2MiB memory per node 0.001 cores per node</p>
<p>     请注意，如果将CPU限制设置得太低，则将无法足够快地处理kube-state-metrics的内部队列，从而随着队列长度的增加而导致内存消耗增加。 如果遇到内存分配过多导致的问题，请尝试增加CPU限制。</p>
<p>      因为kube-state-metrics-service.yaml中有prometheus.io&#x2F;scrape: ‘true’标识，因此会将metric暴露给prometheus，而Prometheus会在kubernetes-service-endpoints这个job下自动发现kube-state-metrics，并开始拉取metrics，无需其他配置。</p>
<p>使用kube-state-metrics后的常用场景有：</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">存在执行失败的Job: kube_job_status_failed&#123;job=“kubernetes-service-endpoints”,k8s_app=“kube-state-metrics”&#125;==1</span><br><span class="line">集群节点状态错误: kube_node_status_condition&#123;condition=“Ready”,status!=“<span class="literal">true</span>”&#125;==1</span><br><span class="line">集群中存在启动失败的Pod：kube_pod_status_phase&#123;phase=~“Failed|Unknown”&#125;==1</span><br><span class="line">最近30分钟内有Pod容器重启: changes(kube_pod_container_status_restarts[30m])&gt;0</span><br></pre></td></tr></table></figure>

<p>kube-state-metrics本质上是不断轮询api-server。度量标准在侦听端口的HTTP endpoint &#x2F;metrics上导出（默认为8080）。</p>
<p>与metric-server的对比：</p>
<p>1. metric-server（或heapster）是从api-server中获取cpu、内存使用率这种监控指标，并把他们发送给存储后端，如influxdb或云厂商，他当前的核心作用是：为HPA等组件提供决策指标支持。</p>
<p>2. kube-state-metrics关注于获取k8s各种资源的最新状态，如deployment或者daemonset，之所以没有把kube-state-metrics纳入到metric-server的能力中，是因为他们的关注点本质上是不一样的。metric-server仅仅是获取、格式化现有数据，写入特定的存储，实质上是一个监控系统。而kube-state-metrics是将k8s的运行状况在内存中做了个快照，并且获取新的指标，但他没有能力导出这些指标</p>
<p>3. 换个角度讲，kube-state-metrics本身是metric-server的一种数据来源，虽然现在没有这么做。</p>
<p>4. 另外，像Prometheus这种监控系统，并不会去用metric-server中的数据，他都是自己做指标收集、集成的（Prometheus包含了metric-server的能力），但Prometheus可以监控metric-server本身组件的监控状态并适时报警，这里的监控就可以通过kube-state-metrics来实现，如metric-serverpod的运行状态。</p>
<p>优化点和问题：</p>
<p>1.因为kube-state-metrics是监听资源的add、delete、update事件，那么在kube-state-metrics部署之前已经运行的资源，岂不是拿不到数据？kube-state-metric利用client-go可以初始化所有已经存在的资源对象，确保没有任何遗漏</p>
<p>2.kube-state-metrics当前不会输出metadata信息(如help和description）</p>
<p>3.缓存实现是基于golang的map，解决并发读问题当期是用了一个简单的互斥锁，应该可以解决问题，后续会考虑golang的sync.Map安全map。</p>
<p>4.kube-state-metrics通过比较resource version来保证event的顺序</p>
<p>5.kube-state-metrics并不保证包含所有资源</p>
<h3 id="3-2-kube-state-metrics部署"><a href="#3-2-kube-state-metrics部署" class="headerlink" title="3.2 kube-state-metrics部署"></a>3.2 kube-state-metrics部署</h3><p>github地址：<a href="https://github.com/kubernetes/kube-state-metrics">https://github.com/kubernetes/kube-state-metrics</a></p>
<p>Kubernetes部署： <a href="https://github.com/kubernetes/kube-state-metrics#kubernetes-deployment">https://github.com/kubernetes/kube-state-metrics#kubernetes-deployment</a></p>
<p>#要根据你的k8s集群版本选择对应的kube-state-metrics版本。  </p>
<p>#wget <a href="https://github.com/kubernetes/kube-state-metrics/archive/v1.9.5.tar.gz">https://github.com/kubernetes/kube-state-metrics/archive/v1.9.5.tar.gz</a></p>
<p>#tar zxf v1.9.5.tar.gz</p>
<p># cd kube-state-metrics-1.9.5&#x2F;examples&#x2F;</p>
<p># kubectl apply -f standard&#x2F;</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kube-state-metrics created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kube-state-metrics created</span><br><span class="line">deployment.apps/kube-state-metrics created</span><br><span class="line">serviceaccount/kube-state-metrics created</span><br><span class="line">service/kube-state-metrics created</span><br></pre></td></tr></table></figure>

<p># kubectl  get pods -n kube-system |grep kube-state-metrics</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube-state-metrics-54d587f66c-dc2mv   1/1     Running   0          12m</span><br></pre></td></tr></table></figure>

<p># kubectl logs kube-state-metrics-54d587f66c-dc2mv -n kube-system</p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">I0315 03:07:11.290601       1 main.go:86] Using default collectors</span><br><span class="line">I0315 03:07:11.290665       1 main.go:98] Using all namespace</span><br><span class="line">I0315 03:07:11.290673       1 main.go:139] metric white-blacklisting: blacklisting the following items:</span><br><span class="line">W0315 03:07:11.290695       1 client_config.go:543] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.</span><br><span class="line">I0315 03:07:11.291800       1 main.go:184] Testing communication with server</span><br><span class="line">I0315 03:07:11.298582       1 main.go:189] Running with Kubernetes cluster version: v1.17. git version: v1.17.2. git tree state: clean. commit: 59603c6e503c87169aea6106f57b9f242f64df89. platform: linux/amd64</span><br><span class="line">I0315 03:07:11.298603       1 main.go:191] Communication with server successful</span><br><span class="line">I0315 03:07:11.298723       1 main.go:225] Starting metrics server: 0.0.0.0:8080</span><br><span class="line">I0315 03:07:11.298908       1 metrics_handler.go:96] Autosharding disabled</span><br><span class="line">I0315 03:07:11.300469       1 builder.go:146] Active collectors: certificatesigningrequests,configmaps,cronjobs,daemonsets,deployments,endpoints,horizontalpodautoscalers,ingresses,<span class="built_in">jobs</span>,limitranges,mutatingwebhookconfigurations,namespaces,networkpolicies,nodes,persistentvolumeclaims,persistentvolumes,poddisruptionbudgets,pods,replicasets,replicationcontrollers,resourcequotas,secrets,services,statefulsets,storageclasses,validatingwebhookconfigurations,volumeattachments</span><br><span class="line">I0315 03:07:11.299537       1 main.go:200] Starting kube-state-metrics self metrics server: 0.0.0.0:8081</span><br></pre></td></tr></table></figure>

<h3 id="3-3-将kube-state-metrics中的数据采集出来"><a href="#3-3-将kube-state-metrics中的数据采集出来" class="headerlink" title="3. 3 将kube-state-metrics中的数据采集出来"></a>3. 3 将kube-state-metrics中的数据采集出来</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: <span class="string">&#x27;kubernetes-service-endpoints&#x27;</span></span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: endpoints</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: <span class="literal">true</span></span><br><span class="line">  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: __scheme__</span><br><span class="line">    regex: (https?)</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: __metrics_path__</span><br><span class="line">    regex: (.+)</span><br><span class="line">  - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: __address__</span><br><span class="line">    regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">    replacement: <span class="variable">$1</span>:<span class="variable">$2</span></span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_namespace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: kubernetes_name</span><br></pre></td></tr></table></figure>


<h2 id="四、kube-state-metrics指标记录"><a href="#四、kube-state-metrics指标记录" class="headerlink" title="四、kube-state-metrics指标记录"></a>四、kube-state-metrics指标记录</h2><p>所有监控的指标：<a href="https://github.com/kubernetes/kube-state-metrics/tree/master/docs">https://github.com/kubernetes/kube-state-metrics/tree/master/docs</a></p>
<h3 id="4-1-ConfigMap-Metrics"><a href="#4-1-ConfigMap-Metrics" class="headerlink" title="4.1 ConfigMap Metrics"></a>4.1 ConfigMap Metrics</h3><p>#查询地址指标数据地址：<a href="https://github.com/kubernetes/kube-state-metrics/blob/master/internal/store/configmap_test.go">https://github.com/kubernetes/kube-state-metrics/blob/master/internal/store/configmap_test.go</a></p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_configmap_info  <span class="comment">#gauge类型，有关configmap的信息</span></span><br><span class="line">kube_configmap_created  <span class="comment">#gauge类型，Unix创建时间戳</span></span><br><span class="line">kube_configmap_metadata_resource_version  <span class="comment">#gauge类型，表示configmap特定版本的资源版本。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-2-CronJob-Metrics"><a href="#4-2-CronJob-Metrics" class="headerlink" title="4.2 CronJob Metrics"></a>4.2 CronJob Metrics</h3><p>#查询地址：<a href="https://github.com/kubernetes/kube-state-metrics/blob/master/internal/store/job_test.go">https://github.com/kubernetes/kube-state-metrics/blob/master/internal/store/cronjob_test.go</a></p>
<p>#其他的就不贴地址了哈，基本都是在<a href="https://github.com/kubernetes/kube-state-metrics/blob/master/internal/store/%E4%B8%8B%E9%9D%A2%E6%89%BE%E6%8C%87%E5%AE%9A%E5%90%8D%E7%A7%B0/_test.go%E6%A0%87%E5%BF%97%E7%9A%84%E6%96%87%E4%BB%B6%E3%80%82">https://github.com/kubernetes/kube-state-metrics/blob/master/internal/store/下面找指定名称\_test.go标志的文件。</a></p>
<p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_cronjob_info   <span class="comment">#gauge类型，关于cronjob的信息</span></span><br><span class="line">kube_cronjob_labels  <span class="comment">#gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_cronjob_created  <span class="comment">#gauge类型，Unix创建时间戳</span></span><br><span class="line">kube_cronjob_next_schedule_time  <span class="comment">#gauge类型，下次应该安排cronjob。 在lastScheduleTime之后的时间，或者在cron作业的创建时间之后（如果从未计划过）。 使用它来确定作业是否延迟。</span></span><br><span class="line">kube_cronjob_status_active  <span class="comment">#gauge类型，活动保持指向当前正在运行的作业的指针。</span></span><br><span class="line">kube_cronjob_status_last_schedule_time  <span class="comment">#gauge类型，LastScheduleTime保留有关上一次成功调度作业的时间的信息。</span></span><br><span class="line">kube_cronjob_spec_suspend  <span class="comment">#gauge类型，挂起标志告诉控制器挂起后续执行。</span></span><br><span class="line">kube_cronjob_spec_starting_deadline_seconds  <span class="comment">#gauge类型，如果由于任何原因错过了计划时间，则开始工作的最后期限（以秒为单位）。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-3-DaemonSet-Metrics"><a href="#4-3-DaemonSet-Metrics" class="headerlink" title="4.3 DaemonSet Metrics"></a>4.3 DaemonSet Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_daemonset_created  <span class="comment">#gauge类型，Unix创建时间戳</span></span><br><span class="line">kube_daemonset_status_current_number_scheduled  <span class="comment">#gauge类型，运行至少一个且应该运行的守护程序容器的节点数。</span></span><br><span class="line">kube_daemonset_status_desired_number_scheduled  <span class="comment">#gauge类型，应该运行守护程序容器的节点数。</span></span><br><span class="line">kube_daemonset_status_number_available  <span class="comment">#gauge类型，应该运行守护程序容器并具有一个或多个守护程序容器正在运行并且可用的节点数</span></span><br><span class="line">kube_daemonset_status_number_misscheduled  <span class="comment">#gauge类型，运行守护程序容器但不应该运行的节点数。</span></span><br><span class="line">kube_daemonset_status_number_ready  <span class="comment">#gauge类型，应该运行守护程序容器并已运行一个或多个守护程序容器并准备就绪的节点数。</span></span><br><span class="line">kube_daemonset_status_number_unavailable  <span class="comment">#gauge类型，应该运行守护程序容器且没有任何守护程序容器正在运行并且可用的节点数</span></span><br><span class="line">kube_daemonset_updated_number_scheduled  <span class="comment">#gauge类型，正在运行更新的守护程序pod的节点总数</span></span><br><span class="line">kube_daemonset_metadata_generation  <span class="comment">#gauge类型，代表所需状态的特定生成的序列号。</span></span><br><span class="line">kube_daemonset_labels  <span class="comment">#gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-4-Deployment-Metrics"><a href="#4-4-Deployment-Metrics" class="headerlink" title="4.4 Deployment Metrics"></a>4.4 Deployment Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_deployment_status_replicas  <span class="comment">#Gauge类型，每个deployment的副本数。</span></span><br><span class="line">kube_deployment_status_replicas_available  <span class="comment">#Gauge类型，每个deployment的可用副本数</span></span><br><span class="line">kube_deployment_status_replicas_unavailable  <span class="comment">#Gauge类型，每个deployment中不可用副本的数量</span></span><br><span class="line">kube_deployment_status_replicas_updated  <span class="comment">#Gauge类型，每个deployment的更新副本数</span></span><br><span class="line">kube_deployment_status_observed_generation  <span class="comment">#Gauge类型，deployment控制器观察到的生成</span></span><br><span class="line">kube_deployment_status_condition  <span class="comment">#Gauge类型，部署的当前状态condition</span></span><br><span class="line">kube_deployment_spec_replicas  <span class="comment">#Gauge类型，deployment所需的Pod数</span></span><br><span class="line">kube_deployment_spec_paused  <span class="comment">#Gauge类型，deployment是否暂停，并且deployment控制器不会处理。</span></span><br><span class="line">kube_deployment_spec_strategy_rollingupdate_max_unavailable  <span class="comment">#Gauge类型，</span></span><br><span class="line">kube_deployment_spec_strategy_rollingupdate_max_surge  <span class="comment">#Gauge类型，滚动更新deployment期间的最大不可用副本数。</span></span><br><span class="line">kube_deployment_metadata_generation  <span class="comment">#Gauge类型，代表期望状态的特定生成的序列号</span></span><br><span class="line">kube_deployment_labels  <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签</span></span><br><span class="line">kube_deployment_created  <span class="comment">#Gauge类型，Unix创建时间戳</span></span><br></pre></td></tr></table></figure>

<h3 id="4-5-Endpoint-Metrics"><a href="#4-5-Endpoint-Metrics" class="headerlink" title="4.5 Endpoint Metrics"></a>4.5 Endpoint Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_endpoint_address_not_ready  <span class="comment">#Gauge类型，endpoint中not ready的addresses数</span></span><br><span class="line">kube_endpoint_address_available  <span class="comment">#Gauge类型，endpoint中可用的addresses数。</span></span><br><span class="line">kube_endpoint_info  <span class="comment">#Gauge类型，有关endpoint的信息</span></span><br><span class="line">kube_endpoint_labels  <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_endpoint_created  <span class="comment">#Gauge类型，Unix创建时间戳</span></span><br></pre></td></tr></table></figure>

<h3 id="4-6-Horizontal-Pod-Autoscaler-Metrics"><a href="#4-6-Horizontal-Pod-Autoscaler-Metrics" class="headerlink" title="4.6 Horizontal Pod Autoscaler Metrics"></a>4.6 Horizontal Pod Autoscaler Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_horizontalpodautoscaler_labels  <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_horizontalpodautoscaler_metadata_generation  <span class="comment">#Gauge类型，通过HorizontalPodAutoscaler控制器观察到的生成。</span></span><br><span class="line">kube_horizontalpodautoscaler_spec_max_replicas  <span class="comment">#Gauge类型，自动定标器可以设置的容器数量上限； 不能小于MinReplicas。</span></span><br><span class="line">kube_horizontalpodautoscaler_spec_min_replicas  <span class="comment">#Gauge类型，自动定标器可以设置的Pod数量下限，默认为1。</span></span><br><span class="line">kube_horizontalpodautoscaler_spec_target_metric  <span class="comment">#Gauge类型，此自动定标器在计算所需副本数时使用的度量标准。</span></span><br><span class="line">kube_horizontalpodautoscaler_status_condition  <span class="comment">#Gauge类型，此自动定标器的条件。</span></span><br><span class="line">kube_horizontalpodautoscaler_status_current_replicas  <span class="comment">#Gauge类型，此自动缩放器管理的Pod的当前副本数。</span></span><br><span class="line">kube_horizontalpodautoscaler_status_desired_replicas  <span class="comment">#Gauge类型，此自动缩放器管理的所需Pod副本数。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-7-Ingress-Metrics"><a href="#4-7-Ingress-Metrics" class="headerlink" title="4.7 Ingress Metrics"></a>4.7 Ingress Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_ingress_info  <span class="comment">#Gauge类型，有关ingress的信息</span></span><br><span class="line">kube_ingress_labels  <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_ingress_created  <span class="comment">#Gauge类型，Unix创建时间戳</span></span><br><span class="line">kube_ingress_metadata_resource_version  <span class="comment">#Gauge类型，代表特定ingress版本的资源版本。</span></span><br><span class="line">kube_ingress_path  <span class="comment">#Gauge类型，ingress host, paths and backend service 信息。</span></span><br><span class="line">kube_ingress_tls  <span class="comment">#Gauge类型，ingress TLS host and secret 信息。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-8-Job-Metrics"><a href="#4-8-Job-Metrics" class="headerlink" title="4.8 Job Metrics"></a>4.8 Job Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_job_info  <span class="comment">#Gauge类型，有关job的信息。</span></span><br><span class="line">kube_job_labels  <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_job_owner  <span class="comment">#Gauge类型，有关job所有者的信息。</span></span><br><span class="line">kube_job_spec_parallelism  <span class="comment">#Gauge类型，在任何给定时间，job应运行的pod的最大期望数量。</span></span><br><span class="line">kube_job_spec_completions  <span class="comment">#Gauge类型，运行job所需的成功完成的Pod数量。</span></span><br><span class="line">kube_job_spec_active_deadline_seconds  <span class="comment">#Gauge类型，在系统尝试终止job之前，作业相对于startTime的活动持续时间（以秒为单位）。</span></span><br><span class="line">kube_job_status_active  <span class="comment">#Gauge类型，正在运行的pod数。</span></span><br><span class="line">kube_job_status_succeeded  <span class="comment">#Gauge类型，成功reached Phase的pod数量。</span></span><br><span class="line">kube_job_status_failed  <span class="comment">#Gauge类型，Failed reached Phase的pod数量。</span></span><br><span class="line">kube_job_status_start_time  <span class="comment">#Gauge类型，StartTime表示作业Job Manager job的时间。</span></span><br><span class="line">kube_job_status_completion_time  <span class="comment">#Gauge类型，CompletionTime表示job完成的时间。</span></span><br><span class="line">kube_job_complete  <span class="comment">#Gauge类型，job已完成执行。</span></span><br><span class="line">kube_job_failed  <span class="comment">#Gauge类型，job执行失败。</span></span><br><span class="line">kube_job_created  <span class="comment">#Gauge类型，Unix创建时间戳</span></span><br></pre></td></tr></table></figure>

<h3 id="4-9-Lease-Metrics"><a href="#4-9-Lease-Metrics" class="headerlink" title="4.9 Lease Metrics"></a>4.9 Lease Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_lease_owner <span class="comment">#Gauge类型，有关lease所有者的信息。</span></span><br><span class="line">kube_lease_renew_time <span class="comment">#Gauge类型,Kube lease续订时间。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-10-LimitRange-Metrics"><a href="#4-10-LimitRange-Metrics" class="headerlink" title="4.10 LimitRange Metrics"></a>4.10 LimitRange Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_limitrange <span class="comment">#Gauge类型，有关limitrange的信息。</span></span><br><span class="line">kube_limitrange_created <span class="comment">#Gauge类型，Unix创建时间戳</span></span><br></pre></td></tr></table></figure>

<h3 id="4-11-MutatingWebhookConfiguration-Metrics"><a href="#4-11-MutatingWebhookConfiguration-Metrics" class="headerlink" title="4.11 MutatingWebhookConfiguration Metrics"></a>4.11 MutatingWebhookConfiguration Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_mutatingwebhookconfiguration_info <span class="comment">#Gauge类型，有关MutatingWebhookConfiguration的信息。</span></span><br><span class="line">kube_mutatingwebhookconfiguration_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_mutatingwebhookconfiguration_metadata_resource_version <span class="comment">#Gauge类型，资源版本，表示MutatingWebhookConfiguration的特定版本。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-12-Namespace-Metrics"><a href="#4-12-Namespace-Metrics" class="headerlink" title="4.12 Namespace Metrics"></a>4.12 Namespace Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_namespace_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_namespace_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_namespace_status_condition <span class="comment">#Gauge类型，命名空间的状态。</span></span><br><span class="line">kube_namespace_status_phase <span class="comment">#Gauge类型，kubernetes命名空间状态阶段。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-13-Network-Policy-Metrics"><a href="#4-13-Network-Policy-Metrics" class="headerlink" title="4.13 Network Policy Metrics"></a>4.13 Network Policy Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_networkpolicy_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_networkpolicy_labels <span class="comment">#Gauge类型，</span></span><br><span class="line">kube_networkpolicy_spec_egress_rules <span class="comment">#Gauge类型，规格出口规则</span></span><br><span class="line">kube_networkpolicy_spec_ingress_rules <span class="comment">#Gauge类型，规格入口规则</span></span><br></pre></td></tr></table></figure>

<h3 id="4-14-Node-Metrics"><a href="#4-14-Node-Metrics" class="headerlink" title="4.14 Node Metrics"></a>4.14 Node Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_node_info <span class="comment">#Gauge类型，有关群集节点的信息。</span></span><br><span class="line">kube_node_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_node_role <span class="comment">#Gauge类型，集群节点的角色。</span></span><br><span class="line">kube_node_spec_unschedulable <span class="comment">#Gauge类型，节点是否可以调度新的Pod。</span></span><br><span class="line">kube_node_spec_taint <span class="comment">#Gauge类型，群集节点的污点。</span></span><br><span class="line">kube_node_status_capacity <span class="comment">#Gauge类型，节点不同资源的容量。</span></span><br><span class="line">kube_node_status_allocatable <span class="comment">#Gauge类型，可用于调度的节点的不同资源的可分配资源。</span></span><br><span class="line">kube_node_status_condition <span class="comment">#Gauge类型，群集节点的状况。</span></span><br><span class="line">kube_node_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-15-PersistentVolume-Metrics"><a href="#4-15-PersistentVolume-Metrics" class="headerlink" title="4.15 PersistentVolume Metrics"></a>4.15 PersistentVolume Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_persistentvolume_capacity_bytes <span class="comment">#Gauge类型，persistentvolume（持久卷）容量（以字节为单位）。</span></span><br><span class="line">kube_persistentvolume_status_phase <span class="comment">#Gauge类型，该阶段指示某个卷是否可用，绑定到声明或由声明释放。</span></span><br><span class="line">kube_persistentvolume_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_persistentvolume_info <span class="comment">#Gauge类型，有关持久卷的信息。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-16-PersistentVolumeClaim-Metrics"><a href="#4-16-PersistentVolumeClaim-Metrics" class="headerlink" title="4.16 PersistentVolumeClaim Metrics"></a>4.16 PersistentVolumeClaim Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_persistentvolumeclaim_access_mode <span class="comment">#Gauge类型，永久卷声明指定的访问模式。</span></span><br><span class="line">kube_persistentvolumeclaim_info <span class="comment">#Gauge类型，有关持久卷声明的信息。</span></span><br><span class="line">kube_persistentvolumeclaim_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_persistentvolumeclaim_resource_requests_storage_bytes <span class="comment">#Gauge类型，持久卷声明所请求的存储容量。</span></span><br><span class="line">kube_persistentvolumeclaim_status_condition <span class="comment">#Gauge类型，有关持续量索赔的不同条件的状态的信息。</span></span><br><span class="line">kube_persistentvolumeclaim_status_phase <span class="comment">#Gauge类型，永久批量声明当前处于此阶段。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-17-PodDisruptionBudget-Metrics"><a href="#4-17-PodDisruptionBudget-Metrics" class="headerlink" title="4.17 PodDisruptionBudget Metrics"></a>4.17 PodDisruptionBudget Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_poddisruptionbudget_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_poddisruptionbudget_status_current_healthy <span class="comment">#Gauge类型，当前健康pod的数量</span></span><br><span class="line">kube_poddisruptionbudget_status_desired_healthy <span class="comment">#Gauge类型，所需的健康pod的最小数量</span></span><br><span class="line">kube_poddisruptionbudget_status_pod_disruptions_allowed <span class="comment">#Gauge类型，当前允许的pod中断次数</span></span><br><span class="line">kube_poddisruptionbudget_status_expected_pods <span class="comment">#Gauge类型，此中断预算计算的pod总数</span></span><br><span class="line">kube_poddisruptionbudget_status_observed_generation <span class="comment">#Gauge类型，更新此PDB状态时观察到的最新一代</span></span><br></pre></td></tr></table></figure>

<h3 id="4-18-Pod-Metrics"><a href="#4-18-Pod-Metrics" class="headerlink" title="4.18 Pod Metrics"></a>4.18 Pod Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_pod_info <span class="comment">#Gauge类型，有关pod的信息。</span></span><br><span class="line">kube_pod_start_time <span class="comment">#Gauge类型，pod的unix时间戳记中的开始时间。</span></span><br><span class="line">kube_pod_completion_time <span class="comment">#Gauge类型，pod的unix时间戳记中的完成时间。</span></span><br><span class="line">kube_pod_owner <span class="comment">#Gauge类型，有关Pod所有者的信息。</span></span><br><span class="line">kube_pod_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_pod_status_phase <span class="comment">#Gauge类型，Pod当前阶段。</span></span><br><span class="line">kube_pod_status_ready <span class="comment">#Gauge类型，描述容器是否准备好处理请求。</span></span><br><span class="line">kube_pod_status_scheduled <span class="comment">#Gauge类型，描述pod的调度过程的状态。</span></span><br><span class="line">kube_pod_container_info <span class="comment">#Gauge类型，有关容器中container的信息。</span></span><br><span class="line">kube_pod_container_status_waiting <span class="comment">#Gauge类型，描述容器当前是否处于等待状态。</span></span><br><span class="line">kube_pod_container_status_waiting_reason <span class="comment">#Gauge类型，描述容器当前处于等待状态的原因。</span></span><br><span class="line">kube_pod_container_status_running <span class="comment">#Gauge类型，描述容器当前是否处于运行状态。</span></span><br><span class="line">kube_pod_container_status_terminated <span class="comment">#Gauge类型，描述容器当前是否处于终止状态。</span></span><br><span class="line">kube_pod_container_status_terminated_reason <span class="comment">#Gauge类型，描述容器当前处于终止状态的原因。</span></span><br><span class="line">kube_pod_container_status_last_terminated_reason <span class="comment">#Gauge类型，描述容器处于终止状态的最后原因。</span></span><br><span class="line">kube_pod_container_status_ready <span class="comment">#Gauge类型，Describes whether the containers readiness check succeeded.</span></span><br><span class="line">kube_pod_container_status_restarts_total <span class="comment">#Gauge类型，每个容器的容器重新启动次数。</span></span><br><span class="line">kube_pod_container_resource_requests <span class="comment">#Gauge类型，容器请求的请求资源数。</span></span><br><span class="line">kube_pod_container_resource_limits <span class="comment">#Gauge类型，容器请求的限制资源数量。</span></span><br><span class="line">kube_pod_overhead <span class="comment">#Gauge类型</span></span><br><span class="line">kube_pod_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_pod_deletion_timestamp <span class="comment">#Gauge类型，Unix删除时间戳</span></span><br><span class="line">kube_pod_restart_policy <span class="comment">#Gauge类型，描述此pod使用的重新启动策略。</span></span><br><span class="line">kube_pod_init_container_info <span class="comment">#Gauge类型，有关Pod中init容器的信息。</span></span><br><span class="line">kube_pod_init_container_status_waiting <span class="comment">#Gauge类型，描述初始化容器当前是否处于等待状态。</span></span><br><span class="line">kube_pod_init_container_status_waiting_reason <span class="comment">#Gauge类型，Describes the reason the init container is currently in waiting state.</span></span><br><span class="line">kube_pod_init_container_status_running <span class="comment">#Gauge类型，描述初始化容器当前是否处于运行状态。</span></span><br><span class="line">kube_pod_init_container_status_terminated <span class="comment">#Gauge类型，描述初始化容器当前是否处于终止状态。</span></span><br><span class="line">kube_pod_init_container_status_terminated_reason <span class="comment">#Gauge类型，描述初始化容器当前处于终止状态的原因。</span></span><br><span class="line">kube_pod_init_container_status_last_terminated_reason <span class="comment">#Gauge类型，描述初始化容器处于终止状态的最后原因。</span></span><br><span class="line">kube_pod_init_container_status_ready <span class="comment">#Gauge类型，描述初始化容器准备情况检查是否成功。</span></span><br><span class="line">kube_pod_init_container_status_restarts_total  <span class="comment">#Counter类型，初始化容器的重新启动次数。    </span></span><br><span class="line">kube_pod_init_container_resource_limits <span class="comment">#Gauge类型，初始化容器请求的限制资源数。</span></span><br><span class="line">kube_pod_spec_volumes_persistentvolumeclaims_info <span class="comment">#Gauge类型，有关Pod中持久卷声明卷的信息。</span></span><br><span class="line">kube_pod_spec_volumes_persistentvolumeclaims_readonly <span class="comment">#Gauge类型，描述是否以只读方式安装了持久卷声明。</span></span><br><span class="line">kube_pod_status_reason <span class="comment">#Gauge类型，pod状态原因</span></span><br><span class="line">kube_pod_status_scheduled_time <span class="comment">#Gauge类型，Pod移至计划状态时的Unix时间戳</span></span><br><span class="line">kube_pod_status_unschedulable <span class="comment">#Gauge类型，描述pod的unschedulable状态。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-19-ReplicaSet-Metrics"><a href="#4-19-ReplicaSet-Metrics" class="headerlink" title="4.19 ReplicaSet Metrics"></a>4.19 ReplicaSet Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_replicaset_status_replicas <span class="comment">#Gauge类型，每个ReplicaSet的副本数。</span></span><br><span class="line">kube_replicaset_status_fully_labeled_replicas <span class="comment">#Gauge类型，每个ReplicaSet的全标签副本数。</span></span><br><span class="line">kube_replicaset_status_ready_replicas <span class="comment">#Gauge类型，每个ReplicaSet的就绪副本数。</span></span><br><span class="line">kube_replicaset_status_observed_generation <span class="comment">#Gauge类型，ReplicaSet控制器观察到的生成。</span></span><br><span class="line">kube_replicaset_spec_replicas <span class="comment">#Gauge类型，ReplicaSet所需的pods数。</span></span><br><span class="line">kube_replicaset_metadata_generation <span class="comment">#Gauge类型，代表所需状态的特定生成的序列号。</span></span><br><span class="line">kube_replicaset_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_replicaset_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_replicaset_owner <span class="comment">#Gauge类型，有关副本集所有者的信息。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-20-ReplicationController-metrics"><a href="#4-20-ReplicationController-metrics" class="headerlink" title="4.20 ReplicationController metrics"></a>4.20 ReplicationController metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_replicationcontroller_status_replicas <span class="comment">#Gauge类型，每个ReplicationController的副本数。</span></span><br><span class="line">kube_replicationcontroller_status_fully_labeled_replicas <span class="comment">#Gauge类型，每个ReplicationController具有完全标记的副本数。</span></span><br><span class="line">kube_replicationcontroller_status_ready_replicas <span class="comment">#Gauge类型，每个ReplicationController的就绪副本数。</span></span><br><span class="line">kube_replicationcontroller_status_available_replicas <span class="comment">#Gauge类型，每个ReplicationController可用副本的数量。</span></span><br><span class="line">kube_replicationcontroller_status_observed_generation <span class="comment">#Gauge类型，ReplicationController控制器观察到的生成。</span></span><br><span class="line">kube_replicationcontroller_spec_replicas <span class="comment">#Gauge类型，ReplicationController所需的Pod数。</span></span><br><span class="line">kube_replicationcontroller_metadata_generation <span class="comment">#Gauge类型，代表所需状态的特定生成的序列号。</span></span><br><span class="line">kube_replicationcontroller_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_replicationcontroller_owner <span class="comment">#Gauge类型，有关ReplicationController所有者的信息。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-21-ResourceQuota-Metrics"><a href="#4-21-ResourceQuota-Metrics" class="headerlink" title="4.21 ResourceQuota Metrics"></a>4.21 ResourceQuota Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_resourcequota <span class="comment">#Gauge类型，有关资源配额的信息。</span></span><br><span class="line">kube_resourcequota_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-22-Secret-Metrics"><a href="#4-22-Secret-Metrics" class="headerlink" title="4.22 Secret Metrics"></a>4.22 Secret Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_secret_info <span class="comment">#Gauge类型，有关secret的信息。</span></span><br><span class="line">kube_secret_type <span class="comment">#Gauge类型，Type about secret.</span></span><br><span class="line">kube_secret_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_secret_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_secret_metadata_resource_version <span class="comment">#Gauge类型，代表secret特定版本的资源版本。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-23-Service-Metrics"><a href="#4-23-Service-Metrics" class="headerlink" title="4.23 Service Metrics"></a>4.23 Service Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_service_info <span class="comment">#Gauge类型，有关service的信息。</span></span><br><span class="line">kube_service_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_service_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_service_spec_type <span class="comment">#Gauge类型，Type about service.</span></span><br><span class="line">kube_service_spec_external_ip <span class="comment">#Gauge类型，服务外部IP。 每个IP一个组。</span></span><br><span class="line">kube_service_status_load_balancer_ingress <span class="comment">#Gauge类型，服务负载均衡器入口状态</span></span><br></pre></td></tr></table></figure>

<h3 id="4-24-Stateful-Set-Metrics"><a href="#4-24-Stateful-Set-Metrics" class="headerlink" title="4.24 Stateful Set Metrics"></a>4.24 Stateful Set Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_statefulset_status_replicas <span class="comment">#Gauge类型，每个StatefulSet的副本数。</span></span><br><span class="line">kube_statefulset_status_replicas_current <span class="comment">#Gauge类型，每个StatefulSet的当前副本数。</span></span><br><span class="line">kube_statefulset_status_replicas_ready <span class="comment">#Gauge类型，每个StatefulSet的就绪副本数。</span></span><br><span class="line">kube_statefulset_status_replicas_updated <span class="comment">#Gauge类型，每个StatefulSet的更新副本数。</span></span><br><span class="line">kube_statefulset_status_observed_generation <span class="comment">#Gauge类型，StatefulSet控制器观察到的生成。</span></span><br><span class="line">kube_statefulset_replicas <span class="comment">#Gauge类型，StatefulSet所需的pod数。</span></span><br><span class="line">kube_statefulset_metadata_generation <span class="comment">#Gauge类型，表示StatefulSet所需状态的特定生成的序列号。</span></span><br><span class="line">kube_statefulset_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_statefulset_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_statefulset_status_current_revision <span class="comment">#Gauge类型，指示用于按顺序[0，currentReplicas）生成Pod的StatefulSet的版本。</span></span><br><span class="line">kube_statefulset_status_update_revision <span class="comment">#Gauge类型，指示用于按顺序[replicas-updatedReplicas，replicas]生成Pod的StatefulSet的版本。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-25-StorageClass-Metrics"><a href="#4-25-StorageClass-Metrics" class="headerlink" title="4.25 StorageClass Metrics"></a>4.25 StorageClass Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_storageclass_info <span class="comment">#Gauge类型，有关storageclass的信息。</span></span><br><span class="line">kube_storageclass_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_storageclass_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-26-ValidatingWebhookConfiguration-Metrics"><a href="#4-26-ValidatingWebhookConfiguration-Metrics" class="headerlink" title="4.26 ValidatingWebhookConfiguration Metrics"></a>4.26 ValidatingWebhookConfiguration Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_validatingwebhookconfiguration_info <span class="comment">#Gauge类型，有关ValidatingWebhookConfiguration的信息。</span></span><br><span class="line">kube_validatingwebhookconfiguration_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_validatingwebhookconfiguration_metadata_resource_version <span class="comment">#Gauge类型，表示ValidatingWebhookConfiguration特定版本的资源版本。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-27-Vertical-Pod-Autoscaler-Metrics"><a href="#4-27-Vertical-Pod-Autoscaler-Metrics" class="headerlink" title="4.27 Vertical Pod Autoscaler Metrics"></a>4.27 Vertical Pod Autoscaler Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_verticalpodautoscaler_spec_resourcepolicy_container_policies_minallowed <span class="comment">#Gauge类型，VerticalPodAutoscaler可以为与名称匹配的容器设置的最小资源。</span></span><br><span class="line">kube_verticalpodautoscaler_spec_resourcepolicy_container_policies_maxallowed <span class="comment">#Gauge类型，VerticalPodAutoscaler可以为与名称匹配的容器设置的最大资源。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_lowerbound <span class="comment">#Gauge类型，在VerticalPodAutoscaler更新程序逐出容器之前，容器可以使用的最少资源。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target <span class="comment">#Gauge类型，VerticalPodAutoscaler为容器推荐的目标资源。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_uncappedtarget <span class="comment">#Gauge类型，VerticalPodAutoscaler建议的目标资源，用于忽略边界的容器。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_upperbound <span class="comment">#Gauge类型，在VerticalPodAutoscaler更新程序逐出容器之前，容器可以使用的最大资源。</span></span><br><span class="line">kube_verticalpodautoscaler_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_verticalpodautoscaler_spec_updatepolicy_updatemode <span class="comment">#Gauge类型，VerticalPodAutoscaler的更新模式。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-28-Vertical-Pod-Autoscaler-Metrics"><a href="#4-28-Vertical-Pod-Autoscaler-Metrics" class="headerlink" title="4.28 Vertical Pod Autoscaler Metrics"></a>4.28 Vertical Pod Autoscaler Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_verticalpodautoscaler_spec_resourcepolicy_container_policies_minallowed <span class="comment">#Gauge类型，VerticalPodAutoscaler可以为与名称匹配的容器设置的最小资源。</span></span><br><span class="line">kube_verticalpodautoscaler_spec_resourcepolicy_container_policies_maxallowed <span class="comment">#Gauge类型，VerticalPodAutoscaler可以为与名称匹配的容器设置的最大资源。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_lowerbound <span class="comment">#Gauge类型，在VerticalPodAutoscaler更新程序逐出容器之前，容器可以使用的最少资源。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_target <span class="comment">#Gauge类型，VerticalPodAutoscaler为容器推荐的目标资源。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_uncappedtarget <span class="comment">#Gauge类型，VerticalPodAutoscaler建议的目标资源，用于忽略边界的容器。</span></span><br><span class="line">kube_verticalpodautoscaler_status_recommendation_containerrecommendations_upperbound <span class="comment">#Gauge类型，在VerticalPodAutoscaler更新程序逐出容器之前，容器可以使用的最大资源。</span></span><br><span class="line">kube_verticalpodautoscaler_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_verticalpodautoscaler_spec_updatepolicy_updatemode <span class="comment">#Gauge类型，VerticalPodAutoscaler的更新模式。</span></span><br></pre></td></tr></table></figure>

<h3 id="4-29-VolumeAttachment-Metrics"><a href="#4-29-VolumeAttachment-Metrics" class="headerlink" title="4.29 VolumeAttachment Metrics"></a>4.29 VolumeAttachment Metrics</h3><p>Bash</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kube_volumeattachment_info <span class="comment">#Gauge类型，有关volumeattachment的信息。</span></span><br><span class="line">kube_volumeattachment_created <span class="comment">#Gauge类型，Unix创建时间戳。</span></span><br><span class="line">kube_volumeattachment_labels <span class="comment">#Gauge类型，Kubernetes标签转换为Prometheus标签。</span></span><br><span class="line">kube_volumeattachment_spec_source_persistentvolume <span class="comment">#Gauge类型，PersistentVolume源参考。</span></span><br><span class="line">kube_volumeattachment_status_attached <span class="comment">#Gauge类型，Information about volumeattachment. status</span></span><br><span class="line">kube_volumeattachment_status_attachment_metadata <span class="comment">#Gauge类型，volumeattachment metadata.</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus关于微服务的监控</title>
    <url>/2023/12/08/Prometheus%E5%85%B3%E4%BA%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%9B%91%E6%8E%A7/</url>
    <content><![CDATA[<p>       在微服务架构下随着服务越来越多，定位问题也变得越来越复杂，因此监控服务的运行状态以及针对异常状态及时的发出告警也成为微服务治理不可或缺的一环。服务的监控主要有日志监控、调用链路监控、指标监控等几种类型方式，其中指标监控在整个微服务监控中比重最高，也是实际生产中排查问题最重要的依赖。</p>
<p>指标监控又可以细分为多种类型:</p>
<p><strong>基础监控</strong>: 是针运行服务的基础设施的监控，比如容器、虚拟机、物理机等，监控的指标主要有内存的使用率，cpu 的使用率等资源的监控，通过对资源的监控和告警能够及时发现资源瓶颈从而进行扩容操作避免影响服务，同时针对资源的异常变化也能辅助定位服务问题，比如内存泄漏会导致内存异常。</p>
<p><strong>运行时监控</strong>: 运行时监控主要有 GC 的监控包括 GC 次数、GC 耗时，线程数量的监控等等。</p>
<p><strong>通用监控</strong>: 通用监控主要包括对流量和耗时的监控，通过流量的变化趋势可以清晰的了解到服务的流量高峰以及流量的增长情况，流量同时也是资源分配的重要参考指标。耗时是服务性能的直观体现，耗时比较大的服务我们往往需要进行优化，平均耗时往往参考价值不大，因为我们采取中位数，包括 90、95、99 值等。</p>
<p><strong>错误监控</strong>: 错误监控是服务健康状态的直观体现，主要包括请求返回的错误码，如 HTTP 的错误码 5xx、4xx，熔断、限流等等，通过对服务错误率的观察可以了解到服务当前的健康状态。</p>
<h2 id="一、pull方式接入"><a href="#一、pull方式接入" class="headerlink" title="一、pull方式接入"></a>一、pull方式接入</h2><h4 id="1-1、微服务网关监控"><a href="#1-1、微服务网关监控" class="headerlink" title="1.1、微服务网关监控"></a>1.1、微服务网关监控</h4><p>微服务网关接入监控，需要保证微服务网关集成了promethues。如果业务系统fork了网关的代码，也可以像1.2章节一样，在pom中添加依赖。</p>
<p><strong>STEP1:添加配置</strong></p>
<p>在配置中心gateway对应的namespace下添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &quot;prometheus&quot;</span><br><span class="line">  metrics:</span><br><span class="line">    tags:</span><br><span class="line">      application: $&#123;spring.application.name&#125;</span><br><span class="line">      podName: $&#123;HOSTNAME&#125;</span><br><span class="line">    distribution:</span><br><span class="line">      percentiles:</span><br><span class="line">        http.server.requests: 0.5,0.9,0.95,0.99</span><br></pre></td></tr></table></figure>

<p>注意：添加完成后保存，发布才能生效。 </p>
<p><strong>STEP2:验证</strong></p>
<p>启动项目，并根据ip:port&#x2F;actuator&#x2F;prometheus 访问，得到如下结果即为配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool</span><br><span class="line"># TYPE jvm_gc_max_data_size_bytes gauge</span><br><span class="line">jvm_gc_max_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 2.845310976E9</span><br><span class="line"># HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool</span><br><span class="line"># TYPE jvm_buffer_count_buffers gauge</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 11.0</span><br><span class="line"># HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool</span><br><span class="line"># TYPE jvm_buffer_total_capacity_bytes gauge</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP process_start_time_seconds Start time of the process since unix epoch.</span><br><span class="line"># TYPE process_start_time_seconds gauge</span><br><span class="line">process_start_time_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1.652236181116E9</span><br><span class="line"># HELP process_cpu_usage The &quot;recent cpu usage&quot; for the Java Virtual Machine process</span><br><span class="line"># TYPE process_cpu_usage gauge</span><br><span class="line">process_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 1.4355937217250055E-4</span><br><span class="line"># HELP log4j2_events_total Number of fatal level log events</span><br><span class="line"># TYPE log4j2_events_total counter</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;error&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;debug&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;fatal&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;info&quot;,&#125; 7.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;trace&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;warn&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_usage The &quot;recent cpu usage&quot; for the whole system</span><br><span class="line"># TYPE system_cpu_usage gauge</span><br><span class="line">system_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 0.08581370970137281</span><br><span class="line"># HELP tomcat_sessions_active_max_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_max_sessions gauge</span><br><span class="line">tomcat_sessions_active_max_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads</span><br><span class="line"># TYPE jvm_threads_live_threads gauge</span><br><span class="line">jvm_threads_live_threads&#123;application=&quot;polaris-client&quot;,&#125; 25.0</span><br><span class="line"># HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC</span><br><span class="line"># TYPE jvm_gc_memory_promoted_bytes_total counter</span><br><span class="line">jvm_gc_memory_promoted_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 5262472.0</span><br><span class="line"># HELP tomcat_sessions_active_current_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_current_sessions gauge</span><br><span class="line">tomcat_sessions_active_current_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_count The number of processors available to the Java virtual machine</span><br><span class="line"># TYPE system_cpu_count gauge</span><br><span class="line">system_cpu_count&#123;application=&quot;polaris-client&quot;,&#125; 8.0</span><br><span class="line"># HELP tomcat_sessions_expired_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_expired_sessions_total counter</span><br><span class="line">tomcat_sessions_expired_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_used_bytes The amount of used memory</span><br><span class="line"># TYPE jvm_memory_used_bytes gauge</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 5712960.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9707600.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.4643392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.16392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 3.3126456E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8354752.0</span><br><span class="line"># HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset</span><br><span class="line"># TYPE jvm_threads_peak_threads gauge</span><br><span class="line">jvm_threads_peak_threads&#123;application=&quot;polaris-client&quot;,&#125; 29.0</span><br><span class="line"># HELP jvm_threads_daemon_threads The current number of live daemon threads</span><br><span class="line"># TYPE jvm_threads_daemon_threads gauge</span><br><span class="line">jvm_threads_daemon_threads&#123;application=&quot;polaris-client&quot;,&#125; 21.0</span><br><span class="line"># HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next</span><br><span class="line"># TYPE jvm_gc_memory_allocated_bytes_total counter</span><br><span class="line">jvm_gc_memory_allocated_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 1.49866568E8</span><br><span class="line"># HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution</span><br><span class="line"># TYPE jvm_classes_unloaded_classes_total counter</span><br><span class="line">jvm_classes_unloaded_classes_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_created_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_created_sessions_total counter</span><br><span class="line">tomcat_sessions_created_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation</span><br><span class="line"># TYPE jvm_gc_live_data_size_bytes gauge</span><br><span class="line">jvm_gc_live_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 1.46352E7</span><br><span class="line"># HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool</span><br><span class="line"># TYPE jvm_buffer_memory_used_bytes gauge</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine</span><br><span class="line"># TYPE jvm_classes_loaded_classes gauge</span><br><span class="line">jvm_classes_loaded_classes&#123;application=&quot;polaris-client&quot;,&#125; 8473.0</span><br><span class="line"># HELP tomcat_sessions_rejected_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_rejected_sessions_total counter</span><br><span class="line">tomcat_sessions_rejected_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_alive_max_seconds  </span><br><span class="line"># TYPE tomcat_sessions_alive_max_seconds gauge</span><br><span class="line">tomcat_sessions_alive_max_seconds&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_states_threads The current number of threads having NEW state</span><br><span class="line"># TYPE jvm_threads_states_threads gauge</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;blocked&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;waiting&quot;,&#125; 12.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;terminated&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;new&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;runnable&quot;,&#125; 9.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;timed-waiting&quot;,&#125; 4.0</span><br><span class="line"># HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management</span><br><span class="line"># TYPE jvm_memory_max_bytes gauge</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 1.073741824E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 2.845310976E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; -1.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 1.400897536E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 2.5165824E8</span><br><span class="line"># HELP jvm_gc_pause_seconds Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds summary</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.006</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.008</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.03</span><br><span class="line"># HELP jvm_gc_pause_seconds_max Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds_max gauge</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use</span><br><span class="line"># TYPE jvm_memory_committed_bytes gauge</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 6340608.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.78782208E8</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.4875776E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 9.7517568E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8388608.0</span><br><span class="line"># HELP process_uptime_seconds The uptime of the Java virtual machine</span><br><span class="line"># TYPE process_uptime_seconds gauge</span><br><span class="line">process_uptime_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1527.975</span><br><span class="line"># HELP http_server_requests_seconds  </span><br><span class="line"># TYPE http_server_requests_seconds summary</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 10.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.015297999</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 1.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0066571</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 68.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 6.131796103</span><br><span class="line"># HELP http_server_requests_seconds_max  </span><br><span class="line"># TYPE http_server_requests_seconds_max gauge</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 0.0230935</span><br></pre></td></tr></table></figure>

<h4 id="1-2、微服务基础监控"><a href="#1-2、微服务基础监控" class="headerlink" title="1.2、微服务基础监控"></a>1.2、微服务基础监控</h4><p>微服务的监控，按以下步骤配置。</p>
<p><strong>STEP1:配置****指标</strong></p>
<p>如果微服务是使用脚手架创建的，则跳过STEP1，直接执行STEP2即可。</p>
<p>pom中添加依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--监控相关--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!--普罗米修斯相关--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.micrometer&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;micrometer-registry-prometheus&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--如果没有springboot web的依赖也要添加--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>


<p>在application.yml中添加如下配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &quot;prometheus&quot;</span><br><span class="line">  metrics:</span><br><span class="line">    tags:</span><br><span class="line">      application: $&#123;spring.application.name&#125;</span><br><span class="line">      podName: $&#123;HOSTNAME&#125;</span><br><span class="line">    distribution:</span><br><span class="line">      percentiles:</span><br><span class="line">        http.server.requests: 0.5,0.9,0.95,0.99</span><br></pre></td></tr></table></figure>


<p>若无spring.application.name 则需要添加如下配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: 服务名称</span><br></pre></td></tr></table></figure>


<p>启动项目，并根据ip:port&#x2F;${context-path}&#x2F;actuator&#x2F;prometheus 访问，得到如下结果即为配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool</span><br><span class="line"># TYPE jvm_gc_max_data_size_bytes gauge</span><br><span class="line">jvm_gc_max_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 2.845310976E9</span><br><span class="line"># HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool</span><br><span class="line"># TYPE jvm_buffer_count_buffers gauge</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 11.0</span><br><span class="line"># HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool</span><br><span class="line"># TYPE jvm_buffer_total_capacity_bytes gauge</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP process_start_time_seconds Start time of the process since unix epoch.</span><br><span class="line"># TYPE process_start_time_seconds gauge</span><br><span class="line">process_start_time_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1.652236181116E9</span><br><span class="line"># HELP process_cpu_usage The &quot;recent cpu usage&quot; for the Java Virtual Machine process</span><br><span class="line"># TYPE process_cpu_usage gauge</span><br><span class="line">process_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 1.4355937217250055E-4</span><br><span class="line"># HELP log4j2_events_total Number of fatal level log events</span><br><span class="line"># TYPE log4j2_events_total counter</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;error&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;debug&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;fatal&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;info&quot;,&#125; 7.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;trace&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;warn&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_usage The &quot;recent cpu usage&quot; for the whole system</span><br><span class="line"># TYPE system_cpu_usage gauge</span><br><span class="line">system_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 0.08581370970137281</span><br><span class="line"># HELP tomcat_sessions_active_max_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_max_sessions gauge</span><br><span class="line">tomcat_sessions_active_max_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads</span><br><span class="line"># TYPE jvm_threads_live_threads gauge</span><br><span class="line">jvm_threads_live_threads&#123;application=&quot;polaris-client&quot;,&#125; 25.0</span><br><span class="line"># HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC</span><br><span class="line"># TYPE jvm_gc_memory_promoted_bytes_total counter</span><br><span class="line">jvm_gc_memory_promoted_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 5262472.0</span><br><span class="line"># HELP tomcat_sessions_active_current_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_current_sessions gauge</span><br><span class="line">tomcat_sessions_active_current_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_count The number of processors available to the Java virtual machine</span><br><span class="line"># TYPE system_cpu_count gauge</span><br><span class="line">system_cpu_count&#123;application=&quot;polaris-client&quot;,&#125; 8.0</span><br><span class="line"># HELP tomcat_sessions_expired_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_expired_sessions_total counter</span><br><span class="line">tomcat_sessions_expired_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_used_bytes The amount of used memory</span><br><span class="line"># TYPE jvm_memory_used_bytes gauge</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 5712960.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9707600.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.4643392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.16392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 3.3126456E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8354752.0</span><br><span class="line"># HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset</span><br><span class="line"># TYPE jvm_threads_peak_threads gauge</span><br><span class="line">jvm_threads_peak_threads&#123;application=&quot;polaris-client&quot;,&#125; 29.0</span><br><span class="line"># HELP jvm_threads_daemon_threads The current number of live daemon threads</span><br><span class="line"># TYPE jvm_threads_daemon_threads gauge</span><br><span class="line">jvm_threads_daemon_threads&#123;application=&quot;polaris-client&quot;,&#125; 21.0</span><br><span class="line"># HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next</span><br><span class="line"># TYPE jvm_gc_memory_allocated_bytes_total counter</span><br><span class="line">jvm_gc_memory_allocated_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 1.49866568E8</span><br><span class="line"># HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution</span><br><span class="line"># TYPE jvm_classes_unloaded_classes_total counter</span><br><span class="line">jvm_classes_unloaded_classes_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_created_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_created_sessions_total counter</span><br><span class="line">tomcat_sessions_created_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation</span><br><span class="line"># TYPE jvm_gc_live_data_size_bytes gauge</span><br><span class="line">jvm_gc_live_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 1.46352E7</span><br><span class="line"># HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool</span><br><span class="line"># TYPE jvm_buffer_memory_used_bytes gauge</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine</span><br><span class="line"># TYPE jvm_classes_loaded_classes gauge</span><br><span class="line">jvm_classes_loaded_classes&#123;application=&quot;polaris-client&quot;,&#125; 8473.0</span><br><span class="line"># HELP tomcat_sessions_rejected_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_rejected_sessions_total counter</span><br><span class="line">tomcat_sessions_rejected_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_alive_max_seconds  </span><br><span class="line"># TYPE tomcat_sessions_alive_max_seconds gauge</span><br><span class="line">tomcat_sessions_alive_max_seconds&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_states_threads The current number of threads having NEW state</span><br><span class="line"># TYPE jvm_threads_states_threads gauge</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;blocked&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;waiting&quot;,&#125; 12.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;terminated&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;new&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;runnable&quot;,&#125; 9.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;timed-waiting&quot;,&#125; 4.0</span><br><span class="line"># HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management</span><br><span class="line"># TYPE jvm_memory_max_bytes gauge</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 1.073741824E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 2.845310976E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; -1.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 1.400897536E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 2.5165824E8</span><br><span class="line"># HELP jvm_gc_pause_seconds Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds summary</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.006</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.008</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.03</span><br><span class="line"># HELP jvm_gc_pause_seconds_max Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds_max gauge</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use</span><br><span class="line"># TYPE jvm_memory_committed_bytes gauge</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 6340608.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.78782208E8</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.4875776E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 9.7517568E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8388608.0</span><br><span class="line"># HELP process_uptime_seconds The uptime of the Java virtual machine</span><br><span class="line"># TYPE process_uptime_seconds gauge</span><br><span class="line">process_uptime_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1527.975</span><br><span class="line"># HELP http_server_requests_seconds  </span><br><span class="line"># TYPE http_server_requests_seconds summary</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 10.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.015297999</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 1.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0066571</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 68.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 6.131796103</span><br><span class="line"># HELP http_server_requests_seconds_max  </span><br><span class="line"># TYPE http_server_requests_seconds_max gauge</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 0.0230935</span><br></pre></td></tr></table></figure>


<p> ​</p>
<h4 id="1-3、自定义监控"><a href="#1-3、自定义监控" class="headerlink" title="1.3、自定义监控"></a>1.3、自定义监控</h4><p><strong>配置方式</strong></p>
<p>  自定义监控采用开发人员主动埋点的机制(Micrometer)，需在做完微服务监控的基础上，在项目中引入如下包：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.xxx.metrics&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;custom-metrics&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.0.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">引入此包，之前的spring-boot-starter-actuator和micrometer-registry-prometheus可以不引。</span><br></pre></td></tr></table></figure>


<p><strong>原理介绍</strong></p>
<p>  Micrometer埋点分为三部分：指标名称、指标值、指标标签。指标标签是这条指标数据的特征，可以用于这条指标数据的查询条件、分组key等。根据指标标签的查询或分组，可以对指标值进行计算。举例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">指标名称：高速收费站过站时长</span><br><span class="line">指标标签：收费站编码、高速路编码</span><br><span class="line">指标值：过站时长</span><br><span class="line"></span><br><span class="line">car_passby_time&#123;station=&quot;T1&quot;,highway=&quot;H1&quot;&#125; 30</span><br></pre></td></tr></table></figure>


<p>可以根据收费站编码、高速路编码进行筛选或者分组统计过站时长。</p>
<p><strong>使用方式</strong></p>
<p>  使用MetricsUtil的相关方法进行埋点。MetricsUtil目前只封装Micrometer最常用的counter指标，可以满足当前多数的业务需求，后期会继续扩展指标。举例如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MetricsUtil.errorCounter();</span><br><span class="line">在业务代码中打印ERROR日志的后面增加上述代码，即可实现默认的系统报错大盘</span><br><span class="line">建议应用使用统一的LoggerUtil类，在LoggerUtil.error中添加此行代码。</span><br><span class="line">后期会将此能力集成到脚手架中，再不需要开发者手动写此行代码。</span><br><span class="line"></span><br><span class="line">MetricsUtil.counter(String metricsName)</span><br><span class="line">累计计数，步长为1</span><br><span class="line">应用场景举例：输错账号密码的次数或速率。</span><br><span class="line">这行代码在系统中生效后，promethues就可以采集到的这个指标，然后在grafana中使用这个指标即可配置panel</span><br><span class="line"></span><br><span class="line">MetricsUtil.counter(String metricsName, double stepLength)</span><br><span class="line">累计计数，步长为N</span><br><span class="line"></span><br><span class="line">MetricsUtil.counter(String metricsName, Map&lt;String, String&gt; tagMap, double stepLength)</span><br><span class="line">如果需要指定指标标签，可以使用此方法，标签传入tagMap中，标签的k/v不能为空</span><br><span class="line"></span><br><span class="line">其他方法可以查看具体工具类的代码注释</span><br></pre></td></tr></table></figure>


<h3 id="监控指标说明"><a href="#监控指标说明" class="headerlink" title="监控指标说明"></a>监控指标说明</h3><p>指标与含义的对照表如下（仅供参考）：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>指标大类</td>
<td>指标名称</td>
<td>含义</td>
<td>说明</td>
</tr>
<tr>
<td>I&#x2F;O overview</td>
<td>Rate</td>
<td>io的qps</td>
<td></td>
</tr>
<tr>
<td>Errors</td>
<td>http状态码5xx的次数</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Duration</td>
<td>耗时（平均&#x2F;最大）</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Utilisation</td>
<td>tomcat网络线程数</td>
<td></td>
<td></td>
</tr>
<tr>
<td>JVM Memory</td>
<td>JVM Heap</td>
<td>堆内存使用量</td>
<td></td>
</tr>
<tr>
<td>JVM Non-Heap</td>
<td>非堆内存使用量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>JVM Total</td>
<td>内存总使用量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>JVM Process Memory</td>
<td>进程内存使用量</td>
<td>进程内存&#x3D;jvm内存+系统所占内存</td>
<td></td>
</tr>
<tr>
<td>JVM Misc</td>
<td>CPU Usage</td>
<td>CPU使用率</td>
<td></td>
</tr>
<tr>
<td>Load</td>
<td>load</td>
<td>线程在CPU排队队列中的数量</td>
<td></td>
</tr>
<tr>
<td>Threads</td>
<td>线程数</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Thread States</td>
<td>线程状态统计</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Log Events</td>
<td>error、warn、info、debug等级下日志的数量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>File Descriptors</td>
<td>系统打开的文件描述符数量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Garbage Collection</td>
<td>Collections</td>
<td>Minor gc可以理解为young gc Major gc可以近似理解为full gc</td>
<td>Allocation Failure和GCLocker Initiated GC指的是引起GC的原因</td>
</tr>
<tr>
<td>Pause Durations</td>
<td>各种gc的耗时</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Allocated&#x2F;Promoted</td>
<td>Allocated：分配内存的量 Promoted：提升到老年代的内存量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Classloading</td>
<td>Classes loaded</td>
<td>jvm内加载的class数量</td>
<td></td>
</tr>
<tr>
<td>Class delta</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Buffer Pools</td>
<td>Direct Buffers</td>
<td>jvm缓冲区计数缓冲区Direct Buffers数量</td>
<td></td>
</tr>
<tr>
<td>Mapped Buffers</td>
<td>jvm缓冲区计数缓冲区Mapped Buffers数量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>HTTP Edpoints</td>
<td>Total number of requests</td>
<td>各接口的按返回结果状态（200or500）的请求数量</td>
<td></td>
</tr>
<tr>
<td>Average inbound request duration</td>
<td>各接口的按返回结果状态（200or500）的接口平均耗时</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Maximum inbound request duration</td>
<td>各接口的按返回结果状态（200or500）的接口最大耗时</td>
<td></td>
<td></td>
</tr>
<tr>
<td>Sum of the duration of every request</td>
<td>此指标可以忽略</td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="二、push方式接入"><a href="#二、push方式接入" class="headerlink" title="二、push方式接入"></a>二、push方式接入</h2><h4 id="2-1、微服务网关监控"><a href="#2-1、微服务网关监控" class="headerlink" title="2.1、微服务网关监控"></a>2.1、微服务网关监控</h4><p>  微服务网关接入监控，需要保证微服务网关集成了promethues。如果业务系统fork了网关的代码，也可以像2.2章节一样，在pom中添加依赖。</p>
<p><strong>STEP1:添加配置</strong></p>
<p>在配置中心gateway对应的namespace下添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &quot;prometheus&quot;</span><br><span class="line">  metrics:</span><br><span class="line">    tags:</span><br><span class="line">      project: $&#123;app.id&#125;</span><br><span class="line">      application: $&#123;spring.application.name&#125;</span><br><span class="line">      podName: $&#123;HOSTNAME&#125;</span><br><span class="line">    distribution:</span><br><span class="line">      percentiles:</span><br><span class="line">        http.server.requests: 0.5,0.9,0.95,0.99</span><br><span class="line">    export:</span><br><span class="line">      prometheus:</span><br><span class="line">        pushgateway:</span><br><span class="line">          enabled: true</span><br><span class="line">          base-url: http://10.10.10.10:31883</span><br><span class="line">          push-rate: 15s</span><br><span class="line">          shutdown-operation: push</span><br><span class="line">          job: $&#123;HOSTNAME&#125;</span><br><span class="line">        </span><br><span class="line"> 注：</span><br><span class="line"> 1、base-url为pushgateway地址 </span><br><span class="line"> 2、app.id指的是应用ID，没有的可以自行在配置文件中加入app.id</span><br><span class="line"> 3、spring.application.name指的是微服务的名称，没有的可以自行在配置文件中加 </span><br><span class="line">    spring.application.name</span><br></pre></td></tr></table></figure>

<p>注意：添加完成后保存，发布才能生效。</p>
<p><strong>STEP2:验证</strong></p>
<p>启动项目，并根据ip:port&#x2F;actuator&#x2F;prometheus 访问，得到如下结果即为配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool</span><br><span class="line"># TYPE jvm_gc_max_data_size_bytes gauge</span><br><span class="line">jvm_gc_max_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 2.845310976E9</span><br><span class="line"># HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool</span><br><span class="line"># TYPE jvm_buffer_count_buffers gauge</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 11.0</span><br><span class="line"># HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool</span><br><span class="line"># TYPE jvm_buffer_total_capacity_bytes gauge</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP process_start_time_seconds Start time of the process since unix epoch.</span><br><span class="line"># TYPE process_start_time_seconds gauge</span><br><span class="line">process_start_time_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1.652236181116E9</span><br><span class="line"># HELP process_cpu_usage The &quot;recent cpu usage&quot; for the Java Virtual Machine process</span><br><span class="line"># TYPE process_cpu_usage gauge</span><br><span class="line">process_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 1.4355937217250055E-4</span><br><span class="line"># HELP log4j2_events_total Number of fatal level log events</span><br><span class="line"># TYPE log4j2_events_total counter</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;error&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;debug&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;fatal&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;info&quot;,&#125; 7.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;trace&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;warn&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_usage The &quot;recent cpu usage&quot; for the whole system</span><br><span class="line"># TYPE system_cpu_usage gauge</span><br><span class="line">system_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 0.08581370970137281</span><br><span class="line"># HELP tomcat_sessions_active_max_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_max_sessions gauge</span><br><span class="line">tomcat_sessions_active_max_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads</span><br><span class="line"># TYPE jvm_threads_live_threads gauge</span><br><span class="line">jvm_threads_live_threads&#123;application=&quot;polaris-client&quot;,&#125; 25.0</span><br><span class="line"># HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC</span><br><span class="line"># TYPE jvm_gc_memory_promoted_bytes_total counter</span><br><span class="line">jvm_gc_memory_promoted_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 5262472.0</span><br><span class="line"># HELP tomcat_sessions_active_current_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_current_sessions gauge</span><br><span class="line">tomcat_sessions_active_current_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_count The number of processors available to the Java virtual machine</span><br><span class="line"># TYPE system_cpu_count gauge</span><br><span class="line">system_cpu_count&#123;application=&quot;polaris-client&quot;,&#125; 8.0</span><br><span class="line"># HELP tomcat_sessions_expired_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_expired_sessions_total counter</span><br><span class="line">tomcat_sessions_expired_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_used_bytes The amount of used memory</span><br><span class="line"># TYPE jvm_memory_used_bytes gauge</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 5712960.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9707600.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.4643392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.16392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 3.3126456E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8354752.0</span><br><span class="line"># HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset</span><br><span class="line"># TYPE jvm_threads_peak_threads gauge</span><br><span class="line">jvm_threads_peak_threads&#123;application=&quot;polaris-client&quot;,&#125; 29.0</span><br><span class="line"># HELP jvm_threads_daemon_threads The current number of live daemon threads</span><br><span class="line"># TYPE jvm_threads_daemon_threads gauge</span><br><span class="line">jvm_threads_daemon_threads&#123;application=&quot;polaris-client&quot;,&#125; 21.0</span><br><span class="line"># HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next</span><br><span class="line"># TYPE jvm_gc_memory_allocated_bytes_total counter</span><br><span class="line">jvm_gc_memory_allocated_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 1.49866568E8</span><br><span class="line"># HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution</span><br><span class="line"># TYPE jvm_classes_unloaded_classes_total counter</span><br><span class="line">jvm_classes_unloaded_classes_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_created_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_created_sessions_total counter</span><br><span class="line">tomcat_sessions_created_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation</span><br><span class="line"># TYPE jvm_gc_live_data_size_bytes gauge</span><br><span class="line">jvm_gc_live_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 1.46352E7</span><br><span class="line"># HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool</span><br><span class="line"># TYPE jvm_buffer_memory_used_bytes gauge</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine</span><br><span class="line"># TYPE jvm_classes_loaded_classes gauge</span><br><span class="line">jvm_classes_loaded_classes&#123;application=&quot;polaris-client&quot;,&#125; 8473.0</span><br><span class="line"># HELP tomcat_sessions_rejected_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_rejected_sessions_total counter</span><br><span class="line">tomcat_sessions_rejected_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_alive_max_seconds  </span><br><span class="line"># TYPE tomcat_sessions_alive_max_seconds gauge</span><br><span class="line">tomcat_sessions_alive_max_seconds&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_states_threads The current number of threads having NEW state</span><br><span class="line"># TYPE jvm_threads_states_threads gauge</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;blocked&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;waiting&quot;,&#125; 12.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;terminated&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;new&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;runnable&quot;,&#125; 9.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;timed-waiting&quot;,&#125; 4.0</span><br><span class="line"># HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management</span><br><span class="line"># TYPE jvm_memory_max_bytes gauge</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 1.073741824E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 2.845310976E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; -1.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 1.400897536E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 2.5165824E8</span><br><span class="line"># HELP jvm_gc_pause_seconds Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds summary</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.006</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.008</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.03</span><br><span class="line"># HELP jvm_gc_pause_seconds_max Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds_max gauge</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use</span><br><span class="line"># TYPE jvm_memory_committed_bytes gauge</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 6340608.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.78782208E8</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.4875776E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 9.7517568E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8388608.0</span><br><span class="line"># HELP process_uptime_seconds The uptime of the Java virtual machine</span><br><span class="line"># TYPE process_uptime_seconds gauge</span><br><span class="line">process_uptime_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1527.975</span><br><span class="line"># HELP http_server_requests_seconds  </span><br><span class="line"># TYPE http_server_requests_seconds summary</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 10.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.015297999</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 1.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0066571</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 68.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 6.131796103</span><br><span class="line"># HELP http_server_requests_seconds_max  </span><br><span class="line"># TYPE http_server_requests_seconds_max gauge</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 0.0230935</span><br></pre></td></tr></table></figure>

<h4 id="2-2、微服务基础监控"><a href="#2-2、微服务基础监控" class="headerlink" title="2.2、微服务基础监控"></a>2.2、微服务基础监控</h4><p>微服务的监控，按以下步骤配置。</p>
<p><strong>STEP1:配置指标</strong></p>
<p>pom中添加依赖，请检查依赖中是否直接或间接引入了下列依赖包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--监控相关--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--普罗米修斯相关--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.micrometer&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;micrometer-registry-prometheus&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--如果没有springboot web的依赖也要添加--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!--指标的主动push--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;io.prometheus&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;simpleclient_pushgateway&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>在application.yml中添加如下配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">management:</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &quot;prometheus&quot;</span><br><span class="line">  metrics:</span><br><span class="line">    tags:</span><br><span class="line">      project: $&#123;app.id&#125;</span><br><span class="line">      application: $&#123;spring.application.name&#125;</span><br><span class="line">      podName: $&#123;HOSTNAME&#125;</span><br><span class="line">    distribution:</span><br><span class="line">      percentiles:</span><br><span class="line">        http.server.requests: 0.5,0.9,0.95,0.99</span><br><span class="line">    export:</span><br><span class="line">      prometheus:</span><br><span class="line">        pushgateway:</span><br><span class="line">          enabled: true</span><br><span class="line">          base-url: http://10.10.10.10:31883</span><br><span class="line">          push-rate: 15s</span><br><span class="line">          shutdown-operation: push</span><br><span class="line">          job: $&#123;HOSTNAME&#125;</span><br><span class="line">        </span><br><span class="line"> 注：</span><br><span class="line"> 1、base-url为pushgateway地址</span><br><span class="line"> 2、app.id指的是应用ID，没有的可以自行在配置文件中加入app.id。如已有应用ID，可以使用应用ID对应 </span><br><span class="line">    的key，请注意app.id是否会与系统中原有的key冲突</span><br><span class="line"> 3、spring.application.name指的是微服务的名称，没有的可以自行在配置文件中加入 </span><br><span class="line">    spring.application.name。如已有微服务名称，可以使用微服务名称对应的key，请注意 </span><br><span class="line">    spring.application.name是否会与系统中原有的key冲突</span><br></pre></td></tr></table></figure>

<p>启动项目，并根据ip:port&#x2F;${context-path}&#x2F;actuator&#x2F;prometheus 访问，得到如下结果即为配置成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP jvm_gc_max_data_size_bytes Max size of long-lived heap memory pool</span><br><span class="line"># TYPE jvm_gc_max_data_size_bytes gauge</span><br><span class="line">jvm_gc_max_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 2.845310976E9</span><br><span class="line"># HELP jvm_buffer_count_buffers An estimate of the number of buffers in the pool</span><br><span class="line"># TYPE jvm_buffer_count_buffers gauge</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_count_buffers&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 11.0</span><br><span class="line"># HELP jvm_buffer_total_capacity_bytes An estimate of the total capacity of the buffers in this pool</span><br><span class="line"># TYPE jvm_buffer_total_capacity_bytes gauge</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_total_capacity_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP process_start_time_seconds Start time of the process since unix epoch.</span><br><span class="line"># TYPE process_start_time_seconds gauge</span><br><span class="line">process_start_time_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1.652236181116E9</span><br><span class="line"># HELP process_cpu_usage The &quot;recent cpu usage&quot; for the Java Virtual Machine process</span><br><span class="line"># TYPE process_cpu_usage gauge</span><br><span class="line">process_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 1.4355937217250055E-4</span><br><span class="line"># HELP log4j2_events_total Number of fatal level log events</span><br><span class="line"># TYPE log4j2_events_total counter</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;error&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;debug&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;fatal&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;info&quot;,&#125; 7.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;trace&quot;,&#125; 0.0</span><br><span class="line">log4j2_events_total&#123;application=&quot;polaris-client&quot;,level=&quot;warn&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_usage The &quot;recent cpu usage&quot; for the whole system</span><br><span class="line"># TYPE system_cpu_usage gauge</span><br><span class="line">system_cpu_usage&#123;application=&quot;polaris-client&quot;,&#125; 0.08581370970137281</span><br><span class="line"># HELP tomcat_sessions_active_max_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_max_sessions gauge</span><br><span class="line">tomcat_sessions_active_max_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_live_threads The current number of live threads including both daemon and non-daemon threads</span><br><span class="line"># TYPE jvm_threads_live_threads gauge</span><br><span class="line">jvm_threads_live_threads&#123;application=&quot;polaris-client&quot;,&#125; 25.0</span><br><span class="line"># HELP jvm_gc_memory_promoted_bytes_total Count of positive increases in the size of the old generation memory pool before GC to after GC</span><br><span class="line"># TYPE jvm_gc_memory_promoted_bytes_total counter</span><br><span class="line">jvm_gc_memory_promoted_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 5262472.0</span><br><span class="line"># HELP tomcat_sessions_active_current_sessions  </span><br><span class="line"># TYPE tomcat_sessions_active_current_sessions gauge</span><br><span class="line">tomcat_sessions_active_current_sessions&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP system_cpu_count The number of processors available to the Java virtual machine</span><br><span class="line"># TYPE system_cpu_count gauge</span><br><span class="line">system_cpu_count&#123;application=&quot;polaris-client&quot;,&#125; 8.0</span><br><span class="line"># HELP tomcat_sessions_expired_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_expired_sessions_total counter</span><br><span class="line">tomcat_sessions_expired_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_used_bytes The amount of used memory</span><br><span class="line"># TYPE jvm_memory_used_bytes gauge</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 5712960.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9707600.0</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.4643392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.16392E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 3.3126456E7</span><br><span class="line">jvm_memory_used_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8354752.0</span><br><span class="line"># HELP jvm_threads_peak_threads The peak live thread count since the Java virtual machine started or peak was reset</span><br><span class="line"># TYPE jvm_threads_peak_threads gauge</span><br><span class="line">jvm_threads_peak_threads&#123;application=&quot;polaris-client&quot;,&#125; 29.0</span><br><span class="line"># HELP jvm_threads_daemon_threads The current number of live daemon threads</span><br><span class="line"># TYPE jvm_threads_daemon_threads gauge</span><br><span class="line">jvm_threads_daemon_threads&#123;application=&quot;polaris-client&quot;,&#125; 21.0</span><br><span class="line"># HELP jvm_gc_memory_allocated_bytes_total Incremented for an increase in the size of the (young) heap memory pool after one GC to before the next</span><br><span class="line"># TYPE jvm_gc_memory_allocated_bytes_total counter</span><br><span class="line">jvm_gc_memory_allocated_bytes_total&#123;application=&quot;polaris-client&quot;,&#125; 1.49866568E8</span><br><span class="line"># HELP jvm_classes_unloaded_classes_total The total number of classes unloaded since the Java virtual machine has started execution</span><br><span class="line"># TYPE jvm_classes_unloaded_classes_total counter</span><br><span class="line">jvm_classes_unloaded_classes_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_created_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_created_sessions_total counter</span><br><span class="line">tomcat_sessions_created_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_gc_live_data_size_bytes Size of long-lived heap memory pool after reclamation</span><br><span class="line"># TYPE jvm_gc_live_data_size_bytes gauge</span><br><span class="line">jvm_gc_live_data_size_bytes&#123;application=&quot;polaris-client&quot;,&#125; 1.46352E7</span><br><span class="line"># HELP jvm_buffer_memory_used_bytes An estimate of the memory that the Java virtual machine is using for this buffer pool</span><br><span class="line"># TYPE jvm_buffer_memory_used_bytes gauge</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;mapped&quot;,&#125; 0.0</span><br><span class="line">jvm_buffer_memory_used_bytes&#123;application=&quot;polaris-client&quot;,id=&quot;direct&quot;,&#125; 86016.0</span><br><span class="line"># HELP jvm_classes_loaded_classes The number of classes that are currently loaded in the Java virtual machine</span><br><span class="line"># TYPE jvm_classes_loaded_classes gauge</span><br><span class="line">jvm_classes_loaded_classes&#123;application=&quot;polaris-client&quot;,&#125; 8473.0</span><br><span class="line"># HELP tomcat_sessions_rejected_sessions_total  </span><br><span class="line"># TYPE tomcat_sessions_rejected_sessions_total counter</span><br><span class="line">tomcat_sessions_rejected_sessions_total&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP tomcat_sessions_alive_max_seconds  </span><br><span class="line"># TYPE tomcat_sessions_alive_max_seconds gauge</span><br><span class="line">tomcat_sessions_alive_max_seconds&#123;application=&quot;polaris-client&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_threads_states_threads The current number of threads having NEW state</span><br><span class="line"># TYPE jvm_threads_states_threads gauge</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;blocked&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;waiting&quot;,&#125; 12.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;terminated&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;new&quot;,&#125; 0.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;runnable&quot;,&#125; 9.0</span><br><span class="line">jvm_threads_states_threads&#123;application=&quot;polaris-client&quot;,state=&quot;timed-waiting&quot;,&#125; 4.0</span><br><span class="line"># HELP jvm_memory_max_bytes The maximum amount of memory in bytes that can be used for memory management</span><br><span class="line"># TYPE jvm_memory_max_bytes gauge</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 1.073741824E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 2.845310976E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; -1.0</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 1.400897536E9</span><br><span class="line">jvm_memory_max_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 2.5165824E8</span><br><span class="line"># HELP jvm_gc_pause_seconds Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds summary</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.006</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.008</span><br><span class="line">jvm_gc_pause_seconds_count&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 1.0</span><br><span class="line">jvm_gc_pause_seconds_sum&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.03</span><br><span class="line"># HELP jvm_gc_pause_seconds_max Time spent in GC pause</span><br><span class="line"># TYPE jvm_gc_pause_seconds_max gauge</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of minor GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Allocation Failure&quot;,&#125; 0.0</span><br><span class="line">jvm_gc_pause_seconds_max&#123;action=&quot;end of major GC&quot;,application=&quot;polaris-client&quot;,cause=&quot;Metadata GC Threshold&quot;,&#125; 0.0</span><br><span class="line"># HELP jvm_memory_committed_bytes The amount of memory in bytes that is committed for the Java virtual machine to use</span><br><span class="line"># TYPE jvm_memory_committed_bytes gauge</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Compressed Class Space&quot;,&#125; 6340608.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Survivor Space&quot;,&#125; 9961472.0</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Old Gen&quot;,&#125; 1.78782208E8</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Metaspace&quot;,&#125; 4.4875776E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;heap&quot;,id=&quot;PS Eden Space&quot;,&#125; 9.7517568E7</span><br><span class="line">jvm_memory_committed_bytes&#123;application=&quot;polaris-client&quot;,area=&quot;nonheap&quot;,id=&quot;Code Cache&quot;,&#125; 8388608.0</span><br><span class="line"># HELP process_uptime_seconds The uptime of the Java virtual machine</span><br><span class="line"># TYPE process_uptime_seconds gauge</span><br><span class="line">process_uptime_seconds&#123;application=&quot;polaris-client&quot;,&#125; 1527.975</span><br><span class="line"># HELP http_server_requests_seconds  </span><br><span class="line"># TYPE http_server_requests_seconds summary</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 10.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.015297999</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 1.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0066571</span><br><span class="line">http_server_requests_seconds_count&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 68.0</span><br><span class="line">http_server_requests_seconds_sum&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 6.131796103</span><br><span class="line"># HELP http_server_requests_seconds_max  </span><br><span class="line"># TYPE http_server_requests_seconds_max gauge</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/hc&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;CLIENT_ERROR&quot;,status=&quot;404&quot;,uri=&quot;/**&quot;,&#125; 0.0</span><br><span class="line">http_server_requests_seconds_max&#123;application=&quot;polaris-client&quot;,exception=&quot;None&quot;,method=&quot;GET&quot;,outcome=&quot;SUCCESS&quot;,status=&quot;200&quot;,uri=&quot;/actuator/prometheus&quot;,&#125; 0.0230935</span><br></pre></td></tr></table></figure>

<h2 id="三、监控k8s中微服务JVM与服务的自动发现"><a href="#三、监控k8s中微服务JVM与服务的自动发现" class="headerlink" title="三、监控k8s中微服务JVM与服务的自动发现"></a>三、监控k8s中微服务JVM与服务的自动发现</h2><p><strong>需求</strong>：业务方需要看到每个服务实例的JVM资源使用情况</p>
<p><strong>难点</strong>：1，每个服务实例在k8s中都是一个pod且分布在不同的namespace中数量成百上千<br>            2，prometheus监控需要服务提供metrics接口<br>            3，prometheus需要在配置文件中添加每个实例的metrics地址，因为pod的ip一直在变，所以配置文件写死了无法完成，需要配置自动发现</p>
<h4 id="3-1-修改pom"><a href="#3-1-修改pom" class="headerlink" title="3.1 修改pom"></a>3.1 修改pom</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- 用于集成actuator功能 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;spring-boot-starter-actuator&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 用于将actuator指标转换成prometheus可以解析的格式，并暴露为Http接口 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">   &lt;groupId&gt;io.micrometer&lt;/groupId&gt;</span><br><span class="line">   &lt;artifactId&gt;micrometer-registry-prometheus&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<h4 id="3-2-修改application-yml-properties"><a href="#3-2-修改application-yml-properties" class="headerlink" title="3.2 修改application.yml(.properties)"></a>3.2 修改application.yml(.properties)</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: test-app</span><br><span class="line"></span><br><span class="line"># 该配置用于将所有的actuator http endpoint暴露出来，并将actuator服务通过18081端口进行暴露，用于prometheus收集访问</span><br><span class="line">management:</span><br><span class="line">  server:</span><br><span class="line">    port: 18081</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: &#x27;*&#x27;</span><br><span class="line"></span><br><span class="line">metrics:</span><br><span class="line">  tags:</span><br><span class="line">    application: $&#123;spring.application.name&#125;</span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">management:</span><br><span class="line">  server:</span><br><span class="line">    port: 18081</span><br><span class="line">  endpoints:</span><br><span class="line">    web:</span><br><span class="line">      exposure:</span><br><span class="line">        include: prometheus, health</span><br><span class="line">  metrics:</span><br><span class="line">    export:</span><br><span class="line">      simple:</span><br><span class="line">        enabled: false</span><br><span class="line">    tags:</span><br><span class="line">      application: $&#123;spring.application.name&#125;</span><br><span class="line">      podName: $&#123;HOSTNAME&#125;</span><br><span class="line">    distribution:</span><br><span class="line">      percentiles:</span><br><span class="line">        http.server.requests: 0.5,0.9,0.95,0.99</span><br></pre></td></tr></table></figure>

<p>说明：这里建议通过设置 management. server. port 字段，单独为actuator开放端口访问。例如业务端口8080，actuator端口18081。主要目的是为了防止当8080端口的服务被负载均衡暴露到公网时，&#x2F;actuator 路径被访问到，从而导致安全风险。</p>
<p>访问如下能暴露出指标即为成功：</p>
<p><img src="https://img-blog.csdnimg.cn/ad73658295174252a6bf2fdf59a49264.png"></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus原理和使用介绍</title>
    <url>/2023/12/12/Prometheus%E5%8E%9F%E7%90%86%E5%92%8C%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<p>Prometheus是一个开源的监控和告警系统，于2016年加入了CNCF(Cloud Native Computing Foundation)基金会，成为了继kubernetes之后的第二个托管项目。</p>
<hr>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Prometheus是一个开源的监控和告警系统，于2016年加入了CNCF(Cloud Native Computing Foundation)基金会，成为了继kubernetes之后的第二个托管项目。在Kubernetes容器管理系统中，通常会搭配prometheus进行监控，同时也支持多种exporter采集数据。</p>
<p>Prometheus天然具有对容器的适配性，可非常方便的满足容器的监控需求，也可以用来监控传统资源。近年来随着kubernetes容器平台的火爆，Prometheus的热度也在不断上升，大有超越老牌监控系统Zabbix的趋势，目前已经在众多公司得到广泛使用。</p>
<p><strong>特点</strong></p>
<ul>
<li>多维度数据模型，这些数据是时间有序的，由metric指标名称和一系列键值对组成</li>
<li>灵活的查询语言-PromQL，支持对采集到的指标数据进行相加，相乘和连接等操作</li>
<li>可以存储在本地，而不依赖于分布式存储</li>
<li>可以基于HTTP来pull数据</li>
<li>也可以通过中间网关来push数据</li>
<li>可通过服务发现或者静态配置方式来发现目标服务对象</li>
<li>有多种可视化图形界面，如Grafana</li>
</ul>
<h3 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h3><p>Prometheus生态包含许多组件，主要是：</p>
<ol>
<li><em><strong>Server</strong></em><br>用于收集和存储时序数据。</li>
<li><em><strong>Client Libraries</strong></em><br>客户端库，用于检测应用程序代码，当Prometheus抓取实例的HTTP端点时，客户端库会将所有跟踪的metrics指标的当前状态发送到prometheus服务端。</li>
<li><em><strong>Push Gateway</strong></em><br>支持短期任务</li>
<li><em><strong>Exporter</strong></em><br>Prometheus支持多种exporter，通过exporter可以采集到metrics数据并发送到prometheus服务端。所有向prometheus提供监控数据的程序都可以被称为exporter。</li>
<li><em><strong>AlertManager</strong></em><br>对告警数据进行处理，包括分组，去重，路由给各个不同的接收方，如电子邮件等。</li>
<li><em><strong>可视化工具</strong></em><br>监控指标可视化工具，如grafana等。</li>
</ol>
<p>其中最主要的是Prometheus Server，负责数据采集和存储，提供PromQL查询语言支持。它包含了三个插件：</p>
<ul>
<li>Retrieval: 获取监控数据</li>
<li>TSDB: Time Series Database, 时间序列数据库，用于储存时序数据</li>
<li>HTTP Server: 为可视化界面或告警提供查询接口</li>
</ul>
<h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p><strong>服务发现</strong></p>
<p>Prometheus可通过多种方式发现要监控的资源列表，包括：</p>
<ul>
<li>用户提供的静态资源列表。</li>
<li>基于文件的发现。</li>
<li>自动发现，如使用DNS SRV记录来生成列表或通过查询Consul等配置中心获取信息。</li>
</ul>
<p><strong>指标收集</strong></p>
<p>Prometheus根据配置的job定时去拉取各个监控节点的数据，任何组件只要提供对应的HTTP接口就可以接入监控，不需要任务SDK或其他集成过程，非常适合虚拟化环境的监控，如kubernetes、Docker等。</p>
<p>默认的拉取方式为pull，也可以使用pushgateway提供的push方式获取各个监控节点的数据，并将获取到的数据存入TSDB。</p>
<p><strong>数据查询</strong></p>
<p>Prometheus提供一套内置的PromQL语言，其自带的Web-UI查询数据支持按条件表达式的方式查询相关监控数据。</p>
<p><strong>可视化</strong></p>
<p>Prometheus自带的Web-UI可支持图表展示，但功能及界面较简陋，常规方案是接入grafana进行展示和管理。</p>
<p><strong>聚合告警</strong></p>
<p>Prometheus Server没有内置告警工具，程序基于配置的rules发送告警信息到Alertmanager，由AlertManager对告警信息进行统一处理。</p>
<p>Alertmanager支持对告警信息进行聚合和收敛，并通过邮箱、短信、微信等多种告警方式发送给相关接收人。</p>
<h2 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h2><p>从<a href="https://prometheus.io/download">官网</a>下载并解压，然后进入文件夹，执行<code>./prometheus</code>即可启动。<br> 访问<code>localhost:9090</code>，可以看到ui界面。</p>
<h3 id="配置prometheus"><a href="#配置prometheus" class="headerlink" title="配置prometheus"></a>配置prometheus</h3><p>prometheus的配置文件即prometheus.yml默认如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># my global config</span><br><span class="line">global:</span><br><span class="line">  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line">  # scrape\_timeout is set to the global default (10s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">          # - alertmanager:9093</span><br><span class="line"></span><br><span class="line"># Load rules once and periodically evaluate them according to the global &#x27;evaluation\_interval&#x27;.</span><br><span class="line">rule_files:</span><br><span class="line">  # - &quot;first\_rules.yml&quot;</span><br><span class="line">  # - &quot;second\_rules.yml&quot;</span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line"># Here it&#x27;s Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line">  # The job name is added as a label `job=&lt;job\_name&gt;` to any timeseries scraped from this config.</span><br><span class="line">  - job_name: &quot;prometheus&quot;</span><br><span class="line"></span><br><span class="line">    # metrics\_path defaults to &#x27;/metrics&#x27;</span><br><span class="line">    # scheme defaults to &#x27;http&#x27;.</span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&quot;localhost:9090&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>从配置文件看主要有三块，分别是<code>global</code>,<code>rule_files</code>和<code>scrape_configs</code>.</p>
<p>其中，<code>global</code>主要控制Prometheus server的全局配置。配置文件中的两个参数分别表示从监控目标抓取数据和对告警规则进行计算的频率。</p>
<p><code>rule_files</code>指定了告警规则。</p>
<p><code>scrape_configs</code>控制prometheus监控的资源。</p>
<p>Prometheus自身的数据也通过HTTP端点对外暴露，所以甚至可以监控它自身的健康状况。在默认配置文件里有一个<code>prometheus</code>任务，该任务负责从Prometheus服务器上抓取时序数据。抓取路径为：<code>http://localhost:9090/metrics</code>. 访问该路径就能看到prometheus抓取的自身的数据，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.</span><br><span class="line"># TYPE go_gc_duration_seconds summary</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0&quot;&#125; 3.1208e-05</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0.25&quot;&#125; 7.8833e-05</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0.5&quot;&#125; 0.000214208</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0.75&quot;&#125; 0.000787042</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;1&quot;&#125; 0.002139667</span><br><span class="line">go_gc_duration_seconds_sum 0.008898208</span><br><span class="line">go_gc_duration_seconds_count 17</span><br><span class="line"># HELP go_goroutines Number of goroutines that currently exist.</span><br><span class="line"># TYPE go_goroutines gauge</span><br><span class="line">go_goroutines 35</span><br><span class="line"># HELP go_info Information about the Go environment.</span><br><span class="line"># TYPE go_info gauge</span><br><span class="line">go_info&#123;version=&quot;go1.18.3&quot;&#125; 1</span><br><span class="line"># HELP go_memstats_alloc_bytes Number of bytes allocated and still in use.</span><br><span class="line"># TYPE go_memstats_alloc_bytes gauge</span><br><span class="line">go_memstats_alloc_bytes 1.87376e+07</span><br><span class="line"># HELP go_memstats_alloc_bytes_total Total number of bytes allocated, even if freed.</span><br><span class="line"># TYPE go_memstats_alloc_bytes_total counter</span><br><span class="line">go_memstats_alloc_bytes_total 1.8971756e+08</span><br><span class="line">go_memstats_frees_total 340507</span><br><span class="line">...</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="指标查询表达式"><a href="#指标查询表达式" class="headerlink" title="指标查询表达式"></a>指标查询表达式</h4><p>默认的job收集的prometheus自身的监控指标(也就是<code>http://localhost:9090/metrics</code>看到的数据)名称为<code>promhttp_metric_handler_requests_total</code> ，表示访问<code>/metrics</code>的请求总数。</p>
<p>只需要在搜索框输入指标名称就能查看监控面板了：</p>
<p>这个指标里包含了不同的标签，如果只对返回码为200的请求感兴趣，可以这样写查询语句：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">promhttp_metric_handler_requests_total&#123;code=&quot;200&quot;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>如果想统计总数，可以这样写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">count(promhttp_metric_handler_requests_total)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>切换成图表(graph)展示，统计每秒钟返回状态码为200的请求数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rate(promhttp_metric_handler_requests_total&#123;code=&quot;200&quot;&#125;[1m])</span><br><span class="line"></span><br></pre></td></tr></table></figure>




<p>这里用prometheus监控自身的指标数据进行举例，但实际上，收集prometheus自身的指标数据并不是prometheus的目的，其最终目的是监控业务系统所在的服务器。具体内容将在下文介绍。</p>
<h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><h3 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h3><p>Prometheus存储的数据都是时序数据。</p>
<p>每条数序数据都是由指标名和一系列标签组成。<br> 指标名就是要监控的指标名称，比如<code>http_requests_total</code>表示http请求总数。指标名由数字、字母、下划线和冒号组成。</p>
<blockquote>
<p>注意：冒号是预留给用户自定义指标使用的，不能用在exporter或者监控对象直接暴露的指标中。</p>
</blockquote>
<p>标签可以从多维度来描述prometheus收集的数据。标签名可以由字母，数字或下划线组成。需要注意，以<code>__</code>开头的标签表示是内置标签。</p>
<p>标签值可以为空，此时表示该标签实际不存在。</p>
<p>下面是完整的prometheus数据的格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;metric name&gt;&#123;&lt;label name&gt;=&lt;label value&gt;, ...&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="指标统计类型"><a href="#指标统计类型" class="headerlink" title="指标统计类型"></a>指标统计类型</h3><p>Prometheus客户端库提供了四种指标统计类型，分别是：<code>Counter</code>, <code>Guage</code>, <code>Histogram</code>和<code>Summary</code>。</p>
<p><strong>Counter</strong><br> counter是一个计数器，且计数只能增加，不能减少。当系统重启时，计数则重新从0开始。</p>
<p>可以用counter来统计请求数或者错误数。不要用counter来统计可能减少的指标，如当前正在运行的进程。</p>
<p><strong>Gauge</strong><br> 相比于counter，gauge统计的指标可以减少。通常用来衡量温度或者当前使用的内存。</p>
<p><strong>Histogram</strong><br> 直方统计可以对观测到的样本值进行数量统计、总量统计和求和统计。通常用于统计请求耗时。举个栗子，假如有6个请求，耗时分别是：0.35s, 0.12s，0.21s, 1.1s, 1.2s, 2.3s。现对请求耗时request_time统计的结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[request_time]_bucket&#123;le=“1”&#125; = 3</span><br><span class="line">[request_time]_bucket&#123;le=“2”&#125; = 2</span><br><span class="line">[request_time]_bucket&#123;le=“3”&#125; = 1</span><br><span class="line">[request_time]_count = 6</span><br><span class="line">[request_time]_sum = 5.28</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在每个bucket中统计落在这个bucket中的数据样本数量，每个bucket都有一个范围界限，比如上面例子中<code>&#123;le=&quot;1&quot;]&#125;</code> 表示小于等于1的。</p>
<p><strong>Summary</strong><br> histogram只是做简单的分桶统计，而summary则是采样点分位数统计。</p>
<p>所谓分位数，就是百分比。Prometheus的分位数称为quantile，其实叫percentile更准确。</p>
<p>还是用请求时长举例，假设请求端点<code>/hello</code>，50%的请求在35ms内返回，90%的请求在94ms内返回，95%的请求在98ms内返回，99%的请求在100ms内返回。则统计结果为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">request_time&#123;endpoint=&quot;/hello&quot;, quantile=&quot;0.5&quot;&#125;  35</span><br><span class="line">request_time&#123;endpoint=&quot;/hello&quot;, quantile=&quot;0.9&quot;&#125;  94</span><br><span class="line">request_time&#123;endpoint=&quot;/hello&quot;, quantile=&quot;0.95&quot;&#125;  98</span><br><span class="line">request_time&#123;endpoint=&quot;/hello&quot;, quantile=&quot;0.99&quot;&#125;  100</span><br><span class="line">request_time_sum&#123;endpoint=&quot;/hell0&quot;&#125;  1393</span><br><span class="line">request_time_count&#123;endpoint=&quot;/hell0&quot;&#125;  32</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>其中，sum表示请求耗时综合，count表示请求次数。</p>
<p>百分位请求时长就是这样统计出来的。</p>
<h3 id="任务和实例"><a href="#任务和实例" class="headerlink" title="任务和实例"></a>任务和实例</h3><p>在Prometheus中，每一个提供样本数据的端点被称为一个实例。它可以是各种exporter，如node-exporter、mysql-exporter，也可以是你自己开发的一个服务。只要能提供符合prometheus要求的数据格式，并允许通过HTTP请求获取数据的端点都可称为实例。</p>
<p>而对于实例数据的采集，则是通过一个个任务来进行管理，每个任务都会管理一类相同业务的实例。</p>
<p>比如有一个Server任务：<code>api-server</code>，管理四个实例：<code>1.2.3.4:5670</code>, <code>1.2.3.4:5671</code>, <code>5.6.7.8:5670</code>, <code>5.6.7.8:5671</code>。</p>
<p>在上文介绍过，prometheus配置文件的最后一块是<code>scrape_configs</code>，就是用于管理任务的。</p>
<p>在控制台的<code>status</code>菜单中选择<code>Targets</code>就可以看到相关的任务实例了，其中<strong>Endpoint</strong>项代表该实例的采集地址，<strong>State</strong>为实例状态，<strong>Labels</strong>为实例所拥有的标签。</p>
<h4 id="Job配置"><a href="#Job配置" class="headerlink" title="Job配置"></a>Job配置</h4><p>每个job都有一个任务名称，也对应一个标签:{job&#x3D;“xxx”}。在搜索框中查询{job&#x3D;“prometheus”}，可以获取该任务相关的指标：  </p>
<p> Job支持自定义标签。将prometheus的任务管理改成如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">    - job_name: &quot;prometheus&quot;</span><br><span class="line">      static_configs:</span><br><span class="line">        - targets: [&quot;localhost:9090&quot;]</span><br><span class="line">          labels:</span><br><span class="line">             group: dev</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>重启prometheus，就能看到标签生效了：  </p>
<blockquote>
<p>注意，修改job后只对新抓取的数据有效</p>
</blockquote>
<p><em><strong>static_configs</strong></em></p>
<p><code>static_configs</code>为静态配置，需要手动在配置文件中填写targets的目标信息，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">   - job_name: &quot;myjob&quot;</span><br><span class="line">      static_configs:</span><br><span class="line">      	- targets:</span><br><span class="line">      	   - &#x27;192.168.0.1:9100&#x27;</span><br><span class="line">      	   - &#x27;192.168.0.2:9100&#x27;</span><br><span class="line">      	   - &#x27;192.168.0.3:9100&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>prometheus对于监控实例的加载，除了静态配置，还可以使用文件配置的方式。只需要在文件中配置好实例信息，然后在job中加载文件即可，文件格式必须是<code>yml</code>或<code>json</code>格式。</p>
<p><code>/opt/prom/nodex-info.yml</code>:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- targets:</span><br><span class="line">   - &#x27;192.168.0.1:9100&#x27;</span><br><span class="line">   - &#x27;192.168.0.2:9100&#x27;</span><br><span class="line">   - &#x27;192.168.0.3:9100&#x27;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">   - job_name: &quot;myjob&quot;</span><br><span class="line">      static_configs:</span><br><span class="line">      	- files:</span><br><span class="line">      	   - /opt/prom/nodex-info.yml</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>另外，prometheus也支持基于kubernetes、DNS或配置中心的服务自动发现方式。</p>
<p><em><strong>scrape_interval和scrape_timeout</strong></em></p>
<p>scrape_interval表示抓取数据的间隔时间，scrape_timeout一次抓取的超时时间，默认继承global全局配置。但如果有需求，也可以对单个Job定义自己的参数。如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;myjob&#x27;</span><br><span class="line">    scrape_interval: 15s</span><br><span class="line">    scrape_timeout: 10s</span><br><span class="line">    static_configs:</span><br><span class="line">       - targets: [&#x27;192.168.0.1:9100&#x27;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<blockquote>
<p>注意：scrape_timeout时间不能大于scrape_interval</p>
</blockquote>
<p><em><strong>metric_path</strong></em></p>
<p>指定抓取路径，如果不配置则默认为&#x2F;metrics。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;myjob&#x27;</span><br><span class="line">    scrape_interval: 15s</span><br><span class="line">    scrape_timeout: 10s</span><br><span class="line">    metric_path: /metrics</span><br><span class="line">    static_configs:</span><br><span class="line">       - targets: [&#x27;192.168.0.1:9100&#x27;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><em><strong>scheme</strong></em></p>
<p>指定采集所用协议，http或者https，默认为https。</p>
<p><em><strong>params</strong></em></p>
<p>某些特殊的exporter需要在请求中携带参数，如blackbox_exporter，可以通过params进行相关参数配置。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;myjob&#x27;</span><br><span class="line">    params:</span><br><span class="line">      module: [http_2xx]  </span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: [&#x27;192.168.0.1:9100&#x27;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><em><strong>basic_auth</strong></em></p>
<p>默认情况下，exporter不需要账号密码即可获取到相关监控数据，在某些安全要求较高的情况下，可能需要验证后才能获取监控数据，此时可通过basic_auth配置Prometheus的获取exporter信息时使用的账号密码。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;myjob&#x27; </span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: [&#x27;192.168.0.1:9100&#x27;]</span><br><span class="line">    basic_auth：</span><br><span class="line">      username: test</span><br><span class="line">      password: password</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="主机监控"><a href="#主机监控" class="headerlink" title="主机监控"></a>主机监控</h2><p>Prometheus使用各种Exporter来监控资源，exporter可以堪称是监控的agent端，它负责收集对应资源的指标，并提供接口给Prometheus读取。不同的监控资源对应不同的exporter，如node-exporter、mysql-exporter、black-exporter等，其中最常见的就是node-exporter。</p>
<p>node-exporter使用go语言编写，主要用来监控主机系统的各项性能参数，可收集各种主机指标，还可以自定义指标。</p>
<h3 id="安装node-exporter"><a href="#安装node-exporter" class="headerlink" title="安装node-exporter"></a>安装node-exporter</h3><p><strong>二进制安装</strong></p>
<p>下载安装包并解压：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ wget https://github.com/prometheus/node_exporter/releases/download/v1.1.2/node_exporter-1.1.2.linux-amd64.tar.gz</span><br><span class="line">$ tar -xvf tar -xvf node_exporter-1.1.2.linux-amd64.tar.gz </span><br><span class="line">$ cd node_exporter-1.1.2.linux-amd64</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<blockquote>
<p>注意，不同平台的安装包是不同的，这里是用linux平台举例。</p>
</blockquote>
<p>启动Node Exporter <code>$ ./node_exporter &amp;</code></p>
<p>访问：<code>http://ip:9100/metrics</code>，就可以看到node-exporter获取的指标了。</p>
<p><strong>docker安装</strong></p>
<p>官方不建议通过Docker方式部署node-exporter，因为它需要访问主机系统。 通过docker部署的方式，需要把任何非根安装点都绑定到容器中，并通过–path.rootfs参数指定。</p>
<p><code>docker run -d --net=&quot;host&quot; --pid=&quot;host&quot; -v &quot;/:/host:ro,rslave&quot; prom/node-exporter --path.rootfs=/host</code></p>
<p>部署完成后，访问节点地址：<a href="http://ip:9100/metrics%E5%8D%B3%E5%8F%AF%E3%80%82">http://ip:9100/metrics即可。</a></p>
<h3 id="配置node-exporter"><a href="#配置node-exporter" class="headerlink" title="配置node-exporter"></a>配置node-exporter</h3><p>node-exporter提供了不少配置参数，可使用–help查看。</p>
<p>如果只想启用需要的收集器，其他的全部禁用，可用如下格式配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--collector.disable-defaults --collector.&lt;name&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><strong>textfile收集器</strong></p>
<p>在node-exporter中通过–help命令可以看到有很多收集器，其中有一个特殊收集器是textfile。</p>
<p>textfile允许用户暴露自定义指标，这些指标或者是没有相关exporter可以使用，或者是你自己可开发的应用指标。</p>
<p>textfile通过扫描指定目录中的文件，提取所有符合prometheus数据格式的字符串，然后暴露给prometheus进行抓取。</p>
<p>创建一个文件，内容如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">busi_test&#123;server=&quot;test&quot;, service=&quot;query&quot;&#125; 1</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>启用textfile：<code>./node-exporter --collector.textfile.directory=&quot;/&#123;file_path&#125;&quot; &amp;</code></p>
<p>访问node-exporter的metrics地址，可看到指标已生效。</p>
<h3 id="prometheus抓取主机指标"><a href="#prometheus抓取主机指标" class="headerlink" title="prometheus抓取主机指标"></a>prometheus抓取主机指标</h3><p>在prometheus中配置node-exporter的job，即可抓取node-exporter收集到的指标数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &quot;node-exporter&quot;</span><br><span class="line">    scrape_interval: 10s</span><br><span class="line">    scrape_timeout: 10s</span><br><span class="line">    scheme: http</span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: [&quot;localhost:9100&quot;]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>访问prometheus并搜索<code>&#123;job=&quot;node-exporter&quot;&#125;</code>, 可查看node-exporter收集到的指标数据。</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>[1]. <a href="https://prometheus.io/docs/introduction/">https://prometheus.io/docs/introduction/</a><br> [2]. <a href="https://mafeifan.com/DevOps/Prometheus/">https://mafeifan.com/DevOps/Prometheus/</a><br> [3]. <a href="https://mafeifan.com/DevOps/Prometheus/">https://mafeifan.com/DevOps/Prometheus/</a><br> [4]. <a href="https://blog.51cto.com/u/_14065119/3327716">https://blog.51cto.com/u\_14065119/3327716</a></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus基本原理</title>
    <url>/2023/12/14/Prometheus%E5%9F%BA%E6%9C%AC%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="一、基本概念"><a href="#一、基本概念" class="headerlink" title="一、基本概念"></a>一、<strong>基本概念</strong></h2><p>　　Prometheus 是由前 Google 工程师从 2012 年开始在 Soundcloud 以开源软件的形式进行研发的系统监控和告警工具包，自此以后，许多公司和组织都采用了 Prometheus 作为监控告警工具。Prometheus 的开发者和用户社区非常活跃，它现在是一个独立的开源项目，可以独立于任何公司进行维护。为了证明这一点，Prometheus 于 2016 年 5 月加入 CNCF 基金会，成为继 Kubernetes 之后的第二个 CNCF 托管项目。</p>
<h3 id="1-1-架构图"><a href="#1-1-架构图" class="headerlink" title="1.1 架构图"></a>1.1 <strong>架构图</strong></h3><p>　　Prometheus Server 直接从监控目标中或者间接通过推送网关来拉取监控指标，它在本地存储所有抓取到的样本数据，并对此数据执行一系列规则，以汇总和记录现有数据的新时间序列或生成告警。可以通过 Grafana 或者其他工具来实现监控数据的可视化。</p>
<p>　　Prometheus的基本原理是通过HTTP协议周期性抓取被监控组件的状态，任意组件只要提供对应的HTTP接口就可以接入监控。不需要任何SDK或者其他的集成过程。这样做非常适合做虚拟化环境监控系统，比如VM、Docker、Kubernetes等。输出被监控组件信息的HTTP接口被叫做exporter 。目前互联网公司常用的组件大部分都有exporter可以直接使用，比如Varnish、Haproxy、Nginx、MySQL、Linux系统信息(包括磁盘、内存、CPU、网络等等)。</p>
<p>　　在Prometheus中，每一个暴露监控样本数据的HTTP服务称为一个实例。例如在当前主机上运行的node exporter可以被称为一个实例(Instance)。</p>
<h3 id="1-2-组件"><a href="#1-2-组件" class="headerlink" title="1.2 组件"></a>1.2 <strong>组件</strong></h3><h4 id="1-2-1-prometheus-server"><a href="#1-2-1-prometheus-server" class="headerlink" title="1.2.1 prometheus server"></a>1.2.1 <strong>prometheus server</strong></h4><p>　　负责数据的收集和存储，并且对外提供PromQL实现监控数据的查询以及聚合分析。</p>
<h4 id="1-2-2-Exporters"><a href="#1-2-2-Exporters" class="headerlink" title="1.2.2 Exporters"></a>1.2.2 <strong>Exporters</strong></h4><p>　　广义上讲所有可以向Prometheus提供监控样本数据的程序都可以被称为一个Exporter。而Exporter的一个实例称为target。Exporter将监控数据采集的端点通过HTTP服务的形式暴露给Prometheus Server，Prometheus Server通过访问该Exporter提供的Endpoint端点，即可获取到需要采集的监控数据。</p>
<p>　　一般来说可以将Exporter分为2类：</p>
<p>　　<strong>直接采集</strong>：这一类Exporter直接内置了对Prometheus监控的支持，比如cAdvisor，Kubernetes，Etcd，Gokit等，都直接内置了用于向Prometheus暴露监控数据的端点。</p>
<p>　　<strong>间接采集</strong>：间接采集，原有监控目标并不直接支持Prometheus，因此我们需要通过Prometheus提供的Client Library编写该监控目标的监控采集程序。例如： Mysql Exporter，JMX Exporter，Consul Exporter等。</p>
<p>　　从间接采集的Exporter的来源上来讲，主要分为两类：</p>
<ol>
<li><strong>社区提供</strong></li>
</ol>
<p>　　Prometheus社区提供了丰富的Exporter实现，涵盖了从基础设施，中间件以及网络等各个方面的监控功能。这些Exporter可以实现大部分通用的监控需求。下表列举一些社区中常用的Exporter：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>范围</strong></td>
<td><strong>常用Exporter</strong></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>数据库</td>
<td>MySQL Exporter, Redis Exporter, MongoDB Exporter, MSSQL Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>硬件</td>
<td>Apcupsd Exporter，IoT Edison Exporter， IPMI Exporter, Node Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>消息队列</td>
<td>Beanstalkd Exporter, Kafka Exporter, NSQ Exporter, RabbitMQ Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>存储</td>
<td>Ceph Exporter, Gluster Exporter, HDFS Exporter, ScaleIO Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>HTTP服务</td>
<td>Apache Exporter, HAProxy Exporter, Nginx Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>API服务</td>
<td>AWS ECS Exporter， Docker Cloud Exporter, Docker Hub Exporter, GitHub Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>日志</td>
<td>Fluentd Exporter, Grok Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>监控系统</td>
<td>Collectd Exporter, Graphite Exporter, InfluxDB Exporter, Nagios Exporter, SNMP Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>其它</td>
<td>Blockbox Exporter, JIRA Exporter, Jenkins Exporter， Confluence Exporter等</td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<ol>
<li><strong>用户自定义</strong></li>
</ol>
<p>　　除了直接使用社区提供的Exporter程序以外，用户还可以基于Prometheus提供的Client Library创建自己的Exporter程序，目前Promthues社区官方提供了对以下编程语言的支持：Go、Java&#x2F;Scala、Python、Ruby。同时还有第三方实现的如：Bash、C++、Common Lisp、Erlang,、Haskeel、Lua、Node.js、PHP、Rust等。</p>
<h4 id="1-2-3-client-libraries"><a href="#1-2-3-client-libraries" class="headerlink" title="1.2.3 client libraries"></a><strong>1.2.3 client libraries</strong></h4><p>　　顾名思义，用来生成自定义的exporters的java库。</p>
<h4 id="1-2-3-push-gateway"><a href="#1-2-3-push-gateway" class="headerlink" title="1.2.3 push gateway"></a>1.2.3 <strong>push gateway</strong></h4><p>　　由于Prometheus数据采集基于Pull模型进行设计，因此在网络环境的配置上必须要让Prometheus Server能够直接与Exporter进行通信。 当这种网络需求无法直接满足时（短周期或者临时采集的样本数据），就可以利用PushGateway来进行中转。可以通过PushGateway将内部网络的监控数据主动Push到Gateway当中。而Prometheus Server则可以采用同样Pull的方式从PushGateway中获取到监控数据。</p>
<p>　　<strong>推送数据的方式：</strong></p>
<p>　　1、API 方式 Push 数据到 PushGateway</p>
<p>　　2、用 Client SDK Push 数据到 Pushgateway</p>
<h4 id="1-2-4-Alertmanager"><a href="#1-2-4-Alertmanager" class="headerlink" title="1.2.4  Alertmanager"></a>1.2.4  <strong>Alertmanager</strong></h4><p>　　在Prometheus Server中支持基于PromQL创建告警规则，如果满足PromQL定义的规则，则会产生一条告警，而告警的后续处理流程则由AlertManager进行管理。在AlertManager中我们可以与邮件，Slack等等内置的通知方式进行集成，也可以通过Webhook自定义告警处理方式。AlertManager即Prometheus体系中的告警处理中心。</p>
<h4 id="1-2-5-various-support-tools"><a href="#1-2-5-various-support-tools" class="headerlink" title="1.2.5 various support tools"></a>1.2.5 <strong>various support tools</strong></h4><h3 id="1-3-特性"><a href="#1-3-特性" class="headerlink" title="1.3 特性"></a><strong>1.3 特性</strong></h3><p>　　1. 由指标名称和和键&#x2F;值对标签标识的时间序列数据组成的多维<a href="https://github.com/yangchuansheng/prometheus-handbook/tree/c6e1e12588ec63c20345090368b37654ef30922a/2-concepts/data_model.html">数据模型</a>。</p>
<p>　　2. 强大的<a href="https://github.com/yangchuansheng/prometheus-handbook/tree/c6e1e12588ec63c20345090368b37654ef30922a/4-prometheus/basics.html">查询语言 PromQL</a>。</p>
<p>　　3. 不依赖分布式存储；单个服务节点具有自治能力。</p>
<p>　　4. 时间序列数据是服务端通过 HTTP 协议主动拉取获得的。</p>
<p>　　5. 也可以通过中间网关来<a href="https://github.com/yangchuansheng/prometheus-handbook/tree/c6e1e12588ec63c20345090368b37654ef30922a/5-instrumenting/pushing.html">推送时间序列数据</a>。</p>
<p>　　6. 可以通过静态配置文件或服务发现来获取监控目标。</p>
<p>　　7. 支持多种类型的图表和仪表盘。  </p>
<p> 引自官网：</p>
<ol>
<li>a multi-dimensional <a href="https://prometheus.io/docs/concepts/data_model/">data model</a> with time series data identified by metric name and key&#x2F;value pairs;</li>
<li>PromQL, a <a href="https://prometheus.io/docs/prometheus/latest/querying/basics/">flexible query language</a> to leverage this dimensionality;</li>
<li>no reliance on distributed storage; single server nodes are autonomous;</li>
<li>time series collection happens via a pull model over HTTP;</li>
<li><a href="https://prometheus.io/docs/instrumenting/pushing/">pushing time series</a> is supported via an intermediary gateway;</li>
<li>targets are discovered via service discovery or static configuration;</li>
<li>multiple modes of graphing and dashboarding support.</li>
</ol>
<h3 id="1-4-数据类型"><a href="#1-4-数据类型" class="headerlink" title="1.4 数据类型"></a><strong>1.4 数据类型</strong></h3><p>　　为了能够帮助用户理解和区分这些不同监控指标之间的差异，Prometheus定义了4中不同的指标类型（metric type）：Counter（计数器）、Gauge（仪表盘）、Histogram（直方图）、Summary（摘要）。Summary和Histogram的用法基本保持一致（主用用于统计和分析样本的分布情况），区别在于Summary可以指定在客户端统计的分位数。</p>
<h3 id="1-5-适用范围"><a href="#1-5-适用范围" class="headerlink" title="1.5 适用范围"></a><strong>1.5 适用范围</strong></h3><ol>
<li>When does it fit?</li>
</ol>
<p>　　Prometheus 适用于记录文本格式的时间序列，它既适用于以机器为中心的监控，也适用于高度动态的面向服务架构的监控。在微服务的世界中，它对多维数据收集和查询的支持有特殊优势。</p>
<p>　　Prometheus 是专为提高系统可靠性而设计的，它可以在断电期间快速诊断问题，每个 Prometheus Server 都是相互独立的，不依赖于网络存储或其他远程服务。当基础架构出现故障时，你可以通过 Prometheus 快速定位故障点，而且不会消耗大量的基础架构资源。</p>
<ol>
<li>When does it not fit?</li>
</ol>
<p>　　Prometheus 非常重视可靠性，即使在出现故障的情况下，你也可以随时查看有关系统的可用统计信息。如果你需要百分之百的准确度，例如按请求数量计费，那么 Prometheus 不太适合你，因为它收集的数据可能不够详细完整。这种情况下，你最好使用其他系统来收集和分析数据以进行计费，并使用 Prometheus 来监控系统的其余部分。</p>
<h3 id="1-6-配置文件"><a href="#1-6-配置文件" class="headerlink" title="1.6 配置文件"></a><strong>1.6 配置文件</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 # my global config</span><br><span class="line"> 2 </span><br><span class="line"> 3 global:</span><br><span class="line"> 4 </span><br><span class="line"> 5   scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line"> 6 </span><br><span class="line"> 7   evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line"> 8 </span><br><span class="line"> 9   # scrape_timeout is set to the global default (10s).</span><br><span class="line">10 </span><br><span class="line">11 # Alertmanager configuration</span><br><span class="line">12 </span><br><span class="line">13 alerting:</span><br><span class="line">14 </span><br><span class="line">15   alertmanagers:</span><br><span class="line">16 </span><br><span class="line">17   - static_configs:</span><br><span class="line">18 </span><br><span class="line">19     - targets:</span><br><span class="line">20 </span><br><span class="line">21       # - alertmanager:9093</span><br><span class="line">22 </span><br><span class="line">23 # Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span><br><span class="line">24 </span><br><span class="line">25 rule_files:</span><br><span class="line">26 </span><br><span class="line">27   # - &quot;first_rules.yml&quot;</span><br><span class="line">28 </span><br><span class="line">29   # - &quot;second_rules.yml&quot;</span><br><span class="line">30 </span><br><span class="line">31 # A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line">32 </span><br><span class="line">33 # Here it&#x27;s Prometheus itself.</span><br><span class="line">34 </span><br><span class="line">35 scrape_configs:</span><br><span class="line">36 </span><br><span class="line">37   # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><br><span class="line">38 </span><br><span class="line">39 - job_name: &#x27;prometheus&#x27;   </span><br><span class="line">40 </span><br><span class="line">41     # metrics_path defaults to &#x27;/metrics&#x27;</span><br><span class="line">42 </span><br><span class="line">43 # scheme defaults to &#x27;http&#x27;</span><br><span class="line">44 </span><br><span class="line">45     static_configs:</span><br><span class="line">46 </span><br><span class="line">47         - targets: [&#x27;localhost:9090&#x27;]</span><br></pre></td></tr></table></figure>

<p>其中scrape_config包含一个或多个job(即job_name)，每一个Job可以对应多个Instance,即配置文件中的targets. 通过Prometheus UI可以更直观的看到其中的关系。</p>
<h2 id="二、存储"><a href="#二、存储" class="headerlink" title="二、存储"></a>二、<strong>存储</strong></h2><h3 id="2-1-本地存储"><a href="#2-1-本地存储" class="headerlink" title="2.1  本地存储"></a><strong>2.1  本地存储</strong></h3><p>　　Prometheus 2.x 采用自定义的存储格式将样本数据保存在本地磁盘当中。如下所示，按照两个小时（最少时间）为一个时间窗口，将两小时内产生的数据存储在一个块(Block)中，每一个块中包含该时间窗口内的所有样本数据(chunks)，元数据文件(meta.json)以及索引文件(index)。</p>
<p>　　最新写入的数据保存在内存block中，达到2小时后写入磁盘。为了防止程序崩溃导致数据丢失，实现了WAL（write-ahead-log）机制，启动时会以写入日志(WAL)的方式来实现重播，从而恢复数据。</p>
<p>在文件系统中这些块保存在单独的目录当中，Prometheus保存块数据的目录结构如下所示：如上所示，Prometheus 2.x采用自定义的存储格式将样本数据保存在本地磁盘当中。按照两个小时为一个时间窗口，将两小时内产生的数据存储在一个块（Block）中，每一个块中包含该时间窗口内的所有样本数据（chunks），元数据文件（meta.json）以及索引文件（index）。</p>
<p>　　当前时间窗口内正在收集的样本数据，Prometheus则会直接将数据保存在内存当中。为了确保此期间如果Prometheus发生崩溃或者重启时能够恢复数据，Prometheus启动时会从写入日志（WAL）进行重播，从而恢复数据。此期间如果通过API删除时间序列，删除记录也会保存在单独的逻辑文件当中（tombstone）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./data</span><br><span class="line"></span><br><span class="line">   |- 01BKGV7JBM69T2G1BGBGM6KB12 # 块</span><br><span class="line"></span><br><span class="line">      |- meta.json  # 元数据</span><br><span class="line"></span><br><span class="line">      |- wal       # 写入日志</span><br><span class="line"></span><br><span class="line">        |- 000002</span><br><span class="line"></span><br><span class="line">        |- 000001</span><br><span class="line"></span><br><span class="line">   |- 01BKGTZQ1SYQJTR4PB43C8PD98  # 块</span><br><span class="line"></span><br><span class="line">      |- meta.json  #元数据</span><br><span class="line"></span><br><span class="line">      |- index   # 索引文件</span><br><span class="line"></span><br><span class="line">      |- chunks  # 样本数据</span><br><span class="line"></span><br><span class="line">        |- 000001</span><br><span class="line"></span><br><span class="line">      |- tombstones # 逻辑数据</span><br><span class="line"></span><br><span class="line">   |- 01BKGTZQ1HHWHV8FBJXW1Y3W0K</span><br><span class="line"></span><br><span class="line">      |- meta.json</span><br><span class="line"></span><br><span class="line">      |- wal</span><br><span class="line"></span><br><span class="line">        |-00000</span><br></pre></td></tr></table></figure>

<p>　　通过时间窗口的形式保存所有的样本数据，可以明显提高Prometheus的查询效率，当查询一段时间范围内的所有样本数据时，只需要简单的从落在该范围内的块中查询数据即可。而对于历史数据的删除，也变得非常简单，只要删除相应块所在的目录即可。</p>
<p>对于单节点的Prometheus而言，这种基于本地文件系统的存储方式能够让其支持数以百万的监控指标，每秒处理数十万的数据点。为了保持自身管理和部署的简单性，Prometheus放弃了管理HA的复杂度。</p>
<h3 id="2-2-远程存储"><a href="#2-2-远程存储" class="headerlink" title="2.2 远程存储"></a><strong>2.2 远程存储</strong></h3><p>　　Prometheus的本地存储设计可以减少其自身运维和管理的复杂度，同时能够满足大部分用户监控规模的需求。但是本地存储也意味着Prometheus无法持久化数据，无法存储大量历史数据，同时也无法灵活扩展和迁移。</p>
<p>为了保持Prometheus的简单性，Prometheus并没有尝试在自身中解决以上问题，而是通过定义两个标准接口(remote_write&#x2F;remote_read)，让用户可以基于这两个接口对接将数据保存到任意第三方的存储服务中，这种方式在Promthues中称为Remote Storage。</p>
<h4 id="2-2-1-Remote-Write"><a href="#2-2-1-Remote-Write" class="headerlink" title="2.2.1 Remote Write"></a><strong>2.2.1 Remote Write</strong></h4><p>　　用户可以在Prometheus配置文件中指定Remote Write(远程写)的URL地址，一旦设置了该配置项，Prometheus将采集到的样本数据通过HTTP的形式发送给适配器(Adaptor)。而用户则可以在适配器中对接外部任意的服务。外部服务可以是真正的存储系统，公有云的存储服务，也可以是消息队列等任意形式。</p>
<h4 id="2-2-2-Remote-Read"><a href="#2-2-2-Remote-Read" class="headerlink" title="2.2.2 Remote Read"></a><strong>2.2.2 Remote Read</strong></h4><p>　　如下图所示，Promthues的Remote Read(远程读)也通过了一个适配器实现。在远程读的流程当中，当用户发起查询请求后，Promthues将向remote_read中配置的URL发起查询请求(matchers,ranges)，Adaptor根据请求条件从第三方存储服务中获取响应的数据。同时将数据转换为Promthues的原始样本数据返回给Prometheus Server。</p>
<p>　　当获取到样本数据后，Promthues在本地使用PromQL对样本数据进行二次处理。</p>
<h2 id="三、集群与高可用"><a href="#三、集群与高可用" class="headerlink" title="三、集群与高可用"></a>三、<strong>集群与高可用</strong></h2><h3 id="3-1-联邦集群"><a href="#3-1-联邦集群" class="headerlink" title="3.1 联邦集群"></a><strong>3.1 联邦集群</strong></h3><p>　　如下图所示，在每个数据中心部署单独的Prometheus Server，用于采集当前数据中心监控数据。并由一个中心的Prometheus Server负责聚合多个数据中心的监控数据。这一特性在Promthues中称为联邦集群。</p>
<h3 id="3-2-Prometheus高可用方案"><a href="#3-2-Prometheus高可用方案" class="headerlink" title="3.2 Prometheus高可用方案"></a><strong>3.2 Prometheus高可用方案</strong></h3><h4 id="3-2-1-基本HA：服务可用性"><a href="#3-2-1-基本HA：服务可用性" class="headerlink" title="3.2.1****基本HA：服务可用性"></a><strong>3.2.1****基本HA：服务可用性</strong></h4><p>　　基本的HA模式只能确保Promthues服务的可用性问题，但是不解决Prometheus Server之间的数据一致性问题以及持久化问题(数据丢失后无法恢复)，也无法进行动态的扩展。因此这种部署方式适合监控规模不大，Promthues Server也不会频繁发生迁移的情况，并且只需要保存短周期监控数据的场景。</p>
<h4 id="3-2-2-基本HA-远程存储"><a href="#3-2-2-基本HA-远程存储" class="headerlink" title="3.2.2 基本HA + 远程存储"></a><strong>3.2.2 基本HA + 远程存储</strong></h4><p>　　在解决了Promthues服务可用性的基础上，同时确保了数据的持久化，当Promthues Server发生宕机或者数据丢失的情况下，可以快速的恢复。 同时Promthues Server可能很好的进行迁移。因此，该方案适用于用户监控规模不大，但是希望能够将监控数据持久化，同时能够确保Promthues Server的可迁移性的场景。</p>
<h4 id="3-2-3-基本HA-远程存储-联邦集群"><a href="#3-2-3-基本HA-远程存储-联邦集群" class="headerlink" title="3.2.3 基本HA + 远程存储 + 联邦集群"></a><strong>3.2.3 基本HA + 远程存储 + 联邦集群</strong></h4><p><strong>这种部署方式一般适用于两种场景：</strong></p>
<p><strong>场景一：单数据中心 + 大量的采集任务</strong></p>
<p>　　这种场景下Promthues的性能瓶颈主要在于大量的采集任务，因此用户需要利用Prometheus联邦集群的特性，将不同类型的采集任务划分到不同的Promthues子服务中，从而实现功能分区。例如一个Promthues Server负责采集基础设施相关的监控指标，另外一个Prometheus Server负责采集应用监控指标。再有上层Prometheus Server实现对数据的汇聚。</p>
<p><strong>场景二：多数据中心</strong></p>
<p>　　这种模式也适合与多数据中心的情况，当Promthues Server无法直接与数据中心中的Exporter进行通讯时，在每一个数据中部署一个单独的Promthues Server负责当前数据中心的采集任务是一个不错的方式。这样可以避免用户进行大量的网络配置，只需要确保主Promthues Server实例能够与当前数据中心的Prometheus Server通讯即可。 中心Promthues Server负责实现对多数据中心数据的聚合。</p>
<h4 id="3-2-4-按照实例进行功能分区"><a href="#3-2-4-按照实例进行功能分区" class="headerlink" title="3.2.4 按照实例进行功能分区"></a><strong>3.2.4</strong> <strong>按照实例进行功能分区</strong></h4><p>　　这时在考虑另外一种极端情况，即单个采集任务的Target数也变得非常巨大。这时简单通过联邦集群进行功能分区，Prometheus Server也无法有效处理时。这种情况只能考虑继续在实例级别进行功能划分。</p>
<p>　　如上图所示，将统一任务的不同实例的监控数据采集任务划分到不同的Prometheus实例。通过relabel设置，我们可以确保当前Prometheus Server只收集当前采集任务的一部分实例的监控指标。</p>
<h3 id="3-3-高可用方案选择"><a href="#3-3-高可用方案选择" class="headerlink" title="3.3 高可用方案选择"></a><strong>3.3 高可用方案选择</strong></h3><p>　　上面的部分，根据不同的场景演示了3种不同的高可用部署方案。当然对于Promthues部署方案需要用户根据监控规模以及自身的需求进行动态调整，下表展示了Promthues和高可用有关3个选项各自解决的问题，用户可以根据自己的需求灵活选择。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>选项\需求</td>
<td>服务可用性</td>
<td>数据持久化</td>
<td>水平扩展</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>主备HA</td>
<td>v</td>
<td>x</td>
<td>x</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>远程存储</td>
<td>x</td>
<td>v</td>
<td>x</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>联邦集群</td>
<td>x</td>
<td>x</td>
<td>v</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h2 id="四、服务发现"><a href="#四、服务发现" class="headerlink" title="四、服务发现"></a>四、<strong>服务发现</strong></h2><h3 id="4-1-Prometheus与服务发现"><a href="#4-1-Prometheus与服务发现" class="headerlink" title="4.1 Prometheus与服务发现"></a><strong>4.1</strong> <strong>Prometheus与服务发现</strong></h3><p>　　云原生、容器场景下按需的资源使用方式对于监控系统而言就意味着没有了一个固定的监控目标，所有的监控对象(基础设施、应用、服务)都在动态的变化，这对基于Push模式传统监控软件带来挑战。</p>
<p>　　对于Prometheus这一类基于Pull模式的监控系统，显然也无法继续使用的static_configs的方式静态的定义监控目标。而对于Prometheus而言其解决方案就是引入一个中间的代理人（服务注册中心），这个代理人掌握着当前所有监控目标的访问信息，Prometheus只需要向这个代理人询问有哪些监控目标控即可， 这种模式被称为服务发现。 </p>
<p>**<br>4.2**<strong>基于文件的服务发现</strong>通过服务发现的方式，管理员可以在不重启Prometheus服务的情况下动态的发现需要监控的Target实例信息。</p>
<p>　　用户可以通过JSON或者YAML格式的文件，定义所有的监控目标。例如，在下面的JSON文件中分别定义了3个采集任务，以及每个任务对应的Target列表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">    &quot;targets&quot;: [ &quot;localhost:8080&quot;],</span><br><span class="line"></span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line"></span><br><span class="line">      &quot;env&quot;: &quot;localhost&quot;,</span><br><span class="line"></span><br><span class="line">      &quot;job&quot;: &quot;cadvisor&quot;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">    &quot;targets&quot;: [ &quot;localhost:9104&quot; ],</span><br><span class="line"></span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line"></span><br><span class="line">      &quot;env&quot;: &quot;prod&quot;,</span><br><span class="line"></span><br><span class="line">      &quot;job&quot;: &quot;mysqld&quot;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  &#123;</span><br><span class="line"></span><br><span class="line">    &quot;targets&quot;: [ &quot;localhost:9100&quot;],</span><br><span class="line"></span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line"></span><br><span class="line">      &quot;env&quot;: &quot;prod&quot;,</span><br><span class="line"></span><br><span class="line">      &quot;job&quot;: &quot;node&quot;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>　　创建Prometheus配置文件&#x2F;etc&#x2F;prometheus&#x2F;prometheus-file-sd.yml，并添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line"></span><br><span class="line">  scrape_interval: 15s</span><br><span class="line"></span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line"></span><br><span class="line">  evaluation_interval: 15s</span><br><span class="line"></span><br><span class="line">scrape_configs:</span><br><span class="line"></span><br><span class="line">- job_name: &#x27;file_ds&#x27;</span><br><span class="line"></span><br><span class="line">  file_sd_configs:</span><br><span class="line"></span><br><span class="line">- refresh_interval: 1m</span><br><span class="line"></span><br><span class="line">   files:</span><br><span class="line"></span><br><span class="line">    - targets.json</span><br></pre></td></tr></table></figure>

<p>　　通过这种方式，Prometheus会自动的周期性读取文件中的内容。当文件中定义的内容发生变化时，不需要对Prometheus进行任何的重启操作。</p>
<h3 id="4-3-基于Consul的服务发现"><a href="#4-3-基于Consul的服务发现" class="headerlink" title="4.3****基于Consul的服务发现"></a><strong>4.3****基于Consul的服务发现</strong></h3><p>　　Consul是由HashiCorp开发的一个支持多数据中心的分布式服务发现和键值对存储服务的开源软件，被大量应用于基于微服务的软件架构当中。</p>
<p>　　Consul作为一个通用的服务发现和注册中心，记录并且管理了环境中所有服务的信息。Prometheus通过与Consul的交互可以获取到相应Exporter实例的访问信息。在Prometheus的配置文件当可以通过以下方式与Consul进行集成：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: node_exporter</span><br><span class="line"></span><br><span class="line">    metrics_path: /metrics</span><br><span class="line"></span><br><span class="line">    scheme: http</span><br><span class="line"></span><br><span class="line">    consul_sd_configs:</span><br><span class="line"></span><br><span class="line">      - server: localhost:8500 #指定了consul的访问地址</span><br><span class="line"></span><br><span class="line">        services:   #为注册到consul中的实例信息</span><br><span class="line"></span><br><span class="line">          - node_exporter</span><br><span class="line"></span><br><span class="line">- cadvisor</span><br></pre></td></tr></table></figure>

<p>　　在consul_sd_configs定义当中通过server定义了Consul服务的访问地址，services则定义了当前需要发现哪些类型服务实例的信息，这里限定了只获取node_exporter和cadvisor的服务实例信息。 </p>
<h3 id="4-4-服务发现与Relabel"><a href="#4-4-服务发现与Relabel" class="headerlink" title="4.4****服务发现与Relabel"></a><strong>4.4****服务发现与Relabel</strong></h3><p>　　如何过滤选择Target实例？relabel</p>
<p>　　目前为止，只要是注册到Consul上的Node Exporter或者cAdvisor实例是可以自动添加到Prometheus的Target当中。现在请考虑下面的场景：</p>
<p>　　对于线上环境我们可能会划分为:dev, stage, prod不同的集群。每一个集群运行多个主机节点，每个服务器节点上运行一个Node Exporter实例。Node Exporter实例会自动测试到服务注册中心Consul服务当中，Prometheus会根据Consul返回的Node Exporter实例信息产生Target列表，并且向这些Target轮训数据。</p>
<p>　　<strong>然而，如果我们可能还需要</strong>：</p>
<p>　　1.需要按照不同的环境dev, stage, prod聚合监控数据？</p>
<p>　　2.对于研发团队而言，我可能只关心dev环境的监控数据？</p>
<p>　　3.为每一个团队单独搭建一个Prometheus Server？ 如何让不同团队的Prometheus Server采集不同的环境监控数据？</p>
<p>　　Relabel可以在Prometheus采集数据之前，通过Target实例的Metadata信息，动态重新写入Label的值。除此之外，我们还能根据Target实例的Metadata信息选择是否采集或者忽略该Target实例。</p>
<p>　　在默认情况下，我们从所有环境的Node Exporter中采集到的主机指标如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_cpu&#123;cpu=&quot;cpu0&quot;,instance=&quot;172.21.0.3:9100&quot;,job=&quot;consul_sd&quot;,mode=&quot;guest&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>　　基于Consul动态发现的Target实例，具有以下Metadata信息： </p>
<ul>
<li>__meta_consul_address: consul地址</li>
<li>__meta_consul_dc: consul中服务所在的数据中心</li>
<li>__meta_consul_metadata_: 服务的metadata</li>
<li>__meta_consul_node: 服务所在consul节点的信息</li>
<li>__meta_consul_service_address: 服务访问地址</li>
<li>__meta_consul_service_id: 服务ID</li>
<li>__meta_consul_service_port: 服务端口</li>
<li>__meta_consul_service: 服务名称</li>
<li>__meta_consul_tags: 服务包含的标签信息</li>
</ul>
<p>　　在Prometheus UI中，也可以直接查看target的metadata信息。</p>
<p>　　这里我们使用__meta_consul_dc信息来标记当前target所在的data center。并且通过regex来匹配source_label的值，使用replacement来选择regex表达式匹配到的mach group。通过action来告诉prometheus在采集数据之前，需要将replacement的内容写入到target_label dc当中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_configs:</span><br><span class="line">  - job_name: consul_sd</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels:  [&quot;__meta_consul_dc&quot;]</span><br><span class="line">      regex: &quot;(.*)&quot;</span><br><span class="line">      replacement: $1</span><br><span class="line">      action: replace</span><br><span class="line">      target_label: &quot;dc&quot;</span><br></pre></td></tr></table></figure>

<p>　　对于直接保留标签的值时，也可以简化为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- source_labels:  [&quot;__meta_consul_dc&quot;]</span><br><span class="line">  target_label: &quot;dc&quot;</span><br></pre></td></tr></table></figure>

<p>　　查询Prometheus查询监控数据,所有metrics都被写入了所在的数据中心标签dc</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_cpu&#123;cpu=&quot;cpu0&quot;,dc=&quot;dc1&quot;,instance=&quot;172.21.0.6:9100&quot;,job=&quot;consul_sd&quot;,mode=&quot;guest&quot;&#125;    0</span><br></pre></td></tr></table></figure>

<p>　　当需要过滤target目标时，我们则将action定义为keep或者drop。在Job的配置当中使用一下配置，当匹配到target的元数据标签__meta_consul_tags中匹配到”.,development,.“,则keep当前实例。 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [&quot;__meta_consul_tags&quot;]</span><br><span class="line">  regex: &quot;.*,development,.*&quot;</span><br><span class="line">  action: keep</span><br></pre></td></tr></table></figure>

<p><strong>总结：</strong></p>
<p>　　通过relabeling可以在写入metrics数据之前，动态修改metrics的label；</p>
<p>　　通过relabeling可以对target实例进行过滤和选择。</p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus存储原理</title>
    <url>/2023/12/14/Prometheus%E5%AD%98%E5%82%A8%E5%8E%9F%E7%90%86/</url>
    <content><![CDATA[<h2 id="一、整体介绍"><a href="#一、整体介绍" class="headerlink" title="一、整体介绍"></a>一、整体介绍</h2><p>Prometheus 2.x 采用自定义的存储格式将样本数据保存在本地磁盘当中。如下所示，按照两个小时（最少时间）为一个时间窗口，将两小时内产生的数据存储在一个块(Block)中，每一个块中包含该时间窗口内的所有样本数据(chunks)，元数据文件(meta.json)以及索引文件(index)。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[mingming.chen@m162p65 data]$ tree</span><br><span class="line">.</span><br><span class="line">├── 01E2MA5GDWMP69GVBVY1W5AF1X</span><br><span class="line">│   ├── chunks               # 保存压缩后的时序数据，每个chunks大小为512M，超过会生成新的chunks</span><br><span class="line">│   │   └── 000001</span><br><span class="line">│   ├── index                # chunks中的偏移位置</span><br><span class="line">│   ├── meta.json            # 记录block块元信息，比如 样本的起始时间、chunks数量和数据量大小等</span><br><span class="line">│   └── tombstones           # 通过API方式对数据进行软删除,将删除记录存储在此处（API的删除方式，并不是立即将数据从chunks文件中移除）</span><br><span class="line">├── 01E2MH175FV0JFB7EGCRZCX8NF</span><br><span class="line">│   ├── chunks</span><br><span class="line">│   │   └── 000001</span><br><span class="line">│   ├── index</span><br><span class="line">│   ├── meta.json</span><br><span class="line">│   └── tombstones</span><br><span class="line">├── 01E2MQWYDFQAXXPB3M1HK6T20A</span><br><span class="line">│   ├── chunks</span><br><span class="line">│   │   └── 000001</span><br><span class="line">│   ├── index</span><br><span class="line">│   ├── meta.json</span><br><span class="line">│   └── tombstones</span><br><span class="line">├── lock</span><br><span class="line">├── queries.active</span><br><span class="line">└── wal                      #防止数据丢失(数据收集上来暂时是存放在内存中,wal记录了这些信息)</span><br><span class="line">    ├── 00000366             #每个数据段最大为128M，存储默认存储两个小时的数据量。</span><br><span class="line">    ├── 00000367</span><br><span class="line">    ├── 00000368</span><br><span class="line">    ├── 00000369</span><br><span class="line">    └── checkpoint.000365</span><br><span class="line">        └── 00000000</span><br></pre></td></tr></table></figure>

<h2 id="二、block"><a href="#二、block" class="headerlink" title="二、block"></a>二、block</h2><p>TSDB将存储的监控数据按照时间分成多个block存储,默认最小的block保存时间为2h,后台程序还会将小块合并成大块，减少内存中block的数量，便于索引查找数据，可以通过meta.json查看，可以看到01E2MA5GDWMP69GVBVY1W5AF1X被压缩1次，source有3个block，那么2*3&#x3D;6小时的数据量。</p>
<p><strong>关于block压缩：</strong></p>
<ol>
<li>最初的两个小时的块最终会在后台压缩为更长时间的块；</li>
<li>压缩的最大时间块为数据保留时间的10%或者31天，取两者的较小者。</li>
</ol>
<h3 id="2-1-head-block"><a href="#2-1-head-block" class="headerlink" title="2.1 head block"></a>2.1 head block</h3><p>1.head block中的数据是被存储在内存中的并且可以被任意修改;<br>2.head block和后续的block初始设定保存2h数据，当head block超过3h时，会被拆分为2h+1h，2h block会变成只读块写入磁盘.(通过观察服务器上prometheus存储目录，每次压缩合并小块时间都比块内部时间多三个小时,为head block)，如下所示：</p>
<h2 id="三、WAL-Write-ahead-logging-预写日志"><a href="#三、WAL-Write-ahead-logging-预写日志" class="headerlink" title="三、WAL(Write-ahead logging, 预写日志)"></a>三、WAL(Write-ahead logging, 预写日志)</h2><p>Prometheus为了防止丢失暂存在内存中的还未被写入磁盘的监控数据，引入了WAL机制。WAL被分割成默认大小为128M的文件段（segment），之前版本默认大小是256M，文件段以数字命名，长度为8位的整形。WAL的写入单位是页（page），每页的大小为32KB，所以每个段大小必须是页的大小的整数倍。如果WAL一次性写入的页数超过一个段的空闲页数，就会创建一个新的文件段来保存这些页，从而确保一次性写入的页不会跨段存储。</p>
<h3 id="3-1-数据流向"><a href="#3-1-数据流向" class="headerlink" title="3.1 数据流向"></a>3.1 数据流向</h3><p>prometheus将周期性采集到的数据通过Add接口添加到head block，但是这些数据暂时没有持久化，TSDB通过WAL将数据保存到磁盘上(保存的数据没有压缩，占用内存较大)，当出现宕机，启动多协程读取WAL，恢复数据。</p>
<h2 id="四、和存储相关的启动参数"><a href="#四、和存储相关的启动参数" class="headerlink" title="四、和存储相关的启动参数"></a>四、和存储相关的启动参数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--storage.tsdb.path: This determines where Prometheus writes its database. Defaults to data/.</span><br><span class="line">--storage.tsdb.retention.time: This determines when to remove old data. Defaults to 15d. Overrides storage.tsdb.retention if this flag is set to anything other than default.</span><br><span class="line">--storage.tsdb.retention.size: [EXPERIMENTAL] This determines the maximum number of bytes that storage blocks can use (note that this does not include the WAL size, which can be substantial). The oldest data will be removed first. Defaults to 0 or disabled. This flag is experimental and can be changed in future releases. Units supported: KB, MB, GB, PB. Ex: &quot;512MB&quot;</span><br><span class="line">--storage.tsdb.retention: This flag has been deprecated in favour of storage.tsdb.retention.time.</span><br><span class="line">--storage.tsdb.wal-compression: This flag enables compression of the write-ahead log (WAL). Depending on your data, you can expect the WAL size to be halved with little extra cpu load. Note that if you enable this flag and subsequently downgrade Prometheus to a version below 2.11.0 you will need to delete your WAL as it will be unreadable.</span><br></pre></td></tr></table></figure>

<p>PS: 以上有两个参数storage.tsdb.retention.size和storage.tsdb.retention.time，两个同时设置时，两者无优先级，谁先触发就执行删除操作。（其它启动参数参考<a href="http://c.100credit.cn/display/pps/promethes#promethes-promethes">promethes#promethes</a> 第五章节启动参数部分）</p>
<h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>需要解决的几个问题：</p>
<p>1.远程存储节点长时间挂掉（默认blocK大小为2小时，实际大于六小时，prometheus2.15经测试验证非官方文档说的两个小时），刷盘到prometheus的数据库中的数据还能不能同步到远程？</p>
<p>2.WAL的缓存数据的时间可不可以调整？</p>
<p>解答：</p>
<p>1.根据以上内容和3.远程写参数优化可知，prometheus本地存储和远程存储并无影响。因为远程存储是通过将WAL中的数据缓存到多个内存队列（shards）中，然后写到远程存储设备，其直接与WAL打交道。而prometheus只是用WAL来防止数据丢失，其存储的一系列动作都与WAL没关系。所以当内存中缓存的数据达到刷盘的阈值，WAL中没有写到远程存储的数据就会丢失，当重新启动远程存储服务，原来那部分没有写入远程存储服务的数据已经丢失，只能从最新的数据开始写入远程存储，这部分可参考3.远程写参数优化2.2部分结论。</p>
<p>2. 可以调整，准确来说是间接调整。wal保留数据的长短与prometheus最小压缩block大小有关系，由于wal中至少保留当前时间正在写入的文件之外的三个文件（每个文件保存一个block大小的数据量），所以当增大block大小的时候就会相应的增大wal保存的数据量，但是，block的大小调整会直接影响内存的使用，需要根据现有的环境进行相应的调优。</p>
<p>如下图所示，当我设置–storage.tsdb.min-block-duration&#x3D;4h(prometheus的启动参数)时，wal中当前保留的文件（存在的数据时间范围：2023.03.20 14:00:00–2023.03.20 18:00:00），其中每个文件保留4个小时的数据量。</p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus指标数据缺失的告警处理</title>
    <url>/2023/12/29/Prometheus%E6%8C%87%E6%A0%87%E6%95%B0%E6%8D%AE%E7%BC%BA%E5%A4%B1%E7%9A%84%E5%91%8A%E8%AD%A6%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p>无论哪种监控系统，都会基于采集的数据进行告警规则的配置。无论是传统监控系统的代表<strong>zabbix</strong>，还是云原生时代的监控利器<strong>prometheus</strong>，以及其他监控系统，<strong>数据缺失问题</strong>(即<strong>nodata</strong>)是都需要面对的问题</p>
<p><strong>01 问题</strong></p>
<p>首先解释一下本文提到的指标缺失场景，在使用过程中有两种情况: </p>
<ul>
<li><p>一种是在配置告警规则的时候，该指标数据就不是全量数据；例如配置宕机告警时，使用_<strong>up&#x3D;&#x3D;0</strong>_作为告警规则，某一台主机由于各种原因，指标 up 的数据一直不存在。</p>
<p>这种带来的问题就是缺失的指标永远不会告警。</p>
</li>
<li><p>一种则是在告警规配置的时候，指标数据是完整的，当在告警生效一段时间以后，且发出异常告警之后，出现指标数据缺失的问题。例如配置 <em><strong>mem_used_percent &gt; 90</strong></em>(内存使用率超过90%告警)，某台设备已经超限并且触发了告警规则，此时服务器由于网络原因，没能上报数据，导致数据缺失。</p>
<p>这种带来的问题就是可能出现假恢复的情况。</p>
</li>
</ul>
<p><strong>02 解决方法</strong></p>
<p>zabbix系统中一般采用nodata触发器，当监控项出现nodata，通过设置触发器来触发报警或执行其他操作。open-falcon中则是有对指定指标进行赋值，即在出现数据终端时填充配置的值，一般配置-1，即配置一个该指标正常情况下不可能出现的数据。</p>
<p>在prometheus中目前还没有提供这种功能，因此我们只能从告警规则入手,希望通过告警规则的一些额外的配置，尽可能达到解决nodata的问题；或者进行其他一些告警后处理的工作；特殊场景下的一些处理。以下将从笔者的生产角度来描述是如何解决这类问题的。</p>
<p><strong>从规则入手</strong></p>
<p>从规则入手解决nodata的一个核心问题就是如何获取<strong>全量数据</strong>，所谓全量数据就是能够覆盖nodata的数据，即告警规则中必定包含一个全量的指标，这个指标一般不会缺失。</p>
<p>这种情况下用到的主要prometheus的_<strong>unless</strong>_方法。</p>
<p><em><strong>unless 用法：</strong></em></p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">vector1 <span class="keyword">unless</span> vector2</span><br></pre></td></tr></table></figure>

<p>会产生一个新的向量，新向量中的元素由vector1中没有与vector2匹配的元素组成。</p>
<p>在创建规则的时候vector1一般表示全量指标，及一般不会有数据缺时的情况，例如对于服务器宕机告警，我们结合<strong>CMDB</strong>创建一个全量的指标，nodata_up。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">nodata_up&#123;<span class="attr">ip</span>=<span class="string">&quot;192.168.1.1&quot;</span>&#125; <span class="number">0</span>nodata_up&#123;ip=<span class="string">&quot;192.168.1.2&quot;</span>&#125; <span class="number">0</span>nodata_up&#123;ip=<span class="string">&quot;192.168.1.3&quot;</span>&#125; <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p>当up查询的时候返回的结果为</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">up&#123;<span class="attr">ip</span>=<span class="string">&quot;192.168.1.1&quot;</span>&#125; <span class="number">1</span>up&#123;ip=<span class="string">&quot;192.168.1.2&quot;</span>&#125; <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>即192.168.1.3目前没有数据，则通过</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">nodata_up unless <span class="built_in">on</span>(ip) up or up !=<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>即可以获得数据缺失的节点，这样可以达到当节点宕机时进行正常,当节点192.168.1.3没有数据时也可以触发告警。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">nodata_up&#123;<span class="attr">ip</span>=<span class="string">&quot;192.168.1.3&quot;</span>&#125; <span class="number">0</span></span><br></pre></td></tr></table></figure>

<p><strong>告警后处理</strong></p>
<p>如果有一定开发能力或者会简单脚本处理的，可以看看这一部分，这里主要是用于告警异常已经发生以后，由于数据缺失造成假恢复的情况，例如我们对服务器上内存使用率进行监控告警，并用指标sys_mem_used_percent表示内存使用率，并配置了如下的告警规则，当内存使用率高于90%时告警。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">sys_mem_used_percent&#123;<span class="attr">ip</span>=<span class="string">&quot;192.168.1.3&quot;</span>&#125; &gt; <span class="number">90</span></span><br></pre></td></tr></table></figure>

<p>当触发告警规则并告警以后，在中间的某一个时间段内如果出现sys_mem_used_percent指标没有数据，prometheus规则会认为告警已经恢复，因此会出现告警假恢复的情况。</p>
<p>promethues的源码中是这样的：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">func (r *AlertingRule) Eval(ctx context<span class="selector-class">.Context</span>, ts <span class="selector-tag">time</span><span class="selector-class">.Time</span>, query QueryFunc, externalURL *url<span class="selector-class">.URL</span>, limit int) (promql<span class="selector-class">.Vector</span>, error) &#123;</span><br><span class="line">    res, err := <span class="built_in">query</span>(ctx, r.vector.<span class="built_in">String</span>(), ts)&#123;</span><br><span class="line">    ...</span><br><span class="line">    for fp, <span class="selector-tag">a</span> := range r.active &#123;</span><br><span class="line">        if _, ok := resultFPs[fp]; !ok &#123;</span><br><span class="line">            // If the alert was previously firing, keep it around for <span class="selector-tag">a</span> given      // retention <span class="selector-tag">time</span> so it is reported as resolved <span class="selector-tag">to</span> the AlertManager.</span><br><span class="line">            if <span class="selector-tag">a</span><span class="selector-class">.State</span> == StatePending || (!<span class="selector-tag">a</span><span class="selector-class">.ResolvedAt</span><span class="selector-class">.IsZero</span>() &amp;&amp; ts<span class="selector-class">.Sub</span>(<span class="selector-tag">a</span><span class="selector-class">.ResolvedAt</span>) &gt; resolvedRetention) &#123;</span><br><span class="line">                delete(r<span class="selector-class">.active</span>, fp)</span><br><span class="line">            &#125;</span><br><span class="line">            // 处理已经处于告警状态的告警转为恢复的状态</span><br><span class="line">            if <span class="selector-tag">a</span><span class="selector-class">.State</span> != StateInactive &#123;</span><br><span class="line">                <span class="selector-tag">a</span><span class="selector-class">.State</span> = StateInactive</span><br><span class="line">                <span class="selector-tag">a</span><span class="selector-class">.ResolvedAt</span> = ts</span><br><span class="line">              &#125;</span><br><span class="line">              continue</span><br><span class="line">            &#125;</span><br><span class="line">            numActivePending++</span><br><span class="line">            if <span class="selector-tag">a</span><span class="selector-class">.State</span> == StatePending &amp;&amp; ts<span class="selector-class">.Sub</span>(<span class="selector-tag">a</span><span class="selector-class">.ActiveAt</span>) &gt;= r<span class="selector-class">.holdDuration</span> &#123;</span><br><span class="line">              <span class="selector-tag">a</span><span class="selector-class">.State</span> = StateFiring</span><br><span class="line">              <span class="selector-tag">a</span><span class="selector-class">.FiredAt</span> = ts</span><br><span class="line">            &#125;</span><br><span class="line">            if r<span class="selector-class">.restored</span><span class="selector-class">.Load</span>() &#123;</span><br><span class="line">              vec = append(vec, r<span class="selector-class">.sample</span>(<span class="selector-tag">a</span>, ts))</span><br><span class="line">              vec = append(vec, r<span class="selector-class">.forStateSample</span>(<span class="selector-tag">a</span>, ts, float64(<span class="selector-tag">a</span><span class="selector-class">.ActiveAt</span><span class="selector-class">.Unix</span>())))</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ...</span><br><span class="line">            &#125;</span><br></pre></td></tr></table></figure>

<p>r.ative表示前一次的告警，resultFPs为最新的扫描的异常数据，由源码可清晰可见其处理的逻辑与实际表现是一致的。</p>
<p>我们的对待这个问题的一个处理逻辑是更改源码相关逻辑，但是这显然不是最佳选择。因此我们选择了另一种处理逻辑来处理这种假恢复的情况。</p>
<p>具体逻辑为，当出现恢复时，我们根据触发的规则从规则中提取出需要的指标，然后结合告警的标签，重新构造一维的查询表达式，然后去查询prometheus，判断是否存在数据，如果存在则为正常恢复，否则即为数据缺失造成的假恢复。</p>
<p>实现的大致代码如下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a *Arbitrator)</span></span> nodata(alert promRule.Alert, du time.Duration) <span class="type">bool</span> &#123;</span><br><span class="line">    metrics, er := lib.ExtractVectorsForGraph(a.Expr)</span><br><span class="line">    <span class="keyword">if</span> er != <span class="literal">nil</span> &#123;</span><br><span class="line">        _ = level.Warn(g.Logger).Log(<span class="string">&quot;module&quot;</span>, <span class="string">&quot;judge&quot;</span>, <span class="string">&quot;msg&quot;</span>, er.Error())</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    excludeKeys := <span class="keyword">map</span>[<span class="type">string</span>]<span class="keyword">struct</span>&#123;&#125;&#123;</span><br><span class="line">        <span class="string">&quot;alertname&quot;</span>: &#123;&#125;,</span><br><span class="line">        <span class="string">&quot;__name__&quot;</span>:  &#123;&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> k := <span class="keyword">range</span> a.ExtLabels &#123;</span><br><span class="line">        excludeKeys[k] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> _, metric := <span class="keyword">range</span> metrics &#123;</span><br><span class="line">        <span class="keyword">var</span> matches []*labels.Matcher</span><br><span class="line">        <span class="keyword">for</span> k, v := <span class="keyword">range</span> alert.Labels.Map() &#123;</span><br><span class="line">            <span class="keyword">if</span> _, ok := excludeKeys[k]; !ok &#123;</span><br><span class="line">                matches = <span class="built_in">append</span>(matches, &amp;labels.Matcher&#123;</span><br><span class="line">                    Name: k, Type: labels.MatchEqual, Value: v,</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        expr, er := lib.AddExprTags(metric, matches)</span><br><span class="line">        <span class="keyword">if</span> er != <span class="literal">nil</span> &#123;</span><br><span class="line">            _ = level.Warn(g.Logger).Log(<span class="string">&quot;module&quot;</span>, <span class="string">&quot;judge&quot;</span>, <span class="string">&quot;msg&quot;</span>, er.Error())</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> exist, _ := hasLatestData(expr); er == <span class="literal">nil</span> &amp;&amp; !exist &#123;</span><br><span class="line">            _ = level.Warn(g.Logger).Log(<span class="string">&quot;module&quot;</span>, <span class="string">&quot;judge&quot;</span>, <span class="string">&quot;msg&quot;</span>, <span class="string">&quot;nodata&quot;</span>, <span class="string">&quot;detail&quot;</span>, expr)      <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在告警环节加入代码判断</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line">if alert<span class="selector-class">.State</span> == promRule<span class="selector-class">.StateInactive</span> &amp;&amp; !alert<span class="selector-class">.ResolvedAt</span><span class="selector-class">.IsZero</span>() &amp;&amp; <span class="selector-tag">time</span><span class="selector-class">.Now</span>()<span class="selector-class">.Sub</span>(alert.ResolvedAt) &gt; du &#123;</span><br><span class="line">    if <span class="selector-tag">a</span><span class="selector-class">.nodata</span>(alert, du) &#123;</span><br><span class="line">        return</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>本段仅为我们二次开发的核心代码，通过对告警消息的二次判断，去除nodata的假恢复情况。</p>
<p><strong>其他方法</strong></p>
<p>这里主要是利用promethues的<strong>absent</strong>函数实现，</p>
<figure class="highlight scss"><table><tr><td class="code"><pre><span class="line"><span class="built_in">absent</span>(v instant-vector)</span><br></pre></td></tr></table></figure>

<p>如果传递给它的向量参数具有样本数据，则返回空向量；如果传递的向量参数没有样本数据，则返回不带度量指标名称且带有标签的时间序列，且样本值为1。 使用 absent 方法对告警中处理nodata的情况也是非常有用的。</p>
<p>对于某个确定的指标，如果确定应该有且仅有一组数据的时候，使用absent进行nodata告警。例如，如下配置可以实现对192.168.1.3在无数据时进行告警。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">absent(up&#123;<span class="attr">ip</span>=<span class="string">&quot;192.168.1.3&quot;</span>&#125;)</span><br></pre></td></tr></table></figure>

<p><strong>03 总结</strong></p>
<p>通过prometheus本身的unless, absent 方法实现nodata问题的处理，unless的核心在于全量数据的确认。另外通过二开实现，主要对已经出现了告警，后期由于缺失数据造成的假恢复的情形的处置。</p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus查询API说明文档</title>
    <url>/2023/12/08/Prometheus%E6%9F%A5%E8%AF%A2API%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3/</url>
    <content><![CDATA[<ul>
<li>一、格式概述</li>
<li>二、表达式查询<ul>
<li>2.1 Instant queries(即时查询)</li>
<li>2.2 范围查询</li>
</ul>
</li>
<li>三、查询元数据<ul>
<li>3.1 通过标签匹配器找到度量指标列表</li>
<li>3.2 获取标签名</li>
<li>3.3 查询标签值</li>
</ul>
</li>
<li>四、表达式查询结果格式<ul>
<li>4.1 范围向量</li>
<li>4.2 瞬时向量</li>
<li>4.3 标量</li>
<li>4.4 字符串</li>
</ul>
</li>
<li>五、Targets目标</li>
<li>六、Rules规则</li>
<li>七、Alerts报警</li>
<li>八、查询目标元数据</li>
<li>九、Altermanagers警报管理器</li>
<li>十、Status状态<ul>
<li>10.1 Config配置</li>
<li>10.2 Flags标志</li>
</ul>
</li>
<li>十一、TSDB Admin APIs，TSDB管理API<ul>
<li>11.1 快照</li>
<li>11.2 删除序列</li>
<li>11.3 CleanTombstones</li>
</ul>
</li>
</ul>
<p>在Prometheus服务器上的&#x2F;api&#x2F;v1下可以访问当前稳定的HTTP API， 将在该端点下添加任何非中断添加项。</p>
<h3 id="一、格式概述"><a href="#一、格式概述" class="headerlink" title="一、格式概述"></a>一、<strong>格式概述</strong></h3><p>这个API返回是JSON格式。每个请求成功的返回值都是以2xx开头的编码。</p>
<p>到达API处理的无效请求，返回一个JSON错误对象，并返回下面的错误码：</p>
<ul>
<li>400 Bad Request。当参数错误或者丢失时。</li>
<li>422 Unprocessable Entity。当一个表达式不能被执行时。</li>
<li>503 Service Unavailable。当查询超时或者中断时。</li>
</ul>
<p>对于在到达API端点之前发生的错误，可以返回其他非2xx代码。</p>
<p>如果存在不阻止请求执行的错误，则可以返回警告数组。 成功收集的所有数据都将在数据字段中返回。</p>
<p>JSON响应格式如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot; | &quot;error&quot;,</span><br><span class="line">  &quot;data&quot;: &lt;data&gt;,</span><br><span class="line"></span><br><span class="line">  // Only set if status is &quot;error&quot;. The data field may still hold</span><br><span class="line">  // additional data.</span><br><span class="line">  &quot;errorType&quot;: &quot;&lt;string&gt;&quot;,</span><br><span class="line">  &quot;error&quot;: &quot;&lt;string&gt;&quot;,</span><br><span class="line"></span><br><span class="line">  // Only if there were warnings while executing the request.</span><br><span class="line">  // There will still be data in the data field.</span><br><span class="line">  &quot;warnings&quot;: [&quot;&lt;string&gt;&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>输入时间戳可以以<a href="https://www.ietf.org/rfc/rfc3339.txt" title="RFC3339">RFC3339</a>格式提供，也可以以秒为单位提供给Unix时间戳，可选的小数位数用于亚秒级精度。 输出时间戳始终表示为Unix时间戳，以秒为单位。</p>
<p>可以以[]结尾查询参数的名称。</p>
<p>&lt;series_selector&gt;占位符指的是Prometheus时间序列选择器，如http_requests_total或http_requests_total{method &#x3D;〜”(GET|POST)”}，需要进行URL编码。</p>
<p><duration>占位符指的是[0-9]+[smhdwy]形式的Prometheus持续时间字符串。 例如，5m指的是5分钟的持续时间。</p>
<p><bool>占位符引用布尔值（字符串true和false）。</p>
<h3 id="二、表达式查询"><a href="#二、表达式查询" class="headerlink" title="二、表达式查询"></a><strong>二、表达式查询</strong></h3><p>可以对指标或指标聚合表达式在某一时刻或者某一段时间进行查询操作，详细解释见下：</p>
<h4 id="2-1-Instant-queries-即时查询"><a href="#2-1-Instant-queries-即时查询" class="headerlink" title="2.1 Instant queries(即时查询)"></a><strong>2.1 Instant queries(即时查询)</strong></h4><p>以下端点在单个时间点评估即时查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/v1/query</span><br></pre></td></tr></table></figure>


<p>URL查询参数：</p>
<ul>
<li>query&#x3D;<string>: Prometheus表达式查询字符串。</li>
<li>time&#x3D;&lt;rfc3339 | uninx_timestamp&gt;: 执行时间戳，可选项。</li>
<li>timeout&#x3D;<duration>: 执行超时时间设置，可选项，默认由-query.timeout标志设置</li>
</ul>
<p>如果time缺省，则用当前服务器时间表示执行时刻。</p>
<p>这个查询结果的data部分有下面格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"> &quot;resultType&quot;: &quot;matrix&quot; | &quot;vector&quot; | &quot;scalar&quot; | &quot;string&quot;,</span><br><span class="line"> &quot;result&quot;: &lt;value&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><value> 是一个查询结果数据，依赖于这个resultType格式,见<a href="https://prometheus.io/docs/querying/api/#expression-query-result-formats" title="表达式查询结果格式">表达式查询结果格式</a>&gt; 。</p>
<p>下面例子执行了在时刻是2020-03-01T20:10:51.781Z的up表达式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl &#x27;http://localhost:9090/api/v1/query?query=up&amp;time=2020-03-01T20:10:51.781Z&#x27;</span><br><span class="line">&#123;</span><br><span class="line"> &quot;status&quot;: &quot;success&quot;,</span><br><span class="line"> &quot;data&quot;:&#123;</span><br><span class="line">    &quot;resultType&quot;: &quot;vector&quot;,</span><br><span class="line">    &quot;result&quot; : [</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;metric&quot; : &#123;</span><br><span class="line">               &quot;__name__&quot; : &quot;up&quot;,</span><br><span class="line">               &quot;job&quot; : &quot;prometheus&quot;,</span><br><span class="line">               &quot;instance&quot; : &quot;localhost:9090&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;value&quot;: [ 1435781451.781, &quot;1&quot; ]</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;metric&quot; : &#123;</span><br><span class="line">               &quot;__name__&quot; : &quot;up&quot;,</span><br><span class="line">               &quot;job&quot; : &quot;node&quot;,</span><br><span class="line">               &quot;instance&quot; : &quot;localhost:9100&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;value&quot; : [ 1435781451.781, &quot;0&quot; ]</span><br><span class="line">         &#125;</span><br><span class="line">    ]</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-2-范围查询"><a href="#2-2-范围查询" class="headerlink" title="2.2 范围查询"></a><strong>2.2 范围查询</strong></h4><p>以下端点在一段时间内评估表达式查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/v1/query_range</span><br></pre></td></tr></table></figure>

<p>URL查询参数</p>
<ul>
<li>query&#x3D;<string>: Prometheus表达式查询字符串。</li>
<li>start&#x3D;&lt;rfc3339 | unix_timestamp&gt;: 开始时间戳。</li>
<li>end&#x3D;&lt;rfc3339 | unix_timestamp&gt;: 结束时间戳。</li>
<li>step&#x3D;<duration>: 以持续时间格式查询分辨率步长或浮点秒数。</li>
<li>timeout&#x3D;<duration>:评估超时。 可选的。 默认为-query.timeout标志的值并受其限制。</li>
</ul>
<p>查询结果的数据部分具有以下格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;resultType&quot;: &quot;matrix&quot;,</span><br><span class="line">    &quot;result&quot;: &lt;value&gt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以下示例在30秒范围内评估表达式，查询分辨率为15秒。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl &#x27;http://localhost:9090/api/v1/query_range?query=up&amp;start=2020-03-01T20:10:30.781Z&amp;end=2020-03-01T20:11:00.781Z&amp;step=15s&#x27;</span><br><span class="line">&#123;</span><br><span class="line">   &quot;status&quot; : &quot;success&quot;,</span><br><span class="line">   &quot;data&quot; : &#123;</span><br><span class="line">      &quot;resultType&quot; : &quot;matrix&quot;,</span><br><span class="line">      &quot;result&quot; : [</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;metric&quot; : &#123;</span><br><span class="line">               &quot;__name__&quot; : &quot;up&quot;,</span><br><span class="line">               &quot;job&quot; : &quot;prometheus&quot;,</span><br><span class="line">               &quot;instance&quot; : &quot;localhost:9090&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;values&quot; : [</span><br><span class="line">               [ 1435781430.781, &quot;1&quot; ],</span><br><span class="line">               [ 1435781445.781, &quot;1&quot; ],</span><br><span class="line">               [ 1435781460.781, &quot;1&quot; ]</span><br><span class="line">            ]</span><br><span class="line">         &#125;,</span><br><span class="line">         &#123;</span><br><span class="line">            &quot;metric&quot; : &#123;</span><br><span class="line">               &quot;__name__&quot; : &quot;up&quot;,</span><br><span class="line">               &quot;job&quot; : &quot;node&quot;,</span><br><span class="line">               &quot;instance&quot; : &quot;localhost:9091&quot;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;values&quot; : [</span><br><span class="line">           [ 1435781430.781, &quot;0&quot; ],</span><br><span class="line">               [ 1435781445.781, &quot;0&quot; ],</span><br><span class="line">               [ 1435781460.781, &quot;1&quot; ]</span><br><span class="line">            ]</span><br><span class="line">         &#125;</span><br><span class="line">      ]</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="三、查询-元数据"><a href="#三、查询-元数据" class="headerlink" title="三、查询****元数据"></a><strong>三、查询****元数据</strong></h3><h4 id="3-1-通过标签匹配器找到度量指标列表"><a href="#3-1-通过标签匹配器找到度量指标列表" class="headerlink" title="3.1 通过标签匹配器找到度量指标列表"></a><strong>3.1 通过<strong><strong>标签</strong></strong>匹配器找到度量<strong><strong>指标</strong></strong>列表</strong></h4><p>以下端点返回与特定标签集匹配的时间系列列表。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/v1/series</span><br><span class="line">POST /api/v1/series</span><br></pre></td></tr></table></figure>

<p>URL查询参数：</p>
<ul>
<li>match[]&#x3D;&lt;series_selector&gt;: 选择器是series_selector。这个参数个数必须大于等于1.</li>
<li>start&#x3D;&lt;rfc3339 | unix_timestamp&gt;: 开始时间戳。</li>
<li>end&#x3D;&lt;rfc3339 | unix_timestamp&gt;: 结束时间戳。</li>
</ul>
<p>查询结果的data部分包含一个对象列表，这些对象包含标识每个系列的标签名称&#x2F;值对。</p>
<p>下面这个例子返回时间序列数据, 选择器是up或者process_start_time_seconds{job&#x3D;”prometheus”}</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl -g &#x27;http://localhost:9090/api/v1/series?&#x27; --data-urlencode &#x27;match[]=up&#x27; --data-urlencode &#x27;match[]=process_start_time_seconds&#123;job=&quot;prometheus&quot;&#125;&#x27;</span><br><span class="line">$ curl -g &#x27;http://localhost:9090/api/v1/series?match[]=up&amp;match[]=process_start_time_seconds&#123;job=&quot;prometheus&quot;&#125;&#x27;</span><br><span class="line">&#123;</span><br><span class="line">   &quot;status&quot; : &quot;success&quot;,</span><br><span class="line">   &quot;data&quot; : [</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;__name__&quot; : &quot;up&quot;,</span><br><span class="line">         &quot;job&quot; : &quot;prometheus&quot;,</span><br><span class="line">         &quot;instance&quot; : &quot;localhost:9090&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;__name__&quot; : &quot;up&quot;,</span><br><span class="line">         &quot;job&quot; : &quot;node&quot;,</span><br><span class="line">         &quot;instance&quot; : &quot;localhost:9091&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">         &quot;__name__&quot; : &quot;process_start_time_seconds&quot;,</span><br><span class="line">         &quot;job&quot; : &quot;prometheus&quot;,</span><br><span class="line">         &quot;instance&quot; : &quot;localhost:9090&quot;</span><br><span class="line">      &#125;</span><br><span class="line">   ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-2-获取标签名"><a href="#3-2-获取标签名" class="headerlink" title="3.2 获取标签名"></a><strong>3.2 获取<strong><strong>标签</strong></strong>名</strong></h4><p>以下端点返回标签名称列表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/v1/labels</span><br><span class="line">POST /api/v1/labels</span><br></pre></td></tr></table></figure>

<p>JSON响应的data部分是字符串标签名称的列表。</p>
<p>如下例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[test@mroot ~]$ curl &#x27;localhost:9095/api/v1/labels&#x27;  | python -m json.tool </span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100   517  100   517    0     0  48782      0 --:--:-- --:--:-- --:--:-- 64625</span><br><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &quot;__name__&quot;,</span><br><span class="line">        &quot;alertname&quot;,</span><br><span class="line">        &quot;alertstate&quot;,</span><br><span class="line">        &quot;api_group&quot;,</span><br><span class="line">        &quot;branch&quot;,</span><br><span class="line">        &quot;bucket_capacity&quot;,</span><br><span class="line">        &quot;build_date&quot;,</span><br><span class="line">        &quot;build_version&quot;,</span><br><span class="line">        &quot;result&quot;,</span><br><span class="line">        &quot;revision&quot;,</span><br><span class="line">        &quot;rulesName&quot;,</span><br><span class="line">        &quot;schema&quot;,</span><br><span class="line">        &quot;sd_env&quot;,</span><br><span class="line">        &quot;sd_service&quot;,</span><br><span class="line">        &quot;sd_zone&quot;,</span><br><span class="line">        &quot;segment_type&quot;,</span><br><span class="line">        &quot;service&quot;,</span><br><span class="line">        &quot;service_name&quot;,</span><br><span class="line">        &quot;severity&quot;,</span><br><span class="line">        &quot;shard&quot;,</span><br><span class="line">        &quot;source&quot;,</span><br><span class="line">        &quot;type&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;status&quot;: &quot;success&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-3-查询标签值"><a href="#3-3-查询标签值" class="headerlink" title="3.3 查询标签值"></a><strong>3.3 查询<strong><strong>标签</strong></strong>值</strong></h4><p>以下端点返回提供的标签名称的标签值列表：</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;label&#x2F;&lt;label_name&gt;&#x2F;values</p>
</blockquote>
<p>JSON响应的data部分是字符串标签值的列表。</p>
<p>此示例查询作业标签的所有标签值：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[test@mroot ~]$ curl http://localhost:9095/api/v1/label/job/values | python -m json.tool</span><br><span class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</span><br><span class="line">                                 Dload  Upload   Total   Spent    Left  Speed</span><br><span class="line">100    63  100    63    0     0   6990      0 --:--:-- --:--:-- --:--:--  9000</span><br><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: [</span><br><span class="line">        &quot;federate&quot;,</span><br><span class="line">        &quot;m3coordinator&quot;,</span><br><span class="line">        &quot;m3db&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;status&quot;: &quot;success&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="四、表达式查询结果格式"><a href="#四、表达式查询结果格式" class="headerlink" title="四、表达式查询结果格式"></a><strong>四、表达式查询结果格式</strong></h3><p>表达式查询可能会在data部分的result属性中返回以下响应值。 &lt;sample_value&gt;占位符是数字样本值。 JSON不支持特殊的浮点值，例如NaN，Inf和-Inf，因此样本值将作为带引号的JSON字符串而不是原始数字传输。</p>
<h4 id="4-1-范围向量"><a href="#4-1-范围向量" class="headerlink" title="4.1 范围向量"></a><strong>4.1 范围向量</strong></h4><p>范围向量返回的result类型是一个matrix矩阵。下面返回的结果是result部分的数据格式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;metric&quot;: &#123; &quot;&lt;label_name&gt;&quot;: &quot;&lt;label_value&gt;&quot;, ... &#125;,</span><br><span class="line">    &quot;values&quot;: [ [ &lt;unix_time&gt;, &quot;&lt;sample_value&gt;&quot; ], ... ]</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="4-2-瞬时向量"><a href="#4-2-瞬时向量" class="headerlink" title="4.2 瞬时向量"></a><strong>4.2 瞬时向量</strong></h4><p>瞬时向量的result类型是vector。下面是result部分的数据格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;metric&quot;: &#123; &quot;&lt;label_name&gt;&quot;: &quot;&lt;label_value&gt;&quot;, ... &#125;,</span><br><span class="line">    &quot;value&quot;: [ &lt;unix_time&gt;, &quot;&lt;sample_value&gt;&quot; ]</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h4 id="4-3-标量"><a href="#4-3-标量" class="headerlink" title="4.3 标量"></a><strong>4.3 标量</strong></h4><p>标量查询返回result类型是scalar。下面是result部分的数据格式：</p>
<blockquote>
<p>[ &lt;unix_time&gt;, “&lt;scalar_value&gt;” ]</p>
</blockquote>
<h4 id="4-4-字符串"><a href="#4-4-字符串" class="headerlink" title="4.4 字符串"></a><strong>4.4 字符串</strong></h4><p>字符串的result类型是string。下面是result部分的数据格式：</p>
<blockquote>
<p>[ &lt;unix_time&gt;, “&lt;string_value&gt;” ]</p>
</blockquote>
<h3 id="五、Targets目标"><a href="#五、Targets目标" class="headerlink" title="五、Targets目标"></a><strong>五、Targets目标</strong></h3><p>以下端点返回Prometheus目标发现的当前状态概述：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET /api/v1/targets</span><br></pre></td></tr></table></figure>

<p>活动目标和删除目标都是响应的一部分。 labels表示重新标记发生后的标签集。 discoveredLabels表示在发生重新标记之前在服务发现期间检索到的未修改标签。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl http://localhost:9090/api/v1/targets</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;activeTargets&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;discoveredLabels&quot;: &#123;</span><br><span class="line">          &quot;__address__&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">          &quot;__metrics_path__&quot;: &quot;/metrics&quot;,</span><br><span class="line">          &quot;__scheme__&quot;: &quot;http&quot;,</span><br><span class="line">          &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;labels&quot;: &#123;</span><br><span class="line">          &quot;instance&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">          &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;scrapePool&quot;: &quot;prometheus&quot;,</span><br><span class="line">        &quot;scrapeUrl&quot;: &quot;http://127.0.0.1:9090/metrics&quot;,</span><br><span class="line">        &quot;lastError&quot;: &quot;&quot;,</span><br><span class="line">        &quot;lastScrape&quot;: &quot;2017-01-17T15:07:44.723715405+01:00&quot;,</span><br><span class="line">        &quot;lastScrapeDuration&quot;: 0.050688943,</span><br><span class="line">        &quot;health&quot;: &quot;up&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;droppedTargets&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;discoveredLabels&quot;: &#123;</span><br><span class="line">          &quot;__address__&quot;: &quot;127.0.0.1:9100&quot;,</span><br><span class="line">          &quot;__metrics_path__&quot;: &quot;/metrics&quot;,</span><br><span class="line">          &quot;__scheme__&quot;: &quot;http&quot;,</span><br><span class="line">          &quot;job&quot;: &quot;node&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>状态查询参数允许调用者按活动或已删除的目标进行过滤（例如，state&#x3D;active, state&#x3D;dropped, state&#x3D;any）。 请注意，对于已滤除的目标，仍然返回空数组。 其他值将被忽略。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl &#x27;http://localhost:9090/api/v1/targets?state=active&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;activeTargets&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;discoveredLabels&quot;: &#123;</span><br><span class="line">          &quot;__address__&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">          &quot;__metrics_path__&quot;: &quot;/metrics&quot;,</span><br><span class="line">          &quot;__scheme__&quot;: &quot;http&quot;,</span><br><span class="line">          &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;labels&quot;: &#123;</span><br><span class="line">          &quot;instance&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">          &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;scrapePool&quot;: &quot;prometheus&quot;,</span><br><span class="line">        &quot;scrapeUrl&quot;: &quot;http://127.0.0.1:9090/metrics&quot;,</span><br><span class="line">        &quot;lastError&quot;: &quot;&quot;,</span><br><span class="line">        &quot;lastScrape&quot;: &quot;2017-01-17T15:07:44.723715405+01:00&quot;,</span><br><span class="line">        &quot;lastScrapeDuration&quot;: 50688943,</span><br><span class="line">        &quot;health&quot;: &quot;up&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;droppedTargets&quot;: []</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="六、Rules规则"><a href="#六、Rules规则" class="headerlink" title="六、Rules规则"></a><strong>六、Rules规则</strong></h3><p>&#x2F;rules API端点返回当前加载的警报和记录规则列表。 此外，它还返回由每个警报规则的Prometheus实例触发的当前活动警报。</p>
<p>由于&#x2F;rules端点相当新，它没有与总体API v1相同的稳定性保证。</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;rules</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> $ curl http://localhost:9090/api/v1/rules</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;groups&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;rules&quot;: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;alerts&quot;: [</span><br><span class="line">                            &#123;</span><br><span class="line">                                &quot;activeAt&quot;: &quot;2018-07-04T20:27:12.60602144+02:00&quot;,</span><br><span class="line">                                &quot;annotations&quot;: &#123;</span><br><span class="line">                                    &quot;summary&quot;: &quot;High request latency&quot;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                &quot;labels&quot;: &#123;</span><br><span class="line">                                    &quot;alertname&quot;: &quot;HighRequestLatency&quot;,</span><br><span class="line">                                    &quot;severity&quot;: &quot;page&quot;</span><br><span class="line">                                &#125;,</span><br><span class="line">                                &quot;state&quot;: &quot;firing&quot;,</span><br><span class="line">                                &quot;value&quot;: 1</span><br><span class="line">                            &#125;</span><br><span class="line">                        ],</span><br><span class="line">                        &quot;annotations&quot;: &#123;</span><br><span class="line">                            &quot;summary&quot;: &quot;High request latency&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;duration&quot;: 600,</span><br><span class="line">                        &quot;health&quot;: &quot;ok&quot;,</span><br><span class="line">                        &quot;labels&quot;: &#123;</span><br><span class="line">                            &quot;severity&quot;: &quot;page&quot;</span><br><span class="line">                        &#125;,</span><br><span class="line">                        &quot;name&quot;: &quot;HighRequestLatency&quot;,</span><br><span class="line">                        &quot;query&quot;: &quot;job:request_latency_seconds:mean5m&#123;job=\&quot;myjob\&quot;&#125; &gt; 0.5&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;alerting&quot;</span><br><span class="line">                    &#125;,</span><br><span class="line">                    &#123;</span><br><span class="line">                        &quot;health&quot;: &quot;ok&quot;,</span><br><span class="line">                        &quot;name&quot;: &quot;job:http_inprogress_requests:sum&quot;,</span><br><span class="line">                        &quot;query&quot;: &quot;sum(http_inprogress_requests) by (job)&quot;,</span><br><span class="line">                        &quot;type&quot;: &quot;recording&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                &quot;file&quot;: &quot;/rules.yaml&quot;,</span><br><span class="line">                &quot;interval&quot;: 60,</span><br><span class="line">                &quot;name&quot;: &quot;example&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;status&quot;: &quot;success&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="七、Alerts报警"><a href="#七、Alerts报警" class="headerlink" title="七、Alerts报警"></a><strong>七、Alerts报警</strong></h3><p>&#x2F;alerts端点返回所有活动警报的列表。</p>
<p>由于&#x2F;alerts端点相当新，它没有与总体API v1相同的稳定性保证。</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;alerts </p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> $ curl http://localhost:9090/api/v1/alerts</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;alerts&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;activeAt&quot;: &quot;2018-07-04T20:27:12.60602144+02:00&quot;,</span><br><span class="line">                &quot;annotations&quot;: &#123;&#125;,</span><br><span class="line">                &quot;labels&quot;: &#123;</span><br><span class="line">                    &quot;alertname&quot;: &quot;my-alert&quot;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;state&quot;: &quot;firing&quot;,</span><br><span class="line">                &quot;value&quot;: 1</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;status&quot;: &quot;success&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="八、查询目标-元数据"><a href="#八、查询目标-元数据" class="headerlink" title="八、查询目标****元数据"></a><strong>八、查询目标****元数据</strong></h3><p>以下端点返回有关目标正在刮取的度量标准的元数据。 这是实验性的，将来可能会发生变化。</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;targets&#x2F;metadata</p>
</blockquote>
<p>URL查询参数：</p>
<ul>
<li>match_target&#x3D;&lt;label_selectors&gt;：通过标签集匹配目标的标签选择器。 如果留空则选择所有目标。</li>
<li>metric&#x3D;<string>：用于检索元数据的度量标准名称。 如果留空，则检索所有度量标准元数据。</li>
<li>limit&#x3D;<number>：要匹配的最大目标数。</li>
</ul>
<p>查询结果的data部分包含一个包含度量元数据和目标标签集的对象列表。</p>
<p>以下示例从前两个目标返回go_goroutines指标的所有元数据条目，标签为job &#x3D;”prometheus”。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> curl -G http://localhost:9091/api/v1/targets/metadata \</span><br><span class="line"></span><br><span class="line">    --data-urlencode &#x27;metric=go_goroutines&#x27; \</span><br><span class="line">    --data-urlencode &#x27;match_target=&#123;job=&quot;prometheus&quot;&#125;&#x27; \</span><br><span class="line">    --data-urlencode &#x27;limit=2&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;target&quot;: &#123;</span><br><span class="line">        &quot;instance&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">        &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;type&quot;: &quot;gauge&quot;,</span><br><span class="line">      &quot;help&quot;: &quot;Number of goroutines that currently exist.&quot;,</span><br><span class="line">      &quot;unit&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;target&quot;: &#123;</span><br><span class="line">        &quot;instance&quot;: &quot;127.0.0.1:9091&quot;,</span><br><span class="line">        &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;type&quot;: &quot;gauge&quot;,</span><br><span class="line">      &quot;help&quot;: &quot;Number of goroutines that currently exist.&quot;,</span><br><span class="line">      &quot;unit&quot;: &quot;&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>以下示例返回标签instance&#x3D;”127.0.0.1:9090”的所有目标的所有度量标准的元数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> curl -G http://localhost:9091/api/v1/targets/metadata \</span><br><span class="line"></span><br><span class="line">    --data-urlencode &#x27;match_target=&#123;instance=&quot;127.0.0.1:9090&quot;&#125;&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: [</span><br><span class="line">    // ...</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;target&quot;: &#123;</span><br><span class="line">        &quot;instance&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">        &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;metric&quot;: &quot;prometheus_treecache_zookeeper_failures_total&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;counter&quot;,</span><br><span class="line">      &quot;help&quot;: &quot;The total number of ZooKeeper failures.&quot;,</span><br><span class="line">      &quot;unit&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;target&quot;: &#123;</span><br><span class="line">        &quot;instance&quot;: &quot;127.0.0.1:9090&quot;,</span><br><span class="line">        &quot;job&quot;: &quot;prometheus&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;metric&quot;: &quot;prometheus_tsdb_reloads_total&quot;,</span><br><span class="line">      &quot;type&quot;: &quot;counter&quot;,</span><br><span class="line">      &quot;help&quot;: &quot;Number of times the database reloaded block data from disk.&quot;,</span><br><span class="line">      &quot;unit&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    // ...</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="九、Alertmanagers警报管理器"><a href="#九、Alertmanagers警报管理器" class="headerlink" title="九、Alertmanagers警报管理器"></a><strong>九、Alertmanagers警报管理器</strong></h3><p>以下端点返回Prometheus alertmanager发现的当前状态概述：</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;alertmanagers</p>
</blockquote>
<p>活动和丢弃的Alertmanagers都是响应的一部分。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> $ curl http://localhost:9090/api/v1/alertmanagers</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;activeAlertmanagers&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;url&quot;: &quot;http://127.0.0.1:9090/api/v1/alerts&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;droppedAlertmanagers&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;url&quot;: &quot;http://127.0.0.1:9093/api/v1/alerts&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="十、Status状态"><a href="#十、Status状态" class="headerlink" title="十、Status状态"></a><strong>十、Status状态</strong></h3><p>以下状态端点显示当前的Prometheus配置。</p>
<h4 id="10-1-Config-配置"><a href="#10-1-Config-配置" class="headerlink" title="10.1 Config****配置"></a><strong>10.1</strong> <strong>Config****配置</strong></h4><p>以下端点返回当前加载的配置文件：</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;status&#x2F;config</p>
</blockquote>
<p>配置作为转储的YAML文件返回。 由于YAML库的限制，不包括YAML注释。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> $ curl http://localhost:9090/api/v1/status/config</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;yaml&quot;: &quot;&lt;content of the loaded config file in YAML&gt;&quot;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="10-2-Flags标志"><a href="#10-2-Flags标志" class="headerlink" title="10.2 Flags标志"></a><strong>10.2 Flags标志</strong></h4><p>以下端点返回Prometheus配置的标志值：</p>
<blockquote>
<p>GET &#x2F;api&#x2F;v1&#x2F;status&#x2F;flags</p>
</blockquote>
<p>所有值都以“字符串”的形式出现。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl http://localhost:9090/api/v1/status/flags</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;alertmanager.notification-queue-capacity&quot;: &quot;10000&quot;,</span><br><span class="line">    &quot;alertmanager.timeout&quot;: &quot;10s&quot;,</span><br><span class="line">    &quot;log.level&quot;: &quot;info&quot;,</span><br><span class="line">    &quot;query.lookback-delta&quot;: &quot;5m&quot;,</span><br><span class="line">    &quot;query.max-concurrency&quot;: &quot;20&quot;,</span><br><span class="line">    ...</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="十一、TSDB-Admin-APIs，TSDB管理API"><a href="#十一、TSDB-Admin-APIs，TSDB管理API" class="headerlink" title="十一、TSDB Admin APIs，TSDB管理API"></a>十一、TSDB Admin APIs，TSDB管理API</h3><p>这些是为高级用户公开数据库功能的API。 除非设置了<code>--web.enable-admin-api</code>，否则不会启用这些API。</p>
<p>我们还公开了一个gRPC API，其定义可以在这里找到。 这是实验性的，将来可能会发生变化。</p>
<h4 id="11-1-快照"><a href="#11-1-快照" class="headerlink" title="11.1 快照"></a>11.1 快照</h4><p>快照会将所有当前数据的快照创建到TSDB数据目录下的<code>snapshots/&lt;datetime&gt;-&lt;rand&gt;</code>中，并将该目录作为响应返回。 它可以选择跳过仅存在于头块中但尚未压缩到磁盘的快照数据。</p>
<blockquote>
<p>POST &#x2F;api&#x2F;v1&#x2F;admin&#x2F;tsdb&#x2F;snapshot?skip_head&#x3D;</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> $ curl -XPOST http://localhost:9090/api/v1/admin/tsdb/snapshot</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: &quot;success&quot;,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;20171210T211224Z-2be650b6d019eb54&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>快照已存在<code>&lt;data-dir&gt;/snapshots/20171210T211224Z-2be650b6d019eb54</code> v2.1新内容。</p>
<h4 id="11-2-删除序列"><a href="#11-2-删除序列" class="headerlink" title="11.2 删除序列"></a>11.2 删除序列</h4><p>DeleteSeries删除时间范围内所选系列的数据。 实际数据仍然存在于磁盘上，并在将来的压缩中清除，或者可以通过Clean Tombstones端点来明确清理。</p>
<p>如果成功，则返回<code>204</code>。</p>
<blockquote>
<p>POST &#x2F;api&#x2F;v1&#x2F;admin&#x2F;tsdb&#x2F;delete_series</p>
</blockquote>
<p>URL查询参数：</p>
<ul>
<li><code>match[]=&lt;series_selector&gt;</code>：选择要删除的系列的重复标签匹配器参数。 必须至少提供一个<code>match[]</code>参数。</li>
<li><code>start= &lt;rfc3339 | unix_timestamp&gt;</code>：开始时间戳。 可选，默认为最短可能时间。</li>
<li><code>end= &lt;rfc3339 | unix_timestamp&gt;</code>：结束时间戳。 可选，默认为最长可能时间。</li>
</ul>
<p>不提及开始和结束时间将清除数据库中匹配系列的所有数据。</p>
<p>例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ curl -X POST -g &#x27;http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]=up&amp;match[]=process_start_time_seconds&#123;job=&quot;prometheus&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h4 id="11-3-CleanTombstones"><a href="#11-3-CleanTombstones" class="headerlink" title="11.3 CleanTombstones"></a>11.3 CleanTombstones</h4><p>CleanTombstones从磁盘中删除已删除的数据并清理现有的逻辑删除。 这可以在删除系列后使用以释放空间。</p>
<p>如果成功，则返回<code>204</code>。</p>
<blockquote>
<p>POST &#x2F;api&#x2F;v1&#x2F;admin&#x2F;tsdb&#x2F;clean_tombstones</p>
</blockquote>
<p>这不需要参数或正文。</p>
<blockquote>
<p>$ curl -XPOST <a href="http://localhost:9090/api/v1/admin/tsdb/clean_tombstones" title="http://localhost:9090/api/v1/admin/tsdb/clean_tombstones">http://localhost:9090/api/v1/admin/tsdb/clean_tombstones</a></p>
</blockquote>
<p>​</p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus监控Kubernetes</title>
    <url>/2023/12/26/Prometheus%E7%9B%91%E6%8E%A7Kubernetes/</url>
    <content><![CDATA[<h2 id="一、kubernetes-sd-config（虽然是翻译官网但是别忽略好好看一看）"><a href="#一、kubernetes-sd-config（虽然是翻译官网但是别忽略好好看一看）" class="headerlink" title="一、kubernetes_sd_config（虽然是翻译官网但是别忽略好好看一看）"></a>一、kubernetes_sd_config（虽然是翻译官网但是别忽略好好看一看）</h2><h3 id="1-1、-单说的配置："><a href="#1-1、-单说的配置：" class="headerlink" title="1.1、 单说&lt;kubernetes_sd_config&gt;的配置："></a>1.1、 单说&lt;kubernetes_sd_config&gt;的配置：</h3><p>     Kubernetes SD配置允许从Kubernetes的REST API检索抓取目标，并始终与集群状态保持同步。可以将以下角色类型之一配置为发现目标：</p>
<p>node</p>
<p>      node角色为每个群集节点发现一个目标，其地址默认为Kubelet的HTTP端口。 目标地址默认为Kubernetes节点对象的第一个现有地址，按照NodeInternalIP，NodeExternalIP，NodeLegacyHostIP和NodeHostName的地址类型顺序。可用的元标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_kubernetes_node_name: node对象的名称。</span><br><span class="line">__meta_kubernetes_node_label_&lt;labelname&gt;: 来自节点对象的每个标签。</span><br><span class="line">__meta_kubernetes_node_labelpresent_&lt;labelname&gt;: 对于节点对象中的每个标签，为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_node_annotation_&lt;annotationname&gt;: 来自节点对象的每个注释。</span><br><span class="line">__meta_kubernetes_node_annotationpresent_&lt;annotationname&gt;: 对于来自节点对象的每个注释，为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_node_address_&lt;address_type&gt;: 每个节点地址类型的第一个地址（如果存在）。</span><br></pre></td></tr></table></figure>

<p>      此外，该节点的实例标签将设置为从API服务器检索到的节点名称。  </p>
<p>service </p>
<p>      service角色发现每个服务的每个服务端口的目标。 这通常用于监视服务的黑盒。 该地址将设置为服务的Kubernetes DNS名称以及相应的服务端口。可用的元标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_kubernetes_namespace: service对象的名称空间。</span><br><span class="line">__meta_kubernetes_service_annotation_&lt;annotationname&gt;: 来自service对象的每个注释。</span><br><span class="line">__meta_kubernetes_service_annotationpresent_&lt;annotationname&gt;: service对象的每个注释为“ <span class="literal">true</span>”。</span><br><span class="line">__meta_kubernetes_service_cluster_ip: service的群集IP地址。（不适用于外部名称类型的服务）</span><br><span class="line">__meta_kubernetes_service_external_name: service的DNS名称。（适用于外部名称类型的服务）</span><br><span class="line">__meta_kubernetes_service_label_&lt;labelname&gt;: service对象中的每个标签。</span><br><span class="line">__meta_kubernetes_service_labelpresent_&lt;labelname&gt;: 对于service对象的每个标签为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_service_name: service对象的名称。</span><br><span class="line">__meta_kubernetes_service_port_name: service服务端口的名称。</span><br><span class="line">__meta_kubernetes_service_port_protocol: 目标service端口的协议。</span><br></pre></td></tr></table></figure>

<p>pod</p>
<p>       容器角色发现所有容器并将其容器公开为目标。 对于容器的每个声明的端口，将生成一个目标。 如果容器没有指定的端口，则会为每个容器创建无端口目标，以通过重新标记手动添加端口。可用的元标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_kubernetes_namespace: pod对象的名称空间。</span><br><span class="line">__meta_kubernetes_pod_name: 容器对象的名称。</span><br><span class="line">__meta_kubernetes_pod_ip: 容器对象的容器IP。</span><br><span class="line">__meta_kubernetes_pod_label_&lt;labelname&gt;: 来自pod对象的每个标签。</span><br><span class="line">__meta_kubernetes_pod_labelpresent_&lt;labelname&gt;: 对于来自pod对象的每个标签，为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_pod_annotation_&lt;annotationname&gt;: 来自pod对象的每个注释。</span><br><span class="line">__meta_kubernetes_pod_annotationpresent_&lt;annotationname&gt;: 对于Pod对象中的每个注释，为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_pod_container_init: 如果容器是InitContainer，则为<span class="literal">true</span></span><br><span class="line">__meta_kubernetes_pod_container_name: 目标地址指向的容器的名称。</span><br><span class="line">__meta_kubernetes_pod_container_port_name: 容器端口的名称。</span><br><span class="line">__meta_kubernetes_pod_container_port_number: 容器端口号。</span><br><span class="line">__meta_kubernetes_pod_container_port_protocol: 容器端口的协议。</span><br><span class="line">__meta_kubernetes_pod_ready:  为Pod的就绪状态设置为<span class="literal">true</span>或<span class="literal">false</span>。</span><br><span class="line">__meta_kubernetes_pod_phase: 在生命周期中设置为Pending, Running, Succeeded, Failed or Unknown。</span><br><span class="line">__meta_kubernetes_pod_node_name: Pod调度到的节点的名称</span><br><span class="line">__meta_kubernetes_pod_host_ip: Pod对象的当前主机IP。</span><br><span class="line">__meta_kubernetes_pod_uid: Pod对象的UID。</span><br><span class="line">__meta_kubernetes_pod_controller_kind: Pod控制器的对象种类。</span><br><span class="line">__meta_kubernetes_pod_controller_name: Pod控制器的名称。</span><br></pre></td></tr></table></figure>

<p>endpoints  </p>
<p>      端点角色从列出的服务端点中发现目标。 对于每个端点地址，每个端口都发现一个目标。 如果端点由Pod支持，则该Pod的所有其他未绑定到端点端口的容器端口也将被发现为目标。可用的元标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_kubernetes_namespace: endpoints 对象的名称空间。</span><br><span class="line">__meta_kubernetes_endpoints_name: 端点对象的名称</span><br><span class="line">对于直接从端点列表中发现的所有目标（未从基础容器额外推断出的所有目标），将附加以下标签：</span><br><span class="line">    __meta_kubernetes_endpoint_hostname: 端点的主机名。</span><br><span class="line">    __meta_kubernetes_endpoint_node_name: hosting端点的节点的名称。</span><br><span class="line">    __meta_kubernetes_endpoint_ready: 为端点的就绪状态设置为<span class="literal">true</span>或<span class="literal">false</span>。</span><br><span class="line">    __meta_kubernetes_endpoint_port_name: 端点端口的名称。</span><br><span class="line">    __meta_kubernetes_endpoint_port_protocol: 端点端口的协议。</span><br><span class="line">    __meta_kubernetes_endpoint_address_target_kind: 端点地址目标的种类。</span><br><span class="line">    __meta_kubernetes_endpoint_address_target_name: 端点地址目标的名称。</span><br><span class="line">如果端点属于服务，则会附加角色：服务发现的所有标签。对于由容器支持的所有目标，将附加角色的所有标签：pod discovery。</span><br></pre></td></tr></table></figure>

<p>ingress</p>
<p>     ingress角色发现每个入口的每个路径的目标。 这通常对黑盒监视入口很有用。 该地址将设置为入口规范中指定的主机。可用的元标签：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">__meta_kubernetes_namespace: ingress对象的名称空间。</span><br><span class="line">__meta_kubernetes_ingress_name: ingress对象的名称。</span><br><span class="line">__meta_kubernetes_ingress_label_&lt;labelname&gt;: 来自ingress对象的每个标签。</span><br><span class="line">__meta_kubernetes_ingress_labelpresent_&lt;labelname&gt;: 对于来自ingress对象的每个标签，为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_ingress_annotation_&lt;annotationname&gt;: 来自ingress对象的每个注释。</span><br><span class="line">__meta_kubernetes_ingress_annotationpresent_&lt;annotationname&gt;: 对于来自ingress对象的每个注释，为<span class="literal">true</span>。</span><br><span class="line">__meta_kubernetes_ingress_scheme: 入口的协议方案，如果设置了TLS配置，则为https。 默认为http。</span><br><span class="line">__meta_kubernetes_ingress_path: 入口规范的路径。 默认为/。</span><br></pre></td></tr></table></figure>

<p>请参阅以下有关Kubernetes发现的配置选项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#访问Kubernetes API的信息。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#API服务器地址。如果保留为空，则Prometheus被假定为在集群内部运行，并且将自动发现API服务器，并使用Pod的CA证书和承载令牌文件位于/var/run/secrets/kubernetes.io/serviceaccount/。</span></span><br><span class="line">[ api_server: &lt;host&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#应该发现的实体的Kubernetes角色。</span></span><br><span class="line">role: &lt;role&gt;</span><br><span class="line"><span class="comment">#用于向API服务器进行身份验证的可选身份验证信息。请注意，“ basic_auth”，“ bearer_token”和“ bearer_token_file”选项是互斥的。</span></span><br><span class="line"><span class="comment">#password和password_file是互斥的。</span></span><br><span class="line"><span class="comment">#可选的HTTP基本身份验证信息。</span></span><br><span class="line">basic_auth:</span><br><span class="line">  [ username: &lt;string&gt; ]</span><br><span class="line">  [ password: &lt;secret&gt; ]</span><br><span class="line">  [ password_file: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的承载令牌认证信息。</span></span><br><span class="line">[ bearer_token: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的承载令牌文件认证信息。</span></span><br><span class="line">[ bearer_token_file: &lt;filename&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的代理URL。</span></span><br><span class="line">[ proxy_url: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#TLS配置。</span></span><br><span class="line">tls_config:</span><br><span class="line">  [ &lt;tls_config&gt; ]</span><br><span class="line"></span><br><span class="line"><span class="comment">#可选的名称空间发现。 如果省略，则使用所有名称空间。</span></span><br><span class="line">namespaces:</span><br><span class="line">  names:</span><br><span class="line">    [ - &lt;string&gt; ]</span><br></pre></td></tr></table></figure>

<p>其中<role>必须是endpoints, service, pod, node, or ingress。</p>
<p>有关为Kubernetes配置Prometheus的详细示例，请参见此示例Prometheus配置文件：<a href="https://github.com/prometheus/prometheus/blob/release-2.13/documentation/examples/prometheus-kubernetes.yml">https://github.com/prometheus/prometheus/blob/release-2.13/documentation/examples/prometheus-kubernetes.yml</a></p>
<p>可能希望查看第三方Prometheus Operator，它可以自动在Kubernetes上设置Prometheus：<a href="https://github.com/coreos/prometheus-operator">https://github.com/coreos/prometheus-operator</a></p>
<h2 id="二、完整的部署流程"><a href="#二、完整的部署流程" class="headerlink" title="二、完整的部署流程"></a>二、完整的部署流程</h2><h3 id="2-1-Prometheus部署"><a href="#2-1-Prometheus部署" class="headerlink" title="2.1 Prometheus部署"></a>2.1 Prometheus部署</h3><p># kubectl create namespace prometheus</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">namespace/prometheus created</span><br></pre></td></tr></table></figure>

<p>Prometheus:</p>
<p>#vim prometheus-rbac.yaml   </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  - nodes/proxy</span><br><span class="line">  - services</span><br><span class="line">  - endpoints</span><br><span class="line">  - pods</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- apiGroups:</span><br><span class="line">  - extensions</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- nonResourceURLs: [<span class="string">&quot;/metrics&quot;</span>]</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>]</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: prometheus</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: prometheus</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: prometheus</span><br></pre></td></tr></table></figure>


<p>#prometheus.rbac.yml定义了Prometheus容器访问k8s apiserver所需的ServiceAccount、ClusterRole以及ClusterRoleBinding。</p>
<p>下面是针对上面的配置文件详解：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1   <span class="comment">#指定api版本，此值必须在kubectl apiversion中，RBAC 使用 rbac.authorization.k8s.io API 组来驱动鉴权操作，允许管理员通过 Kubernetes API 动态配置策略。</span></span><br><span class="line">kind: ClusterRole    <span class="comment">#指定创建资源的角色为ClusterRole，ClusterRole对象可以授予整个集群范围内资源访问权限</span></span><br><span class="line">metadata:   <span class="comment">##资源的元数据/属性</span></span><br><span class="line">    <span class="comment"># 此处的 &quot;namespace&quot; 被省略掉是因为 ClusterRoles 是没有命名空间的。</span></span><br><span class="line">  name: prometheus   <span class="comment">#资源的名字，在同一个namespace中必须唯一</span></span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">&quot;&quot;</span>]  <span class="comment"># &quot;&quot; 指定核心 API 组</span></span><br><span class="line"><span class="comment">#ClusterRole 可以授予的权限和 Role 相同，但是因为 ClusterRole 属于集群范围，所以它也可以授予以下访问权限：集群范围资源 （比如 nodes）,非资源端点（比如 “/healthz”）</span></span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  - nodes/proxy</span><br><span class="line">  - services</span><br><span class="line">  - endpoints</span><br><span class="line">  - pods</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]  <span class="comment">#允许读取在“核心”API Group中定义的那些资源</span></span><br><span class="line">- apiGroups:</span><br><span class="line">  - extensions</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]  <span class="comment">#允许读取在“extensions”API Group中定义的ingresses</span></span><br><span class="line">- nonResourceURLs: [<span class="string">&quot;/metrics&quot;</span>]  <span class="comment">#允许在非资源端点 “/metrics” 上发起 “GET”请求（必须在 ClusterRole 绑定 ClusterRoleBinding 才生效）</span></span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>]</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: prometheus</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">roleRef:  <span class="comment">#roleRef 里的内容决定了实际创建绑定的方法。kind 可以是 Role 或 ClusterRole，name 将引用你要指定的 Role 或 ClusterRole 的名称</span></span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole   </span><br><span class="line">  name: prometheus   <span class="comment">## 这里的名称必须与你想要绑定的 Role 或 ClusterRole 名称一致</span></span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: prometheus</span><br></pre></td></tr></table></figure>

<p># kubectl create -f  prometheus-rbac.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clusterrole.rbac.authorization.k8s.io/prometheus created</span><br><span class="line">serviceaccount/prometheus created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/prometheus created</span><br></pre></td></tr></table></figure>

<p># vim prometheus-config-configmap.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-config</span><br><span class="line">  namespace: prometheus</span><br><span class="line">data:</span><br><span class="line">  prometheus.yml: |</span><br><span class="line">    global:</span><br><span class="line">      scrape_interval:     15s</span><br><span class="line">      evaluation_interval: 15s</span><br><span class="line">    scrape_configs:</span><br><span class="line">        <span class="comment">#这里可以很直观的看到是采集apiservers的监控指标的这里采集地址是https://master主机:6443/metrics</span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-apiservers&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: default;kubernetes;https</span><br><span class="line">       </span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-nodes&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: node</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: kubernetes.default.svc:443</span><br><span class="line">      - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">        regex: (.+)</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        replacement: /api/v1/nodes/<span class="variable">$&#123;1&#125;</span>/proxy/metrics</span><br><span class="line"></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-cadvisor&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: node</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: kubernetes.default.svc:443</span><br><span class="line">      - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">        regex: (.+)</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        replacement: /api/v1/nodes/<span class="variable">$&#123;1&#125;</span>/proxy/metrics/cadvisor</span><br><span class="line">        </span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-service-endpoints&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __scheme__</span><br><span class="line">        regex: (https?)</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        regex: (.+)</span><br><span class="line">      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __address__</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: <span class="variable">$1</span>:<span class="variable">$2</span></span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line"></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-services&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: service</span><br><span class="line">      metrics_path: /probe</span><br><span class="line">      params:</span><br><span class="line">        module: [http_2xx]</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter.example.com:9115</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line"></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-ingresses&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: ingress</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line">      - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]</span><br><span class="line">        regex: (.+);(.+);(.+)</span><br><span class="line">        replacement: <span class="variable">$&#123;1&#125;</span>://<span class="variable">$&#123;2&#125;</span><span class="variable">$&#123;3&#125;</span></span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter.example.com:9115</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_ingress_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_ingress_name]</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line"></span><br><span class="line">    <span class="comment">#这里并非pods的系统监控指标,这里其实是采集的一些特殊的开启了web监听端口提供监控指标的pod    </span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-pods&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: pod</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        regex: (.+)</span><br><span class="line">      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]</span><br><span class="line">        action: replace</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: <span class="variable">$1</span>:<span class="variable">$2</span></span><br><span class="line">        target_label: __address__</span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_pod_name</span><br></pre></td></tr></table></figure>

<p>#prometheus-config-configmap.yaml定义了prometheus的配置文件，以configmap的形式使用。</p>
<p>#下面是针对上面的一些配置进行的注释说明：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用于发现API SERVER</span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-apiservers&#x27;</span></span><br><span class="line"><span class="comment">#发现endpoints，它是从列出的服务端点发现目标，这个endpoints来自于Kubernetes中的service，每一个service都有对应的endpoints，</span></span><br><span class="line"><span class="comment">#这里是一个列表可以是一个IP:PORT也可以是多个，这些IP:PORT就是service通过标签选择器选择的POD的IP和端口。</span></span><br><span class="line"><span class="comment">#所以endpoints角色就是用来发现server对应的pod的IP的kubernetes会有一个默认的service，</span></span><br><span class="line"><span class="comment">#通过找到这个service的endpoints就找到了api server的IP:PORT，那endpoints有很多，我怎么知道哪个是api server呢这个就靠source_labels指定的标签名称了。    </span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line"><span class="comment">#通过什么形式来连接，默认是https      </span></span><br><span class="line">      scheme: https</span><br><span class="line"><span class="comment"># 下面这个ca_file和token_file的路径都是默认的，你可能默认设置能用么？其实可以，因为每一个运行起来的POD kubernetes都会为其</span></span><br><span class="line"><span class="comment"># 创建一个serviceaccout的Secret并且挂载到下面的目录上，里面就有ca.crt和token这两个文件，你可以自己启动一个POD，然后通过</span></span><br><span class="line"><span class="comment"># kubectl describe pods 来查看，一定会在Volumes下面有一个default-token-XXX的东西，并且Mounts里面有下面的目录。      </span></span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line"><span class="comment"># 下面的含义是源标签__meta_kubernetes_namespace等如果其值为default;kubernetes;https标签顺序和值要对应。换句话说就是</span></span><br><span class="line"><span class="comment"># 当__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name三者对应的</span></span><br><span class="line"><span class="comment"># 值为default、kubernetes、https则进行保留，而且该endpoints对应的地址为api server的地址。</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># __meta_kubernetes_namespace 端点对象的命名空间，在不同对象上这个标签的含义不同，在角色是endpoints中这个是端点对象的名称空间</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_service_name 端点对象的服务名称</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_endpoint_port_name 端点的端口名称</span></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># kubernetes默认在default名称空间有一个叫做kubernetes的service，所以这个service的有3个设置对应的就是下面三个标签</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_namespace 值为default</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_service_name 值为kubernetes</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_endpoint_port_name 值为https      </span></span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: default;kubernetes;https</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置针对kubelet的服务发现以及对标签的处理，是获取kubelet上/metrics接口数据来获取node的资源使用情况        </span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-nodes&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line"><span class="comment"># 使用node角色，它使用默认的kubelet提供的http端口来发现集群中每个node节点。那具体地址是什么呢？</span></span><br><span class="line"><span class="comment"># 地址类型有四种NodeInternalIP, NodeExternalIP, NodeLegacyHostIP 和 NodeHostName，默认为这四个中第一个可用的地址。</span></span><br><span class="line"><span class="comment"># 那么这里为什么使用node角色呢？因为node角色就是用来发现kubelet的</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_node_name：节点对象的名字</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_node_label_&lt;labelname&gt;：表示节点对象上的每一个标签</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_node_annotation_&lt;annotationname&gt;：表示节点对象上的每一个annotation</span></span><br><span class="line"><span class="comment"># __meta_kubernetes_node_address_&lt;address_type&gt;：如果存在，那么将是每一个节点地址类型的第一个地址</span></span><br><span class="line"><span class="comment"># Node模式，Prometheus会自动发现Kubernetes中所有Node节点的信息并作为监控的目标Target。 </span></span><br><span class="line"><span class="comment"># 而这些Target的访问地址实际上就是Kubelet的访问地址，并且Kubelet实际上直接内置了对Promtheus的支持      </span></span><br><span class="line">      - role: node</span><br><span class="line">      scheme: https</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">      relabel_configs:</span><br><span class="line"><span class="comment"># 保留(.+)匹配到的内容，去掉__meta_kubernetes_node_label_，实际上就是把(.+)当做新标签，然后老标签的值给这个新标签，</span></span><br><span class="line"><span class="comment"># 这里没有设置source_labels，则表示匹配所有标签      </span></span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line"><span class="comment">#下面就是将replacement: 中的值kubernetes.default.svc:443赋予给__address__标签</span></span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: kubernetes.default.svc:443</span><br><span class="line"><span class="comment">#下面就是将__meta_kubernetes_node_name的值变成$&#123;1&#125;的形式传给replacement:中的$1，然后赋给标签__metrics_path__   </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_node_name]</span><br><span class="line">        regex: (.+)</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        replacement: /api/v1/nodes/<span class="variable">$&#123;1&#125;</span>/proxy/metrics  </span><br><span class="line"></span><br><span class="line"><span class="comment">#抓取服务端点，整个这个任务都是用来发现node-exporter和kube-state-metrics-service的，这里用的是endpoints角色，</span></span><br><span class="line"><span class="comment">#这是通过这两者的service来发现的后端endpoints。另外需要说明的是如果满足采集条件，那么在service、POD中定义的labels也会被采集进去        </span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-service-endpoints&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      relabel_configs:</span><br><span class="line"><span class="comment"># 重新打标仅抓取到的具有 &quot;prometheus.io/scrape: true&quot; 的annotation的端点，意思是说如果某个service具有prometheus.io/scrape = true annotation声明则抓取</span></span><br><span class="line"><span class="comment"># annotation本身也是键值结构，所以这里的源标签设置为键，而regex设置值，当值匹配到regex设定的内容时则执行keep动作也就是保留，其余则丢弃.</span></span><br><span class="line"><span class="comment"># node-exporter这个POD的service里面就有一个叫做prometheus.io/scrape = true的annotations所以就找到了node-exporter这个POD    </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line"><span class="comment">#重新设置scheme匹配源标签__meta_kubernetes_service_annotation_prometheus_io_scheme也就是prometheus.io/scheme annotation</span></span><br><span class="line"><span class="comment"># 如果源标签的值匹配到regex则把值替换为__scheme__对应的值        </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __scheme__</span><br><span class="line">        regex: (https?)</span><br><span class="line"><span class="comment"># 应用中自定义暴露的指标，也许你暴露的API接口不是/metrics这个路径，那么你可以在这个POD对应的service中做一个</span></span><br><span class="line"><span class="comment"># &quot;prometheus.io/path = /mymetrics&quot; 声明，下面的意思就是把你声明的这个路径赋值给__metrics_path__</span></span><br><span class="line"><span class="comment"># 其实就是让prometheus来获取自定义应用暴露的metrices的具体路径，不过这里写的要和service中做好约定</span></span><br><span class="line"><span class="comment"># 如果service中这样写 prometheus.io/app-metrics-path: &#x27;/metrics&#x27; 那么你这里就要__meta_kubernetes_service_annotation_prometheus_io_app_metrics_path这样写        </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        regex: (.+)</span><br><span class="line"><span class="comment"># 暴露自定义的应用的端口，就是把地址和你在service中定义的 &quot;prometheus.io/port = &lt;port&gt;&quot; 声明做一个拼接</span></span><br><span class="line"><span class="comment"># 然后赋值给__address__，这样prometheus就能获取自定义应用的端口，然后通过这个端口再结合__metrics_path__来获取</span></span><br><span class="line"><span class="comment"># 指标，如果__metrics_path__值不是默认的/metrics那么就要使用上面的标签替换来获取真正暴露的具体路径        </span></span><br><span class="line">      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __address__</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: <span class="variable">$1</span>:<span class="variable">$2</span></span><br><span class="line"><span class="comment"># 下面主要是为了给样本添加额外信息        </span></span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_name</span><br><span class="line">        </span><br><span class="line"><span class="comment"># 下面是自动发现service，不过如果要想监控service则需要安装blackbox-exporter        </span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-services&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: service</span><br><span class="line">      metrics_path: /probe</span><br><span class="line"><span class="comment"># 生成__param_module=&quot;http_2xx&quot;的label，如果是TCP探测则使用 module: [tcp_connect]      </span></span><br><span class="line">      params:</span><br><span class="line">        module: [http_2xx]</span><br><span class="line">      relabel_configs:</span><br><span class="line"><span class="comment"># 为了让service可以被探测到，那需要在service的annotation中增加 prometheus.io/scrape: true 声明</span></span><br><span class="line"><span class="comment"># 也就是只保留prometheus.io/scrape: true的service      </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 用__address__这个label的值创建一个名为__param_target的label为blackbox-exporter,值为内部service的访问地址，作为blackbox-exporter采集用        </span></span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line"><span class="comment"># 用blackbox-exporter的service地址值”prometheus-blackbox-exporter:9115&quot;替换原__address__的值        </span></span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter.example.com:9115</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line"><span class="comment"># 下面主要是为了给样本添加额外信息        </span></span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_service_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        target_label: kubernetes_name  </span><br><span class="line">        </span><br><span class="line"><span class="comment"># 下面是对ingresses监控，不过如果要想监控ingresses则需要安装blackbox-exporter</span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-ingresses&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: ingress</span><br><span class="line">      </span><br><span class="line"><span class="comment"># 抓取POD进行监控</span></span><br><span class="line">    - job_name: <span class="string">&#x27;kubernetes-pods&#x27;</span></span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: pod</span><br><span class="line">      relabel_configs:</span><br><span class="line"><span class="comment"># POD的 annotation 中含有&quot;prometheus.io/scrape: true&quot; 的则保留，意思就是会被Prometheus抓取，不具有这个的POD则不会被抓取      </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]</span><br><span class="line">        action: keep</span><br><span class="line">        regex: <span class="literal">true</span></span><br><span class="line"><span class="comment"># 获取POD的 annotation 中定义的&quot;prometheus.io/path: XXX&quot;定义的值，这个值就是你的程序暴露符合prometheus规范的metrics的地址</span></span><br><span class="line"><span class="comment"># 如果你的metrics的地址不是 /metrics 的话，通过这个标签，那么这里就会把这个值赋值给 __metrics_path__这个变量，因为prometheus</span></span><br><span class="line"><span class="comment"># 是通过这个变量获取路径然后进行拼接出来一个完整的URL，并通过这个URL来获取metrics值的，</span></span><br><span class="line"><span class="comment">#因为prometheus默认使用的就是 http(s)://X.X.X.X/metrics这样一个路径来获取的。        </span></span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: __metrics_path__</span><br><span class="line">        regex: (.+)</span><br><span class="line"><span class="comment"># 这里是端口信息，因为你的程序很有可能在容器中并不是以80端口运行的，那么就需要做一个拼接http(s)://x.x.x.x:xx/metrics</span></span><br><span class="line"><span class="comment"># __address__在prometheus中代表的就是实例的IP地址，而POD中的annotation 中定义的&quot;prometheus.io/port: XX&quot;就是你程序</span></span><br><span class="line"><span class="comment"># 被访问到的端口，最终在prometheus中将会被显示为 instance=X.X.X.X:XX这样        </span></span><br><span class="line">      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]</span><br><span class="line">        action: replace</span><br><span class="line">        regex: ([^:]+)(?::\d+)?;(\d+)</span><br><span class="line">        replacement: <span class="variable">$1</span>:<span class="variable">$2</span></span><br><span class="line">        target_label: __address__</span><br><span class="line"><span class="comment"># 下面主要是为了给样本添加额外信息         </span></span><br><span class="line">      - action: labelmap</span><br><span class="line">        regex: __meta_kubernetes_pod_label_(.+)</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_namespace</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: kubernetes_pod_name</span><br></pre></td></tr></table></figure>


<p>#prometheus是如何识别apiserver的呢？举个例子：</p>
<p># kubectl describe svc kubernetes</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Name:              kubernetes  <span class="comment">#__meta_kubernetes_service_name</span></span><br><span class="line">Namespace:         default     <span class="comment">#__meta_kubernetes_namespace</span></span><br><span class="line">Labels:            component=apiserver</span><br><span class="line">                   provider=kubernetes</span><br><span class="line">Annotations:       &lt;none&gt;</span><br><span class="line">Selector:          &lt;none&gt;</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.96.0.1</span><br><span class="line">Port:              https  443/TCP  <span class="comment">#__meta_kubernetes_endpoint_port_name</span></span><br><span class="line">TargetPort:        6443/TCP</span><br><span class="line">Endpoints:         192.168.1.135:6443</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure>

<p># kubectl apply -f prometheus-config-configmap.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configmap/prometheus-config created</span><br></pre></td></tr></table></figure>

<p># vim prometheus-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-dep</span><br><span class="line">  namespace: prometheus</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: prometheus-dep</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: prometheus-dep</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: prom/prometheus:v2.16.0</span><br><span class="line">        imagePullPolicy: IfNotPresent </span><br><span class="line">        name: prometheus</span><br><span class="line">        <span class="built_in">command</span>:</span><br><span class="line">        - <span class="string">&quot;/bin/prometheus&quot;</span></span><br><span class="line">        args:</span><br><span class="line">        - <span class="string">&quot;--config.file=/etc/prometheus/prometheus.yml&quot;</span></span><br><span class="line">        - <span class="string">&quot;--storage.tsdb.path=/prometheus&quot;</span></span><br><span class="line">        <span class="comment">#- &quot;--storage.tsdb.retention=1d&quot;  #storage.tsdb.retention: 已被废弃，改为使用storage.tsdb.retention.time</span></span><br><span class="line">        - <span class="string">&quot;--storage.tsdb.retention.time=1d&quot;</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9090</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: <span class="string">&quot;/prometheus&quot;</span></span><br><span class="line">          name: data</span><br><span class="line">        - mountPath: <span class="string">&quot;/etc/prometheus&quot;</span></span><br><span class="line">          name: config-volume</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 1000m</span><br><span class="line">            memory: 1000Mi</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 2000m</span><br><span class="line">            memory: 4000Mi</span><br><span class="line">      serviceAccountName: prometheus</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">        - name: regsecret</span><br><span class="line">      volumes:</span><br><span class="line">      - name: data</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      - name: config-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: prometheus-config</span><br></pre></td></tr></table></figure>

<p>prometheus-dep.yaml定义了prometheus的部署，这里使用–storage.tsdb.retention参数，监控数据只保留1天，因为最终监控数据会统一汇总。 limits资源限制根据集群大小进行适当调整。</p>
<p># kubectl apply -f  prometheus-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deployment.apps/prometheus-dep created</span><br></pre></td></tr></table></figure>

<p># vim prometheus-svc.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-svc</span><br><span class="line">  namespace: prometheus</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - port: 9090</span><br><span class="line">    targetPort: 9090</span><br><span class="line">    nodePort: 30090</span><br><span class="line">  selector:</span><br><span class="line">    app: prometheus-dep</span><br></pre></td></tr></table></figure>

<p>prometheus-svc.yaml定义Prometheus的Service，需要将Prometheus以NodePort、LoadBalancer或Ingress暴露到集群外部，这样外部的Prometheus才能访问它。这里采用的NodePort，所以只需要访问集群中有外网地址的任意一台服务器的30090端口就可以使用prometheus。</p>
<p>#注意：但是上面只是一个例子，实际场景呢可以用LoadBalancer，这样就不会因为Pod重启漂移而导致你的nodeip发送变化，而你接收端要进行变更，但是呢如果你担心你这个pod乱飘导致其他Node节点资源不足，可以绑定到某个Node上，这样就可以用NodePort方式了。</p>
<p># kubectl create -f prometheus-svc.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service/prometheus-svc created</span><br></pre></td></tr></table></figure>

<h3 id="2-2-kube-state-metrics"><a href="#2-2-kube-state-metrics" class="headerlink" title="2.2 kube-state-metrics"></a>2.2 kube-state-metrics</h3><p>prometheus部署成功后，接着再部署kube-state-metrics作为prometheus的一个exporter来使用，提供deployment、daemonset、cronjob等服务的监控数据。</p>
<p># vim kube-state-metrics-rbac.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: prometheus</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"><span class="comment"># kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line">kind: Role</span><br><span class="line">metadata:</span><br><span class="line">  namespace: prometheus</span><br><span class="line">  name: kube-state-metrics-resizer</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - pods</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>]</span><br><span class="line">- apiGroups: [<span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - deployments</span><br><span class="line">  resourceNames: [<span class="string">&quot;kube-state-metrics&quot;</span>]</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"><span class="comment"># kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - configmaps</span><br><span class="line">  - secrets</span><br><span class="line">  - nodes</span><br><span class="line">  - pods</span><br><span class="line">  - services</span><br><span class="line">  - resourcequotas</span><br><span class="line">  - replicationcontrollers</span><br><span class="line">  - limitranges</span><br><span class="line">  - persistentvolumeclaims</span><br><span class="line">  - persistentvolumes</span><br><span class="line">  - namespaces</span><br><span class="line">  - endpoints</span><br><span class="line">  verbs: [<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- apiGroups: [<span class="string">&quot;extensions&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - daemonsets</span><br><span class="line">  - deployments</span><br><span class="line">  - replicasets</span><br><span class="line">  verbs: [<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- apiGroups: [<span class="string">&quot;apps&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - statefulsets</span><br><span class="line">  verbs: [<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- apiGroups: [<span class="string">&quot;batch&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - cronjobs</span><br><span class="line">  - <span class="built_in">jobs</span></span><br><span class="line">  verbs: [<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- apiGroups: [<span class="string">&quot;autoscaling&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - horizontalpodautoscalers</span><br><span class="line">  verbs: [<span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"><span class="comment"># kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line">kind: RoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: prometheus</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: Role</span><br><span class="line">  name: kube-state-metrics-resizer</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: prometheus</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line"><span class="comment"># kubernetes versions before 1.8.0 should use rbac.authorization.k8s.io/v1beta1</span></span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: prometheus</span><br></pre></td></tr></table></figure>

<p>kube-state-metrics-rbac.yaml定义了kube-state-metrics访问k8s apiserver所需的ServiceAccount和ClusterRole及ClusterRoleBinding。</p>
<p># kubectl create -f  kube-state-metrics-rbac.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">serviceaccount/kube-state-metrics created</span><br><span class="line">role.rbac.authorization.k8s.io/kube-state-metrics-resizer created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/kube-state-metrics created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/kube-state-metrics created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/kube-state-metrics created</span><br></pre></td></tr></table></figure>

<p># vim kube-state-metrics-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line"><span class="comment"># Kubernetes versions after 1.9.0 should use apps/v1</span></span><br><span class="line"><span class="comment"># Kubernetes versions before 1.8.0 should use apps/v1beta1 or extensions/v1beta1</span></span><br><span class="line"><span class="comment"># addon-resizer描述：https://github.com/kubernetes/autoscaler/tree/master/addon-resizer</span></span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: prometheus</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-state-metrics</span><br><span class="line">  replicas: 1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kube-state-metrics</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: kube-state-metrics</span><br><span class="line">      containers:</span><br><span class="line">      - name: kube-state-metrics</span><br><span class="line">        image: quay.io/coreos/kube-state-metrics:v1.9.5</span><br><span class="line">        ports:</span><br><span class="line">        - name: http-metrics</span><br><span class="line">          containerPort: 8080</span><br><span class="line">        - name: telemetry</span><br><span class="line">          containerPort: 8081</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /healthz</span><br><span class="line">            port: 8080</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">      - name: addon-resizer</span><br><span class="line">          <span class="comment">#因为你知道的网络原因，这里使用阿里云的镜像源</span></span><br><span class="line">        <span class="comment">#image: gcr.io/bskiba-gke-dev/addon-resizer:1.8.7</span></span><br><span class="line">        image: registry.cn-hangzhou.aliyuncs.com/google_containers/addon-resizer:1.8.7</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 30Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 30Mi</span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">          - name: MY_POD_NAME</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: metadata.name</span><br><span class="line">          - name: MY_POD_NAMESPACE</span><br><span class="line">            valueFrom:</span><br><span class="line">              fieldRef:</span><br><span class="line">                fieldPath: metadata.namespace</span><br><span class="line">        <span class="built_in">command</span>:</span><br><span class="line">          - /pod_nanny</span><br><span class="line">          - --container=kube-state-metrics</span><br><span class="line">          - --cpu=100m</span><br><span class="line">          - --extra-cpu=1m</span><br><span class="line">          - --memory=100Mi</span><br><span class="line">          - --extra-memory=2Mi</span><br><span class="line">          - --threshold=5</span><br><span class="line">          - --deployment=kube-state-metrics</span><br></pre></td></tr></table></figure>

<p>kube-state-metrics-dep.yaml定义了kube-state-metrics的部署。</p>
<p>插件伸缩 Addon Resizer: Addon resizer 是一个很有趣的小插件。如果用户在上述的场景中使用了Metrics Server，Metrics Server的资源占用量会随着集群中的Pod数量的不断增长而不断上升。Addon resizer 容器会以Sidecar的形式监控与自己同一个Pod内的另一个容器（在本例中是Metrics Server）并且垂直的扩展或收缩这个容器。Addon resizer能依据集群中节点的数量线性地扩展Metrics Server，以保证其能够有能力提供完整的metrics API服务。官网github地址：<a href="https://github.com/kubernetes/autoscaler/tree/master/addon-resizer">https://github.com/kubernetes/autoscaler/tree/master/addon-resizer</a></p>
<p># kubectl create -f  kube-state-metrics-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deployment.apps/kube-state-metrics created</span><br></pre></td></tr></table></figure>

<p># vim kube-state-metrics-svc.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-state-metrics</span><br><span class="line">  namespace: prometheus</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-state-metrics</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io/scrape: <span class="string">&#x27;true&#x27;</span></span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http-metrics</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: http-metrics</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - name: telemetry</span><br><span class="line">    port: 8081</span><br><span class="line">    targetPort: telemetry</span><br><span class="line">    protocol: TCP</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-state-metrics</span><br></pre></td></tr></table></figure>

<p>kube-state-metrics-svc.yaml定义了kube-state-metrics的暴露方式，这里只需要使用默认的ClusterIP就可以了，因为它只提供给集群内部的promethes访问。</p>
<p># kubectl create -f  kube-state-metrics-svc.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service/kube-state-metrics created</span><br></pre></td></tr></table></figure>

<p>k8s集群中的prometheus监控到这儿就已经全部OK了，接下来还需要做的是汇总数据、展示数据及告警规则配置。</p>
<h3 id="2-3-部署-数据汇总（注意后面哪些是可以不做的哈，只是列出用pod如何做）"><a href="#2-3-部署-数据汇总（注意后面哪些是可以不做的哈，只是列出用pod如何做）" class="headerlink" title="2.3 部署-数据汇总（注意后面哪些是可以不做的哈，只是列出用pod如何做）"></a>2.3 部署-数据汇总（注意后面哪些是可以不做的哈，只是列出用pod如何做）</h3><p>#个人还是推荐在物理机或者ECS机器上面部署prometheus-server用联邦模式进行k8s集群的数据采集和用altermanager集群模式进行报警。</p>
<p>prometheus-server：</p>
<p>       prometheus-server和前面prometheus的步骤基本相同，需要针对configmap、数据存储时间（一般为30d）、svc类型做些许改变，同时增加 rule.yaml。</p>
<p>      prometheus-server不需要kube-state-metrics。prometheus-server可以部署在任意k8s集群，或者部署在K8s集群外部都可以。</p>
<p>      prometheus-rbac.yaml (内容和上面的一致，namespace为prometheus-server)</p>
<p># kubectl create namespace prometheus-server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">namespace/prometheus-server created</span><br></pre></td></tr></table></figure>

<p># vim prometheus-server-rbac.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  - nodes/proxy</span><br><span class="line">  - services</span><br><span class="line">  - endpoints</span><br><span class="line">  - pods</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- apiGroups:</span><br><span class="line">  - extensions</span><br><span class="line">  resources:</span><br><span class="line">  - ingresses</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">- nonResourceURLs: [<span class="string">&quot;/metrics&quot;</span>]</span><br><span class="line">  verbs: [<span class="string">&quot;get&quot;</span>]</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server</span><br><span class="line">  namespace: prometheus-server</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: prometheus-server</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: prometheus-server</span><br><span class="line">  namespace: prometheus-server</span><br></pre></td></tr></table></figure>

<p># kubectl create -f  prometheus-server-rbac.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">clusterrole.rbac.authorization.k8s.io/prometheus-server created</span><br><span class="line">serviceaccount/prometheus-server created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/prometheus-server created</span><br></pre></td></tr></table></figure>

<p># vim prometheus-server-config-configmap.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server-config</span><br><span class="line">  namespace: prometheus-server</span><br><span class="line">data:</span><br><span class="line">  prometheus.yml: |</span><br><span class="line">    global:</span><br><span class="line">      scrape_interval: 30s</span><br><span class="line">      scrape_timeout: 30s</span><br><span class="line">      evaluation_interval: 30s</span><br><span class="line">    alerting:</span><br><span class="line">      alertmanagers:</span><br><span class="line">      - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">          - alertmanager-svc.prometheus-server.svc.cluster.local:80</span><br><span class="line">        scheme: http</span><br><span class="line">        <span class="built_in">timeout</span>: 10s</span><br><span class="line">    rule_files:</span><br><span class="line">    - <span class="string">&quot;/etc/prometheus/rule/rule.yml&quot;</span></span><br><span class="line">    scrape_configs:</span><br><span class="line">    - job_name: federate_test01</span><br><span class="line">      honor_labels: <span class="literal">true</span></span><br><span class="line">      params:</span><br><span class="line">        match[]:</span><br><span class="line">        - <span class="string">&#x27;&#123;job=~&quot;kubernetes-.*&quot;&#125;&#x27;</span></span><br><span class="line">      scrape_interval: 30s</span><br><span class="line">      scrape_timeout: 30s</span><br><span class="line">      metrics_path: /federate</span><br><span class="line">      scheme: http</span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 192.168.1.137:31090  <span class="comment">#这里就是被采集的部署在k8s集群内部的prometheus的9090端口暴露在外面的svc的IP和端口</span></span><br><span class="line">        labels:</span><br><span class="line">          k8scluster: offline_51niux_k8s</span><br></pre></td></tr></table></figure>


<p>注意下面的labels，这个是自己定义的，它的作用在于给每一条刮取过来的监控数据都加上一个 k8scluster: offline_51niux_k8s 的Key-Value，offline一般指定为集群环境。这样我们可以在多个集群数据中区分该条数据是属于哪一个k8s集群，这对于后面的展示和告警都非常有利。</p>
<p># vim prometheus-server-rule-configmap.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server-rule-config</span><br><span class="line">  namespace: prometheus-server</span><br><span class="line">data:</span><br><span class="line">  rule.yml: |</span><br><span class="line">    <span class="built_in">groups</span>:</span><br><span class="line">    - name: kubernetes</span><br><span class="line">      rules:</span><br><span class="line">      - alert: PodDown</span><br><span class="line">        <span class="built_in">expr</span>: kube_pod_status_phase&#123;phase=<span class="string">&quot;Unknown&quot;</span>&#125; == 1 or kube_pod_status_phase&#123;phase=<span class="string">&quot;Failed&quot;</span>&#125; == 1</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">          service: prometheus_bot</span><br><span class="line">          receiver_group: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;_&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">        annotations:</span><br><span class="line">          summary: Pod Down</span><br><span class="line">          k8scluster: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;&quot;</span></span><br><span class="line">          namespace: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">          pod: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.pod &#125;&#125;&quot;</span></span><br><span class="line">          container: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.container &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">      - alert: PodRestart</span><br><span class="line">        <span class="built_in">expr</span>: changes(kube_pod_container_status_restarts_total&#123;pod !~ <span class="string">&quot;analyzer.*&quot;</span>&#125;[10m]) &gt; 0</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">          service: prometheus_bot</span><br><span class="line">          receiver_group: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;_&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">        annotations:</span><br><span class="line">          summary: Pod Restart</span><br><span class="line">          k8scluster: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;&quot;</span></span><br><span class="line">          namespace: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">          pod: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.pod &#125;&#125;&quot;</span></span><br><span class="line">          container: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.container &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">      - alert: NodeUnschedulable</span><br><span class="line">        <span class="built_in">expr</span>: kube_node_spec_unschedulable == 1</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">          service: prometheus_bot</span><br><span class="line">          receiver_group: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;_&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">        annotations:</span><br><span class="line">          summary: Node Unschedulable</span><br><span class="line">          k8scluster: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;&quot;</span></span><br><span class="line">          node: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.node &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">      - alert: NodeStatusError</span><br><span class="line">        <span class="built_in">expr</span>: kube_node_status_condition&#123;condition=<span class="string">&quot;Ready&quot;</span>, status!=<span class="string">&quot;true&quot;</span>&#125; == 1</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">          service: prometheus_bot</span><br><span class="line">          receiver_group: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;_&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">        annotations:</span><br><span class="line">          summary: Node Status Error</span><br><span class="line">          k8scluster: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;&quot;</span></span><br><span class="line">          node: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.node &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">      - alert: DaemonsetUnavailable</span><br><span class="line">        <span class="built_in">expr</span>: kube_daemonset_status_number_unavailable &gt; 0</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">          service: prometheus_bot</span><br><span class="line">          receiver_group: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;_&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">        annotations:</span><br><span class="line">          summary: Daemonset Unavailable</span><br><span class="line">          k8scluster: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;&quot;</span></span><br><span class="line">          namespace: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">          daemonset: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.daemonset &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">      - alert: JobFailed</span><br><span class="line">        <span class="built_in">expr</span>: kube_job_status_failed == 1</span><br><span class="line">        <span class="keyword">for</span>: 5m</span><br><span class="line">        labels:</span><br><span class="line">          severity: error</span><br><span class="line">          service: prometheus_bot</span><br><span class="line">          receiver_group: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;_&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">        annotations:</span><br><span class="line">          summary: Job Failed</span><br><span class="line">          k8scluster: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.k8scluster&#125;&#125;&quot;</span></span><br><span class="line">          namespace: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.namespace &#125;&#125;&quot;</span></span><br><span class="line">          job: <span class="string">&quot;&#123;&#123; <span class="variable">$labels</span>.exported_job &#125;&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>rule.yaml定义了告警规则。此文件中定义了 PodDown、PodRestart、NodeUnschedulable、NodeStatusError、DaemonsetUnavailable、JobFailed 共6条规则。</p>
<p># vim prometheus-server-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server-dep</span><br><span class="line">  namespace: prometheus-server</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: prometheus-server-dep</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: prometheus-server-dep</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: prom/prometheus:v2.16.0</span><br><span class="line">        name: prometheus-server</span><br><span class="line">        <span class="built_in">command</span>:</span><br><span class="line">        - <span class="string">&quot;/bin/prometheus&quot;</span></span><br><span class="line">        args:</span><br><span class="line">        - <span class="string">&quot;--config.file=/etc/prometheus/config/prometheus.yml&quot;</span></span><br><span class="line">        - <span class="string">&quot;--storage.tsdb.path=/prometheus&quot;</span></span><br><span class="line">        - <span class="string">&quot;--web.console.libraries=/usr/share/prometheus/console_libraries&quot;</span></span><br><span class="line">        - <span class="string">&quot;--web.console.templates=/usr/share/prometheus&quot;</span></span><br><span class="line">        - <span class="string">&quot;--storage.tsdb.retention=30d&quot;</span></span><br><span class="line">        - <span class="string">&quot;--web.enable-lifecycle&quot;</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9090</span><br><span class="line">          protocol: TCP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: <span class="string">&quot;data&quot;</span></span><br><span class="line">          mountPath: <span class="string">&quot;/prometheus&quot;</span></span><br><span class="line">        - name: <span class="string">&quot;server-config-volume&quot;</span></span><br><span class="line">          mountPath: <span class="string">&quot;/etc/prometheus/config&quot;</span></span><br><span class="line">        - name: <span class="string">&quot;rule-config-volume&quot;</span></span><br><span class="line">          mountPath: <span class="string">&quot;/etc/prometheus/rule&quot;</span></span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 250m</span><br><span class="line">            memory: 100Mi</span><br><span class="line">      serviceAccountName: prometheus-server</span><br><span class="line">      volumes:</span><br><span class="line">      - name: data</span><br><span class="line">        <span class="comment">#emptyDir: &#123;&#125; #volumes.data这里使用的是emptyDir，这样其实不妥，应该单独挂载一块盘来存储汇总数据。可使用pv实现。</span></span><br><span class="line">        hostPath:</span><br><span class="line">          path:  /data/prometheus</span><br><span class="line">      - name: server-config-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: prometheus-server-config</span><br><span class="line">      - name: rule-config-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: prometheus-server-rule-config</span><br><span class="line">      nodeSelector:</span><br><span class="line">        service-type: prometheus</span><br></pre></td></tr></table></figure>

<p>#mkdir &#x2F;data&#x2F;prometheus   -p  #实际场景这应该是一个挂载盘哈，但是你怎么知道它飘到哪个node节点呢？那就需要设置跟节点绑定了。</p>
<p># chmod 777 &#x2F;data&#x2F;prometheus  #不授权的话有下面的错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">component=activeQueryTracker msg=<span class="string">&quot;Error opening query log file&quot;</span> file=/prometheus/queries.active err=<span class="string">&quot;open /prometheus/queries.active: permission denied&quot;</span></span><br><span class="line">panic: Unable to create mmap-ed active query <span class="built_in">log</span></span><br></pre></td></tr></table></figure>

<p># kubectl create -f  prometheus-server-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deployment.apps/prometheus-server-dep created</span><br></pre></td></tr></table></figure>

<p>#如果Pod启动有问题可以使用：# kubectl describe pods 容器名   -n prometheus-server 或者# kubectl logs pods 容器名   -n prometheus-server排查一下问题。</p>
<p># vim prometheus-server-svc.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-server-svc</span><br><span class="line">  namespace: prometheus-server</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: LoadBalancer</span><br><span class="line">  ports:</span><br><span class="line">  - port: 80</span><br><span class="line">    targetPort: 9090</span><br><span class="line">  selector:</span><br><span class="line">    app: prometheus-server-dep</span><br></pre></td></tr></table></figure>

<p> # kubectl create -f  prometheus-server-svc.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service/prometheus-server-svc created</span><br></pre></td></tr></table></figure>

<p>到这儿，数据采集和数据汇总就已经OK了。Prometheus-server部署成功之后，在浏览器中可以看到监控数据汇总信息了。</p>
<h3 id="2-4-告警配置"><a href="#2-4-告警配置" class="headerlink" title="2.4 告警配置"></a>2.4 告警配置</h3><p># vim alertmanager-config-configmap.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-config</span><br><span class="line">  namespace: prometheus</span><br><span class="line">data:</span><br><span class="line">  config.yml: |</span><br><span class="line">    global:</span><br><span class="line">        resolve_timeout: 5m</span><br><span class="line"></span><br><span class="line">        route:</span><br><span class="line">          receiver: default</span><br><span class="line">          group_wait: 30s</span><br><span class="line">          group_interval: 5m</span><br><span class="line">          repeat_interval: 4h</span><br><span class="line">          group_by: [<span class="string">&#x27;alertname&#x27;</span>, <span class="string">&#x27;k8scluster&#x27;</span>, <span class="string">&#x27;node&#x27;</span>, <span class="string">&#x27;container&#x27;</span>, <span class="string">&#x27;exported_job&#x27;</span>, <span class="string">&#x27;daemonset&#x27;</span>]</span><br><span class="line">          routes:</span><br><span class="line">          - receiver: send_msg_warning</span><br><span class="line">                group_wait: 60s</span><br><span class="line">                match:</span><br><span class="line">                  severity: warning</span><br><span class="line"></span><br><span class="line">        receivers:</span><br><span class="line">        - name: default</span><br><span class="line">          webhook_configs:</span><br><span class="line">          - url: <span class="string">&#x27;http://msg.x.com/xxx/&#x27;</span></span><br><span class="line">                send_resolved: <span class="literal">true</span></span><br><span class="line">                http_config:</span><br><span class="line">                  bearer_token: <span class="string">&#x27;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#x27;</span></span><br><span class="line"></span><br><span class="line">        - name: send_msg_warning</span><br><span class="line">          webhook_configs:</span><br><span class="line">          - url: <span class="string">&#x27;http://msg.x.com/xxx/&#x27;</span></span><br><span class="line">                send_resolved: <span class="literal">true</span></span><br><span class="line">                http_config:</span><br><span class="line">                  bearer_token: <span class="string">&#x27;xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&#x27;</span></span><br></pre></td></tr></table></figure>

<p># kubectl create -f alertmanager-config-configmap.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">configmap/alertmanager-config created</span><br></pre></td></tr></table></figure>

<p>alertmanager-config-configmap.yaml定义了alertmanager的配置文件</p>
<p>route：路由。分级匹配，然后交给指定 receivers，其中route.group_by中的k8scluster是prometheus-server-config.yaml中自定义的标签  </p>
<p>receivers：发送。这里使用webhook方式发送给自研的send_msg模块  </p>
<p>email、wechat、webhook、slack等发送方式配置请见官网文档：<a href="https://prometheus.io/docs/alerting/configuration/">https://prometheus.io/docs/alerting/configuration/</a>  </p>
<p># kubectl create namespace alertmanager</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">namespace/alertmanager created</span><br></pre></td></tr></table></figure>

<p># vim alertmanager-dep.yaml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-dep</span><br><span class="line">  namespace: alertmanager</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: alertmanager-dep</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: alertmanager-dep</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: prom/alertmanager:v0.20.0</span><br><span class="line">        name: alertmanager</span><br><span class="line">        args:</span><br><span class="line">                - <span class="string">&quot;--config.file=/etc/alertmanager/config.yml&quot;</span></span><br><span class="line">                - <span class="string">&quot;--storage.path=/alertmanager&quot;</span></span><br><span class="line">                - <span class="string">&quot;--data.retention=720h&quot;</span></span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: <span class="string">&quot;/alertmanager&quot;</span></span><br><span class="line">          name: data</span><br><span class="line">        - mountPath: <span class="string">&quot;/etc/alertmanager&quot;</span></span><br><span class="line">          name: config-volume</span><br><span class="line">        resources:</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 100Mi</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 500m</span><br><span class="line">            memory: 2500Mi</span><br><span class="line">      volumes:</span><br><span class="line">      - name: data</span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">      - name: config-volume</span><br><span class="line">        configMap:</span><br><span class="line">          name: alertmanager-config</span><br></pre></td></tr></table></figure>

<h1 id="kubectl-create-f-alertmanager-dep-yaml"><a href="#kubectl-create-f-alertmanager-dep-yaml" class="headerlink" title="kubectl create -f alertmanager-dep.yaml"></a>kubectl create -f alertmanager-dep.yaml</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">deployment.apps/alertmanager-dep created</span><br></pre></td></tr></table></figure>

<p>alertmanager-dep.yaml定义了Alertmanager的部署。</p>
<h2 id="三、采集的各项指标的含义-可直接忽略就是蛋疼的整理了下，大部分用不到，需要再网上查"><a href="#三、采集的各项指标的含义-可直接忽略就是蛋疼的整理了下，大部分用不到，需要再网上查" class="headerlink" title="三、采集的各项指标的含义(可直接忽略就是蛋疼的整理了下，大部分用不到，需要再网上查)"></a>三、采集的各项指标的含义(可直接忽略就是蛋疼的整理了下，大部分用不到，需要再网上查)</h2><p># kubectl get –raw &#x2F;metrics  #从kube-apiserver拿到metrics信息</p>
<h3 id="3-1-job-”kubernetes-apiservers”"><a href="#3-1-job-”kubernetes-apiservers”" class="headerlink" title="3.1 job&#x3D;”kubernetes-apiservers”"></a>3.1 job&#x3D;”kubernetes-apiservers”</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apiserver_admission_controller_admission_latencies_seconds_bucket   <span class="comment">#apiserver准入控制器准入等待时间单位秒bucket,里面还有不同标签有2000多项</span></span><br><span class="line">apiserver_request_latencies_bucket  <span class="comment">#apiserver请求等待时间bucket，里面还有不同的label有2000多项</span></span><br><span class="line">apiserver_response_sizes_bucket  <span class="comment">#apiserver响应大小bucket，里面还有不同的label有800多项</span></span><br><span class="line">apiserver_request_latencies_summary  <span class="comment">#apiserver请求延迟summary，里面有不同的label有400多项</span></span><br><span class="line">apiserver_admission_step_admission_latencies_seconds_bucket  <span class="comment">#apiserver允许step允许等待时间单位为秒bucket，有400多不同label的项。 </span></span><br><span class="line">apiserver_admission_controller_admission_latencies_seconds_count  <span class="comment">#apiserver接纳控制器接纳等待时间秒数，有400多不同label的项。</span></span><br><span class="line">apiserver_admission_controller_admission_latencies_seconds_sum  <span class="comment">#apiserver准入控制器准入等待时间秒数总和,有400多不同label项。</span></span><br><span class="line">apiserver_request_count  <span class="comment">#apiserver请求计数，有不到400个不同label项。</span></span><br><span class="line">reflector_list_duration_seconds  <span class="comment">#reflector list持续时间单位为秒，有不到300个不同的label项。</span></span><br><span class="line">reflector_items_per_list  <span class="comment">#reflector items每个清单，有不到300个不同的label项。</span></span><br><span class="line">reflector_watch_duration_seconds  <span class="comment">#reflector watch持续时间单位为秒，有不到300个不同的label项。</span></span><br><span class="line">reflector_items_per_watch  <span class="comment">#有不到300个不同的label项。</span></span><br><span class="line">apiserver_admission_step_admission_latencies_seconds_summary  <span class="comment">#apiserver允许step允许等待时间秒摘要，有200多个不同的label项。</span></span><br><span class="line">apiserver_request_latencies_summary_sum  <span class="comment">#apiserver请求延迟汇总，有不到200个不同的label项。</span></span><br><span class="line">apiserver_request_latencies_summary_count  <span class="comment">#apiserver请求延迟次数汇总，有不到200个不同的label项。</span></span><br><span class="line">apiserver_request_latencies_sum  <span class="comment">#apiserver请求延迟总和，有不到200个不同的label项。</span></span><br><span class="line">apiserver_request_latencies_count  <span class="comment">#apiserver请求延迟次数总和，有不到200个不同的label项。</span></span><br><span class="line">apiserver_response_sizes_count  <span class="comment">#apiserver响应大小计数，有不到200个不同的label项。</span></span><br><span class="line">apiserver_response_sizes_sum  <span class="comment">#apiserver响应大小总和，有100多个不同的label项。</span></span><br><span class="line">reflector_items_per_list_count   <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_last_resource_version  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_lists_total  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_items_per_watch_count  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_watch_duration_seconds_count  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_list_duration_seconds_sum  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_items_per_watch_sum  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_watch_duration_seconds_sum  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_watches_total  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_short_watches_total  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_items_per_list_sum  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">reflector_list_duration_seconds_count  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">apiserver_admission_step_admission_latencies_seconds_sum  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">apiserver_admission_step_admission_latencies_seconds_summary_count  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">apiserver_admission_step_admission_latencies_seconds_count  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">apiserver_admission_step_admission_latencies_seconds_summary_sum  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">rest_client_request_latency_seconds_bucket  <span class="comment">#有不到100个不同的label项。</span></span><br><span class="line">apiserver_longrunning_gauge  <span class="comment">#有50个不同的label项。</span></span><br><span class="line">etcd_object_counts  <span class="comment">#etcd对象计数，有50个不同的label项。</span></span><br><span class="line">apiserver_registered_watchers  <span class="comment">#apiserver注册watchers，有不到50个不同的label项。</span></span><br><span class="line">apiserver_storage_data_key_generation_latencies_microseconds_bucket  <span class="comment">#apiserver存储数据密钥生成延迟微秒级bucket，有不到20个不同的label项。</span></span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket <span class="comment">#apiserver客户端证书到期秒数bucket，有不到20个不同的label项。</span></span><br><span class="line">rest_client_requests_total  <span class="comment">#其余客户端请求总数，有8个不同的label项。</span></span><br><span class="line">grpc_client_started_total  <span class="comment">#grpc客户端启动总数，有6个不同的label项。</span></span><br><span class="line">grpc_client_msg_sent_total  <span class="comment">#grpc客户端msg发送总计,有6个不同的label项。</span></span><br><span class="line">rest_client_request_latency_seconds_sum  <span class="comment">#其余客户端请求延迟秒数总和,有6个不同的label项。</span></span><br><span class="line">rest_client_request_latency_seconds_count  <span class="comment">#其余客户端请求延迟秒数,有6个不同的label项。</span></span><br><span class="line">grpc_client_handled_total  <span class="comment">#grpc客户端处理的总计，有5个不同的label项。</span></span><br><span class="line">apiserver_audit_level_total  <span class="comment">#apiserver审核级别总计，有4个不同的label项。</span></span><br><span class="line">admission_quota_controller_queue_latency  <span class="comment">#准入配额控制器队列延迟，有3个不同的label项。</span></span><br><span class="line">autoregister_queue_latency  <span class="comment">#自动注册队列延迟，有3个不同的label项。</span></span><br><span class="line">crdEstablishing_queue_latency  <span class="comment">#crd建立队列延迟，有3个不同的label项。</span></span><br><span class="line">autoregister_work_duration  <span class="comment">#自动注册工作时间，有3个不同的label项。</span></span><br><span class="line">http_response_size_bytes  <span class="comment">#http响应大小字节，有3个不同的label项。</span></span><br><span class="line">etcd_request_cache_get_latencies_summary  <span class="comment">#etcd请求缓存获取延迟summary，有3个不同的label项。</span></span><br><span class="line">APIServiceRegistrationController_work_duration  <span class="comment">#APIServiceRegistrationController工作持续时间，有3个不同的label项</span></span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_work_duration  <span class="comment">#APIServiceOpenAPIAggregationControllerQueue1的工作时间，有3个不同的label项</span></span><br><span class="line">APIServiceRegistrationController_queue_latency  <span class="comment">#APIServiceRegistrationController队列延迟，有3个不同的label项</span></span><br><span class="line">DiscoveryController_queue_latency  <span class="comment">#DiscoveryController队列延迟，有3个不同的label项</span></span><br><span class="line">AvailableConditionController_work_duration  <span class="comment">#AvailableConditionController工作时间，有3个不同的label项</span></span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_queue_latency  <span class="comment">#APIServiceOpenAPIAggregationControllerQueue1队列延迟，有3个不同的label项</span></span><br><span class="line">etcd_request_cache_add_latencies_summary  <span class="comment">#etcd请求缓存add延迟summary，有3个不同的label项</span></span><br><span class="line">http_request_size_bytes  <span class="comment">#http请求大小字节，有3个不同的label项</span></span><br><span class="line">AvailableConditionController_queue_latency  <span class="comment">#AvailableConditionController队列延迟，有3个不同的label项</span></span><br><span class="line">DiscoveryController_work_duration  <span class="comment">#DiscoveryController的工作时间，有3个不同的label项</span></span><br><span class="line">http_request_duration_microseconds  <span class="comment">#http请求持续时间微秒，有3个不同的label项</span></span><br><span class="line">admission_quota_controller_work_duration  <span class="comment">#admission_quota控制器的持续工作时间，有3个不同的label项</span></span><br><span class="line">crdEstablishing_work_duration  <span class="comment">#crd建立连接的工作时间，有3个不同的label项</span></span><br><span class="line">apiserver_current_inflight_requests  <span class="comment">#apiserver当前进行中的请求，有两个不同的label项</span></span><br><span class="line">get_token_fail_count  <span class="comment">#get token失败计数</span></span><br><span class="line">scrape_duration_seconds  <span class="comment">#采集时间单位为秒</span></span><br><span class="line">APIServiceRegistrationController_depth  <span class="comment">#APIServiceRegistrationController深度</span></span><br><span class="line">AvailableConditionController_queue_latency_count  <span class="comment">#AvailableConditionController队列延迟计数</span></span><br><span class="line">AvailableConditionController_retries  <span class="comment">#AvailableConditionController重试</span></span><br><span class="line">AvailableConditionController_work_duration_count  <span class="comment">#AvailableConditionController工作持续时间计数</span></span><br><span class="line">admission_quota_controller_work_duration_count  <span class="comment">#admission_quota_controller工作持续时间计数</span></span><br><span class="line">apiserver_client_certificate_expiration_seconds_sum  <span class="comment">#apiserver客户端证书到期秒数总和</span></span><br><span class="line">AvailableConditionController_work_duration_sum  <span class="comment">#AvailableConditionController工作持续时间总和</span></span><br><span class="line">etcd_helper_cache_miss_count  <span class="comment">#etcd helper缓存未命中计数</span></span><br><span class="line">DiscoveryController_queue_latency_count  <span class="comment">#DiscoveryController队列延迟计数</span></span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_depth  <span class="comment">#APIServiceOpenAPIAggregationControllerQueue1深度</span></span><br><span class="line">APIServiceRegistrationController_adds</span><br><span class="line">admission_quota_controller_adds</span><br><span class="line">etcd_request_cache_get_latencies_summary_count  <span class="comment">#etcd请求缓存获取延迟汇总计数</span></span><br><span class="line">http_request_duration_microseconds_sum  <span class="comment">#http请求持续时间微秒总和</span></span><br><span class="line">autoregister_work_duration_count  <span class="comment">#自动注册工作时间计数</span></span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_queue_latency_count  <span class="comment">#APIServiceOpenAPIAggregationControllerQueue1队列延迟计数</span></span><br><span class="line">autoregister_queue_latency_sum  <span class="comment">#自动注册队列延迟总和</span></span><br><span class="line">autoregister_retries  <span class="comment">#自动注册重试</span></span><br><span class="line">DiscoveryController_work_duration_count  <span class="comment">#DiscoveryController工作持续时间计数</span></span><br><span class="line">APIServiceRegistrationController_queue_latency_sum  <span class="comment">#APIServiceRegistrationController队列延迟总和</span></span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_adds</span><br><span class="line">AvailableConditionController_depth</span><br><span class="line">AvailableConditionController_queue_latency_sum</span><br><span class="line">APIServiceRegistrationController_work_duration_count</span><br><span class="line">apiserver_audit_event_total  <span class="comment">#apiserver审核事件总计</span></span><br><span class="line">etcd_request_cache_add_latencies_summary_count</span><br><span class="line">etcd_helper_cache_entry_count</span><br><span class="line">apiserver_storage_data_key_generation_failures_total  <span class="comment">#apiserver存储数据密钥生成失败总数</span></span><br><span class="line">DiscoveryController_adds</span><br><span class="line">admission_quota_controller_queue_latency_count</span><br><span class="line">admission_quota_controller_work_duration_sum</span><br><span class="line">etcd_helper_cache_hit_count</span><br><span class="line">up</span><br><span class="line">kubernetes_build_info  <span class="comment">#kubernetes构建信息</span></span><br><span class="line">http_response_size_bytes_count</span><br><span class="line">crdEstablishing_retries</span><br><span class="line">process_resident_memory_bytes</span><br><span class="line">http_response_size_bytes_sum</span><br><span class="line">DiscoveryController_retries  <span class="comment">#DiscoveryController重试</span></span><br><span class="line">admission_quota_controller_queue_latency_sum</span><br><span class="line">AvailableConditionController_adds</span><br><span class="line">etcd_request_cache_get_latencies_summary_sum</span><br><span class="line">http_request_size_bytes_count</span><br><span class="line">process_start_time_seconds</span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_retries</span><br><span class="line">admission_quota_controller_depth</span><br><span class="line">apiserver_storage_envelope_transformation_cache_misses_total</span><br><span class="line">autoregister_work_duration_sum</span><br><span class="line">crdEstablishing_work_duration_sum</span><br><span class="line">apiserver_client_certificate_expiration_seconds_count</span><br><span class="line">DiscoveryController_queue_latency_sum</span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_queue_latency_sum</span><br><span class="line">apiserver_storage_data_key_generation_latencies_microseconds_sum</span><br><span class="line">autoregister_depth</span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_work_duration_count</span><br><span class="line">crdEstablishing_queue_latency_sum</span><br><span class="line">apiserver_storage_data_key_generation_latencies_microseconds_count</span><br><span class="line">DiscoveryController_work_duration_sum</span><br><span class="line">etcd_request_cache_add_latencies_summary_sum</span><br><span class="line">APIServiceOpenAPIAggregationControllerQueue1_work_duration_sum</span><br><span class="line">scrape_samples_scraped</span><br><span class="line">APIServiceRegistrationController_queue_latency_count</span><br><span class="line">APIServiceRegistrationController_retries</span><br><span class="line">APIServiceRegistrationController_work_duration_sum</span><br></pre></td></tr></table></figure>

<h3 id="3-2-job-”kubernetes-cadvisor”"><a href="#3-2-job-”kubernetes-cadvisor”" class="headerlink" title="3.2 job&#x3D;”kubernetes-cadvisor”"></a>3.2 job&#x3D;”kubernetes-cadvisor”</h3><p>查看信息类型地址：<a href="https://github.com/google/cadvisor/blob/master/metrics/testdata/prometheus/_metrics">https://github.com/google/cadvisor/blob/master/metrics/testdata/prometheus\_metrics</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">container_tasks_state  <span class="comment">#gauge类型，容器特定状态的任务数,根据不同的pod_name和state有600+的不同label.</span></span><br><span class="line">container_memory_failures_total  <span class="comment">#counter类型，内存分配失败的累积计数,根据不同的pod_name和state有600+的不同label.</span></span><br><span class="line">container_network_receive_errors_total  <span class="comment">#counter类型，容器网络接收时遇到的累计错误数。</span></span><br><span class="line">container_network_transmit_bytes_total  <span class="comment">#counter类型，容器发送传输的累计字节数。</span></span><br><span class="line">container_network_transmit_packets_dropped_total  <span class="comment">#counter类型，容器传输时丢弃的累计包数</span></span><br><span class="line">container_network_transmit_packets_total  <span class="comment">#counter类型，传输数据包的累计计数</span></span><br><span class="line">container_network_transmit_errors_total  <span class="comment">#counter类型，传输时遇到的累积错误数</span></span><br><span class="line">container_network_receive_bytes_total  <span class="comment">#counter类型，收到的累计字节数</span></span><br><span class="line">container_network_receive_packets_dropped_total  <span class="comment">#counter类型，接收时丢弃的累计数据包数</span></span><br><span class="line">container_network_receive_packets_total  <span class="comment">#counter类型，收到的累计数据包数</span></span><br><span class="line">container_spec_cpu_period  <span class="comment">#gauge类型，容器的CPU period。</span></span><br><span class="line">container_spec_memory_swap_limit_bytes  <span class="comment">#容器swap内存交换限制字节</span></span><br><span class="line">container_memory_failcnt  <span class="comment">#counter类型，内存使用次数达到限制</span></span><br><span class="line">container_spec_memory_reservation_limit_bytes  <span class="comment">#容器规格内存预留限制字节</span></span><br><span class="line">container_spec_cpu_shares  <span class="comment">#gauge类型，</span></span><br><span class="line">container_spec_memory_limit_bytes  <span class="comment">#容器规格内存限制字节</span></span><br><span class="line">container_memory_max_usage_bytes  <span class="comment">#gauge类型，以字节为单位记录的最大内存使用量</span></span><br><span class="line">container_cpu_load_average_10s  <span class="comment">#gauge类型，最近10秒钟内的容器CPU平均负载值。</span></span><br><span class="line">container_memory_rss  <span class="comment">#gauge类型，容器RSS的大小（以字节为单位）</span></span><br><span class="line">container_start_time_seconds  <span class="comment">#gauge类型，从Unix纪元开始的容器开始时间（以秒为单位）。</span></span><br><span class="line">container_memory_mapped_file  <span class="comment">#gauge类型，内存映射文件的大小（以字节为单位）</span></span><br><span class="line">container_cpu_user_seconds_total  <span class="comment">#conter类型，累计CPU user 时间（以秒为单位）</span></span><br><span class="line">container_memory_cache  <span class="comment">#gauge类型，内存的cache字节数。</span></span><br><span class="line">container_memory_working_set_bytes  <span class="comment">#gague类型，当前工作集（以字节为单位）</span></span><br><span class="line">container_cpu_system_seconds_total  <span class="comment">#conter类型，累计CPU system时间（以秒为单位）</span></span><br><span class="line">container_memory_swap  <span class="comment">#gauge类型，容器交换使用量（以字节为单位）</span></span><br><span class="line">container_memory_usage_bytes  <span class="comment">#gauge类型，当前内存使用情况（以字节为单位），包括所有内存，无论何时访问</span></span><br><span class="line">container_last_seen  <span class="comment">#gauge类型，上一次export看到此容器的时间</span></span><br><span class="line">container_fs_writes_total  <span class="comment">#counter类型，累计写入次数</span></span><br><span class="line">container_fs_reads_total   <span class="comment">#counter类型，类型读取次数</span></span><br><span class="line">container_cpu_usage_seconds_total  <span class="comment">#counter类型，累计消耗CPU的总时间</span></span><br><span class="line">container_fs_reads_bytes_total  <span class="comment">#容器读取的总字节数</span></span><br><span class="line">container_fs_writes_bytes_total  <span class="comment">#容器写入的总字节数</span></span><br><span class="line">container_fs_sector_reads_total  <span class="comment">#counter类型，扇区已完成读取的累计计数</span></span><br><span class="line">container_fs_inodes_free  <span class="comment">#gauge类型，可用的Inode数量</span></span><br><span class="line">container_fs_io_current  <span class="comment">#gauge类型，当前正在进行的I/O数</span></span><br><span class="line">container_fs_io_time_weighted_seconds_total  <span class="comment">#counter类型，累积加权I/O时间（以秒为单位）</span></span><br><span class="line">container_fs_usage_bytes  <span class="comment">#gauge类型，此容器在文件系统上使用的字节数</span></span><br><span class="line">container_fs_limit_bytes  <span class="comment">#gauge类型，此容器文件系统上可以使用的字节数</span></span><br><span class="line">container_fs_inodes_total  <span class="comment">#gauge类型，inode数</span></span><br><span class="line">container_fs_sector_writes_total  <span class="comment">#counter类型，扇区写入累计计数</span></span><br><span class="line">container_fs_io_time_seconds_total  <span class="comment">#counter类型，I/O花费的秒数累计</span></span><br><span class="line">container_fs_writes_merged_total  <span class="comment">#counter类型，合并的累计写入数</span></span><br><span class="line">container_fs_reads_merged_total  <span class="comment">#counter类型，合并的累计读取数</span></span><br><span class="line">container_fs_write_seconds_total  <span class="comment">#counter类型，写花费的秒数累计</span></span><br><span class="line">container_fs_read_seconds_total   <span class="comment">#counter类型，读花费的秒数累计</span></span><br><span class="line">container_cpu_cfs_periods_total  <span class="comment">#counter类型，执行周期间隔时间数</span></span><br><span class="line">container_cpu_cfs_throttled_periods_total  <span class="comment">#counter类型，节流周期间隔数</span></span><br><span class="line">container_cpu_cfs_throttled_seconds_total  <span class="comment">#counter类型，容器被节流的总时间</span></span><br><span class="line">container_spec_cpu_quota  <span class="comment">#gauge类型，容器的CPU配额</span></span><br><span class="line">machine_memory_bytes  <span class="comment">#gauge类型，机器上安装的内存量</span></span><br><span class="line">scrape_samples_post_metric_relabeling</span><br><span class="line">cadvisor_version_info</span><br><span class="line">scrape_duration_seconds</span><br><span class="line">machine_cpu_cores  <span class="comment">#gauge类型，机器上的CPU核心数</span></span><br><span class="line">container_scrape_error  <span class="comment">#gauge类型，如果获取容器指标时出错，则为1，否则为0</span></span><br><span class="line">scrape_samples_scraped</span><br></pre></td></tr></table></figure>

<h3 id="3-3-job-”kubernetes-nodes”"><a href="#3-3-job-”kubernetes-nodes”" class="headerlink" title="3.3 job&#x3D;”kubernetes-nodes”"></a>3.3 job&#x3D;”kubernetes-nodes”</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">storage_operation_duration_seconds_bucket</span><br><span class="line">kubelet_runtime_operations_latency_microseconds  <span class="comment">#summary类型，（不建议使用）运行时操作的延迟（以微秒为单位）。 按操作类型细分</span></span><br><span class="line">rest_client_request_latency_seconds_bucket</span><br><span class="line">kubelet_docker_operations_latency_microseconds  <span class="comment">#summary类型，（不建议使用）Docker操作的延迟（以微秒为单位）。 按操作类型细分。</span></span><br><span class="line">kubelet_runtime_operations  <span class="comment">#counter类型，（不建议使用）按操作类型划分的运行时操作累计数。</span></span><br><span class="line">kubelet_runtime_operations_latency_microseconds_count</span><br><span class="line">apiserver_storage_data_key_generation_latencies_microseconds_bucket</span><br><span class="line">kubelet_runtime_operations_latency_microseconds_sum</span><br><span class="line">apiserver_client_certificate_expiration_seconds_bucket</span><br><span class="line">kubelet_docker_operations_latency_microseconds_sum</span><br><span class="line">kubelet_docker_operations  <span class="comment">#counter类型，（已弃用）按操作类型分类的Docker操作的累计数量。</span></span><br><span class="line">kubelet_docker_operations_latency_microseconds_count</span><br><span class="line">rest_client_requests_total  <span class="comment">#counter类型，HTTP请求数，按状态码，方法和主机划分。</span></span><br><span class="line">kubelet_cgroup_manager_latency_microseconds  <span class="comment">#summary类型，（不建议使用）cgroup Manager操作的延迟（以微秒为单位）。 按方法细分。</span></span><br><span class="line">storage_operation_duration_seconds_sum</span><br><span class="line">storage_operation_duration_seconds_count</span><br><span class="line">kubelet_network_plugin_operations_latency_microseconds  <span class="comment">#summary类型，(不建议使用）网络插件操作的延迟（以微秒为单位）。 按操作类型细分。</span></span><br><span class="line">volume_manager_total_volumes  <span class="comment">#gauge类型，Volume Manager中的卷数</span></span><br><span class="line">kubelet_pod_worker_latency_microseconds  <span class="comment">#summary类型，（不建议使用）延迟（以微秒为单位）以同步单个Pod。 按操作类型细分：创建，更新或同步</span></span><br><span class="line">kubelet_docker_operations_errors  <span class="comment">#counter类型，（已弃用）按操作类型分类的Docker操作错误累计数。</span></span><br><span class="line">kubelet_runtime_operations_errors  <span class="comment">#counter类型，（不建议使用）按操作类型累计的运行时操作错误数。</span></span><br><span class="line">rest_client_request_latency_seconds_count</span><br><span class="line">rest_client_request_latency_seconds_sum</span><br><span class="line">http_request_size_bytes  <span class="comment">#summary类型，HTTP请求大小（以字节为单位）。</span></span><br><span class="line">kubelet_pleg_relist_latency_microseconds  <span class="comment">#summary类型，（已弃用）重新列出PLEG中的Pod的延迟（以微秒为单位）。</span></span><br><span class="line">kubelet_pod_worker_start_latency_microseconds  <span class="comment">#summary类型，（已弃用）从看到容器到开始工作的等待时间（以微秒为单位）。</span></span><br><span class="line">kubelet_cgroup_manager_latency_microseconds_sum</span><br><span class="line">kubelet_network_plugin_operations_latency_microseconds_sum</span><br><span class="line">http_request_duration_microseconds  <span class="comment">#summary类型，HTTP请求延迟（以微秒为单位）。</span></span><br><span class="line">kubelet_cgroup_manager_latency_microseconds_count</span><br><span class="line">http_response_size_bytes  <span class="comment">#summary类型，HTTP响应大小（以字节为单位）。</span></span><br><span class="line">kubelet_pod_start_latency_microseconds  <span class="comment">#summary类型，（已弃用）单个Pod从挂起到运行的延迟（以微秒为单位）。</span></span><br><span class="line">kubelet_containers_per_pod_count  <span class="comment">#histogram类型，每个pod的容器数。</span></span><br><span class="line">kubelet_network_plugin_operations_latency_microseconds_count</span><br><span class="line">kubelet_pleg_relist_interval_microseconds  <span class="comment">#summary类型，（已弃用）在PLEG中重新上市之间的间隔（以微秒为单位）。</span></span><br><span class="line">kubelet_pod_worker_latency_microseconds_sum</span><br><span class="line">kubelet_pod_worker_latency_microseconds_count</span><br><span class="line">storage_operation_errors_total  <span class="comment">#counter类型，存储操作错误总数。</span></span><br><span class="line">process_resident_memory_bytes  <span class="comment">#gauge类型，驻留内存大小（以字节为单位）。</span></span><br><span class="line">kubelet_certificate_manager_client_expiration_seconds  <span class="comment">#gauge类型，证书生命周期的量度。 该值是证书自UTC 1970年1月1日起过期的秒数。</span></span><br><span class="line">kubelet_running_container_count  <span class="comment">#gauge类型，当前正在运行的容器数</span></span><br><span class="line">http_request_size_bytes_sum</span><br><span class="line">kubelet_pleg_relist_latency_microseconds_count</span><br><span class="line">http_request_duration_microseconds_count</span><br><span class="line">kubelet_pod_worker_start_latency_microseconds_count</span><br><span class="line">kubelet_pleg_relist_interval_microseconds_sum</span><br><span class="line">scrape_samples_scraped</span><br><span class="line">process_open_fds</span><br><span class="line">kubelet_pod_worker_start_latency_microseconds_sum</span><br><span class="line">apiserver_storage_data_key_generation_failures_total  <span class="comment">#counter类型，失败的数据加密密钥（DEK）生成操作的总数。</span></span><br><span class="line">http_request_size_bytes_count</span><br><span class="line">kubelet_running_pod_count  <span class="comment">#gauge类型，当前运行的pod数</span></span><br><span class="line">kubelet_node_config_error  <span class="comment">#gauge类型，如果节点遇到与配置相关的错误，则此指标为true（1），否则为false（0）。</span></span><br><span class="line">kubelet_pod_start_latency_microseconds_count</span><br><span class="line">apiserver_storage_data_key_generation_latencies_microseconds_count</span><br><span class="line">kubelet_pleg_relist_latency_microseconds_sum</span><br><span class="line">process_virtual_memory_bytes</span><br><span class="line">scrape_samples_post_metric_relabeling</span><br><span class="line">process_start_time_seconds</span><br><span class="line">kubelet_pod_start_latency_microseconds_sum</span><br><span class="line">apiserver_client_certificate_expiration_seconds_sum</span><br><span class="line">kubelet_containers_per_pod_count_count</span><br><span class="line">http_response_size_bytes_count</span><br><span class="line">kubernetes_build_info</span><br><span class="line">http_response_size_bytes_sum</span><br><span class="line">apiserver_audit_event_total  <span class="comment">#counter类型，生成审计事件的计数器，并将其发送到审计后端。</span></span><br><span class="line">kubelet_containers_per_pod_count_sum</span><br><span class="line">kubelet_pleg_relist_interval_microseconds_count</span><br><span class="line">apiserver_storage_envelope_transformation_cache_misses_total  <span class="comment">#counter类型，访问密钥解密密钥（KEK）时缓存未命中总数。</span></span><br><span class="line">scrape_duration_seconds</span><br><span class="line">apiserver_storage_data_key_generation_latencies_microseconds_sum</span><br><span class="line">http_request_duration_microseconds_sum</span><br><span class="line">apiserver_client_certificate_expiration_seconds_count</span><br></pre></td></tr></table></figure>

<h3 id="3-4-job-”kubernetes-pods”"><a href="#3-4-job-”kubernetes-pods”" class="headerlink" title="3.4 job&#x3D;”kubernetes-pods”"></a>3.4 job&#x3D;”kubernetes-pods”</h3><p>#这里部署的是nginx_ingress_controller  下面是查询这些metric类型和意思的网址：</p>
<p><a href="https://github.com/kubernetes/ingress-nginx/blob/master/internal/ingress/metric/collectors/nginx_status_test.go">https://github.com/kubernetes/ingress-nginx/blob/master/internal/ingress/metric/collectors/nginx_status_test.go</a></p>
<p><a href="https://www.gitmemory.com/issue/kubernetes/ingress-nginx/2924/483591581">https://www.gitmemory.com/issue/kubernetes/ingress-nginx/2924/483591581</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx_ingress_controller_nginx_process_connections  <span class="comment">#gauge类型，状态为&#123;active, reading, writing, waiting&#125;的当前客户端连接数</span></span><br><span class="line">nginx_ingress_controller_nginx_process_connections_total  <span class="comment">#counter类型，状态为&#123;accepted, handled（已接受，已处理）&#125;的连接总数</span></span><br><span class="line">nginx_ingress_controller_config_last_reload_successful  <span class="comment">#gauge类型，nginx_ingress_controller_config最后一次加载成功的时间</span></span><br><span class="line">nginx_ingress_controller_nginx_process_write_bytes_total <span class="comment">#counter类型，nginx_ingress_controller nginx进程写入字节总数</span></span><br><span class="line">nginx_ingress_controller_config_hash  <span class="comment">#gauge类型，实际正在运行配置散列</span></span><br><span class="line">nginx_ingress_controller_config_last_reload_successful_timestamp_seconds   <span class="comment">#gauge类型，上一次成功重新配置的时间戳。</span></span><br><span class="line">nginx_ingress_controller_nginx_process_num_procs  <span class="comment">#gauge类型，进程数</span></span><br><span class="line">nginx_ingress_controller_nginx_process_oldest_start_time_seconds  <span class="comment">#gauge类型，从1970/01/01开始的秒数</span></span><br><span class="line">nginx_ingress_controller_nginx_process_virtual_memory_bytes  <span class="comment">#guage类型，正在使用的内存字节数</span></span><br><span class="line">nginx_ingress_controller_success  <span class="comment">#counter类型，Ingress控制器重新加载操作的累积数量</span></span><br><span class="line">nginx_ingress_controller_nginx_process_read_bytes_total  <span class="comment">#counter类型，读取的字节数</span></span><br><span class="line">nginx_ingress_controller_nginx_process_cpu_seconds_total  <span class="comment">#counter类似，CPU使用时间（以秒为单位）</span></span><br><span class="line">nginx_ingress_controller_nginx_process_requests_total  <span class="comment">#counter类型，客户请求总数</span></span><br><span class="line">nginx_ingress_controller_nginx_process_resident_memory_bytes  <span class="comment">#gauge类型，正在使用的内存字节数</span></span><br></pre></td></tr></table></figure>

<h3 id="3-5-job-”kubernetes-service-endpoints”"><a href="#3-5-job-”kubernetes-service-endpoints”" class="headerlink" title="3.5 job&#x3D;”kubernetes-service-endpoints”"></a>3.5 job&#x3D;”kubernetes-service-endpoints”</h3><p>coredns的查看指标地址：<a href="https://github.com/DataDog/integrations-core/blob/master/coredns/tests/fixtures/metrics.txt">https://github.com/DataDog/integrations-core/blob/master/coredns/tests/fixtures/metrics.txt</a></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus远程写参数配置</title>
    <url>/2023/12/14/Prometheus%E8%BF%9C%E7%A8%8B%E5%86%99%E5%8F%82%E6%95%B0%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p> prometheus可以通过远程存储来解决自身存储的瓶颈，所以其提供了远程存储接口，并可以通过过配置文件进行配置（prometheus.yml）。一般情况下我们使用其默认的配置参数，但是为了满足特定的应用场景需要对其进行优化，本章节介绍可通过<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#remote_write">远程写入配置</a>使用的调整参数，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 1 # The URL of the endpoint to send samples to.</span><br><span class="line"> 2 url: &lt;string&gt;</span><br><span class="line"> 3 </span><br><span class="line"> 4 # Timeout for requests to the remote write endpoint.</span><br><span class="line"> 5 [ remote_timeout: &lt;duration&gt; | default = 30s ]</span><br><span class="line"> 6 </span><br><span class="line"> 7 # List of remote write relabel configurations.</span><br><span class="line"> 8 write_relabel_configs:</span><br><span class="line"> 9   [ - &lt;relabel_config&gt; ... ]</span><br><span class="line">10 </span><br><span class="line">11 # Sets the `Authorization` header on every remote write request with the</span><br><span class="line">12 # configured username and password.</span><br><span class="line">13 # password and password_file are mutually exclusive.</span><br><span class="line">14 basic_auth:</span><br><span class="line">15   [ username: &lt;string&gt; ]</span><br><span class="line">16   [ password: &lt;string&gt; ]</span><br><span class="line">17   [ password_file: &lt;string&gt; ]</span><br><span class="line">18 </span><br><span class="line">19 # Sets the `Authorization` header on every remote write request with</span><br><span class="line">20 # the configured bearer token. It is mutually exclusive with `bearer_token_file`.</span><br><span class="line">21 [ bearer_token: &lt;string&gt; ]</span><br><span class="line">22 </span><br><span class="line">23 # Sets the `Authorization` header on every remote write request with the bearer token</span><br><span class="line">24 # read from the configured file. It is mutually exclusive with `bearer_token`.</span><br><span class="line">25 [ bearer_token_file: /path/to/bearer/token/file ]</span><br><span class="line">26 </span><br><span class="line">27 # Configures the remote write request&#x27;s TLS settings.</span><br><span class="line">28 tls_config:</span><br><span class="line">29   [ &lt;tls_config&gt; ]</span><br><span class="line">30 </span><br><span class="line">31 # Optional proxy URL.</span><br><span class="line">32 [ proxy_url: &lt;string&gt; ]</span><br><span class="line">33 </span><br><span class="line">34 # Configures the queue used to write to remote storage.</span><br><span class="line">35 queue_config:</span><br><span class="line">36   # Number of samples to buffer per shard before we block reading of more</span><br><span class="line">37   # samples from the WAL. It is recommended to have enough capacity in each</span><br><span class="line">38   # shard to buffer several requests to keep throughput up while processing</span><br><span class="line">39   # occasional slow remote requests.</span><br><span class="line">40   [ capacity: &lt;int&gt; | default = 500 ]</span><br><span class="line">41   # Maximum number of shards, i.e. amount of concurrency.</span><br><span class="line">42   [ max_shards: &lt;int&gt; | default = 1000 ]</span><br><span class="line">43   # Minimum number of shards, i.e. amount of concurrency.</span><br><span class="line">44   [ min_shards: &lt;int&gt; | default = 1 ]</span><br><span class="line">45   # Maximum number of samples per send.</span><br><span class="line">46   [ max_samples_per_send: &lt;int&gt; | default = 100]</span><br><span class="line">47   # Maximum time a sample will wait in buffer.</span><br><span class="line">48   [ batch_send_deadline: &lt;duration&gt; | default = 5s ]</span><br><span class="line">49   # Initial retry delay. Gets doubled for every retry.</span><br><span class="line">50   [ min_backoff: &lt;duration&gt; | default = 30ms ]</span><br><span class="line">51   # Maximum retry delay.</span><br><span class="line">52   [ max_backoff: &lt;duration&gt; | default = 100ms ]</span><br></pre></td></tr></table></figure>

<p>二、远程写入特征</p>
<p>我们本节主要探讨queue_config部分参数（其它参数比较简单，一看就知道什么意思，没有可优化的地方）。</p>
<h3 id="2-1-整体结构"><a href="#2-1-整体结构" class="headerlink" title="2.1 整体结构"></a>2.1 整体结构</h3><p>每个远程写入目标都会启动一个内存写队列（shards），这个队列从WAL中缓存数据（关于WAL可以参考存储部分：<a href="https://github.com/prometheus/prometheus/blob/master/docs/storage.md">https://github.com/prometheus/prometheus/blob/master/docs/storage.md</a>，原理类似于hbase中的WAL），通过队列去将指标数据写到有远程存储服务中,数据流如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1        |--&gt;  queue (shard_1)   --&gt; remote endpoint</span><br><span class="line">2  WAL --|--&gt;  queue (shard_...) --&gt; remote endpoint</span><br><span class="line">3        |--&gt;  queue (shard_n)   --&gt; remote endpoint</span><br></pre></td></tr></table></figure>

<h3 id="2-2-重试机制"><a href="#2-2-重试机制" class="headerlink" title="2.2 重试机制"></a>2.2 重试机制</h3><p>这需要注意的是，当一个分片备份并填满队列时，Prometheus将阻止从WAL中读取数据到任何分片。（关于这点就涉及到对以上参数优化，后面参数capacity部分讲解）</p>
<p>远程端点写入失败会进行重试操作，并且保证数据不会丢失，除非远程端点保持关闭状态超过2小时，因为2小时后，WAL将被压缩，尚未发送的数据将丢失。重试时间见下面参数：min_backoff和max_backoff。</p>
<h3 id="2-3-内存使用"><a href="#2-3-内存使用" class="headerlink" title="2.3 内存使用"></a>2.3 内存使用</h3><p>使用远程写入会增加Prometheus的内存占用量。大多数用户报告的内存使用量增加了约25％，但这取决于数据的形状。对于WAL中的每个系列，远程写代码都会缓存系列ID到标签值的映射，从而显着增加内存使用率。</p>
<p>除了系列缓存之外，每个分片及其队列还会增加内存使用量。分片内存与<code>number of shards * (capacity + max_samples_per_send)成正比</code>。当进行优化调整时，请考虑减少<code>max_shards</code>增加的数量，同时提高<code>capacity</code>和<code>max_samples_per_send参数的大小从而</code>避免无意间耗尽内存。默认<code>capacity</code>和 <code>max_samples_per_send的取值</code>将使得每每个shard使用内存小于100kb。</p>
<h2 id="三、参数"><a href="#三、参数" class="headerlink" title="三、参数"></a>三、参数</h2><h3 id="3-1-capacity"><a href="#3-1-capacity" class="headerlink" title="3.1 capacity"></a>3.1 capacity</h3><p>定义：每个内存队列（shard：分片）的容量。</p>
<p>一旦WAL被阻塞（造成阻塞的原因请看2.1），就无法将样本附加到任何分片，并且所有吞吐量都将停止。所以在大多数情况下，单个队列容量应足够打以避免阻塞其他分片，但是太大的容量可能会导致过多的内存消耗，并导致重新分片期间清除队列的时间更长。</p>
<p><strong>容量建议</strong>：将容量设置为3-10倍<code>max_samples_per_send</code>。</p>
<h3 id="3-2-max-shards"><a href="#3-2-max-shards" class="headerlink" title="3.2 max_shards"></a>3.2 max_shards</h3><p>顾名思义，最大的分片数（即队列数），也可以理解为远程写的并行度。peometheus远程写的时候会使用所有的分片，只有在写队列落后于远程写的速度，使用的队列数会达到max_shards,目的在于提高远程写的吞吐量。</p>
<p>PS：在操作过程中，Prometheus将根据传入的采样率，未发送的未处理样本数以及发送每个样本所花费的时间，连续计算要使用的最佳分片数。（<strong>实际的分片数是动态调整的</strong>）</p>
<h3 id="3-3-min-shards"><a href="#3-3-min-shards" class="headerlink" title="3.3 min_shards"></a>3.3 min_shards</h3><p>最小分片配置Prometheus使用的最小分片数量，并且是远程写入开始时使用的分片数量。如果远程写入落后，Prometheus将自动扩大分片的数量，因此大多数用户不必调整此参数。但是，增加最小分片数将使Prometheus在计算所需分片数时避免在一开始就落后。</p>
<h3 id="3-4-max-samples-per-send"><a href="#3-4-max-samples-per-send" class="headerlink" title="3.4 max_samples_per_send"></a>3.4 max_samples_per_send</h3><p>定义：每次远程写发送的最大指标数量，即批处理；</p>
<p>这个值依赖于远程存储系统，对于一些系统而言，在没有显著增加延迟的情况下发送更多指标数据而运行良好，然而，对于另外一些系统而言，每次请求中发送大量指标数据可能导致其出现故障，使用的默认值是适用于绝大多数系统的。</p>
<h3 id="3-5-batch-send-deadline"><a href="#3-5-batch-send-deadline" class="headerlink" title="3.5 batch_send_deadline"></a>3.5 batch_send_deadline</h3><h3 id="-1"><a href="#-1" class="headerlink" title=""></a><a href="https://prometheus.io/docs/practices/remote_write/#batch_send_deadline"></a></h3><p><code>定义：单一分片批量发送指标数据的最大等待时间；</code></p>
<p>即使排队的分片尚未达到max_samples_per_send，也会发送请求。 对于对延迟不敏感的小批量系统，可以增加批量发送的截止时间，以提高请求效率。</p>
<h3 id="3-6-min-backoff"><a href="#3-6-min-backoff" class="headerlink" title="3.6 min_backoff"></a>3.6 min_backoff</h3><p>定义：远程写失败的最小等待时间；</p>
<p>min_backoff是第一次的重试等待时间，第二次等待时间是其2倍，以此类推，直到max_backoff的值；</p>
<h3 id="3-7-max-backoff"><a href="#3-7-max-backoff" class="headerlink" title="3.7 max_backoff"></a>3.7 max_backoff</h3><p>定义：远程写失败的最大等待时间；</p>
<p>参考文档：<a href="https://prometheus.io/docs/practices/remote_write/">https://prometheus.io/docs/practices/remote_write&#x2F;</a></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Pushgateway的场景使用</title>
    <url>/2023/12/08/Pushgateway%E7%9A%84%E5%9C%BA%E6%99%AF%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h3 id="1，Pushgateway简介"><a href="#1，Pushgateway简介" class="headerlink" title="1，Pushgateway简介"></a>1，Pushgateway简介</h3><p>Pushgateway为Prometheus整体监控方案的功能组件之一，并做为一个独立的工具存在。它主要用于Prometheus无法直接拿到监控指标的场景，如监控源位于防火墙之后，Prometheus无法穿透防火墙；目标服务没有可抓取监控数据的端点等多种情况。在类似场景中，可通过部署Pushgateway的方式解决问题。</p>
<p>当部署该组件后，监控源通过主动发送监控数据到Pushgateway，再由Prometheus定时获取信息，实现资源的状态监控。</p>
<p>工作流程：</p>
<ol>
<li>监控源通过Post方式，发送数据到Pushgateway，路径为&#x2F;metrics。</li>
<li>Prometheus服务端设置任务，定时获取Pushgateway上面的监控指标。</li>
<li>Prometheus获取监控指标后，会根据告警规则进行计算，如果匹配将触发告警到Alertmanager；同时，Grafana可配置数据源调用Prometheus数据，做为数据展示。</li>
</ol>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><h3 id="2，数据推送Pushgateway"><a href="#2，数据推送Pushgateway" class="headerlink" title="2，数据推送Pushgateway"></a>2，数据推送Pushgateway</h3><p>pushgateway的数据推送支持两种方式，Prometheus Client SDK推送和API推送。</p>
<h4 id="2-1-API方式推送"><a href="#2-1-API方式推送" class="headerlink" title="2.1 API方式推送"></a>2.1 API方式推送</h4><p>通过调用pushgateway API的方式实现数据的推送。</p>
<p><strong>请求格式：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/metrics/job/&lt;jobname&gt;&#123;/instance/instance_name&#125;</span><br></pre></td></tr></table></figure>

<p><jobname>将用作Job标签的值，然后是其他指定的标签。</p>
<p><strong>示例：</strong></p>
<p>本例中定义了两个标签 job&#x3D;alex-job和instance&#x3D;instance1，并推送了指标 http_request_total 及其value值，10.11.12.13 为pushgateway地址。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &#x27;http_request_total 12&#x27; | http://10.11.12.13:9091/metrics/job/alex-job/instance/instance1</span><br></pre></td></tr></table></figure>

<p>复杂数据发送：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cat &lt;&lt;EOF | curl --data-binary @- http://10.11.12.13:9091/metrics/job/alex-job/instance/10.2.10.1</span><br><span class="line"></span><br><span class="line"># TYPE http_request_total counter</span><br><span class="line"></span><br><span class="line">http_request_total&#123;code=&quot;200&quot;,path=&quot;/aaa&quot;&#125; 46</span><br><span class="line"></span><br><span class="line">http_request_total&#123;code=&quot;200&quot;,path=&quot;/bbb&quot;&#125; 15</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>数据推送完成后，可登录pushgateay地址查看指标情况。</p>
<p>上边我们 Push 指标数据是通过命令行追加方式，少量数据还凑合，如果需要 Push 的数据比较大时，就不太方便了，这里我们也可以通过将指标数据写入到文件，然后将文件内容提交，也可以正常添加到 PushGateway。新建一个指标数据文件 <code>pgdata.txt</code> 如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ vim pgdata.txt</span><br><span class="line"></span><br><span class="line"># TYPE http_request_total counter</span><br><span class="line"></span><br><span class="line"># HELP http_request_total get interface request count with different code.</span><br><span class="line"></span><br><span class="line">http_request_total&#123;code=&quot;200&quot;,interface=&quot;/v1/save&quot;&#125; 276</span><br><span class="line"></span><br><span class="line">http_request_total&#123;code=&quot;404&quot;,interface=&quot;/v1/delete&quot;&#125; 0</span><br><span class="line"></span><br><span class="line">http_request_total&#123;code=&quot;500&quot;,interface=&quot;/v1/save&quot;&#125; 1</span><br><span class="line"></span><br><span class="line"># TYPE http_request_time gauge</span><br><span class="line"></span><br><span class="line"># HELP http_request_time get core interface http request time.</span><br><span class="line"></span><br><span class="line">http_request_time&#123;code=&quot;200&quot;,interface=&quot;/v1/core&quot;&#125; 0.122</span><br></pre></td></tr></table></figure>

<p>然后执行如下命令，将数据 push 上去。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -XPOST --data-binary @pgdata.txt http://10.10.10.10:9091/metrics/job/pgdata/instance/app-test123</span><br></pre></td></tr></table></figure>

<p>执行完毕，在 PushGateway UI 页面同样能够查询的到。</p>
<p>假如需要删除pushgateway上面存储的指标信息，可通过如下方式操作：</p>
<p>删除某个组下某个实例的所有数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -X DELETE http://10.11.12.13:9091/metrics/job/alex-job/instance/10.2.10.1</span><br></pre></td></tr></table></figure>

<p>删除某个job下所有的数据</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -X DELETE http://10.11.12.13:9091/metrics/job/alex-job</span><br></pre></td></tr></table></figure>

<p>特别强调：</p>
<p>推送至pushgateway尽可能的包含必要的标签[如S码、应用名称、ip等]，可以自定义一些标签，标签名建议是固定的，标签值可以引入变量，格式可以参考如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://pustgateway地址/metrices/job/job名称/app_code/你的应用S码/app/你的应用名称/标签名/变量$a/标签名/标签值</span><br></pre></td></tr></table></figure>

<p>以下是几个代码示例，仅供参考：</p>
<h5 id="2-1-1-Shell代码使用pushgateway监控linux内存使用示例"><a href="#2-1-1-Shell代码使用pushgateway监控linux内存使用示例" class="headerlink" title="2.1.1 Shell代码使用pushgateway监控linux内存使用示例"></a>2.1.1 Shell代码使用pushgateway监控linux内存使用示例</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#desc push memory info</span><br><span class="line">total_memory=$(free |awk &#x27;/Mem/&#123;print $2&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">used_memory=$(free |awk &#x27;/Mem/&#123;print $3&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">job_name=&quot;pushgateway&quot;</span><br><span class="line"></span><br><span class="line">instance_name=&quot;192.168.6.128&quot;</span><br><span class="line"></span><br><span class="line">cat &lt;&lt;EOF | curl --data-binary @- http://192.168.6.130:9091/metrics/job/$job_name/instance/$instance_name</span><br><span class="line"></span><br><span class="line">#TYPE custom_memory_total gauge</span><br><span class="line"></span><br><span class="line">custom_memory_total $total_memory</span><br><span class="line"></span><br><span class="line">#TYPE custom_memory_used gauge</span><br><span class="line"></span><br><span class="line">custom_memory_used $used_memory</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<h5 id="2-1-2-Python-SDK代码示例"><a href="#2-1-2-Python-SDK代码示例" class="headerlink" title="2.1.2 Python SDK代码示例"></a>2.1.2 Python SDK代码示例</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from prometheus_client import CollectorRegistry, Counter, Enum, Gauge, Histogram, Info, Summary, push_to_gateway</span><br><span class="line">import time</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># 1、变量定义</span><br><span class="line"></span><br><span class="line"># 2 数据准备</span><br><span class="line">def data_procecss():</span><br><span class="line">    pass</span><br><span class="line">    return</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 3\send_to_gateway()发送数据到gateway</span><br><span class="line"># 参考：https://pypi.org/project/prometheus-client/</span><br><span class="line"></span><br><span class="line">def send_to_gateway():</span><br><span class="line">    registry = CollectorRegistry()</span><br><span class="line">    v_gateway = &#x27;gateway_IP端口&#x27;</span><br><span class="line">    v_instance = socket.gethostname()</span><br><span class="line">    #v_top1-v_top5 为自定义标签</span><br><span class="line">    v_top1 = &#x27;proecess1&#x27;</span><br><span class="line">    v_top2 = &#x27;proecess2&#x27;</span><br><span class="line">    v_top3 = &#x27;proecess3&#x27;</span><br><span class="line">    v_top4 = &#x27;proecess4&#x27;</span><br><span class="line">    v_top5 = &#x27;proecess5&#x27;</span><br><span class="line"></span><br><span class="line">    #  多种数据类型发送方式举例：</span><br><span class="line">    # 瞬时数据类型</span><br><span class="line">    g = Gauge(&#x27;my_inprogress_requests&#x27;, &#x27;Description of gauge&#x27;, [&#x27;instance&#x27;,&#x27;top1&#x27;,&#x27;top2&#x27;,&#x27;top3&#x27;,&#x27;top4&#x27;,&#x27;top5&#x27;], registry=registry)</span><br><span class="line">    # g.labels(instance=v_instance).inc()  # Increment by 1</span><br><span class="line">    # g.labels(instance=v_instance).dec(10)  # Decrement by given value</span><br><span class="line">    g.labels(instance=v_instance,top1=v_top1,top2=v_top2,top3=v_top3,top4=v_top4,top5=v_top5).set(12)  # Set to a given value</span><br><span class="line">    #计数器类型</span><br><span class="line">    # c = Counter(&#x27;my_requests_total&#x27;, &#x27;HTTP Failures total&#x27;, [&#x27;method&#x27;, &#x27;endpoint&#x27;, &#x27;instance&#x27;], registry=registry)</span><br><span class="line">    # c.labels(method=&#x27;get&#x27;, endpoint=&#x27;/&#x27;, instance=v_instance).inc()</span><br><span class="line">    # c.labels(method=&#x27;post&#x27;, endpoint=&#x27;/submit&#x27;, instance=v_instance).inc(4)</span><br><span class="line">    #汇总类型</span><br><span class="line">    # s = Summary(&#x27;request_latency_seconds&#x27;, &#x27;Description of summary&#x27;, registry=registry)</span><br><span class="line">    # s.observe(14.7)  # Observe 14.7 (seconds in this case)</span><br><span class="line">    #历史统计类型</span><br><span class="line">    # h = Histogram(&#x27;request_latency_seconds1&#x27;, &#x27;Description of histogram&#x27;, registry=registry)</span><br><span class="line">    # h.observe(20.7)  # Observe 20.7 (seconds in this case)</span><br><span class="line">    #枚举类型</span><br><span class="line">    # e = Enum(&#x27;my_task_state&#x27;, &#x27;Description of enum&#x27;,</span><br><span class="line">    #          states=[&#x27;starting&#x27;, &#x27;running&#x27;, &#x27;stopped&#x27;],labelnames=[&#x27;userid&#x27;],_labelvalues=[&#x27;000&#x27;] ,registry=registry)</span><br><span class="line">    # e.state(&#x27;running&#x27;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    push_to_gateway(v_gateway, job=&#x27;myjob_name&#x27;, registry=registry)</span><br><span class="line">    return</span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    send_to_gateway()</span><br><span class="line">    # while 1:</span><br><span class="line">    #     data_procecss()</span><br><span class="line">    #     send_to_gateway()</span><br><span class="line">    #     print(time.ctime() + &quot; # send to pushgateway OK!&quot;)</span><br><span class="line">    #     time.sleep(120)</span><br></pre></td></tr></table></figure>

<h5 id="2-1-3-SAP-abap代码示例"><a href="#2-1-3-SAP-abap代码示例" class="headerlink" title="2.1.3 SAP abap代码示例"></a>2.1.3 SAP abap代码示例</h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot; 设置content type和character</span><br><span class="line"></span><br><span class="line">set lo_http_client-&gt;request-&gt;set_content_type( content_type = &#x27;application/octet-stream; charset=utf-8&#x27; ).</span><br></pre></td></tr></table></figure>

<p><strong>2.2 Client</strong> <strong>SDK****推送</strong></p>
<p>Prometheus本身提供了支持多种语言的SDK，可通过SDK的方式，生成相关的数据，并推送到pushgateway，这也是官方推荐的方案。</p>
<p>目前的SDK覆盖语言有官方的：</p>
<ul>
<li>Go</li>
<li>Java or Scala</li>
<li>Python</li>
<li>Ruby</li>
</ul>
<p>也有许多第三方的，详情可参见此链接：<a href="https://prometheus.io/docs/instrumenting/clientlibs/">https://prometheus.io/docs/instrumenting/clientlibs/</a></p>
<h5 id="-1"><a href="#-1" class="headerlink" title=""></a></h5><p><strong>Python****示例:</strong></p>
<p>本示例以python为例，讲解SDK的使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">from prometheus_client import Counter,Gauge,push_to_gateway</span><br><span class="line"></span><br><span class="line">from prometheus_client.core import CollectorRegistry</span><br><span class="line"></span><br><span class="line">registry = CollectorRegistry()</span><br><span class="line"></span><br><span class="line">data1 = Gauge(&#x27;gauge_test_metric&#x27;,&#x27;This is a gauge-test-metric&#x27;,[&#x27;method&#x27;,&#x27;path&#x27;,&#x27;instance&#x27;],registry=registry)</span><br><span class="line"></span><br><span class="line">data1.labels(method=&#x27;get&#x27;,path=&#x27;/aaa&#x27;,instance=&#x27;instance1&#x27;).inc(3)</span><br><span class="line"></span><br><span class="line">push_to_gateway(&#x27;10.11.12.13:9091&#x27;, job=&#x27;alex-job&#x27;,registry=registry)</span><br></pre></td></tr></table></figure>

<p>注解：</p>
<p>第一、二行代码：引入Python的Prometheus SDK；</p>
<p>第五行代码：创建相关的指标，类型为Gauge。其中“gauge_test_metric”为指标名称，’This is a gauge-test-metric’为指标注释，[‘method’,’path’,’instance’] 为指标相关的label。</p>
<p>第六行代码：添加相关的label信息和指标value 值。</p>
<p>第七行代码：push数据到pushgateway，’10.11.12.13:9091’为发送地址，job指定该任务名称。</p>
<p>以上代码产生的指标数据等同如下 ：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP gauge_test_metric This is a gauge-test-metric</span><br><span class="line"></span><br><span class="line"># TYPE gauge_test_metric gauge</span><br><span class="line"></span><br><span class="line">gauge_test_metric&#123;instance=&quot;instance1&quot;,method=&quot;get&quot;,path=&quot;/aaa&quot;&#125; 3.0</span><br></pre></td></tr></table></figure>

<p><strong>Java****示例:</strong></p>
<p>首先，<code>pom.xml</code> 中添加 <code>simpleclient_pushgateway</code> 依赖包。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.prometheus&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;simpleclient_pushgateway&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;0.7.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure>

<p>编写一个简单 demo 如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    try&#123;</span><br><span class="line">        String url = &quot;10.10.10.10:9091&quot;;</span><br><span class="line">        CollectorRegistry registry = new CollectorRegistry();</span><br><span class="line">        Gauge guage = Gauge.build(&quot;my_custom_metric&quot;, &quot;This is my custom metric.&quot;).create();</span><br><span class="line">        guage.set(23.12);</span><br><span class="line">        guage.register(registry);</span><br><span class="line">        PushGateway pg = new PushGateway(url);</span><br><span class="line">        Map&lt;String, String&gt; groupingKey = new HashMap&lt;String, String&gt;();</span><br><span class="line">        groupingKey.put(&quot;instance&quot;, &quot;my_instance&quot;);</span><br><span class="line">        pg.pushAdd(registry, &quot;my_job&quot;, groupingKey);</span><br><span class="line">    &#125; catch (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>执行完毕后，访问一下 Pushgateway UI 页面，能够查询的到该指标。</p>
<p>上边列子比较简单，咱们在来一个稍微负载一些的，指定多个 label 标签组的指标。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public static void main(String[] args) &#123;</span><br><span class="line">    try&#123;</span><br><span class="line">        String url = &quot;10.10.10.10:9091&quot;;</span><br><span class="line">        CollectorRegistry registry = new CollectorRegistry();</span><br><span class="line">        Gauge guage = Gauge.build(&quot;my_custom_metric&quot;, &quot;This is my custom metric.&quot;).labelNames(&quot;app&quot;, &quot;date&quot;).create();</span><br><span class="line">        String date = new SimpleDateFormat(&quot;yyyy-mm-dd HH:mm:ss&quot;).format(new Date());</span><br><span class="line">        guage.labels(&quot;my-pushgateway-test-0&quot;, date).set(25);</span><br><span class="line">        guage.labels(&quot;my-pushgateway-test-1&quot;, date).dec();</span><br><span class="line">        guage.labels(&quot;my-pushgateway-test-2&quot;, date).dec(2);</span><br><span class="line">        guage.labels(&quot;my-pushgateway-test-3&quot;, date).inc();</span><br><span class="line">        guage.labels(&quot;my-pushgateway-test-4&quot;, date).inc(5);</span><br><span class="line">        guage.register(registry);</span><br><span class="line">        PushGateway pg = new PushGateway(url);</span><br><span class="line">        Map&lt;String, String&gt; groupingKey = new HashMap&lt;String, String&gt;();</span><br><span class="line">        groupingKey.put(&quot;instance&quot;, &quot;my_instance&quot;);</span><br><span class="line">        pg.pushAdd(registry, &quot;my_job&quot;, groupingKey);</span><br><span class="line">    &#125; catch (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>同样，在 Pushgateway UI 页面，也能够查询的到该指标。</p>
<h3 id="3，Pushgateway接收的数据类型"><a href="#3，Pushgateway接收的数据类型" class="headerlink" title="3，Pushgateway接收的数据类型"></a>3，Pushgateway接收的数据类型</h3><ul>
<li>Prometheus提供了4中不同的Metrics类型:Counter,Gauge,Histogram,Summary，比较常用的为counter和gauge 类型，文档结尾有对这4种类型的说明。</li>
<li>单条指标push方法：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;some_metric 3.14&quot; | curl --data-binary @- http://10.10.10.10:31883/metrics/job/some_job</span><br></pre></td></tr></table></figure>

<ul>
<li>复杂多指标push方法：</li>
</ul>
<p>1、counter类型</p>
<p>#counter是可增长的，重启时候会被置成0，用于任务个数，只增不减</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF | curl --data-binary @- http://10.10.10.10:31883/metrics/job/docker_runtime/instance/xa-lsr-billubuntu</span><br><span class="line"></span><br><span class="line"># TYPE docker_runtime counter</span><br><span class="line"></span><br><span class="line">docker_runtime&#123;name=&quot;cadvisor&quot;&#125; 33</span><br><span class="line"></span><br><span class="line">docker_runtime&#123;name=&quot;nginx&quot;&#125; 331</span><br><span class="line"></span><br><span class="line">docker_runtime&#123;name=&quot;abc&quot;&#125; 332</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p>2.发送gauage类型”Random value of the request”</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF | curl --data-binary @- http://10.250.5.15:31883/metrics/job/docker_runtime/instance/xa-lsr-billubuntu</span><br><span class="line"></span><br><span class="line"># TYPE docker_runtime gauge</span><br><span class="line"></span><br><span class="line"># HELP docker_runtime time sec</span><br><span class="line"></span><br><span class="line">docker_runtime&#123;name=&quot;nginx&quot;&#125; 22</span><br><span class="line"></span><br><span class="line">docker_runtime&#123;name=&quot;cadvisor&quot;&#125; 22</span><br><span class="line"></span><br><span class="line">docker_runtime&#123;name=&quot;bbc&quot;&#125; 22</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>

<p><strong>4，****注意事项</strong></p>
<ul>
<li>通过Pushgateway方式，Prometheus无法直接检测到监控源服务的状态，故此种方式不适用于监控服务的存活状态等场景。</li>
<li>Pushgateway属于静态代理，它接收的指标不存在过期时间，故会一直保留直到该指标被更新或删除。此种情况下，不再使用的指标可能存在于网关中。</li>
<li>Pushgateway并不算是完美的解决方案，在监控中更多做为辅助方案存在，用于解决Prometheus无法直接获取数据的场景。</li>
<li>指标值只能是数字类型，非数字类型报错。 $ echo “test_metric 12.34.56ff” | curl –data-binary @- <a href="http://172.30.12.167:9091/metrics/job/test_job_1" title="http://10.10.10.10:9091/metrics/job/test_job_1">http://10.10.10.10:9091/metrics/job/test_job_1</a> text format parsing error in line 1: expected float as value, got “12.34.56ff”</li>
<li>指标值支持最大长度为 16 位，超过16 位后默认置为 0 $ echo “test_metric 1234567898765432123456789” | curl –data-binary @- <a href="http://172.30.12.167:9091/metrics/job/test_job_2" title="http://10.10.10.10:9091/metrics/job/test_job_2">http://10.10.10.10:9091/metrics/job/test_job_2</a> # 实际获取值 test_metric{job&#x3D;”test_job_2”} 1234567898765432200000000</li>
<li>PushGateway 数据持久化操作 默认 PushGateway 不做数据持久化操作，当 PushGateway 重启或者异常挂掉，导致数据的丢失，我们可以通过启动时添加 <code>-persistence.file</code> 和 <code>-persistence.interval</code> 参数来持久化数据。<code>-persistence.file</code> 表示本地持久化的文件，将 Push 的指标数据持久化保存到指定文件，<code>-persistence.interval</code> 表示本地持久化的指标数据保留时间，若设置为 5m，则表示 5 分钟后将删除存储的指标数据。 $ docker run -d -p 9091:9091 prom&#x2F;pushgateway “-persistence.file&#x3D;pg_file –persistence.interval&#x3D;5m”</li>
<li>PushGateway 推送及 Prometheus 拉取时间设置 Prometheus 每次从 PushGateway 拉取的数据，并不是拉取周期内用户推送上来的所有数据，而是最后一次 Push 到 PushGateway 上的数据，所以推荐设置推送时间小于或等于 Prometheus 拉取的时间，这样保证每次拉取的数据是最新 Push 上来的。</li>
</ul>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell：常见错误总结(一)</title>
    <url>/2023/12/28/Shell%EF%BC%9A%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93-%E4%B8%80/</url>
    <content><![CDATA[<p>本文总结了编写Shell脚本中的常见错误。</p>
<h3 id="for-f-in-ls-mp3"><a href="#for-f-in-ls-mp3" class="headerlink" title="for f in $(ls *.mp3)"></a><code>for f in $(ls *.mp3)</code></h3><p>最常犯的错之一就是编写这样的循环：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> $(<span class="built_in">ls</span> *.mp3); <span class="keyword">do</span>    <span class="comment"># Wrong!</span></span><br><span class="line">    some <span class="built_in">command</span> <span class="variable">$f</span>         <span class="comment"># Wrong!</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> $(<span class="built_in">ls</span>)              <span class="comment"># Wrong!</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> `<span class="built_in">ls</span>`               <span class="comment"># Wrong!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> $(find . -<span class="built_in">type</span> f)  <span class="comment"># Wrong!</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> `find . -<span class="built_in">type</span> f`   <span class="comment"># Wrong!</span></span><br><span class="line"></span><br><span class="line">files=($(find . -<span class="built_in">type</span> f))   <span class="comment"># Wrong!</span></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> <span class="variable">$&#123;files[@]&#125;</span>        <span class="comment"># Wrong!</span></span><br></pre></td></tr></table></figure>

<p>确实，如果可以将<code>ls</code>的输出或者<code>find</code>作为文件名列表并对其进行迭代，看起来确实没啥问题。但是，这类方法是有缺陷的。</p>
<p>比如：</p>
<ul>
<li>如果文件名包含空格，<code>for</code>循环会将空格也分割（默认IFS为空格、<code>\n</code>、<code>\t</code>），例如<code>01 - Don&#39;t Eat the Yellow Snow.mp3</code>，<code>for</code>循环会分割成<code>01</code>、 <code>-</code>、 <code>Don&#39;t</code>、<code>Eat</code>、 <code>the</code>、<code>Yellow</code>、<code>Snow.mp3</code>。</li>
<li>如果文件名包含glob字符(例如<code>*</code>)，包含它的单词将被识别为模式并用与其匹配的所有文件名列表替换。</li>
<li>如果命令替换返回多个文件名，则无法区分第一个文件名的结束位置和第二个文件名的开始位置。路径名可以包含除NUL之外的任何字符。是的，这包括换行符。</li>
<li><code>ls</code>实用程序可能会损坏文件名。根据您使用的平台、使用(或未使用)的参数以及其标准输出是否指向终端，<code>ls</code>可能会随机决定将文件名中的某些字符替换为“?”，或者干脆不打印它们。永远不要尝试解析<code>ls</code>的输出。<code>ls</code>完全是不必要的。它是一个外部命令，其输出专门供人读取，而不是由脚本解析。</li>
<li>命令替代(Command Substitution)从其输出中剥离所有尾随换行符。这看起来可能是可取的，因为<code>ls</code>添加了一个换行符，但是如果列表中的最后一个文件名以换行符结束，则命令替代会删除换行符。</li>
</ul>
<p>正确做法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> ./*.mp3; <span class="keyword">do</span>    <span class="comment"># Better! and…</span></span><br><span class="line">    some <span class="built_in">command</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span>   <span class="comment"># …always double-quote expansions!</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h3 id="cp-file-target"><a href="#cp-file-target" class="headerlink" title="cp $file $target"></a><code>cp $file $target</code></h3><p>如果 <code>$file</code>和<code>$target</code>中有空格(如果没有修改<code>$IFS</code>)，<code>cp $file $target</code>执行会报错，例如复制文件<code>01 - Don&#39;t Eat the Yellow Snow.mp3</code>到_&#x2F;mn&#x2F;usb_：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> 01 - Don<span class="string">&#x27;t Eat the Yellow Snow.mp3 /mnt/usb</span></span><br></pre></td></tr></table></figure>

<p>会报以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span>: cannot <span class="built_in">stat</span> ‘01’: No such file or directory</span><br><span class="line"><span class="built_in">cp</span>: cannot <span class="built_in">stat</span> ‘-’: No such file or directory</span><br><span class="line"><span class="built_in">cp</span>: cannot <span class="built_in">stat</span> ‘Don<span class="string">&#x27;t’: No such file or directory</span></span><br><span class="line"><span class="string">cp: cannot stat ‘Eat’: No such file or directory</span></span><br><span class="line"><span class="string">cp: cannot stat ‘the’: No such file or directory</span></span><br><span class="line"><span class="string">cp: cannot stat ‘Yellow’: No such file or directory</span></span><br><span class="line"><span class="string">cp: cannot stat ‘Snow.mp3’: No such file or directory</span></span><br></pre></td></tr></table></figure>

<p>正确做法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -- <span class="string">&quot;<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="variable">$target</span>&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡强烈建议：引用变量的时候，一定要加双引号。</p>
</blockquote>
<h3 id="Filenames-with-leading-dashes"><a href="#Filenames-with-leading-dashes" class="headerlink" title="Filenames with leading dashes"></a>Filenames with leading dashes</h3><p>如果文件名带有<code>-</code>，命令可能错误把它当作参数。</p>
<p>解决的方法之一是，在变量前面加<code>--</code>，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> -- <span class="string">&quot;<span class="variable">$file</span>&quot;</span> <span class="string">&quot;<span class="variable">$target</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>加<code>--</code>是告诉命令，停止扫描参数。</p>
<blockquote>
<p>👀注意：此方法的潜在问题，必须确保每条命令都要插入<code>--</code>，这很容易遗漏。</p>
</blockquote>
<p>还有一种方法是使用相对路径或者绝对路径。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> ./*.mp3; <span class="keyword">do</span></span><br><span class="line">    <span class="built_in">cp</span> <span class="string">&quot;<span class="variable">$i</span>&quot;</span> /target</span><br><span class="line">    …</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>在这种情况下，即使开头包含<code>-</code>的文件，也可以确保变量始终包含类似<code>./-foo.mp3</code>的文件，这样就比较安全。</p>
<h3 id="foo-bar"><a href="#foo-bar" class="headerlink" title="[ $foo = &quot;bar&quot; ]"></a><code>[ $foo = &quot;bar&quot; ]</code></h3><p>如果<code>[</code>中引用的变量不存在或为空，则<code>[</code>命令最终将如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ = <span class="string">&quot;bar&quot;</span> ] <span class="comment"># Wrong!</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡Tips：<code>=</code>是二元一次运算符，不是一元一次运算符。</p>
</blockquote>
<p>如果变量包含内部空格，则会在<code>[</code>命令看到它之前将其拆分成单独的单词，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ multiple words here = <span class="string">&quot;bar&quot;</span> ]</span><br></pre></td></tr></table></figure>

<p>看起来没啥问题，但在<code>[]</code>语法中是错误的，正确方式是加上双引号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># POSIX</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> = bar ] <span class="comment"># Right!</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Bash / Ksh</span></span><br><span class="line">[[ <span class="variable">$foo</span> == bar ]] <span class="comment"># Right!</span></span><br></pre></td></tr></table></figure>

<h3 id="cd-dirname-f"><a href="#cd-dirname-f" class="headerlink" title="cd $(dirname &quot;$f&quot;)"></a><code>cd $(dirname &quot;$f&quot;)</code></h3><p>这也是引用错误。正确做法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> -P -- <span class="string">&quot;<span class="subst">$(dirname -- <span class="string">&quot;<span class="variable">$f</span>&quot;</span>)</span>&quot;</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡Tips：<code>-p</code>参数是递归处理，将指定目录下的所有文件与子目录一并处理。</p>
</blockquote>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>SNMP v3配置</title>
    <url>/2023/12/22/SNMP-v3%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>snmp v3安全级别有三种，分别为noAuthNoPriv（不认证也不加密）、authNoPriv（认证但是不加密）、authPriv（既认证又加密）  </p>
<p>一、SNMPv3配置代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmp-server contact zhangsan</span><br><span class="line">snmp-server location chengdu</span><br><span class="line">snmp-server view MIB-2 mib-2 included</span><br></pre></td></tr></table></figure>

<p>1）如果设置安全级别为authPriv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmp-server group READONLY v3 priv read MIB-2</span><br><span class="line">snmp-server user admin READONLY v3 auth sha mypass123 priv aes 128 myaes123</span><br></pre></td></tr></table></figure>

<p>2）如果设置安全级别为authNoPriv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmp-server group READONLY v3 auth read MIB-2</span><br><span class="line">snmp-server user admin READONLY v3 auth sha mypass123</span><br></pre></td></tr></table></figure>

<p>3）如果设置安全级别为noAuthNoPriv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmp-server group READONLY v3 noauth read MIB-2</span><br><span class="line">snmp-server user admin READONLY v3</span><br></pre></td></tr></table></figure>

<p>注意：上述密码设置长度必须大于等于八位，否则在linux上使用snmpwalk命令时，会报错提示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Error: passphrase chosen is below the length requirements of the USM (min=8).</span><br><span class="line">snmpwalk: (The supplied password length is too short.)</span><br><span class="line">Error generating a key (Ku) from the supplied privacy pass phrase.</span><br></pre></td></tr></table></figure>

<p>其中sha可改成md5，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md5 Use HMAC MD5 algorithm for authentication</span><br><span class="line">sha Use HMAC SHA algorithm for authentication</span><br></pre></td></tr></table></figure>

<p>aes可改成：3des，des。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3des Use 168 bit 3DES algorithm for encryption</span><br><span class="line">aes Use AES algorithm for encryption</span><br><span class="line">des Use 56 bit DES algorithm for encryption</span><br></pre></td></tr></table></figure>

<p>2、snmpwalk获取信息命令</p>
<p>1）安全级别为authPriv时，snmpwalk获取信息方式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmpwalk -v 3 -u admin -l authPriv -a sha -A mypass123 -x aes -X myaes123 192.168.0.80 &quot;.1.3.6.1.2.1&quot;</span><br></pre></td></tr></table></figure>

<p>2）安全级别为authNoPriv时，snmpwalk获取信息方式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmpwalk -v 3 -u admin -l authNoPriv -a sha -A mypass123 192.168.0.80 &quot;.1.3.6.1.2.1&quot;</span><br></pre></td></tr></table></figure>

<p>3）安全级别为noAuthNoPriv时，snmpwalk获取信息方式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">snmpwalk -v 3 -u admin -l noAuthNoPriv 192.168.0.80 &quot;.1.3.6.1.2.1&quot;</span><br><span class="line">snmp-server contact zhangsan</span><br><span class="line">snmp-server location chengdu</span><br><span class="line">snmp-server view MIB-2 mib-2 included</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>SNMP</category>
      </categories>
      <tags>
        <tag>SNMP</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell：如何写一个多选菜单的脚本</title>
    <url>/2023/12/28/Shell%EF%BC%9A%E5%A6%82%E4%BD%95%E5%86%99%E4%B8%80%E4%B8%AA%E5%A4%9A%E9%80%89%E8%8F%9C%E5%8D%95%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<blockquote>
<p>翻译自<a href="https://www.putorius.net/create-multiple-choice-menu-bash.html">How to Create a Multiple Choice Menu in Bash Scripts</a></p>
</blockquote>
<p>有<a href="https://www.putorius.net/linux-read-command.html">很多方法</a>可以读取Bash脚本中的用户输入。 但是，允许用户键入输入会带来一些问题。 主要问题是输入验证，您必须在其中考虑所有可能的输入。 解决此问题的一种简单方法是为Bash脚本创建一个多选菜单。 使用此方法，您可以定义用户可以选择的一组简单的预定选项。</p>
<p>下文，我们将讨论使用<code>select</code>语句和<code>case</code>语句在Bash脚本中创建简单的多选菜单。</p>
<p>首先，让我们看一个示例多选菜单脚本，然后我们将其分解并解释每个部分。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">PS3=<span class="string">&#x27;Choose your favorite food: &#x27;</span></span><br><span class="line">foods=(<span class="string">&quot;Pizza&quot;</span> <span class="string">&quot;Pho&quot;</span> <span class="string">&quot;Tacos&quot;</span> <span class="string">&quot;Quit&quot;</span>)</span><br><span class="line"><span class="keyword">select</span> fav <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;foods[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$fav</span> <span class="keyword">in</span></span><br><span class="line">        <span class="string">&quot;Pizza&quot;</span>)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Americans eat roughly 100 acres of <span class="variable">$fav</span> each day!&quot;</span></span><br><span class="line">	    <span class="comment"># optionally call a function or run some code here</span></span><br><span class="line">            ;;</span><br><span class="line">        <span class="string">&quot;Pho&quot;</span>)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$fav</span> is a Vietnamese soup that is commonly mispronounced like go, instead of duh.&quot;</span></span><br><span class="line">	    <span class="comment"># optionally call a function or run some code here</span></span><br><span class="line">            ;;</span><br><span class="line">        <span class="string">&quot;Tacos&quot;</span>)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;According to NationalTacoDay.com, Americans are eating 4.5 billion <span class="variable">$fav</span> each year.&quot;</span></span><br><span class="line">	    <span class="comment"># optionally call a function or run some code here</span></span><br><span class="line">	    <span class="built_in">break</span></span><br><span class="line">            ;;</span><br><span class="line">	<span class="string">&quot;Quit&quot;</span>)</span><br><span class="line">	    <span class="built_in">echo</span> <span class="string">&quot;User requested exit&quot;</span></span><br><span class="line">	    <span class="built_in">exit</span></span><br><span class="line">	    ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;invalid option <span class="variable">$REPLY</span>&quot;</span>;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>仔细观察以下动图每个选项的选择和输出。 注意选择某些选项后，它如何要求其他选择。 但是，当我们选择Tacos时，它会返回到提示。</p>
<p><a href="https://www.putorius.net/wp-content/uploads/2020/05/bash-menu.gif"><img src="/assets/1703750709-b078550f21c4b23a1088606ce03581e7.gif"></a></p>
<h3 id="多选菜单脚本介绍"><a href="#多选菜单脚本介绍" class="headerlink" title="多选菜单脚本介绍"></a>多选菜单脚本介绍</h3><p>现在，我们来剖析脚本的每个部分。 这将帮助您了解如何创建多项选择菜单，以及如何对其进行编辑以适合您的需求。</p>
<p>第一行是<code>shebang</code>，它告诉运行脚本的进程使用哪个解释器。 在这种情况下，它是bash。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br></pre></td></tr></table></figure>

<h3 id="配置输入提示"><a href="#配置输入提示" class="headerlink" title="配置输入提示"></a>配置输入提示</h3><p>下一行设置<code>PS3</code>变量。 这是<code>select</code>语句在从我们的多选菜单中进行选择时使用的提示。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PS3=<span class="string">&#x27;Choose your favorite food: &#x27;</span></span><br></pre></td></tr></table></figure>

<h3 id="创建预定选项列表"><a href="#创建预定选项列表" class="headerlink" title="创建预定选项列表"></a>创建预定选项列表</h3><p>该行创建了一个可供用户选择的选项数组。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">foods=(<span class="string">&quot;Pizza&quot;</span> <span class="string">&quot;Pho&quot;</span> <span class="string">&quot;Tacos&quot;</span> <span class="string">&quot;Quit&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="创建预选菜单"><a href="#创建预选菜单" class="headerlink" title="创建预选菜单"></a>创建预选菜单</h3><p>在这里，我们开始创建菜单的选择构造。 在这一行中，我们告诉<code>select</code>选择从foods数组创建菜单。 我们还将在<code>$fav</code>变量中设置用户选择。 <code>select</code>语句的语法类似于<code>for</code>循环，这就是为什么您在末尾看到<code>do</code>语句的原因。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> fav <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$&#123;foods[@]&#125;</span>&quot;</span>; <span class="keyword">do</span></span><br></pre></td></tr></table></figure>

<h3 id="使用case语句创建更多可靠的选项"><a href="#使用case语句创建更多可靠的选项" class="headerlink" title="使用case语句创建更多可靠的选项"></a>使用case语句创建更多可靠的选项</h3><p><code>case</code>语句使您可以有选择地执行与第一个匹配模式相对应的命令。 例如，如果我们从多项选择菜单中选择Pizza，它将执行与该单词相对应的命令列表。</p>
<p>在<code>case</code>语句中，我们有开头节。 这告诉案例搜索与<code>$fav</code>变量的值匹配的选项。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> <span class="variable">$fav</span> <span class="keyword">in</span></span><br></pre></td></tr></table></figure>

<p>接下来，我们有一堆子句概述了每个选项。 它从一个或多个要匹配的选项开始，然后在找到匹配项时运行该代码。 我们所有的子句都以<code>;;</code>结尾，这是终止字符串。此子句说明，如果<code>$fav</code>的值与Pizza相匹配，请运行<code>echo</code>命令。</p>
<pre><code>    <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">   <span class="string">&quot;Pizza&quot;</span>)</span><br><span class="line">       <span class="built_in">echo</span> <span class="string">&quot;Americans eat roughly 100 acres of <span class="variable">$fav</span> each day!&quot;</span></span><br><span class="line"><span class="comment"># optionally call a function or run some code here</span></span><br><span class="line">       ;;</span><br></pre></td></tr></table></figure>
</code></pre>
<p>在上面的动图，我要求您观察所做的选择以及每个更改的输出。 我想指出的是，每次选择一个选项时，代码都会运行，然后将您带回到<code>select</code>循环中。</p>
<p>Tacos子句显示了如何添加<code>break</code>命令。 这告诉脚本脱离循环。 因此，如果选择Pizza，它将运行与该选择相对应的<code>echo</code>命令，然后要求另一个选择（因为没有<code>break</code>命令）。 但是，如果选择Tacos，它将运行与Tacos子句相对应的<code>echo</code>命令，然后中断循环并继续执行脚本。</p>
<pre><code>    <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">   <span class="string">&quot;Tacos&quot;</span>)</span><br><span class="line">       <span class="built_in">echo</span> <span class="string">&quot;According to NationalTacoDay.com, Americans are eating 4.5 billion <span class="variable">$fav</span> each year.&quot;</span></span><br><span class="line"><span class="comment"># optionally call a function or run some code here</span></span><br><span class="line"><span class="built_in">break</span></span><br><span class="line">       ;;</span><br></pre></td></tr></table></figure>
</code></pre>
<p>此行将匹配并告知这是无效的输入。</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">*) <span class="built_in">echo</span> <span class="string">&quot;invalid option <span class="variable">$REPLY</span>&quot;</span>;;</span><br></pre></td></tr></table></figure>

<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[savona@putor TMP]$ ./test-menu.sh </span><br><span class="line">1) Pizza</span><br><span class="line">2) Pho</span><br><span class="line">3) Tacos</span><br><span class="line">4) Quit</span><br><span class="line">Choose your favorite food: 8</span><br><span class="line">invalid option 8</span><br><span class="line">Choose your favorite food: </span><br></pre></td></tr></table></figure>

<h3 id="关闭select循环和case语句"><a href="#关闭select循环和case语句" class="headerlink" title="关闭select循环和case语句"></a>关闭select循环和case语句</h3><p>在所有match子句之后，我们以<code>esac</code>结束<code>case</code>语句，而<code>esac</code>是反写的的。 这类似于以<code>fi</code>结束<code>if</code>语句。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<p>最后一行关闭用<code>do</code>打开的<code>select</code>语句。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Shell：常见错误总结(二)</title>
    <url>/2023/12/28/Shell%EF%BC%9A%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93-%E4%BA%8C/</url>
    <content><![CDATA[<p>本文总结了编写Shell脚本中的常见错误。<br>承接<a href="https://jintaocool.github.io/2023/12/28/Shell%EF%BC%9A%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E6%80%BB%E7%BB%93-%E4%B8%80/">上文</a>。</p>
<h3 id="foo-bar-bar-foo"><a href="#foo-bar-bar-foo" class="headerlink" title="[ &quot;$foo&quot; = bar &amp;&amp; &quot;$bar&quot; = foo ]"></a><code>[ &quot;$foo&quot; = bar &amp;&amp; &quot;$bar&quot; = foo ]</code></h3><p>不能在<code>test</code>或者<code>[]</code>中使用<code>&amp;&amp;</code>命令。正确方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ bar = <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> ] &amp;&amp; [ foo = <span class="string">&quot;<span class="variable">$bar</span>&quot;</span> ] <span class="comment"># Right! (POSIX)</span></span><br><span class="line">[[ <span class="variable">$foo</span> = bar &amp;&amp; <span class="variable">$bar</span> = foo ]]       <span class="comment"># Also right! (Bash / Ksh)</span></span><br></pre></td></tr></table></figure>

<h3 id="foo-7"><a href="#foo-7" class="headerlink" title="[[ $foo &gt; 7 ]]"></a><code>[[ $foo &gt; 7 ]]</code></h3><p>虽然<code>[[]]</code>可以做一些数值比较，但不推荐使用，正确方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bash / Ksh</span></span><br><span class="line">((foo &gt; <span class="number">7</span>))     <span class="comment"># Right!</span></span><br><span class="line">[[ foo -gt 7 ]] <span class="comment"># Works, but is uncommon. Use ((…)) instead.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># POSIX</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> -gt 7 ]       <span class="comment"># Also right!</span></span><br><span class="line">[ <span class="string">&quot;<span class="subst">$((foo &gt; 7)</span>)&quot;</span> -ne 0 ] <span class="comment"># POSIX-compatible equivalent to ((, for more general math operations.</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡Tips：在<code>[[]]</code>中使用类似<code>&gt;</code>比较符，bash解释器会将其视为字符串比较。</p>
</blockquote>
<p>如果任何算术上下文的输入(包括<code>((</code>，<code>let</code>，数组索引)或<code>[[…]]</code>不能保证包含数字比较的测试表达式，因此必须始终在计算表达式之前验证您的输入：</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> POSIX</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$foo</span> <span class="keyword">in</span></span><br><span class="line">    (<span class="string">&quot;&quot;</span> | *[!0123456789]*)</span><br><span class="line">        <span class="built_in">printf</span> <span class="string">&#x27;$foo is not a sequence of decimal digits: &quot;%s&quot;\n&#x27;</span> <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> &gt;&amp;2</span><br><span class="line">        <span class="built_in">exit</span> 1</span><br><span class="line">        ;;</span><br><span class="line">    *)</span><br><span class="line">        [ <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> -gt 7 ]</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡Tips：由于<code>[/test</code>这类命令的算数运算符操作的是十进制整数，若二进制010则会被解释为数字10。</p>
</blockquote>
<h3 id="grep-foo-bar-while-read-r-do-count-done"><a href="#grep-foo-bar-while-read-r-do-count-done" class="headerlink" title="grep foo bar | while read -r; do ((count++)); done"></a><code>grep foo bar | while read -r; do ((count++)); done</code></h3><p>该命令咋看还不错，但只是<code>grep -c</code>很差的实现，而且对<code>count</code>的更改不会传播到<code>while</code>循环之外，因为管道中的每个命令都在单独的<a href="https://www.cnblogs.com/Rohn/p/14111943.html">子shell</a>中执行。</p>
<h3 id="if-grep-foo-myfile"><a href="#if-grep-foo-myfile" class="headerlink" title="if [grep foo myfile]"></a><strong>if [grep foo myfile]</strong></h3><p>许多初学者对<code>if</code>语句有一种错觉，看到<code>if</code>关键字后面紧跟<code>[</code>或<code>[[</code>这一非常常见的模式。这让人相信<code>[</code>不知何故是<code>if</code>语句语法的一部分，就像C语言的<code>if</code>语句中使用的括号一样。</p>
<p>这种想法是错误的，<code>[</code>是命令，而不是<code>if</code>语句的语法标记。它等同于<code>test</code>命令，不同之处在于最后一个参数必须是<code>]</code>。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># POSIX</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="literal">false</span> ]; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;HELP&quot;</span>; <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="literal">false</span>; <span class="keyword">then</span> <span class="built_in">echo</span> <span class="string">&quot;HELP&quot;</span>; <span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p><code>if</code>语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> COMMANDS; <span class="keyword">then</span> </span><br><span class="line">  &lt;COMMANDS&gt;</span><br><span class="line"><span class="keyword">elif</span> &lt;COMMANDS&gt;; <span class="keyword">then</span>  <span class="comment"># optional</span></span><br><span class="line">  &lt;COMMANDS&gt;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">  &lt;COMMANDS&gt; <span class="comment"># optional</span></span><br><span class="line"><span class="keyword">fi</span> <span class="comment"># required</span></span><br></pre></td></tr></table></figure>

<p>如果您希望根据<code>grep</code>命令的输出做出决定，则不希望将其括在圆括号、方括号、反号或任何其他语法中，只需在<code>if</code>之后使用<code>grep</code>作为命令，如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> grep -q fooregex myfile; <span class="keyword">then</span></span><br><span class="line">…</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>如果<code>grep</code>与<code>myfile</code>中的一行匹配，那么退出代码将为0(True)，然后将执行<code>then</code>部分。<strong>否则，如果没有匹配项，<code>grep</code>将返回非零值，整个<code>if</code>命令将为零。</strong></p>
<h3 id="if-bar-foo-then-…"><a href="#if-bar-foo-then-…" class="headerlink" title="if [bar=&quot;$foo&quot;]; then …"></a><code>if [bar=&quot;$foo&quot;]; then …</code></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[bar=<span class="string">&quot;<span class="variable">$foo</span>&quot;</span>]     <span class="comment"># Wrong!</span></span><br><span class="line">[ bar=<span class="string">&quot;<span class="variable">$foo</span>&quot;</span> ]   <span class="comment"># Still wrong!</span></span><br><span class="line">[bar = <span class="string">&quot;<span class="variable">$foo</span>&quot;</span>]   <span class="comment"># Also wrong!</span></span><br><span class="line">[[bar=<span class="string">&quot;<span class="variable">$foo</span>&quot;</span>]]   <span class="comment"># Wrong again!</span></span><br><span class="line">[[ bar=<span class="string">&quot;<span class="variable">$foo</span>&quot;</span> ]] <span class="comment"># Guess what?  Wrong!</span></span><br><span class="line">[[bar = <span class="string">&quot;<span class="variable">$foo</span>&quot;</span>]] <span class="comment"># Do I really need to say it…</span></span><br></pre></td></tr></table></figure>

<p>以上为错误语法，正确如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> [ bar = <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> ]; <span class="keyword">then</span> …</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [[ bar = <span class="string">&quot;<span class="variable">$foo</span>&quot;</span> ]]; <span class="keyword">then</span> …</span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡Tips：每对参数之间必须有空格，以便Bash解释器知道每个参数的开始和结束位置。</p>
</blockquote>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>SkyWalking 告警规则配置说明</title>
    <url>/2023/12/08/SkyWalking-%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="59992d5d7e1d0484a3f1a3ccc9922ccc366b95da1c88ef71dfe13269c53865c0"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Skywalking告警规则示例</title>
    <url>/2023/12/15/Skywalking%E5%91%8A%E8%AD%A6%E8%A7%84%E5%88%99%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h4 id="skywalking告警规则文件配置示例【包含自定义规则】："><a href="#skywalking告警规则文件配置示例【包含自定义规则】：" class="headerlink" title="skywalking告警规则文件配置示例【包含自定义规则】："></a>skywalking告警规则文件配置示例【包含自定义规则】：</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="line"># or more contributor license agreements.  See the NOTICE file</span><br><span class="line"># distributed with this work for additional information</span><br><span class="line"># regarding copyright ownership.  The ASF licenses this file</span><br><span class="line"># to you under the Apache License, Version 2.0 (the</span><br><span class="line"># &quot;License&quot;); you may not use this file except in compliance</span><br><span class="line"># with the License.  You may obtain a copy of the License at</span><br><span class="line">#</span><br><span class="line">#     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line">#</span><br><span class="line"># Unless required by applicable law or agreed to in writing, software</span><br><span class="line"># distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"># WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"># See the License for the specific language governing permissions and</span><br><span class="line"># limitations under the License.</span><br><span class="line"></span><br><span class="line"># Sample alarm rules.</span><br><span class="line">rules:</span><br><span class="line">  # Rule unique name, must be ended with `_rule`.</span><br><span class="line">  service_resp_time_rule:</span><br><span class="line">    metrics-name: service_resp_time</span><br><span class="line">    op: &quot;&gt;&quot;</span><br><span class="line">    threshold: 10000</span><br><span class="line">    period: 20</span><br><span class="line">    count: 10</span><br><span class="line">    silence-period: 30</span><br><span class="line">    #message: Response time of service &#123;name&#125; is more than 1000ms in 3 minutes of last 10 minutes.</span><br><span class="line">    message: 服务 &#123;name&#125; 的响应时间在过去 20 分钟的 10 分钟内超过 10000 毫秒。</span><br><span class="line">    tags:</span><br><span class="line">      level: P1-Critical</span><br><span class="line">  service_resp_time_rule:</span><br><span class="line">    # 指标名称：服务响应时间</span><br><span class="line">    metrics-name: service_resp_time</span><br><span class="line">    # 匹配此指标的服务，可使用正则进行匹配配置个性化阈值</span><br><span class="line">    include-names-regex: ^s12136.*</span><br><span class="line">    # 操作符</span><br><span class="line">    op: &quot;&gt;&quot;</span><br><span class="line">    # 阈值</span><br><span class="line">    threshold: 10</span><br><span class="line">    # 评估度量标准的时间长度，默认单位为分钟</span><br><span class="line">    period: 5</span><br><span class="line">    # 度量有多少次符合告警条件后，才会触发告警</span><br><span class="line">    count: 2</span><br><span class="line">    # 检查多少次，告警触发后保持沉默，默认与度量周期相同</span><br><span class="line">    silence-period: 5</span><br><span class="line">    # 告警内容描述</span><br><span class="line">    message: 测试告警-服务 &#123;name&#125; 的响应时间在过去5分钟的2分钟内超过10毫秒。</span><br><span class="line">    # 自定义标签</span><br><span class="line">    tags:</span><br><span class="line">      level: P1-Critical</span><br><span class="line">#  service_sla_rule:</span><br><span class="line">#    # Metrics value need to be long, double or int</span><br><span class="line">#    metrics-name: service_sla</span><br><span class="line">#    op: &quot;&lt;&quot;</span><br><span class="line">#    threshold: 8000</span><br><span class="line">#    # The length of time to evaluate the metrics</span><br><span class="line">#    period: 30</span><br><span class="line">#    # How many times after the metrics match the condition, will trigger alarm</span><br><span class="line">#    count: 10</span><br><span class="line">#    # How many times of checks, the alarm keeps silence after alarm triggered, default as same as period.</span><br><span class="line">#    silence-period: 30</span><br><span class="line">#    #message: Successful rate of service &#123;name&#125; is lower than 80% in 2 minutes of last 10 minutes</span><br><span class="line">#    message: 服务 &#123;name&#125; 的成功率在过去 30 分钟的 5 分钟内低于 80%。</span><br><span class="line">#    tags:</span><br><span class="line">#      level: P1-Critical</span><br><span class="line">  service_resp_time_percentile_rule:</span><br><span class="line">    # Metrics value need to be long, double or int</span><br><span class="line">    metrics-name: service_percentile</span><br><span class="line">    op: &quot;&gt;&quot;</span><br><span class="line">    threshold: 10000,10000,10000,10000,10000</span><br><span class="line">    period: 20</span><br><span class="line">    count: 10</span><br><span class="line">    silence-period: 30</span><br><span class="line">    #message: Percentile response time of service &#123;name&#125; alarm in 3 minutes of last 10 minutes, due to more than one condition of p50 &gt; 1000, p75 &gt; 1000, p90 &gt; 1000, p95 &gt; 1000, p99 &gt; 1000</span><br><span class="line">    message: 由于 p50 &gt; 10000、p75 &gt; 10000、p90 &gt; 10000、p95 &gt; 10000、p99 &gt; 10000 的多个条件，在过去 20 分钟的 10 分钟内服务 &#123;name&#125; 的百分比响应时间警报。</span><br><span class="line">    tags:</span><br><span class="line">      level: P1-Critical</span><br><span class="line">  service_instance_resp_time_rule:</span><br><span class="line">    metrics-name: service_instance_resp_time</span><br><span class="line">    op: &quot;&gt;&quot;</span><br><span class="line">    threshold: 10000</span><br><span class="line">    period: 20</span><br><span class="line">    count: 10</span><br><span class="line">    silence-period: 30</span><br><span class="line">    #message: Response time of service instance &#123;name&#125; is more than 1000ms in 2 minutes of last 10 minutes</span><br><span class="line">    message: 服务实例 &#123;name&#125; 的响应时间在最近 20 分钟的 10 分钟内超过 10000 毫秒。</span><br><span class="line">    tags:</span><br><span class="line">      level: P1-Critical</span><br><span class="line">  database_access_resp_time_rule:</span><br><span class="line">    metrics-name: database_access_resp_time</span><br><span class="line">    threshold: 1000</span><br><span class="line">    op: &quot;&gt;&quot;</span><br><span class="line">    period: 10</span><br><span class="line">    count: 5</span><br><span class="line">    #message: Response time of database access &#123;name&#125; is more than 1000ms in 2 minutes of last 10 minutes</span><br><span class="line">    message: 数据库访问 &#123;name&#125; 的响应时间在最近 10 分钟的 5 分钟内超过 1000ms。</span><br><span class="line">    tags:</span><br><span class="line">      level: P1-Critical</span><br><span class="line">  endpoint_relation_resp_time_rule:</span><br><span class="line">    metrics-name: endpoint_relation_resp_time</span><br><span class="line">    exclude-names-regex: .*s13117::customc-haier-ext.*</span><br><span class="line">    threshold: 10000</span><br><span class="line">    op: &quot;&gt;&quot;</span><br><span class="line">    period: 20</span><br><span class="line">    count: 10</span><br><span class="line">    #message: Response time of endpoint relation &#123;name&#125; is more than 1000ms in 2 minutes of last 10 minutes</span><br><span class="line">    message: 端点关系 &#123;name&#125; 的响应时间在过去 20 分钟的 10 分钟内超过 10000 毫秒。</span><br><span class="line">    tags:</span><br><span class="line">      level: P1-Critical</span><br><span class="line">#  Active endpoint related metrics alarm will cost more memory than service and service instance metrics alarm.</span><br><span class="line">#  Because the number of endpoint is much more than service and instance.</span><br><span class="line">#</span><br><span class="line">#  endpoint_resp_time_rule:</span><br><span class="line">#    metrics-name: endpoint_resp_time</span><br><span class="line">#    op: &quot;&gt;&quot;</span><br><span class="line">#    threshold: 1000</span><br><span class="line">#    period: 10</span><br><span class="line">#    count: 2</span><br><span class="line">#    silence-period: 5</span><br><span class="line">#    message: Response time of endpoint &#123;name&#125; is more than 1000ms in 2 minutes of last 10 minutes</span><br><span class="line"></span><br><span class="line">webhooks:</span><br><span class="line">  - http://fast.web.net/web-admin/skywalking/web_hook</span><br><span class="line">#  - http://127.0.0.1/go-wechat/</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Skywalking安装部署</title>
    <url>/2023/12/28/Skywalking%E5%AE%89%E8%A3%85%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><h3 id="什么是SkyWalking"><a href="#什么是SkyWalking" class="headerlink" title="什么是SkyWalking"></a>什么是SkyWalking</h3><p><strong>SkyWalking</strong>是观察性分析平台和应用性能管理系统。</p>
<p>提供分布式追踪、服务网格遥测分析、度量聚合和可视化一体化解决方案。  </p>
<p>SkyWalking 的核心是数据分析和度量结果的存储平台，通过 HTTP 或 gRPC 方式向 SkyWalking Collecter 提交分析和度量数据，SkyWalking Collecter 对数据进行分析和聚合，存储到 Elasticsearch、MySQL、TiDB 等其一即可，最后我们可以通过 SkyWalking UI 的可视化界面对最终的结果进行查看。</p>
<p>Skywalking 支持从多个来源和多种格式收集数据：多种语言的 Skywalking Agent 、Zipkin v1&#x2F;v2 、Istio 勘测、Envoy 度量等数据格式。</p>
<h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul>
<li>多种监控手段，语言探针和service mesh</li>
<li>多语言自动探针，Java，.NET Core和Node.JS</li>
<li>轻量高效，不需要大数据</li>
<li>模块化，UI、存储、集群管理多种机制可选</li>
<li>支持告警</li>
<li>优秀的可视化方案</li>
</ul>
<h3 id="为什么是SkyWalking"><a href="#为什么是SkyWalking" class="headerlink" title="为什么是SkyWalking"></a>为什么是SkyWalking</h3><p>2019 年 4 月 24 日（北美时间），Apache 软件基金会宣布，Apache SkyWalking 毕业，成为 Apache 软件基金会顶级项目。</p>
<p><a href="https://www.jianshu.com/p/626cae6c0522">目前最主流的两个APM对比</a></p>
<p><a href="https://raw.githubusercontent.com/jintaocool/jintaocool.github.io/main/images/skywalking.webp"><img src="/images/skywalking.webp"></a></p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li>系统：CentOS 7.6</li>
<li>jdk：1.8</li>
<li>存储：Elasticsearch 6.8.1</li>
</ul>
<h3 id="关闭SElinux和防火墙"><a href="#关闭SElinux和防火墙" class="headerlink" title="关闭SElinux和防火墙"></a>关闭SElinux和防火墙</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line">sed -i <span class="string">&#x27;s#^SELINUX=.*#SELINUX=disabled#g&#x27;</span> <span class="regexp">/etc/</span>sysconfig/selinux </span><br><span class="line">setenforce <span class="number">0</span></span><br></pre></td></tr></table></figure>

<h3 id="修改最大打开进程数和文件句柄数"><a href="#修改最大打开进程数和文件句柄数" class="headerlink" title="修改最大打开进程数和文件句柄数"></a>修改最大打开进程数和文件句柄数</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line"><span class="meta"># 查看当前服务器最大打开进程数和文件句柄数</span></span><br><span class="line">[root<span class="symbol">@test</span><span class="number">-01</span> ~]<span class="meta">#ulimit -a|egrep <span class="string">&#x27;open files|max user&#x27;</span></span></span><br><span class="line">open files                      (-n) <span class="number">1024</span></span><br><span class="line">max user processes              (-u) <span class="number">7191</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 修改/etc/systemd/system.conf文件中的相关参数，与CentOS6修改的方式略有不同</span></span><br><span class="line">[root<span class="symbol">@test</span><span class="number">-01</span> ~]<span class="meta">#sed -i <span class="string">&#x27;/^#DefaultLimitNOFILE=/aDefaultLimitNOFILE=65535&#x27;</span> /etc/systemd/system.conf </span></span><br><span class="line">[root<span class="symbol">@test</span><span class="number">-01</span> ~]<span class="meta">#sed -i <span class="string">&#x27;/^#DefaultLimitNPROC=/aDefaultLimitNPROC=65535&#x27;</span> /etc/systemd/system.conf </span></span><br><span class="line">[root<span class="symbol">@test</span><span class="number">-01</span> ~]<span class="meta">#sed -i <span class="string">&#x27;s#nproc     4096#nproc     65535#&#x27;</span> /etc/security/limits.d/20-nproc.conf</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># 需要重启才能生效</span></span><br><span class="line">[root<span class="symbol">@test</span><span class="number">-01</span> ~]<span class="meta">#reboot</span></span><br></pre></td></tr></table></figure>

<h3 id="安装jdk"><a href="#安装jdk" class="headerlink" title="安装jdk"></a>安装jdk</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@test-01 ~]# yum install java-1.8.0-openjdk</span><br><span class="line">[root@test-01 ~]# java -version</span><br><span class="line">openjdk version &quot;1.8.0_212&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_212-b04)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.212-b04, mixed mode)</span><br></pre></td></tr></table></figure>

<h3 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="regexp">/data/</span>elasticsearch/logs</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载rpm安装包</span></span><br><span class="line">wget -P <span class="regexp">/opt/</span>downloads -c https:<span class="regexp">//</span>artifacts.elastic.co<span class="regexp">/downloads/</span>elasticsearch/elasticsearch-<span class="number">6.8</span>.<span class="number">1</span>.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">rpm -ivh <span class="regexp">/opt/</span>downloads/elasticsearch-<span class="number">6.8</span>.<span class="number">1</span>.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 授权</span></span><br><span class="line">chown -R elasticsearch.elasticsearch <span class="regexp">/data/</span>elasticsearch</span><br></pre></td></tr></table></figure>

<p>修改配置<code>/etc/elasticsearch/elasticsearch.yml</code></p>
<figure class="highlight haskell"><table><tr><td class="code"><pre><span class="line"><span class="title">path</span>.<span class="class"><span class="keyword">data</span>: /<span class="keyword">data</span>/elasticsearch</span></span><br><span class="line"><span class="title">path</span>.logs: /<span class="class"><span class="keyword">data</span>/elasticsearch/logs</span></span><br><span class="line"><span class="title">network</span>.host: <span class="number">0.0</span>.<span class="number">0.0</span></span><br></pre></td></tr></table></figure>

<p>启动</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start elasticsearch</span><br></pre></td></tr></table></figure>

<h2 id="部署SkyWalking"><a href="#部署SkyWalking" class="headerlink" title="部署SkyWalking"></a>部署SkyWalking</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载安装包</span></span><br><span class="line">wget --no-check-certificate --no-cookies --header <span class="string">&quot;Cookie: oraclelicense=accept-securebackup-cookie&quot;</span> -P <span class="regexp">/opt/</span>downloads https:<span class="regexp">//mi</span>rrors.tuna.tsinghua.edu.cn<span class="regexp">/apache/</span>skywalking<span class="regexp">/6.2.0/</span>apache-skywalking-apm-<span class="number">6.2</span>.<span class="number">0</span>.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 压缩</span></span><br><span class="line">tar zxf <span class="regexp">/opt/</span>downloads<span class="regexp">/apache-skywalking-apm-6.2.0.tar.gz -C /u</span>sr/local</span><br><span class="line">mv apache-skywalking-apm-bin SkyWalking</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动</span></span><br><span class="line">cd <span class="regexp">/usr/</span>local<span class="regexp">/SkyWalking/</span>bin</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure>

<blockquote>
<p>确保8080,10800,11800,12800 端口不被占用，若有冲突，可以在<code>webapp/webapp.yml</code>中修改</p>
</blockquote>
<p>打开UI，地址为<code>http://服务器IP:8080</code><br><a href="https://tva1.sinaimg.cn/large/0060lm7Tly1g4lgigni3fj31gu0izgme.jpg"><img src="/assets/1703731334-9c5c453f411b32cfbe00ec3258dd5535.jpg"></a></p>
<h2 id="配置-java-agent"><a href="#配置-java-agent" class="headerlink" title="配置 java agent"></a>配置 java agent</h2><p>参考地址：<a href="https://github.com/apache/skywalking/blob/master/docs/en/setup/service-agent/java-agent/README.md">java agent</a></p>
<ol>
<li>在<a href="http://skywalking.apache.org/downloads/">安装包</a>中，找到 <code>agent</code> 的路径</li>
<li>在<code>config/agent.config</code>，设置<code>agent.service_name</code></li>
<li>在<code>config/agent.config</code>，设置 <code>collector.backend_service</code> ，默认连接到 <code>127.0.0.1:11800</code></li>
<li>在<code>-jar</code>前，将 <code>-javaagent:/path/to/skywalking-package/agent/skywalking-agent.jar</code>添加到表达式</li>
</ol>
<p>agent目录下的文件和目录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-- agent</span><br><span class="line">    +-- activations</span><br><span class="line">         apm-toolkit-log4j-1.x-activation.jar</span><br><span class="line">         apm-toolkit-log4j-2.x-activation.jar</span><br><span class="line">         apm-toolkit-logback-1.x-activation.jar</span><br><span class="line">         ...</span><br><span class="line">    +-- config</span><br><span class="line">         agent.config  </span><br><span class="line">    +-- plugins</span><br><span class="line">         apm-dubbo-plugin.jar</span><br><span class="line">         apm-feign-default-http-9.x.jar</span><br><span class="line">         apm-httpClient-4.x-plugin.jar</span><br><span class="line">         .....</span><br><span class="line">    skywalking-agent.jar</span><br></pre></td></tr></table></figure>

<h3 id="支持的中间件"><a href="#支持的中间件" class="headerlink" title="支持的中间件"></a>支持的中间件</h3><p><a href="https://github.com/apache/skywalking/blob/master/docs/en/setup/service-agent/java-agent/Supported-list.md">支持中间件列表</a></p>
<h3 id="Install-javaagent-FAQs"><a href="#Install-javaagent-FAQs" class="headerlink" title="Install javaagent FAQs"></a>Install javaagent FAQs</h3><ul>
<li>Linux Tomcat 7, Tomcat 8<br>Change the first line of <code>tomcat/bin/catalina.sh</code>.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">CATALINA_OPTS=&quot;$CATALINA_OPTS -javaagent:/path/to/skywalking-agent/skywalking-agent.jar&quot;; export CATALINA_OPTS</span><br></pre></td></tr></table></figure>

<ul>
<li>Windows Tomcat 7, Tomcat 8<br>Change the first line of <code>tomcat/bin/catalina.bat</code>.</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">set &quot;CATALINA_OPTS=-javaagent:/path/to/skywalking-agent/skywalking-agent.jar&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>JAR file<br>Add <code>-javaagent</code> argument to command line in which you start your app. eg:</li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">java -javaagent:/path/to/skywalking-agent/skywalking-agent.jar -jar yourApp.jar</span><br></pre></td></tr></table></figure>

<h3 id="Agent配置属性"><a href="#Agent配置属性" class="headerlink" title="Agent配置属性"></a>Agent配置属性</h3><p>以下为<code>agent/config/agent.config</code>的配置属性列表</p>
<table>
<thead>
<tr>
<th>property key</th>
<th>Description</th>
<th>Default</th>
</tr>
</thead>
<tbody><tr>
<td><code>agent.namespace</code></td>
<td>Namespace isolates headers in cross process propagation. The HEADER name will be <code>HeaderName:Namespace</code>.</td>
<td>Not set</td>
</tr>
<tr>
<td><code>agent.service_name</code></td>
<td>Application(5.x)&#x2F;Service(6.x) code is showed in sky-walking-ui. Suggestion: set a unique name for each service, service instance nodes share the same code</td>
<td><code>Your_ApplicationName</code></td>
</tr>
<tr>
<td><code>agent.sample_n_per_3_secs</code></td>
<td>Negative or zero means off, by default.SAMPLE_N_PER_3_SECS means sampling N TraceSegment in 3 seconds tops.</td>
<td>Not set</td>
</tr>
<tr>
<td><code>agent.authentication</code></td>
<td>Authentication active is based on backend setting, see application.yml for more details.For most scenarios, this needs backend extensions, only basic match auth provided in default implementation.</td>
<td>Not set</td>
</tr>
<tr>
<td><code>agent.span_limit_per_segment</code></td>
<td>The max number of spans in a single segment. Through this config item, skywalking keep your application memory cost estimated.</td>
<td>Not set</td>
</tr>
<tr>
<td><code>agent.ignore_suffix</code></td>
<td>If the operation name of the first span is included in this set, this segment should be ignored.</td>
<td>Not set</td>
</tr>
<tr>
<td><code>agent.is_open_debugging_class</code></td>
<td>If true, skywalking agent will save all instrumented classes files in <code>/debugging</code> folder.Skywalking team may ask for these files in order to resolve compatible problem.</td>
<td>Not set</td>
</tr>
<tr>
<td><code>agent.active_v2_header</code></td>
<td>Active V2 header in default.</td>
<td><code>true</code></td>
</tr>
<tr>
<td><code>agent.instance_uuid</code></td>
<td>Instance uuid is the identity of an instance, skywalking treat same instance uuid as one instance.if empty, skywalking agent will generate an 32-bit uuid.</td>
<td><code>&quot;&quot;</code></td>
</tr>
<tr>
<td><code>agent.cause_exception_depth</code></td>
<td>How depth the agent goes, when log all cause exceptions.</td>
<td>5</td>
</tr>
<tr>
<td><code>agent.active_v1_header</code></td>
<td>Deactive V1 header in default.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>collector.grpc_channel_check_interval</code></td>
<td>grpc channel status check interval.</td>
<td><code>30</code></td>
</tr>
<tr>
<td><code>collector.app_and_service_register_check_interval</code></td>
<td>application and service registry check interval.</td>
<td><code>3</code></td>
</tr>
<tr>
<td><code>collector.backend_service</code></td>
<td>Collector skywalking trace receiver service addresses.</td>
<td><code>127.0.0.1:11800</code></td>
</tr>
<tr>
<td><code>logging.level</code></td>
<td>The log level. Default is debug.</td>
<td><code>DEBUG</code></td>
</tr>
<tr>
<td><code>logging.file_name</code></td>
<td>Log file name.</td>
<td><code>skywalking-api.log</code></td>
</tr>
<tr>
<td><code>logging.dir</code></td>
<td>Log files directory. Default is blank string, means, use “system.out” to output logs.</td>
<td><code>&quot;&quot;</code></td>
</tr>
<tr>
<td><code>logging.max_file_size</code></td>
<td>The max size of log file. If the size is bigger than this, archive the current file, and write into a new file.</td>
<td><code>300 * 1024 * 1024</code></td>
</tr>
<tr>
<td><code>jvm.buffer_size</code></td>
<td>The buffer size of collected JVM info.</td>
<td><code>60 * 10</code></td>
</tr>
<tr>
<td><code>buffer.channel_size</code></td>
<td>The buffer channel size.</td>
<td><code>5</code></td>
</tr>
<tr>
<td><code>buffer.buffer_size</code></td>
<td>The buffer size.</td>
<td><code>300</code></td>
</tr>
<tr>
<td><code>dictionary.service_code_buffer_size</code></td>
<td>The buffer size of application codes and peer</td>
<td><code>10 * 10000</code></td>
</tr>
<tr>
<td><code>dictionary.endpoint_name_buffer_size</code></td>
<td>The buffer size of endpoint names and peer</td>
<td><code>1000 * 10000</code></td>
</tr>
<tr>
<td><code>plugin.mongodb.trace_param</code></td>
<td>If true, trace all the parameters in MongoDB access, default is false. Only trace the operation, not include parameters.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>plugin.elasticsearch.trace_dsl</code></td>
<td>If true, trace all the DSL(Domain Specific Language) in ElasticSearch access, default is false.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>plugin.springmvc.use_qualified_name_as_endpoint_name</code></td>
<td>If true, the fully qualified method name will be used as the endpoint name instead of the request URL, default is false.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>plugin.toolit.use_qualified_name_as_operation_name</code></td>
<td>If true, the fully qualified method name will be used as the operation name instead of the given operation name, default is false.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>plugin.mysql.trace_sql_parameters</code></td>
<td>If set to true, the parameters of the sql (typically <code>java.sql.PreparedStatement</code>) would be collected.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>plugin.mysql.sql_parameters_max_length</code></td>
<td>If set to positive number, the <code>db.sql.parameters</code> would be truncated to this length, otherwise it would be completely saved, which may cause performance problem.</td>
<td><code>512</code></td>
</tr>
<tr>
<td><code>plugin.solrj.trace_statement</code></td>
<td>If true, trace all the query parameters(include deleteByIds and deleteByQuery) in Solr query request, default is false.</td>
<td><code>false</code></td>
</tr>
<tr>
<td><code>plugin.solrj.trace_ops_params</code></td>
<td>If true, trace all the operation parameters in Solr request, default is false.</td>
<td><code>false</code></td>
</tr>
</tbody></table>
<h3 id="关于插件"><a href="#关于插件" class="headerlink" title="关于插件"></a>关于插件</h3><p>若需要使用第三方插件，可以将插件放入 <code>/plugins</code>路径下。<br><a href="https://github.com/apache/skywalking/blob/master/docs/en/guides/Java-Plugin-Development-Guide.md">插件开发指南</a></p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p><a href="https://skyapmtest.github.io/Agent-Benchmarks/README_zh.html">Java Agent Performance Test</a></p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Skywalking部署方案及配置详解</title>
    <url>/2023/12/19/Skywalking%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88%E5%8F%8A%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="一：架构图"><a href="#一：架构图" class="headerlink" title="一：架构图"></a>一：架构图</h1><p>官方中文文档：</p>
<p>document-cn-translation-of-skywalking&#x2F;README.md at master · SkyAPM&#x2F;document-cn-translation-of-skywalking · GitHub</p>
<h1 id="二：资源分配"><a href="#二：资源分配" class="headerlink" title="二：资源分配"></a>二：资源分配</h1><table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>序号</td>
<td>主机</td>
<td>角色</td>
<td>版本</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1</td>
<td>10.19.9.84</td>
<td>elasticsearch1</td>
<td>7.17.5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>10.19.9.85</td>
<td>elasticsearch1</td>
<td>7.17.5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>10.19.9.86</td>
<td>elasticsearch1</td>
<td>7.17.5</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>10.19.9.99</td>
<td>apache-skywalking-apm</td>
<td>9.1.0</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h1 id="三：部署过程"><a href="#三：部署过程" class="headerlink" title="三：部署过程"></a>三：部署过程</h1><h2 id="1）elasticsearch-7-17-5-安装"><a href="#1）elasticsearch-7-17-5-安装" class="headerlink" title="1）elasticsearch-7.17.5 安装"></a>1）elasticsearch-7.17.5 安装</h2><p>下载elasticsearch-7.17.5-x86_64.rpm包，三个节点分别执行</p>
<p> yum install elasticsearch-7.17.5-x86_64.rpm</p>
<h2 id="2）修改配置文件"><a href="#2）修改配置文件" class="headerlink" title="2）修改配置文件"></a>2）修改配置文件</h2><p>vim &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">cluster.name: skywalking</span><br><span class="line">node.name: node2</span><br><span class="line">path.data: /<span class="keyword">var</span>/lib/elasticsearch</span><br><span class="line">path.logs: /<span class="keyword">var</span>/log/elasticsearch</span><br><span class="line">network.host: <span class="number">10.19</span><span class="number">.9</span><span class="number">.85</span></span><br><span class="line">http.port: <span class="number">9200</span></span><br><span class="line">discovery.seed_hosts: [<span class="string">&quot;10.19.9.84&quot;</span>, <span class="string">&quot;10.19.9.85&quot;</span>, <span class="string">&quot;10.19.9.86&quot;</span>]</span><br><span class="line">cluster.initial_master_nodes: [<span class="string">&quot;10.19.9.84&quot;</span>, <span class="string">&quot;10.19.9.85&quot;</span>, <span class="string">&quot;10.19.9.86&quot;</span>]</span><br></pre></td></tr></table></figure>


<h2 id="3-分别启动elasticsearch"><a href="#3-分别启动elasticsearch" class="headerlink" title="3) 分别启动elasticsearch"></a>3) 分别启动elasticsearch</h2><p>systemctl start elasticsearch</p>
<h2 id="4-安装apache-skywalking-apm"><a href="#4-安装apache-skywalking-apm" class="headerlink" title="4) 安装apache-skywalking-apm"></a>4) 安装apache-skywalking-apm</h2><p>下载apache-skywalking-apm-9.1.0.tar.gz 二进制包</p>
<p>解压修稿配置文件</p>
<p>vim apache-skywalking-apm-bin&#x2F;config&#x2F;application.yml</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">storage:</span><br><span class="line">  selector: $&#123;SW_STORAGE:elasticsearch&#125; #选择elasticsearch存储方式</span><br><span class="line">  elasticsearch:</span><br><span class="line">    namespace: $&#123;SW_NAMESPACE:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    clusterNodes: $&#123;SW_STORAGE_ES_CLUSTER_NODES:<span class="number">10.19</span><span class="number">.9</span><span class="number">.85</span>:<span class="number">9200</span>&#125; #elasticsearch存储地址</span><br><span class="line">    protocol: $&#123;SW_STORAGE_ES_HTTP_PROTOCOL:<span class="string">&quot;http&quot;</span>&#125;</span><br><span class="line">    connectTimeout: $&#123;SW_STORAGE_ES_CONNECT_TIMEOUT:<span class="number">3000</span>&#125;</span><br><span class="line">    socketTimeout: $&#123;SW_STORAGE_ES_SOCKET_TIMEOUT:<span class="number">30000</span>&#125;</span><br><span class="line">    responseTimeout: $&#123;SW_STORAGE_ES_RESPONSE_TIMEOUT:<span class="number">15000</span>&#125;</span><br><span class="line">    numHttpClientThread: $&#123;SW_STORAGE_ES_NUM_HTTP_CLIENT_THREAD:<span class="number">0</span>&#125;</span><br><span class="line">    user: $&#123;SW_ES_USER:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    password: $&#123;SW_ES_PASSWORD:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    trustStorePath: $&#123;SW_STORAGE_ES_SSL_JKS_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    trustStorePass: $&#123;SW_STORAGE_ES_SSL_JKS_PASS:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    secretsManagementFile: $&#123;SW_ES_SECRETS_MANAGEMENT_FILE:<span class="string">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="5-启动apache-skywalking-apm"><a href="#5-启动apache-skywalking-apm" class="headerlink" title="5) 启动apache-skywalking-apm"></a>5) 启动apache-skywalking-apm</h2><p>apache-skywalking-apm-bin&#x2F;bin&#x2F;startup.sh</p>
<h2 id="6-服务器节点配置agent"><a href="#6-服务器节点配置agent" class="headerlink" title="6) 服务器节点配置agent"></a>6) 服务器节点配置agent</h2><p>下载skywalking-agent.jar</p>
<h2 id="7-在服务器节点上启动应用服务"><a href="#7-在服务器节点上启动应用服务" class="headerlink" title="7)在服务器节点上启动应用服务"></a>7)在服务器节点上启动应用服务</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">nohup java -Xms512m -Xmx512m -Dserver.max-http-header-size=<span class="number">65536</span> -javaagent:/home/dev/skywalking-agent/skywalking-agent.jar -DSW_AGENT_NAME=gofun-api2 -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=<span class="number">10.19</span><span class="number">.9</span><span class="number">.99</span>:<span class="number">11800</span> -jar SERVICE-NAME.jar &gt;/dev/<span class="literal">null</span> <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure>

<h2 id="8-访问skywalking-webui"><a href="#8-访问skywalking-webui" class="headerlink" title="8)访问skywalking webui"></a>8)访问skywalking webui</h2><h1 id="四：配置文件解释"><a href="#四：配置文件解释" class="headerlink" title="四：配置文件解释"></a>四：配置文件解释</h1><h2 id="1）集群配置"><a href="#1）集群配置" class="headerlink" title="1）集群配置"></a>1）集群配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#集群配置</span><br><span class="line">cluster:</span><br><span class="line">  # 选择哪一种集群模式</span><br><span class="line">  selector: $&#123;SW_CLUSTER:standalone&#125;</span><br><span class="line">  # 单机版</span><br><span class="line">  standalone:</span><br><span class="line">  # zk 注册集群配置，zk 版本保证在<span class="number">3.5</span>以上，oap-libs中也对<span class="number">3.4</span>进行了支持</span><br><span class="line">  zookeeper:</span><br><span class="line">    nameSpace: $&#123;SW_NAMESPACE:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    hostPort: $&#123;SW_CLUSTER_ZK_HOST_PORT:localhost:<span class="number">2181</span>&#125;</span><br><span class="line">    ## Retry Policy 重试策略</span><br><span class="line">    # initial amount of time to wait between retries</span><br><span class="line">    # 初始化等待时间</span><br><span class="line">    baseSleepTimeMs: $&#123;SW_CLUSTER_ZK_SLEEP_TIME:<span class="number">1000</span>&#125; </span><br><span class="line">    # max number of times to retry 最大重试次数</span><br><span class="line">    maxRetries: $&#123;SW_CLUSTER_ZK_MAX_RETRIES:<span class="number">3</span>&#125; </span><br><span class="line">    # Enable ACL 开启访问控制</span><br><span class="line">    enableACL: $&#123;SW_ZK_ENABLE_ACL:<span class="literal">false</span>&#125; # disable ACL in <span class="keyword">default</span></span><br><span class="line">    schema: $&#123;SW_ZK_SCHEMA:digest&#125; # only support digest schema</span><br><span class="line">    expression: $&#123;SW_ZK_EXPRESSION:skywalking:skywalking&#125;</span><br><span class="line">  # k8s部署配置</span><br><span class="line">  kubernetes:</span><br><span class="line">    namespace: $&#123;SW_CLUSTER_K8S_NAMESPACE:<span class="keyword">default</span>&#125;</span><br><span class="line">    labelSelector: $&#123;SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking&#125;</span><br><span class="line">    uidEnvName: $&#123;SW_CLUSTER_K8S_UID:SKYWALKING_COLLECTOR_UID&#125;</span><br><span class="line">  # consul 注册集群配置</span><br><span class="line">  consul:</span><br><span class="line">    serviceName: $&#123;SW_SERVICE_NAME:<span class="string">&quot;SkyWalking_OAP_Cluster&quot;</span>&#125;</span><br><span class="line">    # Consul cluster nodes, example: <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8500</span>,<span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>:<span class="number">8500</span>,<span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>:<span class="number">8500</span></span><br><span class="line">    hostPort: $&#123;SW_CLUSTER_CONSUL_HOST_PORT:localhost:<span class="number">8500</span>&#125;</span><br><span class="line">    aclToken: $&#123;SW_CLUSTER_CONSUL_ACLTOKEN:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">  # etcd 注册集群配置</span><br><span class="line">  etcd:</span><br><span class="line">    serviceName: $&#123;SW_SERVICE_NAME:<span class="string">&quot;SkyWalking_OAP_Cluster&quot;</span>&#125;</span><br><span class="line">    # etcd cluster nodes, example: <span class="number">10.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">2379</span>,<span class="number">10.0</span><span class="number">.0</span><span class="number">.2</span>:<span class="number">2379</span>,<span class="number">10.0</span><span class="number">.0</span><span class="number">.3</span>:<span class="number">2379</span></span><br><span class="line">    hostPort: $&#123;SW_CLUSTER_ETCD_HOST_PORT:localhost:<span class="number">2379</span>&#125;</span><br><span class="line">  # nacos 注册集群配置</span><br><span class="line">  nacos:</span><br><span class="line">    serviceName: $&#123;SW_SERVICE_NAME:<span class="string">&quot;SkyWalking_OAP_Cluster&quot;</span>&#125;</span><br><span class="line">    hostPort: $&#123;SW_CLUSTER_NACOS_HOST_PORT:localhost:<span class="number">8848</span>&#125;</span><br><span class="line">    # Nacos Configuration namespace</span><br><span class="line">    namespace: $&#123;SW_CLUSTER_NACOS_NAMESPACE:<span class="string">&quot;public&quot;</span>&#125;</span><br><span class="line">    # Nacos auth username</span><br><span class="line">    username: $&#123;SW_CLUSTER_NACOS_USERNAME:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    password: $&#123;SW_CLUSTER_NACOS_PASSWORD:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    # Nacos auth accessKey</span><br><span class="line">    accessKey: $&#123;SW_CLUSTER_NACOS_ACCESSKEY:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    secretKey: $&#123;SW_CLUSTER_NACOS_SECRETKEY:<span class="string">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2）core核心配置"><a href="#2）core核心配置" class="headerlink" title="2）core核心配置"></a>2）core核心配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">core:</span><br><span class="line">#配置选择</span><br><span class="line">  selector: $&#123;SW_CORE:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    # Mixed: Receive agent data, Level <span class="number">1</span> aggregate, Level <span class="number">2</span> aggregate</span><br><span class="line">    # Receiver: Receive agent data, Level <span class="number">1</span> aggregate</span><br><span class="line">    # Aggregator: Level <span class="number">2</span> aggregate</span><br><span class="line">    # 本服务的角色，包含<span class="number">3</span>总类型，当数据量较大时，需要分角色部署，增加处理能力。</span><br><span class="line">    # Mixed: 混合模式，接收数据,<span class="number">1</span>级汇总数据，<span class="number">2</span>级汇总数据</span><br><span class="line">    # Receiver: 接收角色,数据接收，<span class="number">1</span>级汇总数据，持久化，告警</span><br><span class="line">    # Aggregator: 聚合角色，<span class="number">2</span>级汇总数据，持久化，告警</span><br><span class="line"></span><br><span class="line">    role: $&#123;SW_CORE_ROLE:Mixed&#125; # Mixed/Receiver/Aggregator</span><br><span class="line">#接收ip</span><br><span class="line">    restHost: $&#123;SW_CORE_REST_HOST:<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&#125;</span><br><span class="line">#接收端口</span><br><span class="line">    restPort: $&#123;SW_CORE_REST_PORT:<span class="number">12800</span>&#125;</span><br><span class="line">#服务路径</span><br><span class="line">    restContextPath: $&#123;SW_CORE_REST_CONTEXT_PATH:/&#125;</span><br><span class="line">#最小线程</span><br><span class="line">    restMaxThreads: $&#123;SW_CORE_REST_MAX_THREADS:<span class="number">200</span>&#125;</span><br><span class="line">#线程空闲时间，超过关闭</span><br><span class="line">    restIdleTimeOut: $&#123;SW_CORE_REST_IDLE_TIMEOUT:<span class="number">30000</span>&#125;</span><br><span class="line">#接收队列大小</span><br><span class="line">    restAcceptQueueSize: $&#123;SW_CORE_REST_QUEUE_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">#http最大请求标头大小</span><br><span class="line">    httpMaxRequestHeaderSize: $&#123;SW_CORE_HTTP_MAX_REQUEST_HEADER_SIZE:<span class="number">8192</span>&#125;</span><br><span class="line">#grpc服务接收ip</span><br><span class="line">    gRPCHost: $&#123;SW_CORE_GRPC_HOST:<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&#125;</span><br><span class="line">#grpc服务接收端口</span><br><span class="line">    gRPCPort: $&#123;SW_CORE_GRPC_PORT:<span class="number">11800</span>&#125;</span><br><span class="line">#最大并发连接数</span><br><span class="line">    maxConcurrentCallsPerConnection: $&#123;SW_CORE_GRPC_MAX_CONCURRENT_CALL:<span class="number">0</span>&#125;</span><br><span class="line">#最大消息体</span><br><span class="line">    maxMessageSize: $&#123;SW_CORE_GRPC_MAX_MESSAGE_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">#gRpc线程队列大小</span><br><span class="line">    gRPCThreadPoolQueueSize: $&#123;SW_CORE_GRPC_POOL_QUEUE_SIZE:-<span class="number">1</span>&#125;</span><br><span class="line">#gRpc线程队列</span><br><span class="line">    gRPCThreadPoolSize: $&#123;SW_CORE_GRPC_THREAD_POOL_SIZE:-<span class="number">1</span>&#125;</span><br><span class="line">#gRpc安全协议是否开启</span><br><span class="line">    gRPCSslEnabled: $&#123;SW_CORE_GRPC_SSL_ENABLED:<span class="literal">false</span>&#125;</span><br><span class="line">    gRPCSslKeyPath: $&#123;SW_CORE_GRPC_SSL_KEY_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    gRPCSslCertChainPath: $&#123;SW_CORE_GRPC_SSL_CERT_CHAIN_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    gRPCSslTrustedCAPath: $&#123;SW_CORE_GRPC_SSL_TRUSTED_CA_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">#采样率</span><br><span class="line">    downsampling:</span><br><span class="line">      - Hour</span><br><span class="line">      - Day</span><br><span class="line">#采样数据留存时间，超过自动删除</span><br><span class="line"># Set a timeout on metrics data. After the timeout has expired, the metrics data will automatically be deleted.</span><br><span class="line">#是否开启数据保持处理器，关闭则不删除采样数据</span><br><span class="line">    enableDataKeeperExecutor: $&#123;SW_CORE_ENABLE_DATA_KEEPER_EXECUTOR:<span class="literal">true</span>&#125; # Turn it off then automatically metrics data delete will be close.</span><br><span class="line">#数据保持处理器执行频率，单位分钟，默认<span class="number">5</span>分钟一次</span><br><span class="line">    dataKeeperExecutePeriod: $&#123;SW_CORE_DATA_KEEPER_EXECUTE_PERIOD:<span class="number">5</span>&#125; # How often the data keeper executor runs periodically, unit is minute</span><br><span class="line">#数据保留时间，单位天</span><br><span class="line">    recordDataTTL: $&#123;SW_CORE_RECORD_DATA_TTL:<span class="number">3</span>&#125; # Unit is day</span><br><span class="line">#分析数据保留时间，单位天</span><br><span class="line">    metricsDataTTL: $&#123;SW_CORE_METRICS_DATA_TTL:<span class="number">7</span>&#125; # Unit is day</span><br><span class="line">#L1聚合刷新到L2聚合的周期。 单位是毫秒。</span><br><span class="line">    # The period of L1 aggregation flush to L2 aggregation. Unit is ms.</span><br><span class="line">    l1FlushPeriod: $&#123;SW_CORE_L1_AGGREGATION_FLUSH_PERIOD:<span class="number">500</span></span><br><span class="line">#会话时间的阈值,单位是毫秒,默认值为 <span class="number">70</span> 秒。</span><br><span class="line">    # The threshold of session time. Unit is ms. Default value is 70s.</span><br><span class="line">    storageSessionTimeout: $&#123;SW_CORE_STORAGE_SESSION_TIMEOUT:<span class="number">70000</span>&#125;</span><br><span class="line">#做数据持久化的时期,单位为秒,默认值为25s</span><br><span class="line">    # The period of doing data persistence. Unit is second.Default value is 25s</span><br><span class="line">    persistentPeriod: $&#123;SW_CORE_PERSISTENT_PERIOD:<span class="number">25</span>&#125;</span><br><span class="line">#如果OAP集群在一分钟内发生变化，缓存metrics数据以减少数据库查询</span><br><span class="line">    # Cache metrics data <span class="keyword">for</span> <span class="number">1</span> minute to reduce database queries, and <span class="keyword">if</span> the OAP cluster changes within that minute,</span><br><span class="line">#如果OAP集群在那一分钟内发生变化，那么在那一分钟内，这些度量可能不准确</span><br><span class="line">    # the metrics may not be accurate within that minute.</span><br><span class="line">    enableDatabaseSession: $&#123;SW_CORE_ENABLE_DATABASE_SESSION:<span class="literal">true</span>&#125;</span><br><span class="line">#每个报告周期的前N条记录, unit is minute</span><br><span class="line">    topNReportPeriod: $&#123;SW_CORE_TOPN_REPORT_PERIOD:<span class="number">10</span>&#125; # top_n <span class="keyword">record</span> <span class="title class_">worker</span> report cycle, unit is minute</span><br><span class="line">#额外的模型字段，用于在可视化工具中查看es数据，开启会增加一定的性能损耗。</span><br><span class="line">    activeExtraModelColumns: $&#123;SW_CORE_ACTIVE_EXTRA_MODEL_COLUMNS:<span class="literal">false</span>&#125;</span><br><span class="line">#服务名最大长度，服务名+实例名的最大长度必须小于<span class="number">200</span></span><br><span class="line">    # The max length of service + instance names should be less than <span class="number">200</span></span><br><span class="line">    serviceNameMaxLength: $&#123;SW_SERVICE_NAME_MAX_LENGTH:<span class="number">70</span>&#125;</span><br><span class="line">#实例名最大长度，服务名+实例名的最大长度必须小于<span class="number">200</span></span><br><span class="line">    instanceNameMaxLength: $&#123;SW_INSTANCE_NAME_MAX_LENGTH:<span class="number">70</span>&#125;</span><br><span class="line">#端点名最大长度，服务名+端点名（api）的最大长度必须小于<span class="number">240</span></span><br><span class="line">    # The max length of service + endpoint names should be less than <span class="number">240</span></span><br><span class="line">    endpointNameMaxLength: $&#123;SW_ENDPOINT_NAME_MAX_LENGTH:<span class="number">150</span>&#125;</span><br><span class="line">#定义一组span标记键，这些键可以通过GraphQL进行搜索</span><br><span class="line">    # Define the set of span tag keys, which should be searchable through the GraphQL.</span><br><span class="line">    searchableTracesTags: $&#123;SW_SEARCHABLE_TAG_KEYS:http.method,http.status_code,rpc.status_code,db.type,db.instance,mq.queue,mq.topic,mq.broker&#125;</span><br><span class="line">    # Define the set of log tag keys, which should be searchable through the GraphQL.</span><br><span class="line">    searchableLogsTags: $&#123;SW_SEARCHABLE_LOGS_TAG_KEYS:level&#125;</span><br><span class="line">    # Define the set of alarm tag keys, which should be searchable through the GraphQL.</span><br><span class="line">    searchableAlarmTags: $&#123;SW_SEARCHABLE_ALARM_TAG_KEYS:level&#125;</span><br><span class="line">    # The max size of tags keys <span class="keyword">for</span> autocomplete select.</span><br><span class="line">    autocompleteTagKeysQueryMaxSize: $&#123;SW_AUTOCOMPLETE_TAG_KEYS_QUERY_MAX_SIZE:<span class="number">100</span>&#125;</span><br><span class="line">    # The max size of tags values <span class="keyword">for</span> autocomplete select.</span><br><span class="line">    autocompleteTagValuesQueryMaxSize: $&#123;SW_AUTOCOMPLETE_TAG_VALUES_QUERY_MAX_SIZE:<span class="number">100</span>&#125;</span><br><span class="line">    # The number of threads used to prepare metrics data to the storage.</span><br><span class="line">    prepareThreads: $&#123;SW_CORE_PREPARE_THREADS:<span class="number">2</span>&#125;</span><br><span class="line">    # Turn it on then automatically grouping endpoint by the given OpenAPI definitions.</span><br><span class="line">    enableEndpointNameGroupingByOpenapi: $&#123;SW_CORE_ENABLE_ENDPOINT_NAME_GROUPING_BY_OPAENAPI:<span class="literal">true</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3）storage数据存储配置"><a href="#3）storage数据存储配置" class="headerlink" title="3）storage数据存储配置"></a>3）storage数据存储配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">storage:</span><br><span class="line">#选择数据存储类型</span><br><span class="line">  selector: $&#123;SW_STORAGE:elasticsearch&#125;</span><br><span class="line">  elasticsearch:</span><br><span class="line">    namespace: $&#123;SW_NAMESPACE:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    clusterNodes: $&#123;SW_STORAGE_ES_CLUSTER_NODES:<span class="number">10.19</span><span class="number">.9</span><span class="number">.85</span>:<span class="number">9200</span>&#125;</span><br><span class="line">    protocol: $&#123;SW_STORAGE_ES_HTTP_PROTOCOL:<span class="string">&quot;http&quot;</span>&#125;</span><br><span class="line">    connectTimeout: $&#123;SW_STORAGE_ES_CONNECT_TIMEOUT:<span class="number">3000</span>&#125;</span><br><span class="line">    socketTimeout: $&#123;SW_STORAGE_ES_SOCKET_TIMEOUT:<span class="number">30000</span>&#125;</span><br><span class="line">    responseTimeout: $&#123;SW_STORAGE_ES_RESPONSE_TIMEOUT:<span class="number">15000</span>&#125;</span><br><span class="line">    numHttpClientThread: $&#123;SW_STORAGE_ES_NUM_HTTP_CLIENT_THREAD:<span class="number">0</span>&#125;</span><br><span class="line">    user: $&#123;SW_ES_USER:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    password: $&#123;SW_ES_PASSWORD:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    trustStorePath: $&#123;SW_STORAGE_ES_SSL_JKS_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    trustStorePass: $&#123;SW_STORAGE_ES_SSL_JKS_PASS:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">#安全管理文件，内容包括用户名/密码，由第三方工具管理</span><br><span class="line">    secretsManagementFile: $&#123;SW_ES_SECRETS_MANAGEMENT_FILE:<span class="string">&quot;&quot;</span>&#125; </span><br><span class="line">#索引步长，默认<span class="number">1</span>，每天一个索引</span><br><span class="line">    dayStep: $&#123;SW_STORAGE_DAY_STEP:<span class="number">1</span>&#125; </span><br><span class="line">#索引分片数</span><br><span class="line">    indexShardsNumber: $&#123;SW_STORAGE_ES_INDEX_SHARDS_NUMBER:<span class="number">1</span>&#125; </span><br><span class="line">#索引副本数</span><br><span class="line">    indexReplicasNumber: $&#123;SW_STORAGE_ES_INDEX_REPLICAS_NUMBER:<span class="number">1</span>&#125; </span><br><span class="line">#大数据集配置，当查询包含超数据集，下面三种配置可以提高新能</span><br><span class="line">#大数据存储索引保留天数，小于<span class="number">0</span>则与dayStep一致</span><br><span class="line">    superDatasetDayStep: $&#123;SW_SUPERDATASET_STORAGE_DAY_STEP:-<span class="number">1</span>&#125; </span><br><span class="line">#大数据存储分片因子，分片数为indexShardsNumber*superDatasetIndexShardsFactor,此因素也会影响Zipkin和Jaeger的踪迹</span><br><span class="line">    superDatasetIndexShardsFactor: $&#123;SW_STORAGE_ES_SUPER_DATASET_INDEX_SHARDS_FACTOR:<span class="number">5</span>&#125;</span><br><span class="line">#大数据索引副本数</span><br><span class="line">    superDatasetIndexReplicasNumber: $&#123;SW_STORAGE_ES_SUPER_DATASET_INDEX_REPLICAS_NUMBER:<span class="number">0</span>&#125; </span><br><span class="line">#索引模板的顺序</span><br><span class="line">    indexTemplateOrder: $&#123;SW_STORAGE_ES_INDEX_TEMPLATE_ORDER:<span class="number">0</span>&#125; </span><br><span class="line">#异步批量写库，默认<span class="number">5000</span>条</span><br><span class="line">    bulkActions: $&#123;SW_STORAGE_ES_BULK_ACTIONS:<span class="number">5000</span>&#125; </span><br><span class="line">#无论请求数量如何，每 <span class="number">15</span> 秒刷新一次批量</span><br><span class="line">    flushInterval: $&#123;SW_STORAGE_ES_FLUSH_INTERVAL:<span class="number">15</span>&#125;</span><br><span class="line">#并发请求数</span><br><span class="line">    concurrentRequests: $&#123;SW_STORAGE_ES_CONCURRENT_REQUESTS:<span class="number">2</span>&#125; </span><br><span class="line">#结果最大数据量</span><br><span class="line">    resultWindowMaxSize: $&#123;SW_STORAGE_ES_QUERY_MAX_WINDOW_SIZE:<span class="number">10000</span>&#125;</span><br><span class="line">#源数据查询最大数据量</span><br><span class="line">    metadataQueryMaxSize: $&#123;SW_STORAGE_ES_QUERY_MAX_SIZE:<span class="number">10000</span>&#125;\</span><br><span class="line">#滚动数据量大小</span><br><span class="line">    scrollingBatchSize: $&#123;SW_STORAGE_ES_SCROLLING_BATCH_SIZE:<span class="number">5000</span>&#125;</span><br><span class="line">#分段查询最大数据量</span><br><span class="line">    segmentQueryMaxSize: $&#123;SW_STORAGE_ES_QUERY_SEGMENT_SIZE:<span class="number">200</span>&#125;</span><br><span class="line">#任务查询最大条数</span><br><span class="line">    profileTaskQueryMaxSize: $&#123;SW_STORAGE_ES_QUERY_PROFILE_TASK_SIZE:<span class="number">200</span>&#125;</span><br><span class="line">#profile 数据查询批量大小</span><br><span class="line">    profileDataQueryBatchSize: $&#123;SW_STORAGE_ES_QUERY_PROFILE_DATA_BATCH_SIZE:<span class="number">100</span>&#125;</span><br><span class="line">#OAP分析器</span><br><span class="line">    oapAnalyzer: $&#123;SW_STORAGE_ES_OAP_ANALYZER:<span class="string">&quot;&#123;\&quot;analyzer\&quot;:&#123;\&quot;oap_analyzer\&quot;:&#123;\&quot;type\&quot;:\&quot;stop\&quot;&#125;&#125;&#125;&quot;</span>&#125; # the oap analyzer.</span><br><span class="line">#OPA日志分析器</span><br><span class="line">    oapLogAnalyzer: $&#123;SW_STORAGE_ES_OAP_LOG_ANALYZER:<span class="string">&quot;&#123;\&quot;analyzer\&quot;:&#123;\&quot;oap_log_analyzer\&quot;:&#123;\&quot;type\&quot;:\&quot;standard\&quot;&#125;&#125;&#125;&quot;</span>&#125; # the oap log analyzer. It could be customized by the ES analyzer configuration to support more language log formats, such as Chinese log, Japanese log and etc.</span><br><span class="line">    advanced: $&#123;SW_STORAGE_ES_ADVANCED:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">  h2:</span><br><span class="line">    driver: $&#123;SW_STORAGE_H2_DRIVER:org.h2.jdbcx.JdbcDataSource&#125;</span><br><span class="line">    url: $&#123;SW_STORAGE_H2_URL:jdbc:h2:mem:skywalking-oap-db;DB_CLOSE_DELAY=-<span class="number">1</span>&#125;</span><br><span class="line">    user: $&#123;SW_STORAGE_H2_USER:sa&#125;</span><br><span class="line">    metadataQueryMaxSize: $&#123;SW_STORAGE_H2_QUERY_MAX_SIZE:<span class="number">5000</span>&#125;</span><br><span class="line">    maxSizeOfBatchSql: $&#123;SW_STORAGE_MAX_SIZE_OF_BATCH_SQL:<span class="number">100</span>&#125;</span><br><span class="line">    asyncBatchPersistentPoolSize: $&#123;SW_STORAGE_ASYNC_BATCH_PERSISTENT_POOL_SIZE:<span class="number">1</span>&#125;</span><br><span class="line">  mysql:</span><br><span class="line">    properties:</span><br><span class="line">      jdbcUrl: $&#123;SW_JDBC_URL:<span class="string">&quot;jdbc:mysql://localhost:3306/swtest?rewriteBatchedStatements=true&quot;</span>&#125;</span><br><span class="line">      dataSource.user: $&#123;SW_DATA_SOURCE_USER:root&#125;</span><br><span class="line">      dataSource.password: $&#123;SW_DATA_SOURCE_PASSWORD:root@<span class="number">1234</span>&#125;</span><br><span class="line">      dataSource.cachePrepStmts: $&#123;SW_DATA_SOURCE_CACHE_PREP_STMTS:<span class="literal">true</span>&#125;</span><br><span class="line">      dataSource.prepStmtCacheSize: $&#123;SW_DATA_SOURCE_PREP_STMT_CACHE_SQL_SIZE:<span class="number">250</span>&#125;</span><br><span class="line">      dataSource.prepStmtCacheSqlLimit: $&#123;SW_DATA_SOURCE_PREP_STMT_CACHE_SQL_LIMIT:<span class="number">2048</span>&#125;</span><br><span class="line">      dataSource.useServerPrepStmts: $&#123;SW_DATA_SOURCE_USE_SERVER_PREP_STMTS:<span class="literal">true</span>&#125;</span><br><span class="line">    metadataQueryMaxSize: $&#123;SW_STORAGE_MYSQL_QUERY_MAX_SIZE:<span class="number">5000</span>&#125;</span><br><span class="line">    maxSizeOfBatchSql: $&#123;SW_STORAGE_MAX_SIZE_OF_BATCH_SQL:<span class="number">2000</span>&#125;</span><br><span class="line">    asyncBatchPersistentPoolSize: $&#123;SW_STORAGE_ASYNC_BATCH_PERSISTENT_POOL_SIZE:<span class="number">4</span>&#125;</span><br><span class="line">  tidb:</span><br><span class="line">    properties:</span><br><span class="line">      jdbcUrl: $&#123;SW_JDBC_URL:<span class="string">&quot;jdbc:mysql://localhost:4000/tidbswtest?rewriteBatchedStatements=true&quot;</span>&#125;</span><br><span class="line">      dataSource.user: $&#123;SW_DATA_SOURCE_USER:root&#125;</span><br><span class="line">      dataSource.password: $&#123;SW_DATA_SOURCE_PASSWORD:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">      dataSource.cachePrepStmts: $&#123;SW_DATA_SOURCE_CACHE_PREP_STMTS:<span class="literal">true</span>&#125;</span><br><span class="line">      dataSource.prepStmtCacheSize: $&#123;SW_DATA_SOURCE_PREP_STMT_CACHE_SQL_SIZE:<span class="number">250</span>&#125;</span><br><span class="line">      dataSource.prepStmtCacheSqlLimit: $&#123;SW_DATA_SOURCE_PREP_STMT_CACHE_SQL_LIMIT:<span class="number">2048</span>&#125;</span><br><span class="line">      dataSource.useServerPrepStmts: $&#123;SW_DATA_SOURCE_USE_SERVER_PREP_STMTS:<span class="literal">true</span>&#125;</span><br><span class="line">      dataSource.useAffectedRows: $&#123;SW_DATA_SOURCE_USE_AFFECTED_ROWS:<span class="literal">true</span>&#125;</span><br><span class="line">    metadataQueryMaxSize: $&#123;SW_STORAGE_MYSQL_QUERY_MAX_SIZE:<span class="number">5000</span>&#125;</span><br><span class="line">    maxSizeOfBatchSql: $&#123;SW_STORAGE_MAX_SIZE_OF_BATCH_SQL:<span class="number">2000</span>&#125;</span><br><span class="line">    asyncBatchPersistentPoolSize: $&#123;SW_STORAGE_ASYNC_BATCH_PERSISTENT_POOL_SIZE:<span class="number">4</span>&#125;</span><br><span class="line">  postgresql:</span><br><span class="line">    properties:</span><br><span class="line">      jdbcUrl: $&#123;SW_JDBC_URL:<span class="string">&quot;jdbc:postgresql://localhost:5432/skywalking&quot;</span>&#125;</span><br><span class="line">      dataSource.user: $&#123;SW_DATA_SOURCE_USER:postgres&#125;</span><br><span class="line">      dataSource.password: $&#123;SW_DATA_SOURCE_PASSWORD:<span class="number">123456</span>&#125;</span><br><span class="line">      dataSource.cachePrepStmts: $&#123;SW_DATA_SOURCE_CACHE_PREP_STMTS:<span class="literal">true</span>&#125;</span><br><span class="line">      dataSource.prepStmtCacheSize: $&#123;SW_DATA_SOURCE_PREP_STMT_CACHE_SQL_SIZE:<span class="number">250</span>&#125;</span><br><span class="line">      dataSource.prepStmtCacheSqlLimit: $&#123;SW_DATA_SOURCE_PREP_STMT_CACHE_SQL_LIMIT:<span class="number">2048</span>&#125;</span><br><span class="line">      dataSource.useServerPrepStmts: $&#123;SW_DATA_SOURCE_USE_SERVER_PREP_STMTS:<span class="literal">true</span>&#125;</span><br><span class="line">    metadataQueryMaxSize: $&#123;SW_STORAGE_MYSQL_QUERY_MAX_SIZE:<span class="number">5000</span>&#125;</span><br><span class="line">    maxSizeOfBatchSql: $&#123;SW_STORAGE_MAX_SIZE_OF_BATCH_SQL:<span class="number">2000</span>&#125;</span><br><span class="line">    asyncBatchPersistentPoolSize: $&#123;SW_STORAGE_ASYNC_BATCH_PERSISTENT_POOL_SIZE:<span class="number">4</span>&#125;</span><br><span class="line">  banyandb:</span><br><span class="line">    host: $&#123;SW_STORAGE_BANYANDB_HOST:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>&#125;</span><br><span class="line">    port: $&#123;SW_STORAGE_BANYANDB_PORT:<span class="number">17912</span>&#125;</span><br><span class="line">    maxBulkSize: $&#123;SW_STORAGE_BANYANDB_MAX_BULK_SIZE:<span class="number">5000</span>&#125;</span><br><span class="line">    flushInterval: $&#123;SW_STORAGE_BANYANDB_FLUSH_INTERVAL:<span class="number">15</span>&#125;</span><br><span class="line">    metricsShardsNumber: $&#123;SW_STORAGE_BANYANDB_METRICS_SHARDS_NUMBER:<span class="number">1</span>&#125;</span><br><span class="line">    recordShardsNumber: $&#123;SW_STORAGE_BANYANDB_RECORD_SHARDS_NUMBER:<span class="number">1</span>&#125;</span><br><span class="line">    superDatasetShardsFactor: $&#123;SW_STORAGE_BANYANDB_SUPERDATASET_SHARDS_FACTOR:<span class="number">2</span>&#125;</span><br><span class="line">    concurrentWriteThreads: $&#123;SW_STORAGE_BANYANDB_CONCURRENT_WRITE_THREADS:<span class="number">15</span>&#125;</span><br><span class="line">    profileTaskQueryMaxSize: $&#123;SW_STORAGE_BANYANDB_PROFILE_TASK_QUERY_MAX_SIZE:<span class="number">200</span>&#125; # the max number of fetch task in a request</span><br></pre></td></tr></table></figure>

<h2 id="4）agent-analyzer-：接收探针代理配置"><a href="#4）agent-analyzer-：接收探针代理配置" class="headerlink" title="4）agent-analyzer ：接收探针代理配置"></a>4）agent-analyzer ：接收探针代理配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">agent-analyzer:</span><br><span class="line">  selector: $&#123;SW_AGENT_ANALYZER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">#采样率</span><br><span class="line">    traceSamplingPolicySettingsFile: $&#123;SW_TRACE_SAMPLING_POLICY_SETTINGS_FILE:trace-sampling-policy-settings.yml&#125;</span><br><span class="line">#慢数据访问阀值，单位ms</span><br><span class="line">    slowDBAccessThreshold: $&#123;SW_SLOW_DB_THRESHOLD:<span class="keyword">default</span>:<span class="number">200</span>,mongodb:<span class="number">100</span>&#125; </span><br><span class="line">#开启采样率时，开启对错误分段数据全部保持，防止没有处理错误数据。</span><br><span class="line">    forceSampleErrorSegment: $&#123;SW_FORCE_SAMPLE_ERROR_SEGMENT:<span class="literal">true</span>&#125; </span><br><span class="line"># 分段状态分析策略</span><br><span class="line"># FROM_SPAN_STATUS：任何一个span状态决定分段状态，只要一个span为Error则为Error，默认</span><br><span class="line"># FROM_ENTRY_SPAN：入口span状态决定分段状态</span><br><span class="line"># FROM_FIRST_SPAN：第一个span状态决定分段状态</span><br><span class="line">    segmentStatusAnalysisStrategy: $&#123;SW_SEGMENT_STATUS_ANALYSIS_STRATEGY:FROM_SPAN_STATUS&#125; </span><br><span class="line">#Nginx和外部代理无法获取到原始地址的，且端口不在范围内的，不会产生客户端实例关系</span><br><span class="line">    noUpstreamRealAddressAgents: $&#123;SW_NO_UPSTREAM_REAL_ADDRESS:<span class="number">6000</span>,<span class="number">9000</span>&#125;</span><br><span class="line"># 可以被分析的文件，用“,”逗号分隔</span><br><span class="line">    meterAnalyzerActiveFiles: </span><br><span class="line">$&#123;SW_METER_ANALYZER_ACTIVE_FILES:datasource,threadpool,satellite&#125; </span><br></pre></td></tr></table></figure>

<h2 id="5）log日志分析"><a href="#5）log日志分析" class="headerlink" title="5）log日志分析"></a>5）log日志分析</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">log-analyzer:</span><br><span class="line">  selector: $&#123;SW_LOG_ANALYZER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    lalFiles: $&#123;SW_LOG_LAL_FILES:<span class="keyword">default</span>&#125;</span><br><span class="line">    malFiles: $&#123;SW_LOG_MAL_FILES:<span class="string">&quot;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<h2 id="6）远程接收"><a href="#6）远程接收" class="headerlink" title="6）远程接收"></a>6）远程接收</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#共享服务器，为所有接收模块提供独立的jetty和grpc服务，开启减少内部ip/端口和线程池的共享占用</span><br><span class="line">receiver-sharing-server:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_SHARING_SERVER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    # For HTTP server</span><br><span class="line">    restHost: $&#123;SW_RECEIVER_SHARING_REST_HOST:<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&#125;</span><br><span class="line">    restPort: $&#123;SW_RECEIVER_SHARING_REST_PORT:<span class="number">0</span>&#125;</span><br><span class="line">    restContextPath: $&#123;SW_RECEIVER_SHARING_REST_CONTEXT_PATH:/&#125;</span><br><span class="line">    restMaxThreads: $&#123;SW_RECEIVER_SHARING_REST_MAX_THREADS:<span class="number">200</span>&#125;</span><br><span class="line">    restIdleTimeOut: $&#123;SW_RECEIVER_SHARING_REST_IDLE_TIMEOUT:<span class="number">30000</span>&#125;</span><br><span class="line">    restAcceptQueueSize: $&#123;SW_RECEIVER_SHARING_REST_QUEUE_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">    httpMaxRequestHeaderSize: $&#123;SW_RECEIVER_SHARING_HTTP_MAX_REQUEST_HEADER_SIZE:<span class="number">8192</span>&#125;</span><br><span class="line">    # For gRPC server</span><br><span class="line">    gRPCHost: $&#123;SW_RECEIVER_GRPC_HOST:<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&#125;</span><br><span class="line">    gRPCPort: $&#123;SW_RECEIVER_GRPC_PORT:<span class="number">0</span>&#125;</span><br><span class="line">    maxConcurrentCallsPerConnection: $&#123;SW_RECEIVER_GRPC_MAX_CONCURRENT_CALL:<span class="number">0</span>&#125;</span><br><span class="line">    maxMessageSize: $&#123;SW_RECEIVER_GRPC_MAX_MESSAGE_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">    gRPCThreadPoolQueueSize: $&#123;SW_RECEIVER_GRPC_POOL_QUEUE_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">    gRPCThreadPoolSize: $&#123;SW_RECEIVER_GRPC_THREAD_POOL_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">    gRPCSslEnabled: $&#123;SW_RECEIVER_GRPC_SSL_ENABLED:<span class="literal">false</span>&#125;</span><br><span class="line">    gRPCSslKeyPath: $&#123;SW_RECEIVER_GRPC_SSL_KEY_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    gRPCSslCertChainPath: $&#123;SW_RECEIVER_GRPC_SSL_CERT_CHAIN_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    gRPCSslTrustedCAsPath: $&#123;SW_RECEIVER_GRPC_SSL_TRUSTED_CAS_PATH:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    authentication: $&#123;SW_AUTHENTICATION:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">#数据接收器，从其他监测系统获取上传的数据。</span><br><span class="line">receiver-register:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_REGISTER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-trace:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_TRACE:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-jvm:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_JVM:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-clr:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_CLR:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-profile:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_PROFILE:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-zabbix:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_ZABBIX:-&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    port: $&#123;SW_RECEIVER_ZABBIX_PORT:<span class="number">10051</span>&#125;</span><br><span class="line">    host: $&#123;SW_RECEIVER_ZABBIX_HOST:<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&#125;</span><br><span class="line">    activeFiles: $&#123;SW_RECEIVER_ZABBIX_ACTIVE_FILES:agent&#125;</span><br></pre></td></tr></table></figure>

<h2 id="7）configuration：远程配置"><a href="#7）configuration：远程配置" class="headerlink" title="7）configuration：远程配置"></a>7）configuration：远程配置</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">configuration:</span><br><span class="line">  selector: $&#123;SW_CONFIGURATION:none&#125;</span><br><span class="line">#不是用远程配置</span><br><span class="line">  none:</span><br><span class="line">  grpc:</span><br><span class="line">    host: $&#123;SW_DCS_SERVER_HOST:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    port: $&#123;SW_DCS_SERVER_PORT:<span class="number">80</span>&#125;</span><br><span class="line">    clusterName: $&#123;SW_DCS_CLUSTER_NAME:SkyWalking&#125;</span><br><span class="line">    period: $&#123;SW_DCS_PERIOD:<span class="number">20</span>&#125;</span><br><span class="line">  apollo:</span><br><span class="line">    apolloMeta: $&#123;SW_CONFIG_APOLLO:http:<span class="comment">//localhost:8080&#125;</span></span><br><span class="line">    apolloCluster: $&#123;SW_CONFIG_APOLLO_CLUSTER:<span class="keyword">default</span>&#125;</span><br><span class="line">    apolloEnv: $&#123;SW_CONFIG_APOLLO_ENV:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    appId: $&#123;SW_CONFIG_APOLLO_APP_ID:skywalking&#125;</span><br><span class="line">    period: $&#123;SW_CONFIG_APOLLO_PERIOD:<span class="number">60</span>&#125;</span><br><span class="line">  zookeeper:</span><br><span class="line">    period: $&#123;SW_CONFIG_ZK_PERIOD:<span class="number">60</span>&#125; # Unit seconds, sync period. Default fetch every <span class="number">60</span> seconds.</span><br><span class="line">    namespace: $&#123;SW_CONFIG_ZK_NAMESPACE:/<span class="keyword">default</span>&#125;</span><br><span class="line">    hostPort: $&#123;SW_CONFIG_ZK_HOST_PORT:localhost:<span class="number">2181</span>&#125;</span><br><span class="line">    # Retry Policy</span><br><span class="line">    baseSleepTimeMs: $&#123;SW_CONFIG_ZK_BASE_SLEEP_TIME_MS:<span class="number">1000</span>&#125; # initial amount of time to wait between retries</span><br><span class="line">    maxRetries: $&#123;SW_CONFIG_ZK_MAX_RETRIES:<span class="number">3</span>&#125; # max number of times to retry</span><br><span class="line">  etcd:</span><br><span class="line">    period: $&#123;SW_CONFIG_ETCD_PERIOD:<span class="number">60</span>&#125; # Unit seconds, sync period. Default fetch every <span class="number">60</span> seconds.</span><br><span class="line">    endpoints: $&#123;SW_CONFIG_ETCD_ENDPOINTS:http:<span class="comment">//localhost:2379&#125;</span></span><br><span class="line">    namespace: $&#123;SW_CONFIG_ETCD_NAMESPACE:/skywalking&#125;</span><br><span class="line">    authentication: $&#123;SW_CONFIG_ETCD_AUTHENTICATION:<span class="literal">false</span>&#125;</span><br><span class="line">    user: $&#123;SW_CONFIG_ETCD_USER:&#125;</span><br><span class="line">    password: $&#123;SW_CONFIG_ETCD_password:&#125;</span><br><span class="line">  consul:</span><br><span class="line">    # Consul host and ports, separated by comma, e.g. <span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span>:<span class="number">8500</span>,<span class="number">2.3</span><span class="number">.4</span><span class="number">.5</span>:<span class="number">8500</span></span><br><span class="line">    hostAndPorts: $&#123;SW_CONFIG_CONSUL_HOST_AND_PORTS:<span class="number">1.2</span><span class="number">.3</span><span class="number">.4</span>:<span class="number">8500</span>&#125;</span><br><span class="line">    # Sync period in seconds. Defaults to <span class="number">60</span> seconds.</span><br><span class="line">    period: $&#123;SW_CONFIG_CONSUL_PERIOD:<span class="number">60</span>&#125;</span><br><span class="line">    # Consul aclToken</span><br><span class="line">    aclToken: $&#123;SW_CONFIG_CONSUL_ACL_TOKEN:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">  k8s-configmap:</span><br><span class="line">    period: $&#123;SW_CONFIG_CONFIGMAP_PERIOD:<span class="number">60</span>&#125;</span><br><span class="line">    namespace: $&#123;SW_CLUSTER_K8S_NAMESPACE:<span class="keyword">default</span>&#125;</span><br><span class="line">    labelSelector: $&#123;SW_CLUSTER_K8S_LABEL:app=collector,release=skywalking&#125;</span><br><span class="line">  nacos:</span><br><span class="line">    # Nacos Server Host</span><br><span class="line">    serverAddr: $&#123;SW_CONFIG_NACOS_SERVER_ADDR:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>&#125;</span><br><span class="line">    # Nacos Server Port</span><br><span class="line">    port: $&#123;SW_CONFIG_NACOS_SERVER_PORT:<span class="number">8848</span>&#125;</span><br><span class="line">    # Nacos Configuration Group</span><br><span class="line">    group: $&#123;SW_CONFIG_NACOS_SERVER_GROUP:skywalking&#125;</span><br><span class="line">    # Nacos Configuration namespace</span><br><span class="line">    namespace: $&#123;SW_CONFIG_NACOS_SERVER_NAMESPACE:&#125;</span><br><span class="line">    # Unit seconds, sync period. Default fetch every <span class="number">60</span> seconds.</span><br><span class="line">    period: $&#123;SW_CONFIG_NACOS_PERIOD:<span class="number">60</span>&#125;</span><br><span class="line">    # Nacos auth username</span><br><span class="line">    username: $&#123;SW_CONFIG_NACOS_USERNAME:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    password: $&#123;SW_CONFIG_NACOS_PASSWORD:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    # Nacos auth accessKey</span><br><span class="line">    accessKey: $&#123;SW_CONFIG_NACOS_ACCESSKEY:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    secretKey: $&#123;SW_CONFIG_NACOS_SECRETKEY:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">exporter:</span><br><span class="line">  selector: $&#123;SW_EXPORTER:-&#125;</span><br><span class="line">  grpc:</span><br><span class="line">    targetHost: $&#123;SW_EXPORTER_GRPC_HOST:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>&#125;</span><br><span class="line">    targetPort: $&#123;SW_EXPORTER_GRPC_PORT:<span class="number">9870</span>&#125;</span><br><span class="line"></span><br><span class="line">health-checker:</span><br><span class="line">  selector: $&#123;SW_HEALTH_CHECKER:-&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    checkIntervalSeconds: $&#123;SW_HEALTH_CHECKER_INTERVAL_SECONDS:<span class="number">5</span>&#125;</span><br><span class="line"></span><br><span class="line">configuration-discovery:</span><br><span class="line">  selector: $&#123;SW_CONFIGURATION_DISCOVERY:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    disableMessageDigest: $&#123;SW_DISABLE_MESSAGE_DIGEST:<span class="literal">false</span>&#125;</span><br><span class="line"></span><br><span class="line">receiver-event:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_EVENT:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-ebpf:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_EBPF:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br></pre></td></tr></table></figure>

<h2 id="8）其他"><a href="#8）其他" class="headerlink" title="8）其他"></a>8）其他</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">service-mesh:</span><br><span class="line">  selector: $&#123;SW_SERVICE_MESH:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">envoy-metric:</span><br><span class="line">  selector: $&#123;SW_ENVOY_METRIC:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    acceptMetricsService: $&#123;SW_ENVOY_METRIC_SERVICE:<span class="literal">true</span>&#125;</span><br><span class="line">    alsHTTPAnalysis: $&#123;SW_ENVOY_METRIC_ALS_HTTP_ANALYSIS:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    alsTCPAnalysis: $&#123;SW_ENVOY_METRIC_ALS_TCP_ANALYSIS:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line"># k8sServiceNameRule 允许您通过 Kubernetes 元数据自定义 ALS 中的服务名称，</span><br><span class="line"># 可用的变量是 `pod`, `service`，`$&#123;service.metadata.name&#125;，、$&#123;pod.metadata.labels.version&#125;`将版本号附加到服务名称。</span><br><span class="line"># 请注意，在使用环境变量传递此配置时，请使用单引号（`<span class="string">&#x27;&#x27;</span>`）以避免它被shell。</span><br><span class="line">    k8sServiceNameRule: $&#123;K8S_SERVICE_NAME_RULE:<span class="string">&quot;$&#123;pod.metadata.labels.(service.istio.io/canonical-name)&#125;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">#数据抓取</span><br><span class="line">prometheus-fetcher:</span><br><span class="line">  selector: $&#123;SW_PROMETHEUS_FETCHER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    enabledRules: $&#123;SW_PROMETHEUS_FETCHER_ENABLED_RULES:<span class="string">&quot;self&quot;</span>&#125;</span><br><span class="line">    maxConvertWorker: $&#123;SW_PROMETHEUS_FETCHER_NUM_CONVERT_WORKER:-<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">#使用kafka获取agent数据，需要agent配置kafka相同地址，可以与grpc同时使用</span><br><span class="line">kafka-fetcher:</span><br><span class="line">  selector: $&#123;SW_KAFKA_FETCHER:-&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    bootstrapServers: $&#123;SW_KAFKA_FETCHER_SERVERS:localhost:<span class="number">9092</span>&#125;</span><br><span class="line">    namespace: $&#123;SW_NAMESPACE:<span class="string">&quot;&quot;</span>&#125;</span><br><span class="line">    partitions: $&#123;SW_KAFKA_FETCHER_PARTITIONS:<span class="number">3</span>&#125;</span><br><span class="line">    replicationFactor: $&#123;SW_KAFKA_FETCHER_PARTITIONS_FACTOR:<span class="number">2</span>&#125;</span><br><span class="line">    enableNativeProtoLog: $&#123;SW_KAFKA_FETCHER_ENABLE_NATIVE_PROTO_LOG:<span class="literal">true</span>&#125;</span><br><span class="line">    enableNativeJsonLog: $&#123;SW_KAFKA_FETCHER_ENABLE_NATIVE_JSON_LOG:<span class="literal">true</span>&#125;</span><br><span class="line">    consumers: $&#123;SW_KAFKA_FETCHER_CONSUMERS:<span class="number">1</span>&#125;</span><br><span class="line">    kafkaHandlerThreadPoolSize: $&#123;SW_KAFKA_HANDLER_THREAD_POOL_SIZE:-<span class="number">1</span>&#125;</span><br><span class="line">    kafkaHandlerThreadPoolQueueSize: $&#123;SW_KAFKA_HANDLER_THREAD_POOL_QUEUE_SIZE:-<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line">receiver-meter:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_METER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">receiver-otel:</span><br><span class="line">  selector: $&#123;SW_OTEL_RECEIVER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    enabledHandlers: $&#123;SW_OTEL_RECEIVER_ENABLED_HANDLERS:<span class="string">&quot;oc&quot;</span>&#125;</span><br><span class="line">    enabledOcRules: $&#123;SW_OTEL_RECEIVER_ENABLED_OC_RULES:<span class="string">&quot;istio-controlplane,k8s-node,oap,vm&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">receiver-zipkin:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_ZIPKIN:-&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    # For HTTP server</span><br><span class="line">    restHost: $&#123;SW_RECEIVER_ZIPKIN_REST_HOST:<span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>&#125;</span><br><span class="line">    restPort: $&#123;SW_RECEIVER_ZIPKIN_REST_PORT:<span class="number">9411</span>&#125;</span><br><span class="line">    restContextPath: $&#123;SW_RECEIVER_ZIPKIN_REST_CONTEXT_PATH:/&#125;</span><br><span class="line">    restMaxThreads: $&#123;SW_RECEIVER_ZIPKIN_REST_MAX_THREADS:<span class="number">200</span>&#125;</span><br><span class="line">    restIdleTimeOut: $&#123;SW_RECEIVER_ZIPKIN_REST_IDLE_TIMEOUT:<span class="number">30000</span>&#125;</span><br><span class="line">    restAcceptQueueSize: $&#123;SW_RECEIVER_ZIPKIN_REST_QUEUE_SIZE:<span class="number">0</span>&#125;</span><br><span class="line">    searchableTracesTags: $&#123;SW_ZIPKIN_SEARCHABLE_TAG_KEYS:http.method&#125;</span><br><span class="line">    # The sample rate precision is <span class="number">1</span>/<span class="number">10000</span>, should be between <span class="number">0</span> and <span class="number">10000</span></span><br><span class="line">    sampleRate: $&#123;SW_ZIPKIN_SAMPLE_RATE:<span class="number">10000</span>&#125;</span><br><span class="line"></span><br><span class="line">receiver-browser:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_BROWSER:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line">    # The sample rate precision is <span class="number">1</span>/<span class="number">10000.</span> <span class="number">10000</span> means <span class="number">100</span>% sample in <span class="keyword">default</span>.</span><br><span class="line">    sampleRate: $&#123;SW_RECEIVER_BROWSER_SAMPLE_RATE:<span class="number">10000</span>&#125;</span><br><span class="line"></span><br><span class="line">receiver-log:</span><br><span class="line">  selector: $&#123;SW_RECEIVER_LOG:<span class="keyword">default</span>&#125;</span><br><span class="line">  <span class="keyword">default</span>:</span><br><span class="line"></span><br><span class="line">query:</span><br><span class="line">  selector: $&#123;SW_QUERY:graphql&#125;</span><br><span class="line">  graphql:</span><br><span class="line">    # Enable the log testing API to test the LAL.</span><br><span class="line">    # NOTE: This API evaluates untrusted code on the OAP server.</span><br><span class="line">    # A malicious script can <span class="keyword">do</span> significant <span class="title function_">damage</span> <span class="params">(steal keys and secrets, remove files and directories, install malware, etc)</span>.</span><br><span class="line">    # As such, please enable <span class="built_in">this</span> API only when you completely trust your users.</span><br><span class="line">    enableLogTestTool: $&#123;SW_QUERY_GRAPHQL_ENABLE_LOG_TEST_TOOL:<span class="literal">false</span>&#125;</span><br><span class="line">    # Maximum complexity allowed <span class="keyword">for</span> the GraphQL query that can be used to</span><br><span class="line">    # abort a query <span class="keyword">if</span> the total number of data fields queried exceeds the defined threshold.</span><br><span class="line">    maxQueryComplexity: $&#123;SW_QUERY_MAX_QUERY_COMPLEXITY:<span class="number">1000</span>&#125;</span><br><span class="line">    # Allow user add, disable and update UI template</span><br><span class="line">    enableUpdateUITemplate: $&#123;SW_ENABLE_UPDATE_UI_TEMPLATE:<span class="literal">false</span>&#125;</span><br><span class="line">    # <span class="string">&quot;On demand log&quot;</span> allows users to fetch Pod containers<span class="string">&#x27; log in real time,</span></span><br><span class="line"><span class="string">    # because this might expose secrets in the logs (if any), users need</span></span><br><span class="line"><span class="string">    # to enable this manually, and add permissions to OAP cluster role.</span></span><br><span class="line"><span class="string">    enableOnDemandPodLog: $&#123;SW_ENABLE_ON_DEMAND_POD_LOG:false&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># This module is for Zipkin query API and support zipkin-lens UI</span></span><br><span class="line"><span class="string">query-zipkin:</span></span><br><span class="line"><span class="string">  selector: $&#123;SW_QUERY_ZIPKIN:-&#125;</span></span><br><span class="line"><span class="string">  default:</span></span><br><span class="line"><span class="string">    # For HTTP server</span></span><br><span class="line"><span class="string">    restHost: $&#123;SW_QUERY_ZIPKIN_REST_HOST:0.0.0.0&#125;</span></span><br><span class="line"><span class="string">    restPort: $&#123;SW_QUERY_ZIPKIN_REST_PORT:9412&#125;</span></span><br><span class="line"><span class="string">    restContextPath: $&#123;SW_QUERY_ZIPKIN_REST_CONTEXT_PATH:/zipkin&#125;</span></span><br><span class="line"><span class="string">    restMaxThreads: $&#123;SW_QUERY_ZIPKIN_REST_MAX_THREADS:200&#125;</span></span><br><span class="line"><span class="string">    restIdleTimeOut: $&#123;SW_QUERY_ZIPKIN_REST_IDLE_TIMEOUT:30000&#125;</span></span><br><span class="line"><span class="string">    restAcceptQueueSize: $&#123;SW_QUERY_ZIPKIN_REST_QUEUE_SIZE:0&#125;</span></span><br><span class="line"><span class="string">    # Default look back for serviceNames, remoteServiceNames and spanNames, 1 day in millis</span></span><br><span class="line"><span class="string">    lookback: $&#123;SW_QUERY_ZIPKIN_LOOKBACK:86400000&#125;</span></span><br><span class="line"><span class="string">    # The Cache-Control max-age (seconds) for serviceNames, remoteServiceNames and spanNames</span></span><br><span class="line"><span class="string">    namesMaxAge: $&#123;SW_QUERY_ZIPKIN_NAMES_MAX_AGE:300&#125;</span></span><br><span class="line"><span class="string">    ## The below config are OAP support for zipkin-lens UI</span></span><br><span class="line"><span class="string">    # Default traces query max size</span></span><br><span class="line"><span class="string">    uiQueryLimit: $&#123;SW_QUERY_ZIPKIN_UI_QUERY_LIMIT:10&#125;</span></span><br><span class="line"><span class="string">    # Default look back for search traces, 15 minutes in millis</span></span><br><span class="line"><span class="string">    uiDefaultLookback: $&#123;SW_QUERY_ZIPKIN_UI_DEFAULT_LOOKBACK:900000&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">alarm:</span></span><br><span class="line"><span class="string">  selector: $&#123;SW_ALARM:default&#125;</span></span><br><span class="line"><span class="string">  default:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">telemetry:</span></span><br><span class="line"><span class="string">  selector: $&#123;SW_TELEMETRY:prometheus&#125;</span></span><br><span class="line"><span class="string">  none:</span></span><br><span class="line"><span class="string">  prometheus:</span></span><br><span class="line"><span class="string">    host: $&#123;SW_TELEMETRY_PROMETHEUS_HOST:127.0.0.1&#125;</span></span><br><span class="line"><span class="string">    port: $&#123;SW_TELEMETRY_PROMETHEUS_PORT:1543&#125;</span></span><br><span class="line"><span class="string">    sslEnabled: $&#123;SW_TELEMETRY_PROMETHEUS_SSL_ENABLED:false&#125;</span></span><br><span class="line"><span class="string">    sslKeyPath: $&#123;SW_TELEMETRY_PROMETHEUS_SSL_KEY_PATH:&quot;&quot;&#125;</span></span><br><span class="line"><span class="string">    sslCertChainPath: $&#123;SW_TELEMETRY_PROMETHEUS_SSL_CERT_CHAIN_PATH:&quot;&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<h1 id="五：采样率"><a href="#五：采样率" class="headerlink" title="五：采样率"></a>五：采样率</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">默认：</span><br><span class="line">   # 替代“agent-analyzer.<span class="keyword">default</span>.sampleRate”的默认采样率</span><br><span class="line">   # 采样率精度为<span class="number">1</span>/<span class="number">10000</span>。 <span class="number">10000</span> 表示默认为 <span class="number">100</span>% 样本。</span><br><span class="line">   # 替换“agent-analyzer.<span class="keyword">default</span>.slowTraceSegmentThreshold”的默认跟踪延迟时间</span><br><span class="line">   # 设置这个延迟阈值将使慢跟踪段在花费更多时间时被采样，即使采样机制被激活。 默认值为“-<span class="number">1</span>”，这意味着不会对慢速跟踪进行采样。 单位，毫秒。</span><br><span class="line">   # rate: <span class="number">1000</span> # 此特定服务的采样率</span><br><span class="line">   # duration: <span class="number">10000</span> # 此特定服务的跟踪采样的跟踪延迟阈值</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">  rate: <span class="number">10000</span></span><br><span class="line">  duration: -<span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>10000代表采样率为100%  ，1&#x2F;10000代表采样率为1%</p>
<h1 id="六：k8s配置skywalking"><a href="#六：k8s配置skywalking" class="headerlink" title="六：k8s配置skywalking"></a>六：k8s配置skywalking</h1><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Pod</span><br><span class="line">metadata:</span><br><span class="line">  name: agent-as-sidecar</span><br><span class="line">spec:</span><br><span class="line">  restartPolicy: Never</span><br><span class="line"></span><br><span class="line">  volumes:</span><br><span class="line">    - name: skywalking-agent</span><br><span class="line">      emptyDir: &#123; &#125;</span><br><span class="line"></span><br><span class="line">  initContainers:</span><br><span class="line">    - name: agent-container</span><br><span class="line">      image: apache/skywalking-java-agent:<span class="number">8.7</span><span class="number">.0</span>-alpine</span><br><span class="line">      volumeMounts:</span><br><span class="line">        - name: skywalking-agent</span><br><span class="line">          mountPath: /agent</span><br><span class="line">      command: [ <span class="string">&quot;/bin/sh&quot;</span> ]</span><br><span class="line">      args: [ <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;cp -R /skywalking/agent /agent/&quot;</span> ]</span><br><span class="line"></span><br><span class="line">  containers:</span><br><span class="line">    - name: app-container</span><br><span class="line">      image: springio/gs-spring-boot-docker</span><br><span class="line">      volumeMounts:</span><br><span class="line">        - name: skywalking-agent</span><br><span class="line">          mountPath: /skywalking</span><br><span class="line">      env:</span><br><span class="line">        - name: JAVA_TOOL_OPTIONS</span><br><span class="line">          value: <span class="string">&quot;-javaagent:/skywalking/agent/skywalking-agent.jar -DSW_AGENT_NAME=spring-test -DSW_AGENT_COLLECTOR_BACKEND_SERVICES=10.19.9.99:11800&quot;</span></span><br><span class="line">~</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>VictoriaMetrics-vmagent的使用</title>
    <url>/2023/12/20/VictoriaMetrics-vmagent%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>以下是关于使用 vmagent替换prometheus 的简单使用，可以实现push 模式的metrics 处理</p>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><ul>
<li>docker-compose 文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version:  &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  vmstorage:</span><br><span class="line">    image: victoriametrics/vmstorage</span><br><span class="line">    ports:</span><br><span class="line">      - 8482:8482</span><br><span class="line">      - 8400:8482</span><br><span class="line">      - 8401:8482</span><br><span class="line">    volumes:</span><br><span class="line">      - ./strgdata:/storage</span><br><span class="line">    command:</span><br><span class="line">      - &#x27;--storageDataPath=/storage&#x27;</span><br><span class="line">  vmagent:</span><br><span class="line">    image: victoriametrics/vmagent</span><br><span class="line">    volumes:</span><br><span class="line">    - ./prometheus.yml:/etc/prometheus/prometheus.yml</span><br><span class="line">    ports:</span><br><span class="line">    - 8429:8429</span><br><span class="line">    command:</span><br><span class="line">    - -promscrape.config=/etc/prometheus/prometheus.yml</span><br><span class="line">    - -remoteWrite.basicAuth.username=dalong-insert-account-1</span><br><span class="line">    - -remoteWrite.basicAuth.password=dalong</span><br><span class="line">    - -remoteWrite.url=http://vmauth:8427</span><br><span class="line">  vmauth:</span><br><span class="line">    image: victoriametrics/vmauth</span><br><span class="line">    volumes:</span><br><span class="line">    - &quot;./config.yaml:/etc/victoriametrics/config.yaml&quot;</span><br><span class="line">    command:</span><br><span class="line">      - &#x27;-auth.config=/etc/victoriametrics/config.yaml&#x27;</span><br><span class="line">    ports:</span><br><span class="line">      - 8427:8427</span><br><span class="line">  vminsert:</span><br><span class="line">    image: victoriametrics/vminsert</span><br><span class="line">    command:</span><br><span class="line">      - &#x27;--storageNode=vmstorage:8400&#x27;</span><br><span class="line">    ports:</span><br><span class="line">      - 8480:8480</span><br><span class="line">  vmselect:</span><br><span class="line">    image: victoriametrics/vmselect</span><br><span class="line">    command:</span><br><span class="line">      - &#x27;--storageNode=vmstorage:8401&#x27;</span><br><span class="line">    ports:</span><br><span class="line">      - 8481:8481</span><br><span class="line">  grafana:</span><br><span class="line">    image: grafana/grafana</span><br><span class="line">    ports:</span><br><span class="line">      - 3000:3000</span><br></pre></td></tr></table></figure>

<ul>
<li>配置说明<br>以上demo集成了vmauth（安全处理）<br>vmauth 配置</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">users:</span><br><span class="line">- username: &quot;dalong-select-account-1&quot;</span><br><span class="line">  password: &quot;dalong&quot;</span><br><span class="line">  url_prefix: &quot;http://vmselect:8481/select/1/prometheus&quot;</span><br><span class="line">- username: &quot;dalong-insert-account-1&quot;</span><br><span class="line">  password: &quot;dalong&quot;</span><br><span class="line">  url_prefix: &quot;http://vminsert:8480/insert/1/prometheus&quot;</span><br></pre></td></tr></table></figure>

<p>vmagent 配置,实际上就是prometheus 的配置移除了remote_wreite</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval:     1s</span><br><span class="line">  evaluation_interval: 1s</span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;prometheus&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;prometheus:9090&#x27;]</span><br><span class="line">  - job_name: &#x27;vminsert&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;vminsert:8480&#x27;]</span><br><span class="line">  - job_name: &#x27;vmselect&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;vmselect:8481&#x27;]</span><br><span class="line">  - job_name: &#x27;vmstorage&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;vmstorage:8482&#x27;]</span><br></pre></td></tr></table></figure>

<p>因为我们启用了安全配置，所以需要添加一些额外的参数 如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-promscrape.config=/etc/prometheus/prometheus.yml  -remoteWrite.basicAuth.username=dalong-insert-account-1  -remoteWrite.basicAuth.password=dalong -remoteWrite.url=http://vmauth:8427</span><br></pre></td></tr></table></figure>

<ul>
<li>vmagent支持的命令</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vmagent-20200521-152405-tags-v1.35.6-cluster-0-gdcbdc009f</span><br><span class="line">Usage of /vmagent-prod:</span><br><span class="line">  -csvTrimTimestamp duration</span><br><span class="line">      Trim timestamps when importing csv data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)</span><br><span class="line">  -dryRun</span><br><span class="line">      Whether to check only config files without running vmagent. The following files are checked: -promscrape.config, -remoteWrite.relabelConfig, -remoteWrite.urlRelabelConfig . See also -promscrape.config.dryRun</span><br><span class="line">  -enableTCP6</span><br><span class="line">      Whether to enable IPv6 for listening and dialing. By default only IPv4 TCP is used</span><br><span class="line">  -envflag.enable</span><br><span class="line">      Whether to enable reading flags from environment variables additionally to command line. Command line flag values have priority over values from environment vars. Flags are read only from command line if this flag isn&#x27;t set</span><br><span class="line">  -envflag.prefix string</span><br><span class="line">      Prefix for environment variables if -envflag.enable is set</span><br><span class="line">  -fs.disableMmap</span><br><span class="line">      Whether to use pread() instead of mmap() for reading data files. By default mmap() is used for 64-bit arches and pread() is used for 32-bit arches, since they cannot data files bigger than 2^32 bytes in memory</span><br><span class="line">  -graphiteListenAddr string</span><br><span class="line">      TCP and UDP address to listen for Graphite plaintext data. Usually :2003 must be set. Doesn&#x27;t work if empty</span><br><span class="line">  -graphiteTrimTimestamp duration</span><br><span class="line">      Trim timestamps for Graphite data to this duration. Minimum practical duration is 1s. Higher duration (i.e. 1m) may be used for reducing disk space usage for timestamp data (default 1s)</span><br><span class="line">  -http.disableResponseCompression</span><br><span class="line">      Disable compression of HTTP responses for saving CPU resources. By default compression is enabled to save network bandwidth</span><br><span class="line">  -http.maxGracefulShutdownDuration duration</span><br><span class="line">      The maximum duration for graceful shutdown of HTTP server. Highly loaded server may require increased value for graceful shutdown (default 7s)</span><br><span class="line">  -http.pathPrefix string</span><br><span class="line">      An optional prefix to add to all the paths handled by http server. For example, if &#x27;-http.pathPrefix=/foo/bar&#x27; is set, then all the http requests will be handled on &#x27;/foo/bar/*&#x27; paths. This may be useful for proxied requests. See https://www.robustperception.io/using-external-urls-and-proxies-with-prometheus</span><br><span class="line">  -http.shutdownDelay duration</span><br><span class="line">      Optional delay before http server shutdown. During this dealy the servier returns non-OK responses from /health page, so load balancers can route new requests to other servers</span><br><span class="line">  -httpListenAddr string</span><br><span class="line">      TCP address to listen for http connections. Set this flag to empty value in order to disable listening on any port. This mode may be useful for running multiple vmagent instances on the same server. Note that /targets and /metrics pages aren&#x27;t available if -httpListenAddr=&#x27;&#x27; (default &quot;:8429&quot;)</span><br><span class="line">  -import.maxLineLen int</span><br><span class="line">      The maximum length in bytes of a single line accepted by /api/v1/import (default 104857600)</span><br><span class="line">  -influxListenAddr string</span><br><span class="line">      TCP and UDP address to listen for Influx line protocol data. Usually :8189 must be set. Doesn&#x27;t work if empty</span><br><span class="line">  -influxMeasurementFieldSeparator string</span><br><span class="line">      Separator for &#x27;&#123;measurement&#125;&#123;separator&#125;&#123;field_name&#125;&#x27; metric name when inserted via Influx line protocol (default &quot;_&quot;)</span><br><span class="line">  -influxSkipSingleField</span><br><span class="line">      Uses &#x27;&#123;measurement&#125;&#x27; instead of &#x27;&#123;measurement&#125;&#123;separator&#125;&#123;field_name&#125;&#x27; for metic name if Influx line contains only a single field</span><br><span class="line">  -influxTrimTimestamp duration</span><br><span class="line">      Trim timestamps for Influx line protocol data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)</span><br><span class="line">  -insert.maxQueueDuration duration</span><br><span class="line">      The maximum duration for waiting in the queue for insert requests due to -maxConcurrentInserts (default 1m0s)</span><br><span class="line">  -loggerFormat string</span><br><span class="line">      Format for logs. Possible values: default, json (default &quot;default&quot;)</span><br><span class="line">  -loggerLevel string</span><br><span class="line">      Minimum level of errors to log. Possible values: INFO, WARN, ERROR, FATAL, PANIC (default &quot;INFO&quot;)</span><br><span class="line">  -loggerOutput string</span><br><span class="line">      Output for the logs. Supported values: stderr, stdout (default &quot;stderr&quot;)</span><br><span class="line">  -maxConcurrentInserts int</span><br><span class="line">      The maximum number of concurrent inserts. Default value should work for most cases, since it minimizes the overhead for concurrent inserts. This option is tigthly coupled with -insert.maxQueueDuration (default 16)</span><br><span class="line">  -maxInsertRequestSize int</span><br><span class="line">      The maximum size in bytes of a single Prometheus remote_write API request (default 33554432)</span><br><span class="line">  -memory.allowedPercent float</span><br><span class="line">      Allowed percent of system memory VictoriaMetrics caches may occupy. Too low value may increase cache miss rate, which usually results in higher CPU and disk IO usage. Too high value may evict too much data from OS page cache, which will result in higher disk IO usage (default 60)</span><br><span class="line">  -opentsdbHTTPListenAddr string</span><br><span class="line">      TCP address to listen for OpentTSDB HTTP put requests. Usually :4242 must be set. Doesn&#x27;t work if empty</span><br><span class="line">  -opentsdbListenAddr string</span><br><span class="line">      TCP and UDP address to listen for OpentTSDB metrics. Telnet put messages and HTTP /api/put messages are simultaneously served on TCP port. Usually :4242 must be set. Doesn&#x27;t work if empty</span><br><span class="line">  -opentsdbTrimTimestamp duration</span><br><span class="line">      Trim timestamps for OpenTSDB &#x27;telnet put&#x27; data to this duration. Minimum practical duration is 1s. Higher duration (i.e. 1m) may be used for reducing disk space usage for timestamp data (default 1s)</span><br><span class="line">  -opentsdbhttp.maxInsertRequestSize int</span><br><span class="line">      The maximum size of OpenTSDB HTTP put request (default 33554432)</span><br><span class="line">  -opentsdbhttpTrimTimestamp duration</span><br><span class="line">      Trim timestamps for OpenTSDB HTTP data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)</span><br><span class="line">  -promscrape.config string</span><br><span class="line">      Optional path to Prometheus config file with &#x27;scrape_configs&#x27; section containing targets to scrape. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config for details</span><br><span class="line">  -promscrape.config.dryRun</span><br><span class="line">      Checks -promscrape.config file for errors and unsupported fields and then exits. Returns non-zero exit code on parsing errors and emits these errors to stderr. Pass -loggerLevel=ERROR if you don&#x27;t need to see info messages in the output</span><br><span class="line">  -promscrape.config.strictParse</span><br><span class="line">      Whether to allow only supported fields in &#x27;-promscrape.config&#x27;. This option may be used for errors detection in &#x27;-promscrape.config&#x27; file</span><br><span class="line">  -promscrape.configCheckInterval duration</span><br><span class="line">      Interval for checking for changes in &#x27;-promscrape.config&#x27; file. By default the checking is disabled. Send SIGHUP signal in order to force config check for changes</span><br><span class="line">  -promscrape.consulSDCheckInterval consul_sd_configs</span><br><span class="line">      Interval for checking for changes in consul. This works only if consul_sd_configs is configured in &#x27;-promscrape.config&#x27; file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#consul_sd_config for details (default 30s)</span><br><span class="line">  -promscrape.disableCompression</span><br><span class="line">      Whether to disable sending &#x27;Accept-Encoding: gzip&#x27; request headers to scrape targets. This may reduce CPU usage on scrape targets at the cost of higher network bandwidth utilization</span><br><span class="line">  -promscrape.discovery.concurrency int</span><br><span class="line">      The maximum number of concurrent requests to Prometheus autodiscovery API (Consul, Kubernetes, etc.) (default 500)</span><br><span class="line">  -promscrape.discovery.concurrentWaitTime duration</span><br><span class="line">      The maximum duration for waiting to perform API requests if more than -promscrape.discovery.concurrency requests are simultaneously performed (default 1m0s)</span><br><span class="line">  -promscrape.dnsSDCheckInterval dns_sd_configs</span><br><span class="line">      Interval for checking for changes in dns. This works only if dns_sd_configs is configured in &#x27;-promscrape.config&#x27; file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#dns_sd_config for details (default 30s)</span><br><span class="line">  -promscrape.ec2SDCheckInterval ec2_sd_configs</span><br><span class="line">      Interval for checking for changes in ec2. This works only if ec2_sd_configs is configured in &#x27;-promscrape.config&#x27; file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#ec2_sd_config for details (default 1m0s)</span><br><span class="line">  -promscrape.fileSDCheckInterval duration</span><br><span class="line">      Interval for checking for changes in &#x27;file_sd_config&#x27;. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#file_sd_config for details (default 30s)</span><br><span class="line">  -promscrape.gceSDCheckInterval gce_sd_configs</span><br><span class="line">      Interval for checking for changes in gce. This works only if gce_sd_configs is configured in &#x27;-promscrape.config&#x27; file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#gce_sd_config for details (default 1m0s)</span><br><span class="line">  -promscrape.kubernetesSDCheckInterval kubernetes_sd_configs</span><br><span class="line">      Interval for checking for changes in Kubernetes API server. This works only if kubernetes_sd_configs is configured in &#x27;-promscrape.config&#x27; file. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config for details (default 30s)</span><br><span class="line">  -promscrape.maxScrapeSize int</span><br><span class="line">      The maximum size of scrape response in bytes to process from Prometheus targets. Bigger responses are rejected (default 16777216)</span><br><span class="line">  -promscrape.suppressScrapeErrors</span><br><span class="line">      Whether to suppress scrape errors logging. The last error for each target is always available at &#x27;/targets&#x27; page even if scrape errors logging is suppressed</span><br><span class="line">  -remoteWrite.basicAuth.password value</span><br><span class="line">      Optional basic auth password to use for -remoteWrite.url. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.basicAuth.username value</span><br><span class="line">      Optional basic auth username to use for -remoteWrite.url. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.bearerToken value</span><br><span class="line">      Optional bearer auth token to use for -remoteWrite.url. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.flushInterval duration</span><br><span class="line">      Interval for flushing the data to remote storage. Higher value reduces network bandwidth usage at the cost of delayed push of scraped data to remote storage. Minimum supported interval is 1 second (default 1s)</span><br><span class="line">  -remoteWrite.label value</span><br><span class="line">      Optional label in the form &#x27;name=value&#x27; to add to all the metrics before sending them to -remoteWrite.url. Pass multiple -remoteWrite.label flags in order to add multiple flags to metrics before sending them to remote storage</span><br><span class="line">  -remoteWrite.maxBlockSize int</span><br><span class="line">      The maximum size in bytes of unpacked request to send to remote storage. It shouldn&#x27;t exceed -maxInsertRequestSize from VictoriaMetrics (default 33554432)</span><br><span class="line">  -remoteWrite.maxDiskUsagePerURL int</span><br><span class="line">      The maximum file-based buffer size in bytes at -remoteWrite.tmpDataPath for each -remoteWrite.url. When buffer size reaches the configured maximum, then old data is dropped when adding new data to the buffer. Buffered data is stored in ~500MB chunks, so the minimum practical value for this flag is 500000000. Disk usage is unlimited if the value is set to 0</span><br><span class="line">  -remoteWrite.queues int</span><br><span class="line">      The number of concurrent queues to each -remoteWrite.url. Set more queues if a single queue isn&#x27;t enough for sending high volume of collected data to remote storage (default 1)</span><br><span class="line">  -remoteWrite.relabelConfig string</span><br><span class="line">      Optional path to file with relabel_config entries. These entries are applied to all the metrics before sending them to -remoteWrite.url. See https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config for details</span><br><span class="line">  -remoteWrite.sendTimeout duration</span><br><span class="line">      Timeout for sending a single block of data to -remoteWrite.url (default 1m0s)</span><br><span class="line">  -remoteWrite.showURL</span><br><span class="line">      Whether to show -remoteWrite.url in the exported metrics. It is hidden by default, since it can contain sensistive auth info</span><br><span class="line">  -remoteWrite.tlsCAFile value</span><br><span class="line">      Optional path to TLS CA file to use for verifying connections to -remoteWrite.url. By default system CA is used. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.tlsCertFile value</span><br><span class="line">      Optional path to client-side TLS certificate file to use when connecting to -remoteWrite.url. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.tlsInsecureSkipVerify</span><br><span class="line">      Whether to skip tls verification when connecting to -remoteWrite.url</span><br><span class="line">  -remoteWrite.tlsKeyFile value</span><br><span class="line">      Optional path to client-side TLS certificate key to use when connecting to -remoteWrite.url. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.tlsServerName value</span><br><span class="line">      Optional TLS server name to use for connections to -remoteWrite.url. By default the server name from -remoteWrite.url is used. If multiple args are set, then they are applied independently for the corresponding -remoteWrite.url</span><br><span class="line">  -remoteWrite.tmpDataPath string</span><br><span class="line">      Path to directory where temporary data for remote write component is stored (default &quot;vmagent-remotewrite-data&quot;)</span><br><span class="line">  -remoteWrite.url value</span><br><span class="line">      Remote storage URL to write data to. It must support Prometheus remote_write API. It is recommended using VictoriaMetrics as remote storage. Example url: http://&lt;victoriametrics-host&gt;:8428/api/v1/write . Pass multiple -remoteWrite.url flags in order to write data concurrently to multiple remote storage systems</span><br><span class="line">  -remoteWrite.urlRelabelConfig value</span><br><span class="line">      Optional path to relabel config for the corresponding -remoteWrite.url</span><br><span class="line">  -version</span><br><span class="line">      Show VictoriaMetrics version</span><br></pre></td></tr></table></figure>

<ul>
<li>启动</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<h2 id="集成使用"><a href="#集成使用" class="headerlink" title="集成使用"></a>集成使用</h2><ul>
<li>查看target</li>
</ul>
<p>curl -i <a href="http://localhost:8429/targets">http://localhost:8429/targets</a>  </p>
<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>以上是一个简单的集成使用，我们可以基于vmagent 实现pull 模式到push 模式的转变，同时对于一些因为特殊原因可能pull 的是很有用的<br>同时我们也可以使用vmagent 替换prometheus，而且vmagent 支持多种模式的数据处理，还是很强大的</p>
<h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://github.com/VictoriaMetrics/VictoriaMetrics/wiki/vmagent">https://github.com/VictoriaMetrics/VictoriaMetrics/wiki/vmagent</a>  </p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>VictoriaMetrics—快速、经济高效且可扩展的时间序列数据库</title>
    <url>/2023/12/15/VictoriaMetrics%E2%80%94%E5%BF%AB%E9%80%9F%E3%80%81%E7%BB%8F%E6%B5%8E%E9%AB%98%E6%95%88%E4%B8%94%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%BA%8F%E5%88%97%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<h2 id="VictoriaMetrics"><a href="#VictoriaMetrics" class="headerlink" title="VictoriaMetrics"></a>VictoriaMetrics</h2><p>VictoriaMetrics是一个快速的cost-effective和可伸缩的time-series数据库。</p>
<p>它可以在二进制版本、docker图像和源代码中使用。只需下载VictoriaMetrics并查看如何启动它。</p>
<p>这里提供群集版本。</p>
<p>更多文档请参见我们的Wiki。</p>
<p>如果您需要VictoriaMetrics的付费企业支持，请与我们联系。请参阅企业客户可用的功能。</p>
<h2 id="案例研究和会谈"><a href="#案例研究和会谈" class="headerlink" title="案例研究和会谈"></a>案例研究和会谈</h2><ul>
<li><a href="javascript:">Adidas</a></li>
<li><a href="javascript:">CERN</a></li>
<li><a href="javascript:">COLOPL</a></li>
<li><a href="javascript:">Zerodha</a></li>
<li><a href="javascript:">Wix.com</a></li>
<li><a href="javascript:">Wedos.com</a></li>
<li><a href="javascript:">Synthesio</a></li>
<li><a href="javascript:">MHI Vestas Offshore Wind</a></li>
<li><a href="javascript:">Dreamteam</a></li>
<li><a href="javascript:">Brandwatch</a></li>
<li><a href="javascript:">Adsterra</a></li>
<li><a href="javascript:">ARNES</a></li>
</ul>
<h2 id="Prominent-features"><a href="#Prominent-features" class="headerlink" title="Prominent features"></a>Prominent features</h2><ul>
<li>VictoriaMetrics可作为long-term的存储器，供普罗米修斯或vmagent使用。有关详细信息，请参阅这些文档。</li>
<li>支持Prometheus查询API，因此可以在Grafana中作为Prometheusdrop-in替换。VictoriaMetrics实现了MetricsQL查询语言，它的灵感来自PromQL。</li>
<li>支持全局查询。多个普罗米修斯实例可能会将数据写入VictoriaMetrics。稍后，可以在单个查询中使用此数据。</li>
<li>高性能和良好的可伸缩性的插入和选择。比InfluxDB和TimescaleDB高出20倍。</li>
<li>在处理数百万个唯一的时间序列（也称为高基数）时，使用的RAM比InfluxDB少10倍。</li>
<li>针对高流失率的时间序列进行了优化。考虑一下prometheus-operator中频繁部署的prometheus-operator度量。</li>
<li>高数据压缩，因此与TimescaleDB相比，有限的存储中最多可以多出70倍的数据点。</li>
<li>针对high-latencyIO和低IOPS（AWS中的HDD和网络存储，Google Cloud，Microsoft Azure等）的存储进行了优化。参见这些基准的图表。</li>
<li>一个single-nodeVictoriaMetrics可以替代中等大小的集群，这些集群是由竞争解决方案构建的，如Thanos、M3DB、Cortex、InfluxDB或TimescaleDB。请参阅纵向可扩展性基准测试，将Thanos与VictoriaMetrics群集进行比较，并从PromCon 2019开始远程写入存储大战。</li>
<li>操作简单：VictoriaMetrics由一个小的可执行文件组成，没有外部依赖性。所有配置都是通过显式的command-line标志和合理的默认值完成的。所有数据都存储在一个由<code>-storageDataPath</code>标志指向的目录中。使用vmbackup&#x2F;vmrestore从即时快照轻松快速地备份到S3或GCS。更多细节请参阅本文。</li>
<li>由于存储体系结构，在不干净的关机（即OOM、硬件重置或<code>kill -9</code>）时，存储受到保护，不受损坏。</li>
<li>通过以下协议支持度量的刮取、摄取和回填：来自Prometheus导出器的度量，比如node_exporter。有关详细信息，请参阅这些文档。通过HTTP、TCP和UDP的Prometheus远程写API InfluxDB-line协议。如果设置了<code>-graphiteListenAddr</code>，则使用带标记的Graphite明文协议。如果设置了<code>-opentsdbListenAddr</code>，则显示OpenTSDB put消息。HTTP OpenTSDB&#x2F;api&#x2F;put请求（如果设置了<code>-opentsdbHTTPListenAddr</code>）。&#x2F;api&#x2F;v1&#x2F;导入。普罗米修斯博览会格式。任意CSV数据。</li>
<li>支持度量的重新标记。有关详细信息，请参阅这些文档。</li>
<li>理想情况下可以处理来自Kubernetes的大量时间序列数据、物联网传感器、联网汽车、工业遥测、金融数据和各种企业工作负载。</li>
<li>具有开放源代码群集版本。</li>
<li>另请参阅有关VictoriaMetrics的技术文章。</li>
</ul>
<h2 id="Operation"><a href="#Operation" class="headerlink" title="Operation"></a>Operation</h2><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><ul>
<li>如何启动VictoriaMetrics环境变量</li>
<li><a href="javascript:">Prometheus setup</a></li>
<li><a href="javascript:">Grafana setup</a></li>
<li>如何升级VictoriaMetrics</li>
<li>如何将新配置应用到VictoriaMetrics</li>
<li>像普罗米修斯这样的出口商</li>
<li>如何从InfluxDB-compatible代理（如Telegraf）发送数据</li>
<li>如何从Graphite-compatible代理（如StatsD）发送数据</li>
<li>石墨数据查询</li>
<li>如何从OpenTSDB-compatible代理发送数据</li>
<li>如何导入Prometheus exposition格式的数据</li>
<li>如何导入CSV数据</li>
<li>Prometheus查询API用法Prometheus查询API增强</li>
<li>Graphite Metrics API用法</li>
<li>如何从源代码构建开发构建生产构建ARM构建纯Go构建(CGO_ENABLED&#x3D;0）构建docker图像</li>
<li>从docker-compose开始</li>
<li>设置服务</li>
<li>如何使用快照</li>
<li>如何删除时间序列</li>
<li><a href="javascript:">Forced merge</a></li>
<li>如何导出时间序列</li>
<li>如何导入时间序列数据</li>
<li><a href="javascript:">Relabeling</a></li>
<li><a href="javascript:">Federation</a></li>
<li><a href="javascript:">Capacity planning</a></li>
<li><a href="javascript:">High availability</a></li>
<li><a href="javascript:">Deduplication</a></li>
<li><a href="javascript:">Retention</a></li>
<li><a href="javascript:">Multiple retentions</a></li>
<li><a href="javascript:">Downsampling</a></li>
<li><a href="javascript:">Multi-tenancy</a></li>
<li>可扩展性和群集版本</li>
<li><a href="javascript:">Alerting</a></li>
<li><a href="javascript:">Security</a></li>
<li><a href="javascript:">Tuning</a></li>
<li><a href="javascript:">Monitoring</a></li>
<li><a href="javascript:">Troubleshooting</a></li>
<li><a href="javascript:">Backfilling</a></li>
<li><a href="javascript:">Data updates</a></li>
<li><a href="javascript:">Replication</a></li>
<li><a href="javascript:">Backups</a></li>
<li><a href="javascript:">Profiling</a></li>
<li><a href="javascript:">Integrations</a></li>
<li><a href="javascript:">Third-party contributions</a></li>
<li><a href="javascript:">Contacts</a></li>
<li>社区与贡献</li>
<li><a href="javascript:">Reporting bugs</a></li>
<li>Victoria Metrics徽标使用指南字体使用调色板，敬请咨询</li>
</ul>
<h3 id="如何启动VictoriaMetrics"><a href="#如何启动VictoriaMetrics" class="headerlink" title="如何启动VictoriaMetrics"></a>如何启动VictoriaMetrics</h3><p>只需使用所需的command-line标志启动VictoriaMetrics可执行文件或docker映像。</p>
<p>以下command-line标志使用最多：</p>
<ul>
<li><code>-storageDataPath</code>-数据目录的路径。VictoriaMetrics将所有数据存储在该目录中。默认路径是当前工作目录中的<code>victoria-metrics-data</code>。</li>
<li><code>-retentionPeriod</code>-数据的保留期（以月为单位）。旧数据将自动删除。默认为1个月。</li>
</ul>
<p>其他标志有足够好的默认值，所以只有在您确实需要时才设置它们。默认情况下，VictoriaMetrics在端口<code>8428</code>上接受Prometheus查询API请求。</p>
<p>通过<code>-help</code>查看所有可用的带有说明和默认值的标志。</p>
<p>建议为VictoriaMetrics设置监控。</p>
<h4 id="Environment-variables"><a href="#Environment-variables" class="headerlink" title="Environment variables"></a>Environment variables</h4><p>通过以下规则，可以通过环境变量设置每个标志值：</p>
<ul>
<li>必须设置<code>-envflag.enable</code>标志</li>
<li>标志名中的每个<code>.</code>必须由<code>_</code>代替（例如<code>-insert.maxQueueDuration &lt;duration&gt;</code>将转换为<code>insert_maxQueueDuration=&lt;duration&gt;</code>）</li>
<li>对于重复标志，可以使用另一种语法，通过使用<code>,</code>作为分隔符将不同的值合并为一个值（例如<code>-storageNode &lt;nodeA&gt; -storageNode &lt;nodeB&gt;</code>将转换为<code>storageNode=&lt;nodeA&gt;,&lt;nodeB&gt;</code>）</li>
<li>可以使用<code>-envflag.prefix</code>为环境变量设置前缀。例如，如果<code>-envflag.prefix=VM_</code>，那么env vars必须以<code>VM_</code>开头</li>
</ul>
<h3 id="Prometheus-setup"><a href="#Prometheus-setup" class="headerlink" title="Prometheus setup"></a>Prometheus setup</h3><p>普罗米修斯必须配置remote_write才能将数据发送到维多利亚时代。在Prometheus配置文件中添加以下行（它通常位于<code>/etc/prometheus/prometheus.yml</code>）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remote_write:</span><br><span class="line">  - url: http://&lt;victoriametrics-addr&gt;:8428/api/v1/write</span><br></pre></td></tr></table></figure>

<p>将<code>&lt;victoriametrics-addr&gt;</code>替换为VictoriaMetrics的主机名或IP地址。然后通过以下命令应用新的配置：</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">kill</span> -HUP <span class="string">`pidof prometheus`</span></span><br></pre></td></tr></table></figure>

<p>普罗米修斯将传入的数据写入本地存储并并行复制到远程存储。这意味着即使远程存储不可用，数据仍在本地存储中可用<code>--storage.tsdb.retention.time</code>。</p>
<p>如果您计划从多个Prometheus实例向VictoriaMetrics发送数据，那么将以下行添加到Prometheus config的<code>global</code>部分：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  external_labels:</span><br><span class="line">    datacenter: dc-123</span><br></pre></td></tr></table></figure>

<p>这指示普罗米修斯在发送到远程存储器的每个时间序列上添加<code>datacenter=dc-123</code>标签。标签名可以是任意的<code>datacenter</code>只是一个例子。标签值在普罗米修斯实例中必须是唯一的，因此这些时间序列可以被这个标签过滤和分组。</p>
<p>对于高负载的普罗米修斯实例（每秒400k+个样本），可以应用以下调整：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">remote_write:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">http://&lt;victoriametrics-addr&gt;:8428/api/v1/write</span></span><br><span class="line">    <span class="attr">queue_config:</span></span><br><span class="line">      <span class="attr">max_samples_per_send:</span> <span class="number">10000</span></span><br><span class="line">      <span class="attr">capacity:</span> <span class="number">20000</span></span><br><span class="line">      <span class="attr">max_shards:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure>

<p>使用远程写操作可以使普罗米修斯的内存使用率增加25%，这取决于数据的形状。如果遇到内存消耗过高的问题，请尝试降低<code>max_samples_per_send</code>和<code>capacity</code>参数（请记住这两个参数是紧密相连的）。在这里阅读有关为普罗米修斯调谐远程写入的更多信息。</p>
<p>建议将普罗米修斯升级到v2.12.0或更新版本，因为以前的版本可能与<code>remote_write</code>有关。</p>
<p>再看看vmagent，在某些情况下，它可以作为Prometheus更快、更少的resource-hungry替代品。</p>
<h3 id="Grafana-setup"><a href="#Grafana-setup" class="headerlink" title="Grafana setup"></a>Grafana setup</h3><p>使用以下Url在Grafana中创建普罗米修斯数据源：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://&lt;victoriametrics-addr&gt;:8428</span><br></pre></td></tr></table></figure>

<p>将<code>&lt;victoriametrics-addr&gt;</code>替换为VictoriaMetrics的主机名或IP地址。</p>
<p>然后使用Prometheus查询语言用创建的数据源构建图形。VictoriaMetrics支持原生PromQL，并使用有用的特性对其进行了扩展。</p>
<h3 id="如何升级VictoriaMetrics"><a href="#如何升级VictoriaMetrics" class="headerlink" title="如何升级VictoriaMetrics"></a>如何升级VictoriaMetrics</h3><p>除非发行说明中另有说明，否则将VictoriaMetrics升级到新版本是安全的。除非发行说明中另有说明，否则在升级过程中跳过多个版本是安全的。建议定期升级到最新版本，因为它可能包含重要的错误修复、性能优化或新功能。</p>
<p>它也可以安全地降级到以前的版本，除非发行说明中另有说明。</p>
<p>升级&#x2F;降级期间必须执行以下步骤：</p>
<ol>
<li>向VictoriaMetrics进程发送<code>SIGINT</code>信号，以便优雅地停止它。</li>
<li>等待进程停止。这可能需要几秒钟。</li>
<li>启动升级的VictoriaMetrics。</li>
</ol>
<p>在VictoriaMetrics重启期间，普罗米修斯不会删除数据。有关详细信息，请参阅本文。</p>
<h3 id="如何将新配置应用到VictoriaMetrics"><a href="#如何将新配置应用到VictoriaMetrics" class="headerlink" title="如何将新配置应用到VictoriaMetrics"></a>如何将新配置应用到VictoriaMetrics</h3><p>必须重新启动VictoriaMetrics才能应用新配置：</p>
<ol>
<li>向VictoriaMetrics进程发送<code>SIGINT</code>信号，以便优雅地停止它。</li>
<li>等待进程停止。这可能需要几秒钟。</li>
<li>使用新配置启动VictoriaMetrics。</li>
</ol>
<p>在VictoriaMetrics重启期间，普罗米修斯不会删除数据。有关详细信息，请参阅本文。</p>
<h3 id="如何讨价还价普罗米修斯出口商，如node-exporter"><a href="#如何讨价还价普罗米修斯出口商，如node-exporter" class="headerlink" title="如何讨价还价普罗米修斯出口商，如node-exporter"></a>如何讨价还价普罗米修斯出口商，如node-exporter</h3><p>根据规范，VictoriaMetrics可以作为drop-in替代普罗米修斯，用于抓取<code>prometheus.yml</code>配置文件中配置的目标。只需将<code>-promscrape.config</code>command-line标志设置为<code>prometheus.yml</code>配置的路径，VictoriaMetrics应该开始抓取配置的目标。目前支持以下scrape_config类型：</p>
<ul>
<li><a href="javascript:">static_config</a></li>
<li><a href="javascript:">file_sd_config</a></li>
<li><a href="javascript:">kubernetes_sd_config</a></li>
<li><a href="javascript:">ec2_sd_config</a></li>
<li><a href="javascript:">gce_sd_config</a></li>
<li><a href="javascript:">consul_sd_config</a></li>
<li><a href="javascript:">dns_sd_config</a></li>
</ul>
<p>将来将支持其他<code>*_sd_config</code>类型。</p>
<p><code>-promscrape.config</code>指向的文件可能包含<code>%&#123;ENV_VAR&#125;</code>占位符，这些占位符由相应的<code>ENV_VAR</code>环境变量值替换。</p>
<p>维多利亚时代还支持导入普罗米修斯博览会格式的数据。</p>
<p>另请参阅vmagent，它可以作为drop-in替代普罗米修斯。</p>
<h3 id="如何从InfluxDB-compatible代理（如Telegraf）发送数据"><a href="#如何从InfluxDB-compatible代理（如Telegraf）发送数据" class="headerlink" title="如何从InfluxDB-compatible代理（如Telegraf）发送数据"></a>如何从InfluxDB-compatible代理（如Telegraf）发送数据</h3><p>只需在代理的配置中使用<code>http://&lt;victoriametric-addr&gt;:8428</code>url而不是InfluxDB url。例如，将以下行放入<code>Telegraf</code>config中，这样它将数据发送到VictoriaMetrics而不是InfluxDB：</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="string">[[outputs.influxdb]]</span></span><br><span class="line">  urls = [<span class="string">&quot;http://&lt;victoriametrics-addr&gt;:8428&quot;</span>]</span><br></pre></td></tr></table></figure>

<p>别忘了用运行VictoriaMetrics的实际地址替换<code>&lt;victoriametrics-addr&gt;</code>。</p>
<p>另一个选项是通过<code>-influxListenAddr</code>command-line标志为流入线协议启用TCP和UDP接收器，并将普通流入线协议数据流传输到配置的TCP和&#x2F;或UDP地址。</p>
<p>VictoriaMetrics使用以下规则绘制流入数据：</p>
<ul>
<li><code>db</code>查询参数映射到<code>db</code>标签值，除非流入行中存在<code>db</code>标记。</li>
<li>字段名映射到以<code>&#123;measurement&#125;&#123;separator&#125;</code>值为前缀的时间序列名称，其中<code>&#123;separator&#125;</code>默认等于<code>_</code>。它可以用<code>-influxMeasurementFieldSeparator</code>command-line标志进行更改。另请参见<code>-influxSkipSingleField</code>command-line标志。如果<code>&#123;measurement&#125;</code>为空或设置了<code>-influxSkipMeasurement</code>command-line标志，则时间序列名称与字段名称相对应。</li>
<li>字段值映射到时间序列值。</li>
<li>标签被映射到普罗米修斯标签as-is。</li>
</ul>
<p>例如，以下流入管线：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foo,tag1=value1,tag2=value2 field1=12,field2=40</span><br></pre></td></tr></table></figure>

<p>转换为以下普罗米修斯数据点：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foo_field1&#123;tag1=&quot;value1&quot;, tag2=&quot;value2&quot;&#125; 12</span><br><span class="line">foo_field2&#123;tag1=&quot;value1&quot;, tag2=&quot;value2&quot;&#125; 40</span><br></pre></td></tr></table></figure>

<p>使用<code>curl</code>将带有流入线协议的数据写入本地VictoriaMetrics的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -d &#x27;measurement,tag1=value1,tag2=value2 field1=123,field2=1.23&#x27; -X POST &#x27;http://localhost:8428/write&#x27;</span><br></pre></td></tr></table></figure>

<p>在单个请求中可以发送由’\n’（又名newline char）分隔的任意数量的行。之后，可以通过&#x2F;api&#x2F;v1&#x2F;export端点读取数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -G &#x27;http://localhost:8428/api/v1/export&#x27; -d &#x27;match=&#123;__name__=~&quot;measurement_.*&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p><code>/api/v1/export</code>终结点应返回以下响应：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;measurement_field1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag1&quot;</span><span class="punctuation">:</span><span class="string">&quot;value1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag2&quot;</span><span class="punctuation">:</span><span class="string">&quot;value2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">123</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1560272508147</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;measurement_field2&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag1&quot;</span><span class="punctuation">:</span><span class="string">&quot;value1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag2&quot;</span><span class="punctuation">:</span><span class="string">&quot;value2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1.23</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1560272508147</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>注意，默认情况下，流入线协议要求时间戳以纳秒为单位，而VictoriaMetrics则以毫秒精度存储时间戳。</p>
<h3 id="如何从Graphite-compatible代理（如StatsD）发送数据"><a href="#如何从Graphite-compatible代理（如StatsD）发送数据" class="headerlink" title="如何从Graphite-compatible代理（如StatsD）发送数据"></a>如何从Graphite-compatible代理（如StatsD）发送数据</h3><ol>
<li>通过设置<code>-graphiteListenAddr</code>命令行标志，在VictoriaMetrics中启用Graphite接收器。例如，下面的命令将在TCP和UDP端口<code>2003</code>上启用VictoriaMetrics中的Graphite receiver：</li>
</ol>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">/<span class="built_in">path</span>/to/victoria-metrics-prod -graphiteListenAddr=:<span class="number">2003</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>使用Graphite-compatible代理中配置的地址。例如，在<code>StatsD</code>configs中将<code>graphiteHost</code>设置为VictoriaMetrics主机。</li>
</ol>
<p>使用<code>nc</code>将Graphite明文协议的数据写入本地VictoriaMetrics的示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;foo.bar.baz;tag1=value1;tag2=value2 123 `date +%s`&quot;</span> | nc -N localhost 2003</span><br></pre></td></tr></table></figure>

<p>如果省略了时间戳，VictoriaMetrics将设置当前时间。可以一次性发送由<code>\n</code>（又名newline char）分隔的任意数量的行。之后，可以通过&#x2F;api&#x2F;v1&#x2F;export端点读取数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -G &#x27;http://localhost:8428/api/v1/export&#x27; -d &#x27;match=foo.bar.baz&#x27;</span><br></pre></td></tr></table></figure>

<p><code>/api/v1/export</code>终结点应返回以下响应：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;foo.bar.baz&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag1&quot;</span><span class="punctuation">:</span><span class="string">&quot;value1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag2&quot;</span><span class="punctuation">:</span><span class="string">&quot;value2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">123</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1560277406000</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="石墨数据查询"><a href="#石墨数据查询" class="headerlink" title="石墨数据查询"></a>石墨数据查询</h3><p>通过<code>Graphite plaintext protocol</code>发送到VictoriaMetrics的数据可以通过以下API读取：</p>
<ul>
<li>普罗米修斯查询API</li>
<li>度量名称可以通过Graphite metrics API进行探索</li>
<li><a href="javascript:">go-graphite&#x2F;carbonapi</a></li>
</ul>
<h3 id="如何从OpenTSDB-compatible代理发送数据"><a href="#如何从OpenTSDB-compatible代理发送数据" class="headerlink" title="如何从OpenTSDB-compatible代理发送数据"></a>如何从OpenTSDB-compatible代理发送数据</h3><p>VictoriaMetrics支持telnet put协议和HTTP&#x2F;api&#x2F;put请求来接收OpenTSDB数据。在KairosDB中摄取数据也使用相同的协议。</p>
<h4 id="通过telnet-put协议发送数据"><a href="#通过telnet-put协议发送数据" class="headerlink" title="通过telnet put协议发送数据"></a>通过<code>telnet put</code>协议发送数据</h4><ol>
<li>通过设置<code>-opentsdbListenAddr</code>命令行标志，在VictoriaMetrics中启用OpenTSDB receiver。例如，下面的命令在TCP和UDP端口<code>4242</code>上启用VictoriaMetrics中的OpenTSDB receiver：</li>
</ol>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">/<span class="built_in">path</span>/to/victoria-metrics-prod -opentsdbListenAddr=:<span class="number">4242</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将数据从OpenTSDB-compatible代理发送到给定地址。</li>
</ol>
<p>使用<code>nc</code>将OpenTSDB协议的数据写入本地VictoriaMetrics的示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;put foo.bar.baz `date +%s` 123 tag1=value1 tag2=value2&quot;</span> | nc -N localhost 4242</span><br></pre></td></tr></table></figure>

<p>可以一次性发送由<code>\n</code>（又名newline char）分隔的任意数量的行。之后，可以通过&#x2F;api&#x2F;v1&#x2F;export端点读取数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -G &#x27;http://localhost:8428/api/v1/export&#x27; -d &#x27;match=foo.bar.baz&#x27;</span><br></pre></td></tr></table></figure>

<p><code>/api/v1/export</code>终结点应返回以下响应：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;foo.bar.baz&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag1&quot;</span><span class="punctuation">:</span><span class="string">&quot;value1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;tag2&quot;</span><span class="punctuation">:</span><span class="string">&quot;value2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">123</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1560277292000</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h4 id="通过HTTP-api-put请求发送OpenTSDB数据"><a href="#通过HTTP-api-put请求发送OpenTSDB数据" class="headerlink" title="通过HTTP/api/put请求发送OpenTSDB数据"></a>通过HTTP<code>/api/put</code>请求发送OpenTSDB数据</h4><ol>
<li>通过设置<code>-opentsdbHTTPListenAddr</code>命令行标志，为OpenTSDB<code>/api/put</code>请求启用HTTP服务器。例如，下面的命令在端口<code>4242</code>上启用OpenTSDB HTTP服务器：</li>
</ol>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">/<span class="built_in">path</span>/to/victoria-metrics-prod -opentsdbHTTPListenAddr=:<span class="number">4242</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>将数据从OpenTSDB-compatible代理发送到给定地址。</li>
</ol>
<p>写入单个数据点的示例：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">curl -H <span class="symbol">&#x27;Content</span>-Type: application/json&#x27; -d &#x27;&#123;<span class="string">&quot;metric&quot;</span>:<span class="string">&quot;x.y.z&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="number">45.34</span>,<span class="string">&quot;tags&quot;</span>:&#123;<span class="string">&quot;t1&quot;</span>:<span class="string">&quot;v1&quot;</span>,<span class="string">&quot;t2&quot;</span>:<span class="string">&quot;v2&quot;</span>&#125;&#125;&#x27; http:<span class="comment">//localhost:4242/api/put</span></span><br></pre></td></tr></table></figure>

<p>在单个请求中写入多个数据点的示例：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">curl -H <span class="symbol">&#x27;Content</span>-Type: application/json&#x27; -d &#x27;[&#123;<span class="string">&quot;metric&quot;</span>:<span class="string">&quot;foo&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="number">45.34</span>&#125;,&#123;<span class="string">&quot;metric&quot;</span>:<span class="string">&quot;bar&quot;</span>,<span class="string">&quot;value&quot;</span>:<span class="number">43</span>&#125;]&#x27; http:<span class="comment">//localhost:4242/api/put</span></span><br></pre></td></tr></table></figure>

<p>之后，可以通过&#x2F;api&#x2F;v1&#x2F;export端点读取数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -G &#x27;http://localhost:8428/api/v1/export&#x27; -d &#x27;match[]=x.y.z&#x27; -d &#x27;match[]=foo&#x27; -d &#x27;match[]=bar&#x27;</span><br></pre></td></tr></table></figure>

<p><code>/api/v1/export</code>端点应返回以下响应：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;foo&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">45.34</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1566464846000</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;bar&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">43</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1566464846000</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;x.y.z&quot;</span><span class="punctuation">,</span><span class="attr">&quot;t1&quot;</span><span class="punctuation">:</span><span class="string">&quot;v1&quot;</span><span class="punctuation">,</span><span class="attr">&quot;t2&quot;</span><span class="punctuation">:</span><span class="string">&quot;v2&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">45.34</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1566464763000</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="如何导入CSV数据"><a href="#如何导入CSV数据" class="headerlink" title="如何导入CSV数据"></a>如何导入CSV数据</h3><p>可以通过<code>/api/v1/import/csv</code>导入任意CSV数据。CSV数据根据提供的<code>format</code>查询参数导入。<code>format</code>查询参数必须包含comma-separatedCSV字段的解析规则列表。每个规则由冒号分隔的三个部分组成：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">&lt;column_pos&gt;<span class="symbol">:&lt;type&gt;</span><span class="symbol">:&lt;context&gt;</span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>&lt;column_pos&gt;</code>是CSV列（字段）的位置。列编号从1开始。解析规则的顺序可以是任意的。</li>
<li><code>&lt;type&gt;</code>描述列类型。支持的类型有：<code>metric</code>-<code>&lt;column_pos&gt;</code>处对应的CSV列包含度量值，该值必须是整数或floating-point数字。度量名称从<code>&lt;context&gt;</code>读取。CSV行必须至少有一个度量字段。每个CSV行有多个度量字段是可以的。<code>label</code>-<code>&lt;column_pos&gt;</code>对应的CSV列包含标签值。标签名称从<code>&lt;context&gt;</code>读取。CSV行可以有任意数量的标签字段。所有这些标签都附加到所有配置的度量上。<code>time</code>-<code>&lt;column_pos&gt;</code>处对应的CSV列包含度量时间。CSV行可以包含一列或零列。如果CSV行没有时间，则使用当前时间。时间将应用于所有配置的度量。时间的格式是通过<code>&lt;context&gt;</code>配置的。支持的时间格式是：<code>unix_s</code>-unix时间戳（秒）。<code>unix_ms</code>-unix时间戳（毫秒）。<code>unix_ns</code>-unix时间戳（以纳秒为单位）。请注意，VictoriaMetrics将时间戳舍入为毫秒。<code>rfc3339</code>-RFC3339格式的时间戳，即<code>2006-01-02T15:04:05Z</code>。<code>custom:&lt;layout&gt;</code>-时间戳的自定义布局。根据Go中的time.Parse规则，<code>&lt;layout&gt;</code>可以包含任意时间布局。</li>
</ul>
<p>对<code>/api/v1/import/csv</code>的每个请求可以包含任意数量的CSV行。</p>
<p>通过<code>/api/v1/import/csv</code>导入CSV数据的示例：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">curl -d <span class="string">&quot;GOOG,1.23,4.56,NYSE&quot;</span> <span class="symbol">&#x27;http</span>:<span class="comment">//localhost:8428/api/v1/import/csv?format=2:metric:ask,3:metric:bid,1:label:ticker,4:label:market&#x27;</span></span><br><span class="line">curl -d <span class="string">&quot;MSFT,3.21,1.67,NASDAQ&quot;</span> <span class="symbol">&#x27;http</span>:<span class="comment">//localhost:8428/api/v1/import/csv?format=2:metric:ask,3:metric:bid,1:label:ticker,4:label:market&#x27;</span></span><br></pre></td></tr></table></figure>

<p>之后，可以通过&#x2F;api&#x2F;v1&#x2F;export端点读取数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -G &#x27;http://localhost:8428/api/v1/export&#x27; -d &#x27;match[]=&#123;ticker!=&quot;&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>应返回以下响应：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;bid&quot;</span><span class="punctuation">,</span><span class="attr">&quot;market&quot;</span><span class="punctuation">:</span><span class="string">&quot;NASDAQ&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ticker&quot;</span><span class="punctuation">:</span><span class="string">&quot;MSFT&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1.67</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1583865146520</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;bid&quot;</span><span class="punctuation">,</span><span class="attr">&quot;market&quot;</span><span class="punctuation">:</span><span class="string">&quot;NYSE&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ticker&quot;</span><span class="punctuation">:</span><span class="string">&quot;GOOG&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">4.56</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1583865146495</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;ask&quot;</span><span class="punctuation">,</span><span class="attr">&quot;market&quot;</span><span class="punctuation">:</span><span class="string">&quot;NASDAQ&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ticker&quot;</span><span class="punctuation">:</span><span class="string">&quot;MSFT&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">3.21</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1583865146520</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;ask&quot;</span><span class="punctuation">,</span><span class="attr">&quot;market&quot;</span><span class="punctuation">:</span><span class="string">&quot;NYSE&quot;</span><span class="punctuation">,</span><span class="attr">&quot;ticker&quot;</span><span class="punctuation">:</span><span class="string">&quot;GOOG&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1.23</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1583865146495</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>通过传递<code>extra_label=name=value</code>查询参数，可以将额外的标签添加到所有导入的行中。例如，<code>/api/v1/import/csv?extra_label=foo=bar</code>将向所有导入的行添加<code>&quot;foo&quot;:&quot;bar&quot;</code>标签。</p>
<p>请注意，导入历史数据后可能需要刷新响应缓存。有关详细信息，请参阅这些文档。</p>
<h3 id="如何导入Prometheus-exposition格式的数据"><a href="#如何导入Prometheus-exposition格式的数据" class="headerlink" title="如何导入Prometheus exposition格式的数据"></a>如何导入Prometheus exposition格式的数据</h3><p>VictoriaMetrics通过<code>/api/v1/import/prometheus</code>路径接受普罗米修斯博览会格式的数据。例如，以下行将一行普罗米修斯博览会格式的单行导入到VictoriaMetrics中：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line">curl -d <span class="symbol">&#x27;foo</span>&#123;bar=<span class="string">&quot;baz&quot;</span>&#125; <span class="number">123</span>&#x27; -X POST <span class="symbol">&#x27;http</span>:<span class="comment">//localhost:8428/api/v1/import/prometheus&#x27;</span></span><br></pre></td></tr></table></figure>

<p>以下命令可用于验证导入的数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -G &#x27;http://localhost:8428/api/v1/export&#x27; -d &#x27;match=&#123;__name__=~&quot;foo&quot;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p>它应该返回如下内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;foo&quot;</span><span class="punctuation">,</span><span class="attr">&quot;bar&quot;</span><span class="punctuation">:</span><span class="string">&quot;baz&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">123</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1594370496905</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>通过传递<code>extra_label=name=value</code>查询参数，可以将额外的标签添加到所有导入的度量中。例如，<code>/api/v1/import/prometheus?extra_label=foo=bar</code>会将<code>&#123;foo=&quot;bar&quot;&#125;</code>标签添加到所有导入的度量中。</p>
<p>如果<code>&lt;metric&gt; &lt;value&gt; &lt;timestamp&gt;</code>Prometheus exposition格式行中缺少时间戳，则在数据摄取过程中使用当前时间戳。可以通过<code>timestamp</code>查询参数以毫秒为单位传递unix时间戳来覆盖它。例如，<code>/api/v1/import/prometheus?timestamp=1594370496905</code>。</p>
<p>VictoriaMetrics在对<code>/api/v1/import/prometheus</code>的单个请求中接受任意数量的行，即支持数据流。</p>
<p>维多利亚时代也可能会刮伤普罗米修斯的目标-见这些文件。</p>
<h3 id="Prometheus查询API使用情况"><a href="#Prometheus查询API使用情况" class="headerlink" title="Prometheus查询API使用情况"></a>Prometheus查询API使用情况</h3><p>VictoriaMetrics支持Prometheus查询API中的以下处理程序：</p>
<ul>
<li><a href="javascript:">&#x2F;api&#x2F;v1&#x2F;query</a></li>
<li><a href="javascript:">&#x2F;api&#x2F;v1&#x2F;query_range</a></li>
<li><a href="javascript:">&#x2F;api&#x2F;v1&#x2F;series</a></li>
<li><a href="javascript:">&#x2F;api&#x2F;v1&#x2F;labels</a></li>
<li><a href="javascript:">&#x2F;api&#x2F;v1&#x2F;label&#x2F;…&#x2F;values</a></li>
<li><a href="javascript:">&#x2F;api&#x2F;v1&#x2F;status&#x2F;tsdb</a></li>
</ul>
<p>这些处理程序可以从Prometheus-compatible客户机（如Grafana或curl）查询。</p>
<h4 id="Prometheus查询API增强"><a href="#Prometheus查询API增强" class="headerlink" title="Prometheus查询API增强"></a>Prometheus查询API增强</h4><p>除了unix时间戳和rfc339victorametrics还接受<code>time</code>、<code>start</code>和<code>end</code>查询参数中的相对时间。例如，下面的查询将返回最近30分钟的数据：<code>/api/v1/query_range?start=-30m&amp;query=...</code>。</p>
<p>默认情况下，VictoriaMetrics从&#x2F;api&#x2F;v1&#x2F;series返回最近5分钟的时间序列，而Prometheus api默认为all time。使用<code>start</code>和<code>end</code>选择不同的时间范围。</p>
<p>VictoriaMetrics接受<code>/api/v1/labels</code>和<code>/api/v1/label/.../values</code>处理程序的附加参数。有关详细信息，请参阅此功能请求：</p>
<ul>
<li>任何数量的时间序列选择器通过<code>match[]</code>查询参数。</li>
<li>可选的<code>start</code>和<code>end</code>查询参数，用于限制选定标签或标签值的时间范围。</li>
</ul>
<p>此外，VictoriaMetrics还提供以下处理程序：</p>
<ul>
<li><code>/api/v1/series/count</code>-它返回数据库中时间序列的总数。注意事项：处理程序会扫描所有的倒排索引，因此如果数据库中包含数千万个时间序列，则速度会很慢；由于内部实现限制，处理程序可能会将删除的时间序列计数到正常时间序列之外；</li>
<li><code>/api/v1/labels/count</code>-返回<code>label: values_count</code>条目的列表。它可用于确定具有最大值数的标签。</li>
<li><code>/api/v1/status/active_queries</code>-它返回当前正在运行的查询的列表。</li>
</ul>
<h3 id="Graphite-Metrics-API用法"><a href="#Graphite-Metrics-API用法" class="headerlink" title="Graphite Metrics API用法"></a>Graphite Metrics API用法</h3><p>VictoriaMetrics支持Graphite Metrics API中的以下处理程序：</p>
<ul>
<li><a href="javascript:">&#x2F;metrics&#x2F;find</a></li>
<li><a href="javascript:">&#x2F;metrics&#x2F;expand</a></li>
<li><a href="javascript:">&#x2F;metrics&#x2F;index.json</a></li>
</ul>
<p>VictoriaMetrics在<code>/metrics/find</code>和<code>/metrics/expand</code>接受以下附加查询参数：</p>
<ul>
<li><code>label</code>-用于选择任意标签值。默认情况下<code>label=__name__</code>，即选择度量名称。</li>
<li><code>delimiter</code>-用于在度量名称层次结构中使用不同的分隔符。例如，<code>/metrics/find?delimiter=_&amp;query=node_*</code>将返回所有以<code>node_</code>开头的度量名称前缀。默认情况下<code>delimiter=.</code>。</li>
</ul>
<h3 id="如何从源代码构建"><a href="#如何从源代码构建" class="headerlink" title="如何从源代码构建"></a>如何从源代码构建</h3><p>我们建议使用二进制版本或docker映像，而不是从源代码构建VictoriaMetrics。当开发特定于您需要的附加特性或测试错误修复时，从源代码构建是合理的。</p>
<h4 id="Development-build"><a href="#Development-build" class="headerlink" title="Development build"></a>Development build</h4><ol>
<li>安装Go。支持的最低版本是Go 1.13。</li>
<li>从存储库的根文件夹运行<code>make victoria-metrics</code>。它构建<code>victoria-metrics</code>二进制文件并将其放入<code>bin</code>文件夹中。</li>
</ol>
<h4 id="Production-build"><a href="#Production-build" class="headerlink" title="Production build"></a>Production build</h4><ol>
<li><a href="javascript:">Install docker</a>.</li>
<li>从存储库的根文件夹运行<code>make victoria-metrics-prod</code>。它构建<code>victoria-metrics-prod</code>二进制文件并将其放入<code>bin</code>文件夹中。</li>
</ol>
<h4 id="ARM-build"><a href="#ARM-build" class="headerlink" title="ARM build"></a>ARM build</h4><p>ARM构建可以在Raspberry Pi或energy-efficientARM服务器上运行。</p>
<h4 id="开发臂构建"><a href="#开发臂构建" class="headerlink" title="开发臂构建"></a>开发臂构建</h4><ol>
<li>安装Go。支持的最低版本是Go 1.13。</li>
<li>从存储库的根文件夹运行<code>make victoria-metrics-arm</code>或<code>make victoria-metrics-arm64</code>。它分别构建<code>victoria-metrics-arm</code>或<code>victoria-metrics-arm64</code>二进制文件，并将其放入<code>bin</code>文件夹中。</li>
</ol>
<h4 id="生产臂构建"><a href="#生产臂构建" class="headerlink" title="生产臂构建"></a>生产臂构建</h4><ol>
<li><a href="javascript:">Install docker</a>.</li>
<li>从存储库的根文件夹运行<code>make victoria-metrics-arm-prod</code>或<code>make victoria-metrics-arm64-prod</code>。它分别构建<code>victoria-metrics-arm-prod</code>或<code>victoria-metrics-arm64-prod</code>二进制文件，并将其放入<code>bin</code>文件夹中。</li>
</ol>
<h4 id="纯Go构建-CGO-ENABLED-0）"><a href="#纯Go构建-CGO-ENABLED-0）" class="headerlink" title="纯Go构建(CGO_ENABLED&#x3D;0）"></a>纯Go构建(CGO_ENABLED&#x3D;0）</h4><p><code>Pure Go</code>模式只生成没有cgo依赖项的Go代码。这是一种实验模式，可能会导致较低的压缩比和较慢的解压缩性能。小心使用！</p>
<ol>
<li>安装Go。支持的最低版本是Go 1.13。</li>
<li>从存储库的根文件夹运行<code>make victoria-metrics-pure</code>。它构建<code>victoria-metrics-pure</code>二进制文件并将其放入<code>bin</code>文件夹中。</li>
</ol>
<h4 id="建筑docker图像"><a href="#建筑docker图像" class="headerlink" title="建筑docker图像"></a>建筑docker图像</h4><p>运行<code>make package-victoria-metrics</code>。它在本地构建<code>victoriametrics/victoria-metrics:&lt;PKG_TAG&gt;</code>docker映像。<code>&lt;PKG_TAG&gt;</code>是auto-generated图像标记，它取决于存储库中的源代码。<code>&lt;PKG_TAG&gt;</code>可以通过<code>PKG_TAG=foobar make package-victoria-metrics</code>手动设置。</p>
<p>默认情况下，图像构建在alpine图像之上，以提高可调试性。通过<code>&lt;ROOT_IMAGE&gt;</code>环境变量设置，可以在任何其他基本映像之上构建包。例如，以下命令在草稿图像上生成图像：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line">ROOT_IMAGE=scratch <span class="built_in">make</span> <span class="keyword">package</span>-victoria-metrics</span><br></pre></td></tr></table></figure>

<h3 id="从docker-compose开始"><a href="#从docker-compose开始" class="headerlink" title="从docker-compose开始"></a>从docker-compose开始</h3><p>Docker-compose用一个命令帮助启动VictoriaMetrics、vmagent和Grafana。更多的细节可以在这里找到。</p>
<h3 id="设置服务"><a href="#设置服务" class="headerlink" title="设置服务"></a>设置服务</h3><p>请阅读以下说明，了解如何在操作系统中将VictoriaMetrics设置为服务。</p>
<h3 id="如何使用快照"><a href="#如何使用快照" class="headerlink" title="如何使用快照"></a>如何使用快照</h3><p>VictoriaMetrics可以为存储在<code>-storageDataPath</code>目录下的所有数据创建即时快照。导航到<code>http://&lt;victoriametrics-addr&gt;:8428/snapshot/create</code>以创建即时快照。页面将返回以下JSON响应：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;status&quot;</span><span class="punctuation">:</span><span class="string">&quot;ok&quot;</span><span class="punctuation">,</span><span class="attr">&quot;snapshot&quot;</span><span class="punctuation">:</span><span class="string">&quot;&lt;snapshot-name&gt;&quot;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>快照是在<code>&lt;-storageDataPath&gt;/snapshots</code>目录下创建的，其中<code>&lt;-storageDataPath&gt;</code>是command-line标志值。使用vmbackup可以随时将快照归档到备份存储。</p>
<p><code>http://&lt;victoriametrics-addr&gt;:8428/snapshot/list</code>页面包含可用快照的列表。</p>
<p>导航到<code>http://&lt;victoriametrics-addr&gt;:8428/snapshot/delete?snapshot=&lt;snapshot-name&gt;</code>以删除<code>&lt;snapshot-name&gt;</code>快照。</p>
<p>导航到<code>http://&lt;victoriametrics-addr&gt;:8428/snapshot/delete_all</code>以删除所有快照。</p>
<p>从快照恢复的步骤：</p>
<ol>
<li>用<code>kill -INT</code>停止维多利亚时代。</li>
<li>使用vmrestore将快照内容从备份还原到<code>-storageDataPath</code>指向的目录。</li>
<li>Start VictoriaMetrics.</li>
</ol>
<h3 id="如何删除时间序列"><a href="#如何删除时间序列" class="headerlink" title="如何删除时间序列"></a>如何删除时间序列</h3><p>向<code>http://&lt;victoriametrics-addr&gt;:8428/api/v1/admin/tsdb/delete_series?match[]=&lt;timeseries_selector_for_delete&gt;</code>发送请求，其中<code>&lt;timeseries_selector_for_delete&gt;</code>可以包含任何要删除的度量的时间序列选择器。之后，所有与给定选择器匹配的时间序列都将被删除。删除的时间序列的存储空间不是立即释放的，而是在随后的数据文件后台合并过程中释放的。请注意，前几个月的数据可能永远不会进行后台合并，因此不会为历史数据释放存储空间。在这种情况下，强制合并可能有助于释放存储空间。</p>
<p>建议在实际删除度量之前，通过调用<code>http://&lt;victoria-metrics-addr&gt;:8428/api/v1/series?match[]=&lt;timeseries_selector_for_delete&gt;</code>验证哪些度量将被删除。默认情况下，此查询只扫描过去5分钟内的活动序列，因此您可能需要将<code>start</code>和<code>end</code>调整到合适的范围，以实现匹配命中。</p>
<p>如果设置了<code>-deleteAuthKey</code>command-line标志，<code>/api/v1/admin/tsdb/delete_series</code>处理程序可能受到<code>authKey</code>的保护。</p>
<p>delete API主要用于以下情况：</p>
<ul>
<li>One-off删除意外写入的无效（或不需要的）时间序列。</li>
<li>One-off由于GDPR而删除用户数据。</li>
</ul>
<p>对于以下情况，不建议使用delete API，因为它会带来non-zero开销：</p>
<ul>
<li>定期清理不需要的数据。只需防止将不需要的数据写入VictoriaMetrics即可。这可以通过重新标记来完成。有关详细信息，请参阅本文。</li>
<li>通过删除不需要的时间序列来减少磁盘空间的使用。这并不像预期的那样工作，因为删除的时间序列会占用磁盘空间，直到下一次合并操作，删除太旧的数据时永远不会发生这种情况。强制合并可用于释放旧数据占用的磁盘空间。</li>
</ul>
<p>最好使用<code>-retentionPeriod</code>command-line标志来高效地修剪旧数据。</p>
<h3 id="Forced-merge"><a href="#Forced-merge" class="headerlink" title="Forced merge"></a>Forced merge</h3><p>VictoriaMetrics在后台执行数据兼容，以便在接受新数据时保持良好的性能特性。这些压缩（合并）是在per-month分区上独立执行的。这意味着，如果没有新数据被摄取到per-month分区中，那么压缩将停止。有时有必要触发旧分区的压缩。例如，为了释放被删除的时间序列占用的磁盘空间。在这种情况下，通过向<code>/internal/force_merge?partition_prefix=YYYY_MM</code>发送请求，可以在指定的per-month分区上启动强制压缩，其中<code>YYYY_MM</code>是per-month分区名。例如，<code>http://victoriametrics:8428/internal/force_merge?partition_prefix=2020_08</code>将为2020年8月的分区启动强制合并。对<code>/internal/force_merge</code>的调用立即返回，而相应的强制合并将继续在后台运行。</p>
<p>强制合并可能需要额外的CPU、磁盘IO和存储空间资源。在正常情况下不必运行强制合并，因为当新数据被摄取到其中时，VictoriaMetrics会自动在后台执行最佳合并。</p>
<h3 id="如何导出时间序列"><a href="#如何导出时间序列" class="headerlink" title="如何导出时间序列"></a>如何导出时间序列</h3><p>向<code>http://&lt;victoriametrics-addr&gt;:8428/api/v1/export?match[]=&lt;timeseries_selector_for_export&gt;</code>发送一个请求，其中<code>&lt;timeseries_selector_for_export&gt;</code>可以包含要导出的度量的任何时间序列选择器。使用<code>&#123;__name__!=&quot;&quot;&#125;</code>选择器获取所有时间序列。响应将以JSON流格式包含所选时间序列的所有数据。每个JSON行将包含单个时间序列的数据。输出示例：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;up&quot;</span><span class="punctuation">,</span><span class="attr">&quot;job&quot;</span><span class="punctuation">:</span><span class="string">&quot;node_exporter&quot;</span><span class="punctuation">,</span><span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span><span class="string">&quot;localhost:9100&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">0</span><span class="punctuation">,</span><span class="number">0</span><span class="punctuation">,</span><span class="number">0</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1549891472010</span><span class="punctuation">,</span><span class="number">1549891487724</span><span class="punctuation">,</span><span class="number">1549891503438</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span><span class="string">&quot;up&quot;</span><span class="punctuation">,</span><span class="attr">&quot;job&quot;</span><span class="punctuation">:</span><span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span><span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span><span class="string">&quot;localhost:9090&quot;</span><span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;values&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">,</span><span class="number">1</span><span class="punctuation">]</span><span class="punctuation">,</span><span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span><span class="punctuation">[</span><span class="number">1549891461511</span><span class="punctuation">,</span><span class="number">1549891476511</span><span class="punctuation">,</span><span class="number">1549891491511</span><span class="punctuation">]</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>可选的<code>start</code>和<code>end</code>参数可以添加到请求中，以限制导出数据的时间范围。这些参数可以包含以秒为单位的unix时间戳或rfc339值。</p>
<p>可选的<code>max_rows_per_line</code>参数可以添加到请求中，以限制每个JSON行导出的最大行数。默认情况下，每个JSON行包含单个时间序列的所有行。</p>
<p>将请求中的<code>Accept-Encoding: gzip</code>HTTP头传递给<code>/api/v1/export</code>，以便在展开大量时间序列数据时减少网络带宽。这将为导出的数据启用gzip压缩。导出gzip压缩数据的示例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -H &#x27;Accept-Encoding: gzip&#x27; http://localhost:8428/api/v1/export -d &#x27;match[]=&#123;__name__!=&quot;&quot;&#125;&#x27; &gt; data.jsonl.gz</span><br></pre></td></tr></table></figure>

<p>对<code>/api/v1/export</code>的每个请求的最大持续时间受<code>-search.maxExportDuration</code>command-line标志的限制。</p>
<p>导出的数据可以通过POST’ing到&#x2F;api&#x2F;v1&#x2F;import导入。</p>
<h3 id="如何导入时间序列数据"><a href="#如何导入时间序列数据" class="headerlink" title="如何导入时间序列数据"></a>如何导入时间序列数据</h3><p>时间序列数据可以通过任何支持的摄取协议导入：</p>
<ul>
<li>普罗米修斯remote_writeAPI</li>
<li>流入线协议</li>
<li>石墨明文协议</li>
<li>OpenTSDB telnet put协议</li>
<li>OpenTSDB http&#x2F;api&#x2F;put</li>
<li>{32接受来自http&#x2F;POST}的数据。</li>
<li><code>/api/v1/import/csv</code>httppost处理程序，它接受CSV数据。有关详细信息，请参阅这些文档。</li>
<li><code>/api/v1/import/prometheus</code>httppost处理程序，它接受Prometheus exposition格式的数据。有关详细信息，请参阅这些文档。</li>
</ul>
<p>将数据导入到VictoriaMetrics的最有效的协议是<code>/api/v1/import</code>。导入通过<code>/api/v1/export</code>获得的数据的示例：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Export the data from &lt;source-victoriametrics&gt;:</span></span><br><span class="line">curl <span class="symbol">http:</span>/<span class="regexp">/source-victoriametrics:8428/api</span><span class="regexp">/v1/export</span> -d <span class="string">&#x27;match=&#123;__name__!=&quot;&quot;&#125;&#x27;</span> &gt; exported_data.jsonl</span><br><span class="line"></span><br><span class="line"><span class="comment"># Import the data to &lt;destination-victoriametrics&gt;:</span></span><br><span class="line">curl -X <span class="variable constant_">POST</span> <span class="symbol">http:</span>/<span class="regexp">/destination-victoriametrics:8428/api</span><span class="regexp">/v1/import</span> -T exported_data.jsonl</span><br></pre></td></tr></table></figure>

<p>将<code>Content-Encoding: gzip</code>HTTP请求头传递给<code>/api/v1/import</code>，以导入gzip数据：</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Export gzipped data from &lt;source-victoriametrics&gt;:</span></span><br><span class="line">curl -H <span class="string">&#x27;Accept-Encoding: gzip&#x27;</span> <span class="symbol">http:</span>/<span class="regexp">/source-victoriametrics:8428/api</span><span class="regexp">/v1/export</span> -d <span class="string">&#x27;match=&#123;__name__!=&quot;&quot;&#125;&#x27;</span> &gt; exported_data.jsonl.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># Import gzipped data to &lt;destination-victoriametrics&gt;:</span></span><br><span class="line">curl -X <span class="variable constant_">POST</span> -H <span class="string">&#x27;Content-Encoding: gzip&#x27;</span> <span class="symbol">http:</span>/<span class="regexp">/destination-victoriametrics:8428/api</span><span class="regexp">/v1/import</span> -T exported_data.jsonl.gz</span><br></pre></td></tr></table></figure>

<p>通过传递<code>extra_label=name=value</code>查询参数，可以将额外的标签添加到所有导入的时间序列中。例如，<code>/api/v1/import?extra_label=foo=bar</code>会将<code>&quot;foo&quot;:&quot;bar&quot;</code>标签添加到所有导入的时间序列中。</p>
<p>请注意，导入历史数据后可能需要刷新响应缓存。有关详细信息，请参阅这些文档。</p>
<p>对<code>/api/v1/import</code>的每个请求最多可在VictoriaMetrics上加载一个vCPU内核。通过将原始文件拆分为较小的部分并同时导入，可以提高导入速度。请注意，原始文件必须在换行符上拆分。</p>
<h3 id="Relabeling"><a href="#Relabeling" class="headerlink" title="Relabeling"></a>Relabeling</h3><p>如果<code>-relabelConfig</code>command-line标志指向包含relabel_config条目的文件，则VictoriaMetrics支持对所有摄取的度量进行Prometheus-compatible重新标记。</p>
<p>VictoriaMetrics为重新标记规则提供了以下额外操作：</p>
<ul>
<li><code>replace_all</code>：将<code>source_labels</code>值中出现的<code>regex</code>替换为<code>replacement</code>，并将结果存储到<code>target_label</code>。</li>
<li><code>labelmap_all</code>：将所有标签名称中出现的<code>regex</code>替换为<code>replacement</code>。</li>
<li><code>keep_if_equal</code>：如果<code>source_labels</code>中的所有标签值都相等，则保留该条目。</li>
<li><code>drop_if_equal</code>：如果<code>source_labels</code>中的所有标签值都相等，则删除该条目。</li>
</ul>
<p>另请参见vmagent中的重新标记。</p>
<h3 id="Federation"><a href="#Federation" class="headerlink" title="Federation"></a>Federation</h3><p>VictoriaMetrics将Prometheus-compatible联邦数据导出到<code>http://&lt;victoriametrics-addr&gt;:8428/federate?match[]=&lt;timeseries_selector_for_federation&gt;</code>。</p>
<p>可选的<code>start</code>和<code>end</code>参数可以添加到请求中，以便在<code>[start ... end]</code>间隔上为每个选定的时间序列刮取最后一个点。<code>start</code>和<code>end</code>可能包含以秒为单位的unix时间戳或rfc339值。默认情况下，为每个时间序列刮取间隔<code>[now - max_lookback ... now]</code>上的最后一个点。<code>max_lookback</code>的默认值是<code>5m</code>（5分钟），但是可以重写它。例如，<code>/federate?match[]=up&amp;max_lookback=1h</code>将返回<code>[now - 1h ... now]</code>间隔上的最后一个点。这对于刮取间隔超过<code>5m</code>的时间序列联合可能很有用。</p>
<h3 id="Capacity-planning"><a href="#Capacity-planning" class="headerlink" title="Capacity planning"></a>Capacity planning</h3><p>对摄取路径所需资源的粗略估计：</p>
<ul>
<li>RAM大小：每个活动时间序列小于1KB。因此，1M活动时间序列需要~1GB的RAM。如果最近向时间序列添加了新的数据点，或者最近对其进行了查询，则将其视为活动的。活动时间序列的数量可以从在<code>/metrics</code>页面上导出的<code>vm_cache_entries&#123;type=&quot;storage/hour_metric_ids&quot;&#125;</code>度量中获得。VictoriaMetrics在RAM中存储各种缓存。这些缓存的内存大小可能会受到<code>-memory.allowedPercent</code>或<code>-memory.allowedBytes</code>标志的限制。</li>
<li>CPU核心：每秒每300K插入数据点一个CPU核心。因此，每秒处理1M数据点的插入流需要~4个CPU内核。对于高基数数据或具有大量标签的时间序列，摄取率可能较低。有关详细信息，请参阅本文。如果每个CPU核心的数量较低，则很可能活动时间序列信息不适合缓存，因此需要更多RAM来降低CPU使用率。</li>
<li>存储空间：平均每个数据点少于一个字节。因此，存储每秒100K个数据点的month-long插入流需要~260GB。实际的存储大小很大程度上取决于数据的随机性（熵）。更高的随机性意味着更高的存储大小要求。阅读本文了解详细信息。</li>
<li>网络使用：出站流量可以忽略不计。通过Prometheusremote_writeAPI，每个摄取数据点的入口流量约为100字节。标签的平均使用量取决于每个入口的平均标签大小和大小。更多的per-metric标签和更长的标签值意味着更高的入口带宽。</li>
</ul>
<p>查询路径所需的资源：</p>
<ul>
<li>RAM大小：取决于每个查询中要扫描的时间序列的数量以及传递给&#x2F;api&#x2F;v1&#x2F;query_range的<code>step</code>参数。扫描时间序列的数量越大，<code>step</code>参数越小，RAM使用率越高。</li>
<li>CPU核心：每秒3000万扫描数据点的CPU核心。这意味着，涉及大量时间序列（超过10K）和&#x2F;或大量数据点（超过100M）的重查询通常比那些涉及少量时间序列且数据点较少的小查询需要更多的CPU资源。</li>
<li>网络使用情况：取决于传入请求的频率和类型。典型的Grafana仪表板通常需要可忽略的网络带宽。</li>
</ul>
<h3 id="High-availability"><a href="#High-availability" class="headerlink" title="High availability"></a>High availability</h3><ol>
<li>在不同的数据中心（可用区域）安装多个VictoriaMetrics实例。</li>
<li>通过<code>-remoteWrite.url</code>command-line标志将这些实例的地址传递给vmagent：</li>
</ol>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">/path/to/vmagent -remoteWrite.url=<span class="symbol">http:</span>/<span class="regexp">/&lt;victoriametrics-addr-1&gt;:8428/api</span><span class="regexp">/v1/write</span> -remoteWrite.url=<span class="symbol">http:</span>/<span class="regexp">/&lt;victoriametrics-addr-2&gt;:8428/api</span><span class="regexp">/v1/write</span></span><br></pre></td></tr></table></figure>

<p>或者，可以将这些地址传递到Prometheus config中的<code>remote_write</code>部分：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remote_write:</span><br><span class="line">  - url: http://&lt;victoriametrics-addr-1&gt;:8428/api/v1/write</span><br><span class="line">    queue_config:</span><br><span class="line">      max_samples_per_send: 10000</span><br><span class="line">  # ...</span><br><span class="line">  - url: http://&lt;victoriametrics-addr-N&gt;:8428/api/v1/write</span><br><span class="line">    queue_config:</span><br><span class="line">      max_samples_per_send: 10000</span><br></pre></td></tr></table></figure>

<ol start="3">
<li>应用更新的配置：</li>
</ol>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="keyword">kill</span> -HUP <span class="string">`pidof prometheus`</span></span><br></pre></td></tr></table></figure>

<p>对于高负载设置，建议使用vmagent而不是Prometheus。</p>
<ol start="4">
<li>现在普罗米修斯应该并行地将数据写入所有配置的<code>remote_write</code>url中。</li>
<li>在所有维多利亚时代的复制品前设置Promxy。</li>
<li>在Grafana中设置指向proxy的Prometheus数据源。</li>
</ol>
<p>如果您的Prometheus HA对在每对中都有副本<code>r1</code>和<code>r2</code>，那么将每个<code>r1</code>配置为向<code>victoriametrics-addr-1</code>写入数据，而每个<code>r2</code>应该向<code>victoriametrics-addr-2</code>写入数据。</p>
<p>另一个选择是同时将数据从Prometheus HA pair写入一对启用了de-duplication的VictoriaMetrics实例。有关详细信息，请参阅本节。</p>
<h3 id="Deduplication"><a href="#Deduplication" class="headerlink" title="Deduplication"></a>Deduplication</h3><p>如果<code>-dedup.minScrapeInterval</code>command-line标志设置为正持续时间，则VictoriaMetricsde-duplicates数据点。例如，<code>-dedup.minScrapeInterval=60s</code>将de-duplicate数据点放在同一时间序列中，如果它们属于同一个离散的60s桶中。将保留最早的数据点。在时间戳相等的情况下，将保留任意数据点。</p>
<p>如果HA对中多个配置相同的Prometheus实例向同一个VictoriaMetrics实例写入数据，de-duplication可以减少磁盘空间的使用。请注意，这些Prometheus实例的配置中必须有相同的<code>external_labels</code>部分，因此它们将数据写入同一时间序列。</p>
<h3 id="Retention"><a href="#Retention" class="headerlink" title="Retention"></a>Retention</h3><p>保留被配置为<code>-retentionPeriod</code>command-line标志。例如，<code>-retentionPeriod=3</code>表示数据将存储3个月，然后删除。数据被拆分到<code>&lt;-storageDataPath&gt;/data/small</code>和<code>&lt;-storageDataPath&gt;/data/big</code>文件夹中的per-month子目录中。在配置的保留期之外数月的目录将在新月份的第一天删除。为了按照<code>-retentionPeriod</code>保存数据，最大磁盘空间使用量将是<code>-retentionPeriod</code>+1个月。例如，如果<code>-retentionPeriod</code>设置为1，则1月份的数据将在3月1日删除。如果<code>-retentionPeriod</code>被设置为比之前更低的值，那么配置期间之外的数据最终将被删除。</p>
<h3 id="Multiple-retentions"><a href="#Multiple-retentions" class="headerlink" title="Multiple retentions"></a>Multiple retentions</h3><p>只需为以下标志使用不同的值启动多个VictoriaMetrics实例：</p>
<ul>
<li><code>-retentionPeriod</code></li>
<li><code>-storageDataPath</code>，因此每个保留期的数据都保存在一个单独的目录中</li>
<li><code>-httpListenAddr</code>，因此客户机可以通过适当的保留来访问VictoriaMetrics实例</li>
</ul>
<p>然后在VictoriaMetrics实例前面设置vmauth，这样它就可以将请求从特定用户路由到VictoriaMetrics，并保留所需的时间。同样的方案可以在VictoriaMetrics集群中为多个租户实现。</p>
<h3 id="Downsampling"><a href="#Downsampling" class="headerlink" title="Downsampling"></a>Downsampling</h3><p>目前没有降采样支持，但是：</p>
<ul>
<li>VictoriaMetrics针对查询大量原始数据进行了优化。请参阅本文中有关大量查询的基准测试结果。</li>
<li>VictoriaMetrics对on-disk数据有很好的压缩能力。有关详细信息，请参阅本文。</li>
</ul>
<p>这些特性减少了下采样的需要。我们计划在未来实施降采样。详见本期。</p>
<p>可以（ab）使用-dedup.minScrapeInterval进行基本下采样。例如，如果摄取的数据点之间的间隔是15s，那么<code>-dedup.minScrapeInterval=5m</code>将只在每个5m间隔的20个初始数据点中留下一个数据点。</p>
<h3 id="Multi-tenancy"><a href="#Multi-tenancy" class="headerlink" title="Multi-tenancy"></a>Multi-tenancy</h3><p>Single-nodeVictoriaMetrics不支持multi-tenancy。请改用群集版本。</p>
<h3 id="可扩展性和群集版本"><a href="#可扩展性和群集版本" class="headerlink" title="可扩展性和群集版本"></a>可扩展性和群集版本</h3><p>尽管single-nodeVictoriaMetrics不能扩展到多个节点，但它针对资源使用进行了优化—存储大小&#x2F;带宽&#x2F;IOPS、RAM、CPU。这意味着single-nodeVictoriaMetrics可以垂直扩展，并用竞争解决方案（如Thanos、Uber M3、InfloxDB或TimescaleDB）替代中等规模的集群。请参阅垂直可伸缩性基准。</p>
<p>因此，如果您仍然需要水平可伸缩的long-term远程存储来进行大规模的Prometheus部署，请首先尝试使用single-nodeVictoriaMetrics，然后切换到集群版本。联系我们获得有偿支持。</p>
<h3 id="Alerting"><a href="#Alerting" class="headerlink" title="Alerting"></a>Alerting</h3><p>建议使用vmalert进行警报。</p>
<p>此外，可以使用以下工具设置警报：</p>
<ul>
<li>关于普罗米修斯-见相应的文件。</li>
<li>使用Promxy-请参阅相应的文档。</li>
<li>关于Grafana-参见相应的文档。</li>
</ul>
<h3 id="Security"><a href="#Security" class="headerlink" title="Security"></a>Security</h3><p>当VictoriaMetrics暴露在不可信的网络（如internet）中时，不要忘记保护敏感端点。考虑设置以下command-line标志：</p>
<ul>
<li><code>-tls</code>、<code>-tlsCertFile</code>和<code>-tlsKeyFile</code>，用于从HTTP切换到HTTPS。</li>
<li><code>-httpAuth.username</code>和<code>-httpAuth.password</code>，用于通过HTTP基本身份验证保护所有HTTP端点。</li>
<li><code>-deleteAuthKey</code>用于保护<code>/api/v1/admin/tsdb/delete_series</code>端点。请参阅如何删除时间序列。</li>
<li><code>-snapshotAuthKey</code>用于保护<code>/snapshot*</code>端点。了解如何使用快照。</li>
<li><code>-forceMergeAuthKey</code>用于保护<code>/internal/force_merge</code>端点。请参见强制合并文档。</li>
<li><code>-search.resetCacheAuthKey</code>用于保护<code>/internal/resetRollupResultCache</code>端点。详见回填。</li>
</ul>
<p>显式地为TCP和UDP端口设置内部网络接口，以便使用Graphite和OpenTSDB格式接收数据。例如，将<code>-graphiteListenAddr=:2003</code>替换为<code>-graphiteListenAddr=&lt;internal_iface_ip&gt;:2003</code>。</p>
<p>最好使用vmauth或类似的身份验证代理来授权来自不受信任网络的所有传入请求。</p>
<h3 id="Tuning"><a href="#Tuning" class="headerlink" title="Tuning"></a>Tuning</h3><ul>
<li>没有必要对VictoriaMetrics进行调优，因为它对command-line标志使用了合理的默认值，这些标志会根据可用的CPU和RAM资源自动进行调整。</li>
<li>由于VictoriaMetrics针对默认操作系统设置进行了优化，因此不需要对操作系统进行调优。唯一的选择是增加对操作系统中打开文件数量的限制，这样普罗米修斯实例就可以建立更多与维多利亚时代的连接。</li>
<li>建议的文件系统是<code>ext4</code>，建议的持久存储是GCP上的持久HDD-based磁盘，因为它通过内部复制来防止硬件故障，并且可以动态调整大小。如果计划在<code>ext4</code>分区上存储1TB以上的数据，或者计划将其扩展到16TB以上，则建议将以下选项传递给<code>mkfs.ext4</code>：</li>
</ul>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">mkfs<span class="selector-class">.ext4</span> ... -O <span class="number">64</span>bit,huge_file,extent -T huge</span><br></pre></td></tr></table></figure>

<h3 id="Monitoring"><a href="#Monitoring" class="headerlink" title="Monitoring"></a>Monitoring</h3><p>VictoriaMetrics在<code>/metrics</code>页面以普罗米修斯格式导出内部指标。vmagent或Prometheus可以通过添加相应的scrape config来收集这些度量。或者，它们可以是self-scraped，方法是将<code>-selfScrapeInterval</code>command-line标志设置为持续时间大于0。例如，<code>-selfScrapeInterval=10s</code>将以10秒的间隔启用<code>/metrics</code>页的self-scraping。</p>
<p>有single-nodeVictoriaMetrics和集群VictoriaMetrics的Grafana仪表盘。对于集群式VictoriaMetrics，也有一个可供选择的仪表板。</p>
<p>最有趣的指标是：</p>
<ul>
<li><code>vm_cache_entries&#123;type=&quot;storage/hour_metric_ids&quot;&#125;</code>-最近一小时内具有新数据点的时间序列的数量，也称为活动时间序列。</li>
<li><code>increase(vm_new_timeseries_created_total[1h])</code>-前一小时的时间序列流失率。</li>
<li><code>sum(vm_rows&#123;type=~&quot;storage/.*&quot;&#125;)</code>-数据库中<code>(timestamp, value)</code>个数据点的总数。</li>
<li><code>sum(rate(vm_rows_inserted_total[5m]))</code>-摄取率，即每秒在数据库中插入多少个样本。</li>
<li><code>vm_free_disk_space_bytes</code>-在<code>-storageDataPath</code>处还有可用空间。</li>
<li><code>sum(vm_data_size_bytes)</code>-磁盘上数据的总大小。</li>
<li><code>increase(vm_slow_row_inserts_total[5m])</code>-过去5分钟内缓慢插入的次数。如果这个数字在长时间内保持较高，那么可能需要更多的RAM来优化处理当前数量的活动时间序列。</li>
<li><code>increase(vm_slow_metric_name_loads_total[5m])</code>-在过去5分钟内缓慢加载度量名称的次数。如果这个数字在长时间内保持较高，那么可能需要更多的RAM来优化处理当前数量的活动时间序列。</li>
</ul>
<p>{719次显示当前正在运行的查询@trics}。</p>
<h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><ul>
<li>建议使用默认的command-line标志值（即不要显式地设置它们），直到需要调整这些标志值为止。</li>
<li>建议从此页升级到可用的最新版本，因为遇到的问题可能已经在那里修复。</li>
<li>建议在故障排除期间检查日志，因为它们可能包含有用的信息。</li>
<li>如果VictoriaMetrics工作缓慢，并且每100K次摄取的数据点每秒消耗超过一个CPU内核，那么对于当前的RAM量来说，可能有太多的活动时间序列。VictoriaMetrics公开了<code>vm_slow_*</code>度量，可以将其用作RAM数量低的指标。在这种情况下，建议使用VictoriaMetrics增加节点上的RAM量，以提高接收和查询性能。另一个选择是增加<code>-memory.allowedPercent</code>command-line标志值。注意这个选项，因为<code>-memory.allowedPercent</code>的值太大可能会导致高I&#x2F;O使用率。</li>
<li>VictoriaMetrics优先考虑数据摄取而不是数据查询。因此，如果它没有足够的资源用于数据摄取，那么数据查询可能会显著减慢速度。</li>
<li>VictoriaMetrics需要可用的磁盘空间将数据文件合并到更大的文件中。当没有足够的空闲空间时，它可能会减速。所以确保<code>-storageDataPath</code>目录的可用空间至少是磁盘大小的20%。剩余的可用空间量可以通过<code>vm_free_disk_space_bytes</code>度量来监视。存储在磁盘上的数据的总大小可以通过<code>vm_data_size_bytes</code>度量的总和来监视。</li>
<li>如果由于磁盘错误导致某些部分损坏而导致VictoriaMetrics无法工作，那么只需删除包含损坏部分的目录。这将以存储在损坏部件中的数据丢失为代价恢复VictoriaMetrics。将来，将创建<code>vmrecover</code>工具来自动从这些错误中恢复。</li>
<li>如果在图上看到空白，请尝试通过向<code>/internal/resetRollupResultCache</code>发送请求来重置缓存。如果这消除了图上的空白，那么时间戳早于<code>-search.cacheTimestampOffset</code>的数据很可能被摄取到VictoriaMetrics中。确保数据源与VictoriaMetrics同步时间。如果间隙与样本之间的不规则间隔有关，则尝试调整<code>-search.minStalenessInterval</code>command-line标志，使其值接近样本之间的最大间隔。</li>
<li>如果您正在从InfluxDB或TimescaleDB切换，那么看看<code>-search.maxStalenessInterval</code>command-line标志。为了抑制VictoriaMetrics使用的默认间隙填充算法，可能需要使用该算法——默认情况下，它假设每个时间序列都是连续的，而不是离散的，因此它以规则的间隔填充实际样本之间的间隙。</li>
<li>{75可确定为高翻页率或高翻页率的标签。有关详细信息，请参阅这些文档。VictoriaMetrics在此页面上接受可选的<code>date=YYYY-MM-DD</code>和<code>topN=42</code>参数。默认情况下，<code>date</code>等于当前日期，而<code>topN</code>等于10。</li>
<li>VictoriaMetrics使用<code>-maxLabelsPerTimeseries</code>command-line标志限制每个度量的标签数量。这可以防止摄取标签过多的度量。建议监视<code>vm_metrics_with_dropped_labels_total</code>度量，以确定<code>-maxLabelsPerTimeseries</code>是否必须根据工作负载进行调整。</li>
<li>在数据摄取过程中，VictoriaMetrics忽略<code>NaN</code>和<code>Inf</code>值。详见本期。</li>
</ul>
<h3 id="Backfilling"><a href="#Backfilling" class="headerlink" title="Backfilling"></a>Backfilling</h3><p>VictoriaMetrics通过任何支持的摄取方法以任意时间顺序接受历史数据。确保配置的<code>-retentionPeriod</code>覆盖了回填数据的时间戳。</p>
<p>当使用过去的时间戳写入历史数据时，建议禁用带有<code>-search.disableCache</code>command-line标志的查询缓存，因为缓存假定数据是用当前时间戳写入的。回填完成后可以启用查询缓存。</p>
<p>另一种解决方案是在回填完成后查询<code>/internal/resetRollupResultCache</code>url。这将重置查询缓存，其中可能包含回填期间缓存的不完整数据。</p>
<p>另一个解决方案是增加<code>-search.cacheTimestampOffset</code>标志值，以便对时间戳接近当前时间的数据禁用缓存。</p>
<h3 id="Data-updates"><a href="#Data-updates" class="headerlink" title="Data updates"></a>Data updates</h3><p>VictoriaMetrics不支持将现有的样本值更新为新的样本值。它用相同的时间戳存储同一时间序列的所有摄取数据点。虽然可以通过删除旧的时间序列然后编写新的时间序列来替换旧的时间序列，但是这种方法应该只用于one-off更新。它不应该用于频繁的更新，因为non-zero与数据删除相关的开销。</p>
<h3 id="Replication"><a href="#Replication" class="headerlink" title="Replication"></a>Replication</h3><p>Single-nodeVictoriaMetrics不支持application-level复制。请改用群集版本。有关详细信息，请参阅这些文档。</p>
<p>Storage-level复制可能被卸载到持久的持久存储中，比如Google Cloud磁盘。</p>
<p>另请参阅高可用性文档和备份文档。</p>
<h3 id="Backups"><a href="#Backups" class="headerlink" title="Backups"></a>Backups</h3><p>VictoriaMetrics支持通过vmbackup和vmrestore工具进行备份。我们还为付费企业用户提供<code>vmbackuper</code>工具-详情请参阅本期。</p>
<h3 id="Profiling"><a href="#Profiling" class="headerlink" title="Profiling"></a>Profiling</h3><p>VictoriaMetrics提供了用于收集以下Go配置文件的处理程序：</p>
<ul>
<li>内存配置文件。可以使用以下命令收集：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s http://&lt;victoria-metrics-host&gt;:8428/debug/pprof/heap &gt; mem.pprof</span><br></pre></td></tr></table></figure>

<ul>
<li>CPU配置文件。可以使用以下命令收集：</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -s http://&lt;victoria-metrics-host&gt;:8428/debug/pprof/profile &gt; cpu.pprof</span><br></pre></td></tr></table></figure>

<p>收集CPU配置文件的命令等待30秒后返回。</p>
<p>可以使用go工具pprof分析收集的外形。</p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>VictoriaMetrics启动参数详解</title>
    <url>/2023/12/15/VictoriaMetrics%E5%90%AF%E5%8A%A8%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="启动参数、命令行参数"><a href="#启动参数、命令行参数" class="headerlink" title="启动参数、命令行参数"></a>启动参数、命令行参数</h2><h3 id="Environment-variables"><a href="#Environment-variables" class="headerlink" title="Environment variables"></a>Environment variables</h3><p>可以通过环境变量设置参数：</p>
<ul>
<li>必须设置-envflag.enable</li>
<li>参数名中的每个.必须由_代替（例如-insert.maxQueueDuration <duration>将转换为insert_maxQueueDuration&#x3D;<duration>）</li>
<li>对于重复参数，用,作为分隔符将不同的值合并为一个值（例如-storageNode <nodeA> -storageNode <nodeB>将转换为storageNode&#x3D;<nodeA>,<nodeB>）</li>
<li>可以使用-envflag.prefix为环境变量设置前缀。例如，如果-envflag.prefix&#x3D;VM_，那么env vars必须以VM_开头</li>
</ul>
<p>vmstorage</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="operator">./</span>vmstorage<span class="operator">-</span>prod <span class="operator">--</span>help</span><br><span class="line"></span><br><span class="line"># 处理大型合并时所用的最大cpu核数</span><br><span class="line"><span class="operator">-</span>bigMergeConcurrency int</span><br><span class="line">    <span class="type">The</span> maximum number of <span class="type">CPU</span> cores to use <span class="keyword">for</span> big merges. <span class="type">Default</span> value <span class="keyword">is</span> used <span class="keyword">if</span> <span class="keyword">set</span> to <span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 如果时序数据之间的时间差比该配置小，则剔除<span class="operator">。</span>当多个<span class="type">Prometheus同时写入一个VictoriaMetric时，这对减少开销很有帮助</span><span class="operator">。</span>当设置为<span class="number">0</span>时，不生效<span class="operator">。</span></span><br><span class="line"><span class="operator">-</span>dedup.minScrapeInterval duration</span><br><span class="line">    <span class="type">Remove</span> superflouos samples from time series <span class="keyword">if</span> they are located closer to <span class="keyword">each</span> other than this duration. <span class="type">This</span> may be useful <span class="keyword">for</span> reducing overhead when multiple identically configured <span class="type">Prometheus</span> instances write data to the same <span class="type">VictoriaMetrics</span>. <span class="type">Deduplication</span> <span class="keyword">is</span> disabled <span class="keyword">if</span> the <span class="operator">-</span>dedup.minScrapeInterval <span class="keyword">is</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"># 是否拒绝已配置的<span class="operator">-</span>retentionPeriod(数据保留时长)之外的查询<span class="operator">。</span> 设置后，<span class="regexp">/api/</span>v1<span class="operator">/</span>query_range对于<span class="operator">-</span>retentionPeriod以外的&#x27;from&#x27;值的查询，将返回&#x27;<span class="number">503</span> <span class="type">Service</span> <span class="type">Unavailable</span>&#x27;错误<span class="operator">。</span> 当多个具有不同数据保留时长的数据源隐藏在query<span class="operator">-</span>tee后面时，该项可能很有用</span><br><span class="line"><span class="operator">-</span>denyQueriesOutsideRetention</span><br><span class="line">    <span class="type">Whether</span> to deny queries outside of the configured <span class="operator">-</span>retentionPeriod. <span class="type">When</span> <span class="keyword">set</span>, then <span class="regexp">/api/</span>v1<span class="operator">/</span>query_range would <span class="keyword">return</span> &#x27;<span class="number">503</span> <span class="type">Service</span> <span class="type">Unavailable</span>&#x27; error <span class="keyword">for</span> queries with &#x27;from&#x27; value outside <span class="operator">-</span>retentionPeriod. <span class="type">This</span> may be useful when multiple data sources with distinct retentions are hidden behind query<span class="operator">-</span>tee</span><br><span class="line"></span><br><span class="line"># 是否监听和使用ipv6，默认只使用ipv4</span><br><span class="line"><span class="operator">-</span>enableTCP6</span><br><span class="line">    <span class="type">Whether</span> to enable <span class="type">IPv6</span> <span class="keyword">for</span> listening and dialing. <span class="type">By</span> <span class="keyword">default</span> only <span class="type">IPv4</span> <span class="type">TCP</span> <span class="keyword">is</span> used</span><br><span class="line"></span><br><span class="line"># 是否读取命令行以外的环境变量的参数，命令行参数的等级高于环境变量参数<span class="operator">。</span>若未设置时，只读取命令行参数<span class="operator">。</span></span><br><span class="line"><span class="operator">-</span>envflag.enable</span><br><span class="line">    <span class="type">Whether</span> to enable reading flags from environment variables additionally to command line. <span class="type">Command</span> line flag values have priority over values from environment vars. <span class="type">Flags</span> are read only from command line <span class="keyword">if</span> this flag isn&#x27;t <span class="keyword">set</span></span><br><span class="line"></span><br><span class="line"># 环境变量的前缀，如果设置了<span class="operator">-</span>envflag.enable</span><br><span class="line"><span class="operator">-</span>envflag.prefix string</span><br><span class="line">    <span class="type">Prefix</span> <span class="keyword">for</span> environment variables <span class="keyword">if</span> <span class="operator">-</span>envflag.enable <span class="keyword">is</span> <span class="keyword">set</span></span><br><span class="line"></span><br><span class="line"># 没有新数据插入之后，在完成每月分区的最终合并之前的延迟<span class="operator">。</span>完成最终合并后，通常会降低查询速度和磁盘空间使用率<span class="operator">。</span>最终合并的延迟过短可能会导致磁盘<span class="type">IO使用率和CPU使用率增加（默认为30秒）</span></span><br><span class="line"><span class="operator">-</span>finalMergeDelay duration</span><br><span class="line">    <span class="type">The</span> delay before starting <span class="keyword">final</span> merge <span class="keyword">for</span> per<span class="operator">-</span>month partition after no new data <span class="keyword">is</span> ingested into it. <span class="type">Query</span> speed and disk space usage <span class="keyword">is</span> usually reduced after the <span class="keyword">final</span> merge <span class="keyword">is</span> complete. <span class="type">Too</span> low delay <span class="keyword">for</span> <span class="keyword">final</span> merge may result <span class="keyword">in</span> increased disk <span class="type">IO</span> usage and <span class="type">CPU</span> usage (<span class="keyword">default</span> 30s)</span><br><span class="line"></span><br><span class="line"># 授权字符串，必须以查询字符串的形式传递给<span class="regexp">/internal/</span>force_flush 接口</span><br><span class="line"><span class="operator">-</span>forceFlushAuthKey string</span><br><span class="line">    authKey, which must be passed <span class="keyword">in</span> query string to <span class="regexp">/internal/</span>force_flush pages</span><br><span class="line"></span><br><span class="line"># 授权字符串，必须以查询字符串的形式传递给<span class="regexp">/internal/</span>force_merge 接口</span><br><span class="line"><span class="operator">-</span>forceMergeAuthKey string</span><br><span class="line">    authKey, which must be passed <span class="keyword">in</span> query string to <span class="regexp">/internal/</span>force_merge pages</span><br><span class="line"></span><br><span class="line"># 是否使用pread()代替mmap()读取数据文件<span class="operator">。</span>默认情况下，mmap()用于<span class="number">64</span>位架构，而pread()用于<span class="number">32</span>位架构，因为它们无法读取内存中大于<span class="number">2</span><span class="operator">^</span><span class="number">32</span>字节的数据文件<span class="operator">。</span>mmap()通常比pread()更快地读取小数据块<span class="operator">。</span></span><br><span class="line"><span class="operator">-</span>fs.disableMmap</span><br><span class="line">    <span class="type">Whether</span> to use pread() instead of mmap() <span class="keyword">for</span> reading data files. <span class="type">By</span> <span class="keyword">default</span> mmap() <span class="keyword">is</span> used <span class="keyword">for</span> <span class="number">64</span><span class="operator">-</span>bit arches and pread() <span class="keyword">is</span> used <span class="keyword">for</span> <span class="number">32</span><span class="operator">-</span>bit arches, since they cannot read data files bigger than <span class="number">2</span><span class="operator">^</span><span class="number">32</span> bytes <span class="keyword">in</span> memory. mmap() <span class="keyword">is</span> usually faster <span class="keyword">for</span> reading small data chunks than pread()</span><br><span class="line"></span><br><span class="line"># 外部http请求在超过该值后，将被关闭<span class="operator">。</span>这可能有助于在负载均衡器后面的服务集群之间分配传入负载<span class="operator">。</span>请注意，实际超时可能会增加多达<span class="number">10</span>％，以防止出现惊群效应（默认为2m0s）</span><br><span class="line"><span class="operator">-</span>http.connTimeout duration</span><br><span class="line">    <span class="type">Incoming</span> http connections are closed after the configured timeout. <span class="type">This</span> may help spreading incoming load among a cluster of services behind load balancer. <span class="type">Note</span> that the real timeout may be bigger by up to <span class="number">10</span><span class="operator">%</span> <span class="keyword">as</span> a protection from <span class="type">Thundering</span> herd problem (<span class="keyword">default</span> 2m0s)</span><br><span class="line"></span><br><span class="line">#禁用<span class="type">HTTP响应压缩以节省CPU资源</span><span class="operator">。</span>默认情况下启用压缩以节省网络带宽</span><br><span class="line"><span class="operator">-</span>http.disableResponseCompression</span><br><span class="line">    <span class="type">Disable</span> compression of <span class="type">HTTP</span> responses <span class="keyword">for</span> saving <span class="type">CPU</span> resources. <span class="type">By</span> <span class="keyword">default</span> compression <span class="keyword">is</span> enabled to save network bandwidth</span><br><span class="line"></span><br><span class="line"># 空闲http请求超时时间</span><br><span class="line"><span class="operator">-</span>http.idleConnTimeout duration</span><br><span class="line">    <span class="type">Timeout</span> <span class="keyword">for</span> incoming idle http connections (<span class="keyword">default</span> 1m0s)</span><br><span class="line"></span><br><span class="line"># <span class="type">HTTP</span> server正常关闭的最大持续时间<span class="operator">。</span>高负载服务器可能需要增加值才能正常关闭（默认为<span class="number">7</span>秒）</span><br><span class="line"><span class="operator">-</span>http.maxGracefulShutdownDuration duration</span><br><span class="line">    <span class="type">The</span> maximum duration <span class="keyword">for</span> graceful shutdown of <span class="type">HTTP</span> server. <span class="type">Highly</span> loaded server may require increased value <span class="keyword">for</span> graceful shutdown (<span class="keyword">default</span> 7s)</span><br><span class="line"></span><br><span class="line"># http url代理前缀<span class="operator">。</span>此项在nginx等代理时有用</span><br><span class="line"><span class="operator">-</span>http.pathPrefix string</span><br><span class="line">    <span class="type">An</span> <span class="keyword">optional</span> <span class="keyword">prefix</span> to add to all the paths handled by http server. <span class="type">For</span> example, <span class="keyword">if</span> &#x27;<span class="operator">-</span>http.pathPrefix<span class="operator">=/</span>foo<span class="regexp">/bar&#x27; is set, then all the http requests will be handled on &#x27;/</span>foo<span class="regexp">/bar/</span><span class="operator">*</span>&#x27; paths. <span class="type">This</span> may be useful <span class="keyword">for</span> proxied requests. <span class="type">See</span> https:<span class="comment">//www.robustperception.io/using-external-urls-and-proxies-with-prometheus</span></span><br><span class="line"></span><br><span class="line"># <span class="type">HTTP</span> server 关闭之前的可选延迟<span class="operator">。</span>在此交易期间，http server 为<span class="operator">/</span>health 接口返回了non<span class="operator">-</span><span class="type">OK响应，因此负载均衡器可以将新请求路由到其他server上</span></span><br><span class="line"><span class="operator">-</span>http.shutdownDelay duration</span><br><span class="line">    <span class="type">Optional</span> delay before http server shutdown. <span class="type">During</span> this dealy the servier returns non<span class="operator">-</span><span class="type">OK</span> responses from <span class="operator">/</span>health page, so load balancers can route new requests to other servers</span><br><span class="line"></span><br><span class="line"># http 监控地址</span><br><span class="line"><span class="operator">-</span>httpListenAddr string</span><br><span class="line">    <span class="type">Address</span> to listen <span class="keyword">for</span> http connections (<span class="keyword">default</span> <span class="string">&quot;:8482&quot;</span>)</span><br><span class="line"></span><br><span class="line"># 是否禁用在日志中写入时间戳</span><br><span class="line"><span class="operator">-</span>loggerDisableTimestamps</span><br><span class="line">    <span class="type">Whether</span> to disable writing timestamps <span class="keyword">in</span> logs</span><br><span class="line"></span><br><span class="line"># 每秒错误日志数量的限制<span class="operator">。</span> 如果每秒发出的错误数量超过给定的数量，那么剩余的错误将被抑制<span class="operator">。</span>零值禁用速率限制（默认值为<span class="number">10</span>）</span><br><span class="line"><span class="operator">-</span>loggerErrorsPerSecondLimit int</span><br><span class="line">    <span class="type">Per</span><span class="operator">-</span>second limit on the number of <span class="type">ERROR</span> messages. <span class="type">If</span> more than the given number of errors are emitted per second, then the remaining errors are suppressed. <span class="type">Zero</span> value disables the rate limit (<span class="keyword">default</span> <span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"># 日志格式</span><br><span class="line"><span class="operator">-</span>loggerFormat string</span><br><span class="line">    <span class="type">Format</span> <span class="keyword">for</span> logs. <span class="type">Possible</span> values: <span class="keyword">default</span>, json (<span class="keyword">default</span> <span class="string">&quot;default&quot;</span>)</span><br><span class="line"></span><br><span class="line"># 日志等级</span><br><span class="line"><span class="operator">-</span>loggerLevel string</span><br><span class="line">    <span class="type">Minimum</span> level of errors to log. <span class="type">Possible</span> values: <span class="type">INFO</span>, <span class="type">WARN</span>, <span class="type">ERROR</span>, <span class="type">FATAL</span>, <span class="type">PANIC</span> (<span class="keyword">default</span> <span class="string">&quot;INFO&quot;</span>)</span><br><span class="line"></span><br><span class="line"># 日志输出</span><br><span class="line"><span class="operator">-</span>loggerOutput string</span><br><span class="line">    <span class="type">Output</span> <span class="keyword">for</span> the logs. <span class="type">Supported</span> values: stderr, stdout (<span class="keyword">default</span> <span class="string">&quot;stderr&quot;</span>)</span><br><span class="line"></span><br><span class="line"># <span class="type">VictoriaMetrics可用的缓存大小，如果设置为非0值，将覆盖</span><span class="operator">-</span>memory.allowedPercent参数<span class="operator">。</span>值太低可能会增加高速缓存未命中率，这通常会导致更高的<span class="type">CPU和磁盘IO使用率</span><span class="operator">。</span>值太高可能会从<span class="type">OS页面缓存中驱逐过多数据，这将导致更高的磁盘IO使用率</span><span class="operator">。</span></span><br><span class="line">支持以下值的可选后缀：<span class="type">KB，MB，GB，KiB，MiB，GiB（默认0）</span></span><br><span class="line"><span class="operator">-</span>memory.allowedBytes value</span><br><span class="line">    <span class="type">Allowed</span> size of system memory <span class="type">VictoriaMetrics</span> caches may occupy. <span class="type">This</span> option overrides <span class="operator">-</span>memory.allowedPercent <span class="keyword">if</span> <span class="keyword">set</span> to non<span class="operator">-</span>zero value. <span class="type">Too</span> low value may increase cache miss rate, which usually results <span class="keyword">in</span> higher <span class="type">CPU</span> and disk <span class="type">IO</span> usage. <span class="type">Too</span> high value may evict too much data from <span class="type">OS</span> page cache, which will result <span class="keyword">in</span> higher disk <span class="type">IO</span> usage</span><br><span class="line">    <span class="type">Supports</span> the following <span class="keyword">optional</span> suffixes <span class="keyword">for</span> values: <span class="type">KB</span>, <span class="type">MB</span>, <span class="type">GB</span>, <span class="type">KiB</span>, <span class="type">MiB</span>, <span class="type">GiB</span> (<span class="keyword">default</span> <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"># <span class="type">VictoriaMetrics可用的缓存占用系统内存的百分比</span><span class="operator">。</span>默认<span class="number">60</span><span class="operator">%</span> </span><br><span class="line"><span class="operator">-</span>memory.allowedPercent float</span><br><span class="line">    <span class="type">Allowed</span> percent of system memory <span class="type">VictoriaMetrics</span> caches may occupy. <span class="type">See</span> also <span class="operator">-</span>memory.allowedBytes. <span class="type">Too</span> low value may increase cache miss rate, which usually results <span class="keyword">in</span> higher <span class="type">CPU</span> and disk <span class="type">IO</span> usage. <span class="type">Too</span> high value may evict too much data from <span class="type">OS</span> page cache, which will result <span class="keyword">in</span> higher disk <span class="type">IO</span> usage (<span class="keyword">default</span> <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"># 每个值要存储的精度位数<span class="operator">。</span>较低的精度位以精度损失为代价提高了数据压缩比（默认为<span class="number">64</span>）</span><br><span class="line"><span class="operator">-</span>precisionBits int</span><br><span class="line">    <span class="type">The</span> number of precision bits to store per <span class="keyword">each</span> value. <span class="type">Lower</span> precision bits improves data compression at the cost of precision loss (<span class="keyword">default</span> <span class="number">64</span>)</span><br><span class="line"></span><br><span class="line"># 数据保留时长，时间戳在该值之外的数据将被自动删除<span class="operator">。</span></span><br><span class="line">支持以下可选后缀：h（小时），d（天），w（周），y（年）<span class="operator">。</span>如果未设置后缀，则持续时间以月为单位（默认为<span class="number">1</span>）</span><br><span class="line"><span class="operator">-</span>retentionPeriod value</span><br><span class="line">    <span class="type">Data</span> with timestamps outside the retentionPeriod <span class="keyword">is</span> automatically deleted</span><br><span class="line">    <span class="type">The</span> following <span class="keyword">optional</span> suffixes are supported: h (hour), d (day), w (week), y (year). <span class="type">If</span> suffix isn&#x27;t <span class="keyword">set</span>, then the duration <span class="keyword">is</span> counted <span class="keyword">in</span> months (<span class="keyword">default</span> <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"># 禁用<span class="type">RPC流量压缩</span><span class="operator">。</span> 这样可以减少<span class="type">CPU使用率，但会占用更高的网络带宽</span></span><br><span class="line"><span class="operator">-</span>rpc.disableCompression</span><br><span class="line">    <span class="type">Disable</span> compression of <span class="type">RPC</span> traffic. <span class="type">This</span> reduces <span class="type">CPU</span> usage at the cost of higher network bandwidth usage</span><br><span class="line"></span><br><span class="line"># 每次搜索返回的最大标签建数量</span><br><span class="line"><span class="operator">-</span>search.maxTagKeys int</span><br><span class="line">    <span class="type">The</span> maximum number of tag keys returned per search (<span class="keyword">default</span> <span class="number">100000</span>)</span><br><span class="line"></span><br><span class="line"># 从<span class="regexp">/metrics/</span>find 返回的标签值后缀的最大数量（默认为<span class="number">100000</span>）</span><br><span class="line"><span class="operator">-</span>search.maxTagValueSuffixesPerSearch int</span><br><span class="line">    <span class="type">The</span> maximum number of tag value suffixes returned from <span class="regexp">/metrics/</span>find (<span class="keyword">default</span> <span class="number">100000</span>)</span><br><span class="line"></span><br><span class="line"># 每次搜索返回的标签值的最大数量（默认为<span class="number">100000</span>）</span><br><span class="line"><span class="operator">-</span>search.maxTagValues int</span><br><span class="line">    <span class="type">The</span> maximum number of tag values returned per search (<span class="keyword">default</span> <span class="number">100000</span>)</span><br><span class="line"></span><br><span class="line"># 每次搜索扫描可以支持的独立事件序列的最大数量</span><br><span class="line"><span class="operator">-</span>search.maxUniqueTimeseries int</span><br><span class="line">    <span class="type">The</span> maximum number of unique time series <span class="keyword">each</span> search can scan (<span class="keyword">default</span> <span class="number">300000</span>)</span><br><span class="line"></span><br><span class="line"># 用于小型合并的最大<span class="type">CPU内核数</span><span class="operator">。</span>如果设置为<span class="number">0</span>，则使用默认值</span><br><span class="line"><span class="operator">-</span>smallMergeConcurrency int</span><br><span class="line">    <span class="type">The</span> maximum number of <span class="type">CPU</span> cores to use <span class="keyword">for</span> small merges. <span class="type">Default</span> value <span class="keyword">is</span> used <span class="keyword">if</span> <span class="keyword">set</span> to <span class="number">0</span></span><br><span class="line"></span><br><span class="line"># authKey，必须以查询字符串的形式传递给<span class="operator">/</span>snapshot<span class="operator">*</span> 接口</span><br><span class="line"><span class="operator">-</span>snapshotAuthKey string</span><br><span class="line">    authKey, which must be passed <span class="keyword">in</span> query string to <span class="operator">/</span>snapshot<span class="operator">*</span> pages</span><br><span class="line"></span><br><span class="line"># 数据存储路径</span><br><span class="line"><span class="operator">-</span>storageDataPath string</span><br><span class="line">    <span class="type">Path</span> to storage data (<span class="keyword">default</span> <span class="string">&quot;vmstorage-data&quot;</span>)</span><br><span class="line"></span><br><span class="line"># 是否启动tls</span><br><span class="line"><span class="operator">-</span>tls</span><br><span class="line">    <span class="type">Whether</span> to enable <span class="type">TLS</span> (aka <span class="type">HTTPS</span>) <span class="keyword">for</span> incoming requests. <span class="operator">-</span>tlsCertFile and <span class="operator">-</span>tlsKeyFile must be <span class="keyword">set</span> <span class="keyword">if</span> <span class="operator">-</span>tls <span class="keyword">is</span> <span class="keyword">set</span></span><br><span class="line"><span class="operator">-</span>tlsCertFile string</span><br><span class="line">    <span class="type">Path</span> to file with <span class="type">TLS</span> certificate. <span class="type">Used</span> only <span class="keyword">if</span> <span class="operator">-</span>tls <span class="keyword">is</span> <span class="keyword">set</span>. <span class="type">Prefer</span> <span class="type">ECDSA</span> certs instead of <span class="type">RSA</span> certs, since <span class="type">RSA</span> certs are slow</span><br><span class="line"><span class="operator">-</span>tlsKeyFile string</span><br><span class="line">    <span class="type">Path</span> to file with <span class="type">TLS</span> key. <span class="type">Used</span> only <span class="keyword">if</span> <span class="operator">-</span>tls <span class="keyword">is</span> <span class="keyword">set</span></span><br><span class="line"><span class="operator">-</span>version</span><br><span class="line">    <span class="type">Show</span> <span class="type">VictoriaMetrics</span> version</span><br><span class="line"><span class="operator">-</span>vminsertAddr string</span><br><span class="line">    <span class="type">TCP</span> address to accept connections from vminsert services (<span class="keyword">default</span> <span class="string">&quot;:8400&quot;</span>)</span><br><span class="line"><span class="operator">-</span>vmselectAddr string</span><br><span class="line">    <span class="type">TCP</span> address to accept connections from vmselect services (<span class="keyword">default</span> <span class="string">&quot;:8401&quot;</span>)</span><br></pre></td></tr></table></figure>

<p>vminsert</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">./vminsert-prod --help</span><br><span class="line">vminsert<span class="number">-20201116</span><span class="number">-190946</span>-tags-v1<span class="number">.47</span><span class="number">.0</span>-cluster<span class="number">-0</span>-ga00df790b</span><br><span class="line">Usage of ./vminsert-prod:</span><br><span class="line"></span><br><span class="line"><span class="meta"># 导入csv数据时的时间戳间隔。最小时间间隔为1ms，使用较高的时间间隔（如1s）可以有效降低磁盘占用</span></span><br><span class="line">-csvTrimTimestamp duration</span><br><span class="line">    Trim timestamps <span class="keyword">when</span> importing csv data to <span class="keyword">this</span> duration. Minimum practical duration <span class="keyword">is</span> <span class="number">1</span>ms. <span class="function">Higher <span class="title">duration</span> (<span class="params">i.e. <span class="number">1</span>s</span>) may be used <span class="keyword">for</span> reducing disk space usage <span class="keyword">for</span> timestamp <span class="title">data</span> (<span class="params"><span class="literal">default</span> <span class="number">1</span>ms</span>)</span></span><br><span class="line"><span class="function">-enableTCP6</span></span><br><span class="line"><span class="function">    Whether to enable IPv6 <span class="keyword">for</span> listening <span class="keyword">and</span> dialing. By <span class="literal">default</span> only IPv4 TCP <span class="keyword">is</span> used</span></span><br><span class="line"><span class="function">-envflag.enable</span></span><br><span class="line"><span class="function">    Whether to enable reading flags <span class="keyword">from</span> environment variables additionally to command line. Command line flag values have priority over values <span class="keyword">from</span> environment vars. Flags are read only <span class="keyword">from</span> command line <span class="keyword">if</span> <span class="keyword">this</span> flag isn&#x27;t <span class="keyword">set</span></span></span><br><span class="line"><span class="function">-envflag.prefix <span class="built_in">string</span></span></span><br><span class="line"><span class="function">    Prefix <span class="keyword">for</span> environment variables <span class="keyword">if</span> -envflag.enable <span class="keyword">is</span> <span class="keyword">set</span></span></span><br><span class="line"><span class="function">-fs.disableMmap</span></span><br><span class="line"><span class="function">    Whether to use <span class="title">pread</span>() instead of <span class="title">mmap</span>() <span class="keyword">for</span> reading data files. By <span class="literal">default</span> <span class="title">mmap</span>() <span class="keyword">is</span> used <span class="keyword">for</span> 64-bit arches <span class="keyword">and</span> <span class="title">pread</span>() <span class="keyword">is</span> used <span class="keyword">for</span> 32-bit arches, since they cannot read data files bigger than 2^32 bytes <span class="keyword">in</span> memory. <span class="title">mmap</span>() <span class="keyword">is</span> usually faster <span class="keyword">for</span> reading small data chunks than <span class="title">pread</span>()</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># 监听Graphite数据的tcp和udp地址，为空则不监听</span></span><br><span class="line"><span class="function">-graphiteListenAddr <span class="built_in">string</span></span></span><br><span class="line"><span class="function">    TCP <span class="keyword">and</span> UDP address to listen <span class="keyword">for</span> Graphite plaintext data. Usually :2003 must be <span class="keyword">set</span>. Doesn&#x27;t work <span class="keyword">if</span> empty</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"># Graphite数据时间戳间隔时间</span></span><br><span class="line"><span class="function">-graphiteTrimTimestamp duration</span></span><br><span class="line"><span class="function">    Trim timestamps <span class="keyword">for</span> Graphite data to <span class="keyword">this</span> duration. Minimum practical duration <span class="keyword">is</span> 1s. Higher <span class="title">duration</span> (<span class="params">i.e. <span class="number">1</span>m</span>) may be used <span class="keyword">for</span> reducing disk space usage <span class="keyword">for</span> timestamp <span class="title">data</span> (<span class="params"><span class="literal">default</span> <span class="number">1</span>s</span>)</span></span><br><span class="line"><span class="function">-http.connTimeout duration</span></span><br><span class="line"><span class="function">    Incoming http connections are closed after the configured timeout. This may help spreading incoming load among a cluster of services behind load balancer. Note that the real timeout may be bigger <span class="keyword">by</span> up to 10% <span class="keyword">as</span> a protection <span class="keyword">from</span> Thundering herd <span class="title">problem</span> (<span class="params"><span class="literal">default</span> <span class="number">2</span>m0s</span>)</span></span><br><span class="line"><span class="function">-http.disableResponseCompression</span></span><br><span class="line"><span class="function">    Disable compression of HTTP responses <span class="keyword">for</span> saving CPU resources. By <span class="literal">default</span> compression <span class="keyword">is</span> enabled to save network bandwidth</span></span><br><span class="line"><span class="function">-http.idleConnTimeout duration</span></span><br><span class="line"><span class="function">    Timeout <span class="keyword">for</span> incoming idle http <span class="title">connections</span> (<span class="params"><span class="literal">default</span> <span class="number">1</span>m0s</span>)</span></span><br><span class="line"><span class="function">-http.maxGracefulShutdownDuration duration</span></span><br><span class="line"><span class="function">    The maximum duration <span class="keyword">for</span> graceful shutdown of HTTP server. Highly loaded server may require increased <span class="keyword">value</span> <span class="keyword">for</span> graceful <span class="title">shutdown</span> (<span class="params"><span class="literal">default</span> <span class="number">7</span>s</span>)</span></span><br><span class="line"><span class="function">-http.pathPrefix <span class="built_in">string</span></span></span><br><span class="line"><span class="function">    An optional prefix to <span class="keyword">add</span> to all the paths handled <span class="keyword">by</span> http server. For example, <span class="keyword">if</span> &#x27;-http.pathPrefix</span>=/foo/bar<span class="string">&#x27; is set, then all the http requests will be handled on &#x27;</span>/foo/bar<span class="comment">/*&#x27; paths. This may be useful for proxied requests. See https://www.robustperception.io/using-external-urls-and-proxies-with-prometheus</span></span><br><span class="line"><span class="comment">-http.shutdownDelay duration</span></span><br><span class="line"><span class="comment">    Optional delay before http server shutdown. During this dealy the servier returns non-OK responses from /health page, so load balancers can route new requests to other servers</span></span><br><span class="line"><span class="comment">-httpListenAddr string</span></span><br><span class="line"><span class="comment">    Address to listen for http connections (default &quot;:8480&quot;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># /api/v1/import 接口接收的最大数据长度，可以通过max_rows_per_line url参数修改</span></span><br><span class="line"><span class="comment">-import.maxLineLen max_rows_per_line</span></span><br><span class="line"><span class="comment">    The maximum length in bytes of a single line accepted by /api/v1/import; the line length can be limited with max_rows_per_line query arg passed to /api/v1/export</span></span><br><span class="line"><span class="comment">    Supports the following optional suffixes for values: KB, MB, GB, KiB, MiB, GiB (default 104857600)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 单次解析influx数据的最大长度</span></span><br><span class="line"><span class="comment">-influx.maxLineSize value</span></span><br><span class="line"><span class="comment">    The maximum size in bytes for a single Influx line during parsing</span></span><br><span class="line"><span class="comment">    Supports the following optional suffixes for values: KB, MB, GB, KiB, MiB, GiB (default 262144)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># influx地址</span></span><br><span class="line"><span class="comment">-influxListenAddr http://&lt;vminsert&gt;:8480/insert/&lt;accountID&gt;/influx/write</span></span><br><span class="line"><span class="comment">    TCP and UDP address to listen for Influx line protocol data. Usually :8189 must be set. Doesn&#x27;t work if empty. This flag isn&#x27;t needed when ingesting data over HTTP - just send it to http://&lt;vminsert&gt;:8480/insert/&lt;accountID&gt;/influx/write</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 插入influx时的metric名称分隔符</span></span><br><span class="line"><span class="comment">-influxMeasurementFieldSeparator string</span></span><br><span class="line"><span class="comment">    Separator for &#x27;&#123;measurement&#125;&#123;separator&#125;&#123;field_name&#125;&#x27; metric name when inserted via Influx line protocol (default &quot;_&quot;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 使用field_name 最为metric名称，忽略measurement 和 -influxMeasurementFieldSeparator</span></span><br><span class="line"><span class="comment">-influxSkipMeasurement</span></span><br><span class="line"><span class="comment">    Uses &#x27;&#123;field_name&#125;&#x27; as a metric name while ignoring &#x27;&#123;measurement&#125;&#x27; and &#x27;-influxMeasurementFieldSeparator&#x27;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 如果Influx行仅包含一个字段，请使用“ &#123;measurement&#125;”而不是“ &#123;measurement&#125; &#123;separator&#125; &#123;field_name&#125;”作为模板名称</span></span><br><span class="line"><span class="comment">-influxSkipSingleField</span></span><br><span class="line"><span class="comment">    Uses &#x27;&#123;measurement&#125;&#x27; instead of &#x27;&#123;measurement&#125;&#123;separator&#125;&#123;field_name&#125;&#x27; for metic name if Influx line contains only a single field</span></span><br><span class="line"><span class="comment">-influxTrimTimestamp duration</span></span><br><span class="line"><span class="comment">    Trim timestamps for Influx line protocol data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 因为-maxConcurrentInserts 导致的插入队列最大等待时间</span></span><br><span class="line"><span class="comment">-insert.maxQueueDuration duration</span></span><br><span class="line"><span class="comment">    The maximum duration for waiting in the queue for insert requests due to -maxConcurrentInserts (default 1m0s)</span></span><br><span class="line"><span class="comment">-loggerDisableTimestamps</span></span><br><span class="line"><span class="comment">    Whether to disable writing timestamps in logs</span></span><br><span class="line"><span class="comment">-loggerErrorsPerSecondLimit int</span></span><br><span class="line"><span class="comment">    Per-second limit on the number of ERROR messages. If more than the given number of errors are emitted per second, then the remaining errors are suppressed. Zero value disables the rate limit (default 10)</span></span><br><span class="line"><span class="comment">-loggerFormat string</span></span><br><span class="line"><span class="comment">    Format for logs. Possible values: default, json (default &quot;default&quot;)</span></span><br><span class="line"><span class="comment">-loggerLevel string</span></span><br><span class="line"><span class="comment">    Minimum level of errors to log. Possible values: INFO, WARN, ERROR, FATAL, PANIC (default &quot;INFO&quot;)</span></span><br><span class="line"><span class="comment">-loggerOutput string</span></span><br><span class="line"><span class="comment">    Output for the logs. Supported values: stderr, stdout (default &quot;stderr&quot;)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 最大并发插入数，默认值在大多数情况下都是最优解，因为他最大程度的减少了并发开销。和-insert.maxQueueDuration配合使用</span></span><br><span class="line"><span class="comment">-maxConcurrentInserts int</span></span><br><span class="line"><span class="comment">    The maximum number of concurrent inserts. Default value should work for most cases, since it minimizes the overhead for concurrent inserts. This option is tigthly coupled with -insert.maxQueueDuration (default 8)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 单个Prometheus remote_write API请求的最大长度</span></span><br><span class="line"><span class="comment">-maxInsertRequestSize value</span></span><br><span class="line"><span class="comment">    The maximum size in bytes of a single Prometheus remote_write API request</span></span><br><span class="line"><span class="comment">    Supports the following optional suffixes for values: KB, MB, GB, KiB, MiB, GiB (default 33554432)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 每个时序数据能够接受的最大label数量</span></span><br><span class="line"><span class="comment">-maxLabelsPerTimeseries int</span></span><br><span class="line"><span class="comment">    The maximum number of labels accepted per time series. Superflouos labels are dropped (default 30)</span></span><br><span class="line"><span class="comment">-memory.allowedBytes value</span></span><br><span class="line"><span class="comment">    Allowed size of system memory VictoriaMetrics caches may occupy. This option overrides -memory.allowedPercent if set to non-zero value. Too low value may increase cache miss rate, which usually results in higher CPU and disk IO usage. Too high value may evict too much data from OS page cache, which will result in higher disk IO usage</span></span><br><span class="line"><span class="comment">    Supports the following optional suffixes for values: KB, MB, GB, KiB, MiB, GiB (default 0)</span></span><br><span class="line"><span class="comment">-memory.allowedPercent float</span></span><br><span class="line"><span class="comment">    Allowed percent of system memory VictoriaMetrics caches may occupy. See also -memory.allowedBytes. Too low value may increase cache miss rate, which usually results in higher CPU and disk IO usage. Too high value may evict too much data from OS page cache, which will result in higher disk IO usage (default 60)</span></span><br><span class="line"><span class="comment">-opentsdbHTTPListenAddr string</span></span><br><span class="line"><span class="comment">    TCP address to listen for OpentTSDB HTTP put requests. Usually :4242 must be set. Doesn&#x27;t work if empty</span></span><br><span class="line"><span class="comment">-opentsdbListenAddr string</span></span><br><span class="line"><span class="comment">    TCP and UDP address to listen for OpentTSDB metrics. Telnet put messages and HTTP /api/put messages are simultaneously served on TCP port. Usually :4242 must be set. Doesn&#x27;t work if empty</span></span><br><span class="line"><span class="comment">-opentsdbTrimTimestamp duration</span></span><br><span class="line"><span class="comment">    Trim timestamps for OpenTSDB &#x27;telnet put&#x27; data to this duration. Minimum practical duration is 1s. Higher duration (i.e. 1m) may be used for reducing disk space usage for timestamp data (default 1s)</span></span><br><span class="line"><span class="comment">-opentsdbhttp.maxInsertRequestSize value</span></span><br><span class="line"><span class="comment">    The maximum size of OpenTSDB HTTP put request</span></span><br><span class="line"><span class="comment">    Supports the following optional suffixes for values: KB, MB, GB, KiB, MiB, GiB (default 33554432)</span></span><br><span class="line"><span class="comment">-opentsdbhttpTrimTimestamp duration</span></span><br><span class="line"><span class="comment">    Trim timestamps for OpenTSDB HTTP data to this duration. Minimum practical duration is 1ms. Higher duration (i.e. 1s) may be used for reducing disk space usage for timestamp data (default 1ms)</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 标签重置的配置文件路径</span></span><br><span class="line"><span class="comment">-relabelConfig string</span></span><br><span class="line"><span class="comment">    Optional path to a file with relabeling rules, which are applied to all the ingested metrics. See https://victoriametrics.github.io/#relabeling for details</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># 副本数，即在-storageNode要复制多少个副本。当-replicationFactor&gt;1时，vmselect必须以-dedup.minScrapeInterval=1ms运行，以进行重复数据的删除。~~vmselect的-dedup.minScrapeInterval 可以大一些~~</span></span><br><span class="line"><span class="comment">-replicationFactor int</span></span><br><span class="line"><span class="comment">    Replication factor for the ingested data, i.e. how many copies to make among distinct -storageNode instances. Note that vmselect must run with -dedup.minScrapeInterval=1ms for data de-duplication when replicationFactor is greater than 1. Higher values for -dedup.minScrapeInterval at vmselect is OK (default 1)</span></span><br><span class="line"><span class="comment">-rpc.disableCompression</span></span><br><span class="line"><span class="comment">    Disable compression of RPC traffic. This reduces CPU usage at the cost of higher network bandwidth usage</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"># vmstorage节点列表</span></span><br><span class="line"><span class="comment">-storageNode array</span></span><br><span class="line"><span class="comment">    Address of vmstorage nodes; usage: -storageNode=vmstorage-host1:8400 -storageNode=vmstorage-host2:8400</span></span><br><span class="line"><span class="comment">    Supports array of values separated by comma or specified via multiple flags.</span></span><br><span class="line"><span class="comment">-tls</span></span><br><span class="line"><span class="comment">    Whether to enable TLS (aka HTTPS) for incoming requests. -tlsCertFile and -tlsKeyFile must be set if -tls is set</span></span><br><span class="line"><span class="comment">-tlsCertFile string</span></span><br><span class="line"><span class="comment">    Path to file with TLS certificate. Used only if -tls is set. Prefer ECDSA certs instead of RSA certs, since RSA certs are slow</span></span><br><span class="line"><span class="comment">-tlsKeyFile string</span></span><br><span class="line"><span class="comment">    Path to file with TLS key. Used only if -tls is set</span></span><br><span class="line"><span class="comment">-version</span></span><br><span class="line"><span class="comment">    Show VictoriaMetrics version</span></span><br></pre></td></tr></table></figure>

<p>vmselect</p>
<figure class="highlight swift"><table><tr><td class="code"><pre><span class="line"><span class="operator">./</span>vmselect<span class="operator">-</span>prod <span class="operator">--</span>help</span><br><span class="line">vmselect<span class="operator">-</span><span class="number">20201116</span><span class="operator">-</span><span class="number">190952</span><span class="operator">-</span>tags<span class="operator">-</span>v1.<span class="number">47.0</span><span class="operator">-</span>cluster<span class="operator">-</span><span class="number">0</span><span class="operator">-</span>ga00df790b</span><br><span class="line"><span class="type">Usage</span> of <span class="operator">./</span>vmselect<span class="operator">-</span>prod:</span><br><span class="line"></span><br><span class="line"># 缓存文件的存储地址，如果不配置则不启用缓存</span><br><span class="line"><span class="operator">-</span>cacheDataPath string</span><br><span class="line">    <span class="type">Path</span> to directory <span class="keyword">for</span> cache files. <span class="type">Cache</span> isn&#x27;t saved <span class="keyword">if</span> empty</span><br><span class="line"></span><br><span class="line"># 如果同一个metric的两条数据时间差小于该值，则作为重复数据删除<span class="operator">。</span>如果为<span class="number">0</span>则不启用去重；</span><br><span class="line"><span class="operator">-</span>dedup.minScrapeInterval duration</span><br><span class="line">    <span class="type">Remove</span> superflouos samples from time series <span class="keyword">if</span> they are located closer to <span class="keyword">each</span> other than this duration. <span class="type">This</span> may be useful <span class="keyword">for</span> reducing overhead when multiple identically configured <span class="type">Prometheus</span> instances write data to the same <span class="type">VictoriaMetrics</span>. <span class="type">Deduplication</span> <span class="keyword">is</span> disabled <span class="keyword">if</span> the <span class="operator">-</span>dedup.minScrapeInterval <span class="keyword">is</span> <span class="number">0</span></span><br><span class="line"><span class="operator">-</span>enableTCP6</span><br><span class="line">    <span class="type">Whether</span> to enable <span class="type">IPv6</span> <span class="keyword">for</span> listening and dialing. <span class="type">By</span> <span class="keyword">default</span> only <span class="type">IPv4</span> <span class="type">TCP</span> <span class="keyword">is</span> used</span><br><span class="line"><span class="operator">-</span>envflag.enable</span><br><span class="line">    <span class="type">Whether</span> to enable reading flags from environment variables additionally to command line. <span class="type">Command</span> line flag values have priority over values from environment vars. <span class="type">Flags</span> are read only from command line <span class="keyword">if</span> this flag isn&#x27;t <span class="keyword">set</span></span><br><span class="line"><span class="operator">-</span>envflag.prefix string</span><br><span class="line">    <span class="type">Prefix</span> <span class="keyword">for</span> environment variables <span class="keyword">if</span> <span class="operator">-</span>envflag.enable <span class="keyword">is</span> <span class="keyword">set</span></span><br><span class="line"><span class="operator">-</span>fs.disableMmap</span><br><span class="line">    <span class="type">Whether</span> to use pread() instead of mmap() <span class="keyword">for</span> reading data files. <span class="type">By</span> <span class="keyword">default</span> mmap() <span class="keyword">is</span> used <span class="keyword">for</span> <span class="number">64</span><span class="operator">-</span>bit arches and pread() <span class="keyword">is</span> used <span class="keyword">for</span> <span class="number">32</span><span class="operator">-</span>bit arches, since they cannot read data files bigger than <span class="number">2</span><span class="operator">^</span><span class="number">32</span> bytes <span class="keyword">in</span> memory. mmap() <span class="keyword">is</span> usually faster <span class="keyword">for</span> reading small data chunks than pread()</span><br><span class="line"><span class="operator">-</span>http.connTimeout duration</span><br><span class="line">    <span class="type">Incoming</span> http connections are closed after the configured timeout. <span class="type">This</span> may help spreading incoming load among a cluster of services behind load balancer. <span class="type">Note</span> that the real timeout may be bigger by up to <span class="number">10</span><span class="operator">%</span> <span class="keyword">as</span> a protection from <span class="type">Thundering</span> herd problem (<span class="keyword">default</span> 2m0s)</span><br><span class="line"><span class="operator">-</span>http.disableResponseCompression</span><br><span class="line">    <span class="type">Disable</span> compression of <span class="type">HTTP</span> responses <span class="keyword">for</span> saving <span class="type">CPU</span> resources. <span class="type">By</span> <span class="keyword">default</span> compression <span class="keyword">is</span> enabled to save network bandwidth</span><br><span class="line"><span class="operator">-</span>http.idleConnTimeout duration</span><br><span class="line">    <span class="type">Timeout</span> <span class="keyword">for</span> incoming idle http connections (<span class="keyword">default</span> 1m0s)</span><br><span class="line"><span class="operator">-</span>http.maxGracefulShutdownDuration duration</span><br><span class="line">    <span class="type">The</span> maximum duration <span class="keyword">for</span> graceful shutdown of <span class="type">HTTP</span> server. <span class="type">Highly</span> loaded server may require increased value <span class="keyword">for</span> graceful shutdown (<span class="keyword">default</span> 7s)</span><br><span class="line"><span class="operator">-</span>http.pathPrefix string</span><br><span class="line">    <span class="type">An</span> <span class="keyword">optional</span> <span class="keyword">prefix</span> to add to all the paths handled by http server. <span class="type">For</span> example, <span class="keyword">if</span> &#x27;<span class="operator">-</span>http.pathPrefix<span class="operator">=/</span>foo<span class="regexp">/bar&#x27; is set, then all the http requests will be handled on &#x27;/</span>foo<span class="regexp">/bar/</span><span class="operator">*</span>&#x27; paths. <span class="type">This</span> may be useful <span class="keyword">for</span> proxied requests. <span class="type">See</span> https:<span class="comment">//www.robustperception.io/using-external-urls-and-proxies-with-prometheus</span></span><br><span class="line"><span class="operator">-</span>http.shutdownDelay duration</span><br><span class="line">    <span class="type">Optional</span> delay before http server shutdown. <span class="type">During</span> this dealy the servier returns non<span class="operator">-</span><span class="type">OK</span> responses from <span class="operator">/</span>health page, so load balancers can route new requests to other servers</span><br><span class="line"><span class="operator">-</span>httpListenAddr string</span><br><span class="line">    <span class="type">Address</span> to listen <span class="keyword">for</span> http connections (<span class="keyword">default</span> <span class="string">&quot;:8481&quot;</span>)</span><br><span class="line"><span class="operator">-</span>loggerDisableTimestamps</span><br><span class="line">    <span class="type">Whether</span> to disable writing timestamps <span class="keyword">in</span> logs</span><br><span class="line"><span class="operator">-</span>loggerErrorsPerSecondLimit int</span><br><span class="line">    <span class="type">Per</span><span class="operator">-</span>second limit on the number of <span class="type">ERROR</span> messages. <span class="type">If</span> more than the given number of errors are emitted per second, then the remaining errors are suppressed. <span class="type">Zero</span> value disables the rate limit (<span class="keyword">default</span> <span class="number">10</span>)</span><br><span class="line"><span class="operator">-</span>loggerFormat string</span><br><span class="line">    <span class="type">Format</span> <span class="keyword">for</span> logs. <span class="type">Possible</span> values: <span class="keyword">default</span>, json (<span class="keyword">default</span> <span class="string">&quot;default&quot;</span>)</span><br><span class="line"><span class="operator">-</span>loggerLevel string</span><br><span class="line">    <span class="type">Minimum</span> level of errors to log. <span class="type">Possible</span> values: <span class="type">INFO</span>, <span class="type">WARN</span>, <span class="type">ERROR</span>, <span class="type">FATAL</span>, <span class="type">PANIC</span> (<span class="keyword">default</span> <span class="string">&quot;INFO&quot;</span>)</span><br><span class="line"><span class="operator">-</span>loggerOutput string</span><br><span class="line">    <span class="type">Output</span> <span class="keyword">for</span> the logs. <span class="type">Supported</span> values: stderr, stdout (<span class="keyword">default</span> <span class="string">&quot;stderr&quot;</span>)</span><br><span class="line"><span class="operator">-</span>memory.allowedBytes value</span><br><span class="line">    <span class="type">Allowed</span> size of system memory <span class="type">VictoriaMetrics</span> caches may occupy. <span class="type">This</span> option overrides <span class="operator">-</span>memory.allowedPercent <span class="keyword">if</span> <span class="keyword">set</span> to non<span class="operator">-</span>zero value. <span class="type">Too</span> low value may increase cache miss rate, which usually results <span class="keyword">in</span> higher <span class="type">CPU</span> and disk <span class="type">IO</span> usage. <span class="type">Too</span> high value may evict too much data from <span class="type">OS</span> page cache, which will result <span class="keyword">in</span> higher disk <span class="type">IO</span> usage</span><br><span class="line">    <span class="type">Supports</span> the following <span class="keyword">optional</span> suffixes <span class="keyword">for</span> values: <span class="type">KB</span>, <span class="type">MB</span>, <span class="type">GB</span>, <span class="type">KiB</span>, <span class="type">MiB</span>, <span class="type">GiB</span> (<span class="keyword">default</span> <span class="number">0</span>)</span><br><span class="line"><span class="operator">-</span>memory.allowedPercent float</span><br><span class="line">    <span class="type">Allowed</span> percent of system memory <span class="type">VictoriaMetrics</span> caches may occupy. <span class="type">See</span> also <span class="operator">-</span>memory.allowedBytes. <span class="type">Too</span> low value may increase cache miss rate, which usually results <span class="keyword">in</span> higher <span class="type">CPU</span> and disk <span class="type">IO</span> usage. <span class="type">Too</span> high value may evict too much data from <span class="type">OS</span> page cache, which will result <span class="keyword">in</span> higher disk <span class="type">IO</span> usage (<span class="keyword">default</span> <span class="number">60</span>)</span><br><span class="line"></span><br><span class="line"># 当前时间和响应数据的最大差值，只查询原始数据，不适用缓存<span class="operator">。</span>如果发现数据源和<span class="type">VictoriaMetrics之间的时间同步存在问题，请增加此值</span><span class="operator">。</span></span><br><span class="line"><span class="operator">-</span>search.cacheTimestampOffset duration</span><br><span class="line">    <span class="type">The</span> maximum duration since the current time <span class="keyword">for</span> response data, which <span class="keyword">is</span> always queried from the original raw data, without using the response cache. <span class="type">Increase</span> this value <span class="keyword">if</span> you see gaps <span class="keyword">in</span> responses due to time synchronization issues between <span class="type">VictoriaMetrics</span> and data sources (<span class="keyword">default</span> 5m0s)</span><br><span class="line"></span><br><span class="line"># 如果部分<span class="operator">-</span>storageNode实例无法执行查询时，是否拒绝部分响应<span class="operator">。</span>此项在保证一致性的时候牺牲了可用性</span><br><span class="line"><span class="operator">-</span>search.denyPartialResponse</span><br><span class="line">    <span class="type">Whether</span> to deny partial responses <span class="keyword">if</span> a part of <span class="operator">-</span>storageNode instances fail to perform queries; this trades availability over consistency; see also <span class="operator">-</span>search.maxQueryDuration and <span class="operator">-</span>search.storageTimeout</span><br><span class="line"></span><br><span class="line"># 禁止返回数据缓存<span class="operator">。</span>此项在数据回填时候很有用</span><br><span class="line"><span class="operator">-</span>search.disableCache</span><br><span class="line">    <span class="type">Whether</span> to disable response caching. <span class="type">This</span> may be useful during data backfilling</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="operator">-</span>search.latencyOffset duration</span><br><span class="line">    <span class="type">The</span> time when data points become visible <span class="keyword">in</span> query results after the collection. <span class="type">Too</span> small value can result <span class="keyword">in</span> incomplete last points <span class="keyword">for</span> query results (<span class="keyword">default</span> 30s)</span><br><span class="line"></span><br><span class="line"># 在日志中记录超过此时间的查询<span class="operator">。</span><span class="number">0</span>则禁用慢查询日志</span><br><span class="line"><span class="operator">-</span>search.logSlowQueryDuration duration</span><br><span class="line">    <span class="type">Log</span> queries with execution time exceeding this value. <span class="type">Zero</span> disables slow query logging (<span class="keyword">default</span> 5s)</span><br><span class="line"></span><br><span class="line"># 查询搜索的并发数，不应该很大，因为单个搜索有可能让所有cpu饱和<span class="operator">。</span></span><br><span class="line"><span class="operator">-</span>search.maxConcurrentRequests int</span><br><span class="line">    <span class="type">The</span> maximum number of concurrent search requests. <span class="type">It</span> shouldn&#x27;t be high, since a single request can saturate all the <span class="type">CPU</span> cores. <span class="type">See</span> also <span class="operator">-</span>search.maxQueueDuration (<span class="keyword">default</span> <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line"># <span class="regexp">/api/</span>v1<span class="operator">/</span>export 导出接口的最大持续时间</span><br><span class="line"><span class="operator">-</span>search.maxExportDuration duration</span><br><span class="line">    <span class="type">The</span> maximum duration <span class="keyword">for</span> <span class="regexp">/api/</span>v1<span class="operator">/</span>export call (<span class="keyword">default</span> 720h0m0s)</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"><span class="operator">-</span>search.maxLookback duration</span><br><span class="line">    <span class="type">Synonim</span> to <span class="operator">-</span>search.lookback<span class="operator">-</span>delta from <span class="type">Prometheus</span>. <span class="type">The</span> value <span class="keyword">is</span> dynamically detected from interval between time series datapoints <span class="keyword">if</span> not <span class="keyword">set</span>. <span class="type">It</span> can be overridden on per<span class="operator">-</span>query basis via max_lookback arg. <span class="type">See</span> also &#x27;<span class="operator">-</span>search.maxStalenessInterval&#x27; flag, which has the same meaining due to historical reasons</span><br><span class="line"></span><br><span class="line"># 一个请求中单个时间序列的最大点数</span><br><span class="line"><span class="operator">-</span>search.maxPointsPerTimeseries int</span><br><span class="line">    <span class="type">The</span> maximum points per a single timeseries returned from the search (<span class="keyword">default</span> <span class="number">30000</span>)</span><br><span class="line"></span><br><span class="line"># 查询执行的最大持续时间</span><br><span class="line"><span class="operator">-</span>search.maxQueryDuration duration</span><br><span class="line">    <span class="type">The</span> maximum duration <span class="keyword">for</span> query execution; see also <span class="operator">-</span>search.storageTimeout (<span class="keyword">default</span> 30s)</span><br><span class="line"></span><br><span class="line"># 查询语句长度的最大字节数</span><br><span class="line"><span class="operator">-</span>search.maxQueryLen value</span><br><span class="line">    <span class="type">The</span> maximum search query length <span class="keyword">in</span> bytes</span><br><span class="line">    <span class="type">Supports</span> the following <span class="keyword">optional</span> suffixes <span class="keyword">for</span> values: <span class="type">KB</span>, <span class="type">MB</span>, <span class="type">GB</span>, <span class="type">KiB</span>, <span class="type">MiB</span>, <span class="type">GiB</span> (<span class="keyword">default</span> <span class="number">16384</span>)</span><br><span class="line"></span><br><span class="line"># 达到 <span class="operator">-</span>search.maxConcurrentRequests 时，查询请求的最大等待时间</span><br><span class="line"><span class="operator">-</span>search.maxQueueDuration duration</span><br><span class="line">    <span class="type">The</span> maximum time the request waits <span class="keyword">for</span> execution when <span class="operator">-</span>search.maxConcurrentRequests limit <span class="keyword">is</span> reached; see also <span class="operator">-</span>search.maxQueryDuration (<span class="keyword">default</span> 10s)</span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"><span class="operator">-</span>search.maxStalenessInterval duration</span><br><span class="line">    <span class="type">The</span> maximum interval <span class="keyword">for</span> staleness calculations. <span class="type">By</span> <span class="keyword">default</span> it <span class="keyword">is</span> automatically calculated from the median interval between samples. <span class="type">This</span> flag could be useful <span class="keyword">for</span> tuning <span class="type">Prometheus</span> data model closer to <span class="type">Influx</span><span class="operator">-</span>style data model. <span class="type">See</span> https:<span class="comment">//prometheus.io/docs/prometheus/latest/querying/basics/#staleness for details. See also &#x27;-search.maxLookback&#x27; flag, which has the same meaning due to historical reasons</span></span><br><span class="line"></span><br><span class="line"># </span><br><span class="line"><span class="operator">-</span>search.minStalenessInterval duration</span><br><span class="line">    <span class="type">The</span> minimum interval <span class="keyword">for</span> staleness calculations. <span class="type">This</span> flag could be useful <span class="keyword">for</span> removing gaps on graphs generated from time series with irregular intervals between samples. <span class="type">See</span> also &#x27;<span class="operator">-</span>search.maxStalenessInterval&#x27;</span><br><span class="line"></span><br><span class="line"># 可选authKey，用于通过<span class="regexp">/internal/</span>resetRollupResultCache 接口来重置缓存</span><br><span class="line"><span class="operator">-</span>search.resetCacheAuthKey string</span><br><span class="line">    <span class="type">Optional</span> authKey <span class="keyword">for</span> resetting rollup cache via <span class="regexp">/internal/</span>resetRollupResultCache call</span><br><span class="line"></span><br><span class="line"># 在每个存储上的查询超时时间<span class="operator">。</span>该项允许某些storage节点查询缓慢时，返回部分查询数据</span><br><span class="line"><span class="operator">-</span>search.storageTimeout duration</span><br><span class="line">    <span class="type">The</span> timeout <span class="keyword">for</span> per<span class="operator">-</span>storage query processing; this allows returning partial responses <span class="keyword">if</span> certain <span class="operator">-</span>storageNode instances slowly process the query; see also <span class="operator">-</span>search.maxQueryDuration and <span class="operator">-</span>search.denyPartialResponse command<span class="operator">-</span>line flags</span><br><span class="line"></span><br><span class="line"><span class="operator">-</span>search.treatDotsAsIsInRegexps</span><br><span class="line">    <span class="type">Whether</span> to treat dots <span class="keyword">as</span> <span class="keyword">is</span> <span class="keyword">in</span> regexp label filters used <span class="keyword">in</span> queries. <span class="type">For</span> example, foo&#123;bar<span class="operator">=~</span><span class="string">&quot;a.b.c&quot;</span>&#125; will be automatically converted to foo&#123;bar<span class="operator">=~</span><span class="string">&quot;a<span class="subst">\\</span>.b<span class="subst">\\</span>.c&quot;</span>&#125;, i.e. all the dots <span class="keyword">in</span> regexp filters will be automatically escaped <span class="keyword">in</span> order to match only dot char instead of matching <span class="keyword">any</span> char. <span class="type">Dots</span> <span class="keyword">in</span> <span class="string">&quot;.+&quot;</span>, <span class="string">&quot;.*&quot;</span> and <span class="string">&quot;.&#123;n&#125;&quot;</span> regexps aren&#x27;t escaped. <span class="type">Such</span> escaping can be useful when querying <span class="type">Graphite</span> data</span><br><span class="line"></span><br><span class="line"># 查询节点列表<span class="operator">。</span></span><br><span class="line"><span class="operator">-</span>selectNode array</span><br><span class="line">    <span class="type">Addresses</span> of vmselect nodes; usage: <span class="operator">-</span>selectNode<span class="operator">=</span>vmselect<span class="operator">-</span>host1:<span class="number">8481</span> <span class="operator">-</span>selectNode<span class="operator">=</span>vmselect<span class="operator">-</span>host2:<span class="number">8481</span></span><br><span class="line">    <span class="type">Supports</span> array of values separated by comma or specified via multiple flags.</span><br><span class="line"></span><br><span class="line"># 存储节点列表</span><br><span class="line"><span class="operator">-</span>storageNode array</span><br><span class="line">    <span class="type">Addresses</span> of vmstorage nodes; usage: <span class="operator">-</span>storageNode<span class="operator">=</span>vmstorage<span class="operator">-</span>host1:<span class="number">8401</span> <span class="operator">-</span>storageNode<span class="operator">=</span>vmstorage<span class="operator">-</span>host2:<span class="number">8401</span></span><br><span class="line">    <span class="type">Supports</span> array of values separated by comma or specified via multiple flags.</span><br><span class="line"><span class="operator">-</span>tls</span><br><span class="line">    <span class="type">Whether</span> to enable <span class="type">TLS</span> (aka <span class="type">HTTPS</span>) <span class="keyword">for</span> incoming requests. <span class="operator">-</span>tlsCertFile and <span class="operator">-</span>tlsKeyFile must be <span class="keyword">set</span> <span class="keyword">if</span> <span class="operator">-</span>tls <span class="keyword">is</span> <span class="keyword">set</span></span><br><span class="line"><span class="operator">-</span>tlsCertFile string</span><br><span class="line">    <span class="type">Path</span> to file with <span class="type">TLS</span> certificate. <span class="type">Used</span> only <span class="keyword">if</span> <span class="operator">-</span>tls <span class="keyword">is</span> <span class="keyword">set</span>. <span class="type">Prefer</span> <span class="type">ECDSA</span> certs instead of <span class="type">RSA</span> certs, since <span class="type">RSA</span> certs are slow</span><br><span class="line"><span class="operator">-</span>tlsKeyFile string</span><br><span class="line">    <span class="type">Path</span> to file with <span class="type">TLS</span> key. <span class="type">Used</span> only <span class="keyword">if</span> <span class="operator">-</span>tls <span class="keyword">is</span> <span class="keyword">set</span></span><br><span class="line"><span class="operator">-</span>version</span><br><span class="line">    <span class="type">Show</span> <span class="type">VictoriaMetrics</span> version</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>VictoriaMetrics集群介绍及部署脚本</title>
    <url>/2023/12/21/VictoriaMetrics%E9%9B%86%E7%BE%A4%E4%BB%8B%E7%BB%8D%E5%8F%8A%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="a7c8896d0690faaa89b52c62c2c432e95855fe60f738c4adb63edaa9996a0a6c"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix 6.0：原生高可用(HA)方案部署</title>
    <url>/2023/12/28/Zabbix-6-0%EF%BC%9A%E5%8E%9F%E7%94%9F%E9%AB%98%E5%8F%AF%E7%94%A8-HA-%E6%96%B9%E6%A1%88%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="405ffb927d6c383974adc3acfe4bec906c2619695835689d5c95b1a0787b1408">e7ba8c557daacf3e291265d63c77fd18630f03d30a787ca543a9b9b04422fcba3996cc3c17e1b338af8f28712521afe9761bd6e20df150c048955b9935f0733ea89604a5352d83f2a9c4636ca04c319f62b619a86244365f218933ed5139e395f80f140cf8df0ec7de8fc462fec165309e2d4f680bdb66d859d8810451a8e9e413d187f67dc3e227f5acc4d0b47a5b7d1ccd892144da2e93b5be4e5d734e7e8de68dd070dbfc159de0fb11d3715c3dc13e1e9290517d63bbfc189668094aae093c52cc32548991f51069173e401ac29214a669d79b5da60765c79eb3bcf7f9378ac412e1090300a1e1e1231bf3fb096ae605c6188e271c19ba576b780e2d621d2732980919f9b89bfcb0c2b451e031bc8519ac9a1607501ff856b88da442c38901ad14874363290bee7c813f6e05faa3117d5dc11158c8b2bd3045ed6256783a8ecda7aff1c68d072a70b322749610ca92cee9002c992bd7344d3fe28a85b548c2710f7d648520e49f96b59d07c5e62a5e8b5d0591b4e08751610d9537771536c1dc6880aa9550cc7e520a0661f403f7fba4d3303eb39d2b1b02a4cf3b34a5f2a18f54ed60a9bbabed2460071f848ce7b5f4284c1c49a2fd766a4fb929bc82167c6c52ebbbe8938735c71e1e591512b279487282e70dd8f26ea5ac006d5e8d14964aed1fb5e5d27b0beb4f8c251c7efb9e9bfdbbfbfa7c8632cd4ba1da400b9f7330611c50cd7fe4a67dca4d0562e58fd96ad4052c32c566bb49a24fd795f97a619b4b48a4d1b21a55fee042403ec8ac1d5c6bd6c3049db3c607c6b1e9d1f49aea5db729fa8519a94a10a13b8fa967b2c751f5ba50d01bd47cd4ef0e825135030b0fc9ae51aabe214cbc24c7bff50baf35a210925d2cbb2b9d30e2d2716fd3df605bb7d371d15928c8bf9960e216b9755aaec3de2699b9e1caeee7cbaf212a184b87886b9f4f1f07ddd9ed8bde596b2f381dce847a7996937d28b744f5d35d9ae49e488295afd2263f5e5c2657ca8cce7c192166fac62abeb109e77422b5829411dcd6707f7963754b720893cc74e2742897678118041f90fa3aa1b27a689eca17ed0caa28bdea53e42313890180933d7cba6e21a3580aac7c214d8ba0bc28dfb73ad0c663a589aab24e37e73ef6d6f404bdc4c96795fe1651ab8c2e7c301ad5c238ea05a4df0e0ad4ab233260d2bf58116e3e8f279fed78974266a7a67ec4b6c0b70bcb8eb606882bc4543c896ce658afb60d15071f6203a547aa29690bceb25a72aa9b027fddbcdd18aad56e4c5dbec8b56a0cf7345f1ab997403e5e6ea92d6c4b0ac988845f54b8543e2bfb32d0a93ae05bca2436ad3326ec39eb87f6d347011b985fb6c29f7233de70c4ccf423f22406241f5fefab701c2640dae4ff234dfb4ec62fb42b6df670039dc6f1a9701e46fe8215127d09e617e222107a9562b03831bbe88665217c599dbd9d09d4e61d66b287c5f99024c1ce532fba04052e5f46255a5c9eedc6e67b6d5443153864edd237e09b4d201a32b39e20d85d840aebe6874f574b582887ebb91a437670f11cfdfefe79bc7839398d222f080d1bcf7f57d0041052cbcbefe6057cc161303b22c02a9e8b55f2b0303b9527b10f86962e3ca71a9eddfb7a28d8c394473736c8a51824ce2042fcd4ea5e5d32688abd614579f6d8d1a320260dd9d54d1d265ff04d2b23b09cb0583d3697e3a8c3d0dde19a7f468dc7315bbf04f7c6fdac92b2991540f836f0bac842377c54dbcc8fd89be326ca3f66bb72e419ae865d8a2f98db35d84c4ca4675d0fdbec5e751b963d7061cbb72863cd9b45e648197ac5ae06f536dc5365876c9b3bd73dbf3226efb3f6dfbe5c873365105b37cd6216f3688e748cf897f1debebadc757a2c45999c0a65cc6e1f54ab289490a1979c11ce77e12292daa0cfa5a8f2e9c44a21cf952b806c123afb260f8196991aba9951075a2cf3c164c992d4234750caabd2b6f94c0215c1fb00ea8ae6dcaf97927adc89209192826c9956ad77c7d11c4e67101565c8df256dfb8b4f6eb8c9eeed44c8624365670b9efe9aebff0e04648637cb2f79d79fe919d22a7fb8d5a350b5bdf2e55c4e7407b59ad1a262cf68812b1b2f7dcd3f29768d7994e7bb7d7c454861907bbdfce9d9c481df24416a5730c9adc5a07a0eb9fbf740ca69681d7a49e2da8aece76931c001debaed5ba3c900f8c6f8c561b5d656bc3b8661779dbb222a82e45a3753cb19e352b7f638128551c7ed0110c80ef296f30259721dadfcdd0b40d1301abca4a51ec56ce8e4072e83f0ba3b6c0e9c8271923e098d375e101e5f2b690b028832fcc848b51b379a6cd44405cb60a86ab0f7b573d005c24178657ff4d752dbf2d4447c330caa830e7beecf42e6679686fa43f4db414b47049ef98d756d1d1018a64ebfed49266b239cc2a7982b363ce5a7a2bf57190dc4035feff8e1da543e98a5ed6bd5b4e754d26783cc8509f05a6f13956c8f50cf889e191c70903c96d1d08bd4fd9708d3f2a2b8b675090c0619e928df7c1c194734429e74e5c2180f49f3cff835e00c8668d8ad5ff615c3d0d2f9228fd775687b8e9b3662445f940480aca74970f8d14ed7a5261213d048572bb755ddb7bca093c42ad3d4f06b8a3c892a5909a781177aea20c2f87676d2290d887af8f741ae73dc0f16b32a0d6588f2232543e6b1c7ba5ef90622915e3c2107721e61f9fc3c960899c44bf86bd176fbe5ba3665ba0e9dbedcdf4510af086bf09136b9cba473eee3aa54095500037746679ffa6d6d2cbbb30c0544fd02337710e8a06d3505fab4a10f048ca07b2b156ca334d62a296c8ca0003cbdffef1ab449f8318102670d17597842db82bdebe3aeeddad4ce43f8bfd5eda132db1a76cd0dbfa402691fae8cfbdce11c70c2baf05d5d258eb48cb5c4ce3b0dd50b4ce71558b744910c5a0b6c790b56985e9aa1e5b4c371c5bc00298067bed7500dee283793e6bf8657acb2b8bbe431cea875c04ba2dc8800e5d16006c12445ef5630beafbed14fec39eb18ea10cbe1c862ba89eef0274e129f4935244cfc3af46aa701813365379c23b7d4266dd8d51afdb3b32d1cd7facebba25d90aae428f5aefe56e2f86b93de17ac46b245cccb869e31c716e4047b67561e8def7dafb75f3f42f56123cf97e3a7e11988b9f92d719038b6ddafb16b67bb066e606bc951021bef6548dd8f2a8c18dcf0e22202c84e977dedac322b60a8bd3b68d2766321ed97ce8787879dd5d68924cd2ee6452dc18b7c7d44cfe8dc45068327c13e019cb49e06a330c124091ab6f09cd0282646f6903b69ae6c11ac9fcaaa95678fcd747ddfbfb3e38983dc338c7e74ca2c271ce00479d14fe4d4a08c9079e34564140d2452c53b9e1020caaceef6d2d71b10ed9ed9ad99cad0e5cae77235727cc7c148edfbfab182f0ab762cb6e693153bf4bf84701a99d479062b4f92639f328222ecdf58a212f112319dd56e8701052ba6472b631a5915c0b7236719995f48596d3b6164425ebb6d40db4b125c852353d04e33b497e922d57e2aa00d43ee5f80180d9428fc5baa78b75d09811f223cb111a538eb194e4e017c06564dd687c5169993d802ec1f9a556e0d3cfe77adaba03c477400289d6e23abc3e076639fbce3c0e04f8b68ae362262684a8f47cd6edcce822db73adca8b4e8893eac6bc0b4c7ffdcb575777ef71a01921c6ca5896c4d45a244d274e8e6c22f84f3fabdedb4e51aaaa4f0e1aba0d238de2f8173a57ed0e2a565cf5746cb9454b7a7b74791756e399ef7abceef0acd2c2a1f49b45785e0b974a56ec63b4d5b711d68bad99523dff595b4967bc77ae3e961e7e0d7c0ba8b15882b17b4b93555ea262e6f4a9905fda898fff34f763920172fd298625b92c6a8f859f6bc0ba6a9bc806fcfb0b67eba8b0ba410152783994a657290bc39b58ed1991ef758b3de107441f91bbe116d8c09f4219a209353d95755742a636318a8cb542cbb584561d5c8e622e1792a98e3b71d409e725225f7d626a8a42ba4153941819d9715d2d3512a3b828d20d92f874b430ac6dfb429059f08d901919d600c325a46b4a75e1bf65c0c43be572bf3c9d5d1055ed2ae09510f8288432f1778616231aff7b7a11a204e4056341ed893f77b3f496aafc7e83c253f670af31654f571e7aaaee3395fd8bfca377c18a623c4bdfe89dff963c0a84bb1af48c1a10c06f84ca716c5c6bf3bbde7a5c3ae9bc3935975a6058ddd028b295cad8416e722d7b310848968af2d47f6649b172d9789d816da95a58d246b271e006e2134f70c09910f431dd4b9562624849bbd41602225e000ed73c1efad7fe0b5fdb91149cee6d593e3a38bedf59fd5f8f96b0cca7b4a33345c3eeea6a83504c313f4213f7102793d0752abea01a0696a053cfe53fd3f523ec301212e0d38876c937499dd1c0aeeafa26fc8c342a37b05da30563f819dd225b169508961ba537d4956166173fa61d9e2aa2308b4e0aa383c7412a5c98e340f03024aada276c93f151fef179e51cd638df025fbfd266d065e7030d0811483ca07c66e17f96723e1cecc09610d7e5f72f6e8f67e6784a2748bf17918e83f55fb1e3c12ce50362c4a92ec1172b226a7f79b10af47c071d90b75bdacae73349e832817abcf4ea45189d5a25a1a40203606e940c9143270b8053625c471cc0619b90854c144dc27fe856b0c9ea7ef70c61c03e5174a126b4f15cf4e2a6b7a7bde37281aace209b1ac38a68094ea9b676518ac64dfd48cb25e0f27633a1d4c4582ef31f549de29a09eb5ddbe8dcae42da7ece6dce9d91806cc1bc461ee364ddddd57f9afb0089c998d9db26eb1a4569649144314a6131634df815b10fc7387b1ee58ff6f6ed248c4bba3fdd438a113f4f43561671046da27ec0972b01435ed51730aa6b2d001f25c654ffba646a9615a71bfb24880b3b5aa8d270941716d9ee34de1aaccc4511c76a1cbf5789642fb4733b0cc34d7f1952f117f20cff502011a53bad529d3bb55f2645f0dd4e7959022a299e526267f92c8e7279225ad3fc81b0a91973cb1209f20e5baa7f2739b54fa967e1beb4336b173b0128062b793cd3b3eb8d0521f4c1990230de4e6ab0d488d3a75cbc85087da68b7ea69e86c604882fe72aef1f8eedf230dad8fbba172d9a793c82a4f1610833c567ffa00a33073ec9b6cdb5181db26b7e6ee3eeb4ba21ea4d0edfde73c43349e1012fed04e48392f2db68555e4b5854721a451e714618aa54fe5b679efa5b89a96740ea9acdc04f919f2c2891c6d1c25b5a1aa89553eda93122c9ff8125b02fad005132603d2c82b6f1c0c9303746cc0fd57819a9ed58d33630f6a02a47f8f0ed8cd3622958625573a9afbcea0276347980621db573226666086a062782786e0b0c4c0f7bca28bf2ccb23eea4cf4921510fec5e908275dba75a03d977799ead618b14c8d2531a3efe5949e7fad212e356b0e5fbb852746167a1070476976d9155e06cfe8cad109ceed52274756d8ee01f2e54b30d6d32d0a1a022a141e478b0174e31324eba100e66010314a198630c1fb7b09df0b5de24f86070f907efea7b51cad9ddc80cf5d4b749931bf0bd721fefb5fddf98cf727ea59ff175878c82265b08f721b49b6c973bb71deb0dcad28f59fdd67a301d4d306bc4f3657fb9471ea07500b5c086f028aea8fce433645c116c26f5be91c7745b09c5cef9daa57bbbfad11e7400df3b70a8d5f79fe2dc748abdb3b826cc62ed17c52c63f27e8f441a774c5f37011adcb52d69c5a4d871d56380a784cfadb41cc37fdb7b9b1062dbf519b60ce83cb158454902f32fc520eb4b71445441590379e52f58336b34bb00942eee325e0df35dde2bda7b6020c56a241edd2dbb640605a2be083ad47d15625da28008b9a2c129f169bf9982fc4e64e1857e9c2b650130ce2e16348593dbec6385adc7ebe4223430a41bc348da14be4f4831592b167d7c927bd6f92255f7377192db5a44788bedacd87e666440a5bc6cf5f71512f4c18418bc95915625912e22b9650b8369d20f64292e27d2e334fad3a1be1049020946648b894be732704fff3212884431ebb38beda5becc75d55bd9f44e1e9c62bab73c0d6a57201739950deab54e0041a9a8c6dc15bc57214989fb1e49c37c8efedcc658ca1358f930e7b6b8fd852b7565a45b2c56498afc44486eac179b740fc4020ed8872773ce5742492a070c5f254fa3a68a3ae8dfc223c36f625251659bbdfc1e910c79220d5691ba7ceac15c22812bacf55847330b0657db9b72d5d40f06407f5d387e87474625df54820cc6d512589db53a1c7f7f2c4c53c6df1691b96e4c20e279eaa9203d15e3870a2fa63512141cb00c6560a2384ef35a20ab810b4a3b5d92ab827914c9f6d3d17cd183ec23db0d0065effef3c114b5cef0ae4911eb73c9c7b5a9de8f97e84e399c98c395bc3a023c3a869d36f2aeef98833b7196e17c3998f0d1642150a1e8b1b5fcb2433bbaa5ff099fad2095843aa32190d8e944a0e91e7627b2c5fe676e2b278aafed47c22d335d695f2beed67052218af780c649173daa0d0cb094c6d6046e5f6fe5ee659b3044723baca0678edea9a30ae7186f102dca82c723427565f7427eb1cefa6f869d544f2612cf4fcc22c9b6fa11e89638700bdb6e3f5781e024d5086c733a6563fdd2ed5a8ee7e25bcd51f222278eb74eefdeb8684534e91ef8f1b3438fa9f3c12eb608d0d371f9d390f3e516695ba8aaa5efc56c9744c034129ea3004fd9e5b959b9c21c9258752e50c0bd834a36cc9e77aa3cb41b78d33a53818be742cfb45d9d28c91083e5a3178aa73518bbbad4e5e433ab73514ca27eeb2fca7b9e55a4932f85d294608d5206347890737e5913cbc7f2b0036017eeedc99ff7f34cbffcc1ba9cf5b3264bce5914c255bb0d15dbbfe3b3c4f65f547ff43db83a95ddac9897f8200a99c4141c39af1208d55fe466ef7ce100781a76cc3bc047e64cbf076df9f39d8c348df5dbd789d17f4a860887f007e61e917984c42c85aaeadd83e584c9c6b1af50ec29b1f215ff379586450fd5b3e6f5225a58a44e263a1a93d683b3a8c0967e914ff9ebaffd088d8301365b57005f156284dc72e96e4a7433a53b34651d563184d26d94024707da1565c4755af0ed3263a20abba1e462a7e0f66db075605371b28ce6a51fa5c1fe42974213d98b8187fc03991f14241bfdece316e96099e2959371c80a7c60652d2377256b24382e9959d762b4660e813f1f352151ca855234c6c891f334528886e6658395410b30be4068993725b300f9f1ccf7e17abd6bd31243d274aa68291f5d5213a63113ead08a431cf8cd33580f7a15af71c5451a70e0ee71788579882c4cbd5ac5d868ed6a0636ece5a60e92b3684b22a9c6883279fe140610dfde1e5e54de11579b2831ee21b433052f0deff5326696f5c7114a51d3bb42404bdfb08346c59f9fad1b71c5e856e76c105dc8334a677afd395763a0ec9b634d29922863ca3c8139c0e445cbbd68d0af5d9e3998ce52213e6b2ff4d39599cfdddaba2a77201e0d3b669d95fdeda6fcf4841d0ef1a277e414b0210b3496bd5888acfcfc51e07d2ccb72ee2fe6e3b4ce6104aa4468e65a0b5c2f52943f0d126eee23b43843184b9990ae6414b93ccca6b90a0bb683105af764c4724ca81da73206fa902c6ea9c86a13c421ea122a1b690d1763cdf157eac146048b249e6f32d9691859883bfbf0949dd8257768a9a7c6af167e2d13e806f20d7624a7619df5cf3212f8443093d6aa436da79e73fe0efc07aa1d64f842e987a28117ca6e571a0a31933b09dcd92fa01f7790146a80efbca8bbcd88b64543621f350db73478433b31cbebc386d863447e4bdb5ac80b536a1c479101e76a05800f9d201155c622d49b15ad24092dc02242b498f4979110797051d21531794a5ecce04402c64ed5f82edf94d1397a7bba2e3e6addfe350841b336ea200108e4f3fe997194749ef2aeb310432cd292bb92bc8d3d8f1db2a8bd69a07098546645a3a1cbbdb7c1e65d8db2f53aa8fcc31599236817ade3fc9d041509ee368af04c32c143032faf227deccfef4cb0dcffa4690c52919c142b9bbf5044b97b05c339fdc85fbafc0f44b9fb08efb72441a9a659c0ee2c387122e401bf789af083f566f16075b885c6a8b49e9da78c2134c3a8891ac5095d21222a9987a442c9931e74a83c252680c612176fd67676b36c837a21780abeff5abb56b57135764022cb52299b0cff1a9b710c6978479b08b6953a65e88f0eb4c63e4fa746a8391c4bee69fba44001b2171e90cabc7a9e27a09035e74824d6431381d5e68eaab9745731db5b1803093a6b7768d0d0cb72675d2b271c9443d15779ae1afbeb24870b0929adf30899c5c3e062c9daccd26e8fbb2fbb04aec26944da3e59f88befbe44088fcdce9249503ca5dac6c00a88f3da5b9985f31ad60c4746ff55f66bcadda49aab73756f6e3c6b92acd0f1dabcf800d29b14dc41d35f2f4a1ba9159659c9df7177a38e273c291b247be61c704d3ddd9449437fb89af23c1bcc16f8d5e674c3a0f830a0f703431e2becd45adbcd1cc64f5459c49cdf69db013c0fefe8b932882942d7f407cefa6ac0e18c996fcbae0ea96152709b9cbdd4f21cfd47abe1d5a5bf1b557aa122c13e1b51a98f1e6fd52c3c3729071b37e57d5167e25ab29da558e65f44f5443cfc27cd71cac3393c637e9e19096eb9917fc820a4c5e9c069441c6157afd6cf5ebc13a42e1fe8ec841edea77b73ccfe107c473de42dd5fdc468a32cd2a5bb79b9b30dbccb97827fe5566f7540cacf0af8279a6fd906a952b76af443d27cf84cb6218641b7dbd0cf2b42d67fb61e858c6d5b47746a196afed8d4dc7bc1bb3c820f3cd880fb5bf4db832068499ef0d4d0f62bb66a70ee5d721681f48df0366692f02e9781f7b7b5af8f7420681b7f96463b0ea96113abb78304547d1a76b00f54d82ca02113b5b089336d9a35081778e4a70d45c5a220b3f65b7253516504af72e8c2746c3090012ceef529638be5bf61883a5d70137714f223d07fb701d07c6ba54c7deffac9a3e72bef3c22ecb7a79ac42454e896619efeab79d73bdb1f562203b8cc91cd846412c6d78b2b148b229eb143175874e4e2e0b7866e9ac428dd4759eb44e4ced266192b159d4984055a9acfa0ba915cd66d5e63c6f55b322e4671b4e588a262f4df229dc6c3534faf1a707a035f7ef73afc2079c5e4b29d48e901a29860555d821b7d311801bb51b5b3765d72a85ee508b67b186c4572476dab9fbebab00dfdca582e4dbf776174a69605162a457416111688b2a2fd812894b697349ce65a5b9d82a9a4f0079b6440686a52bcb307f0c4ef154dc3ce1fb19cccadf91104bce881e1bb9a3ebc09821a3c2387625114dbb37246ae5c2709fe087e97ddcdae5d0a9a879fe4368186212c52fa28c6df5f600f31ebe71d6f94e018c6580bfa1a14ad2bf2b01c8609cb62488041aac5cee05dbbdc4669d4f0a3ea5a6ea9d37ee1e9b31ac81c29f4bf706d3deb6f823a3dc63a7dee27e05fd42ab03c195f1e99ffbda51201ef10b0a2b446a51e8846028508a2702ca05a309011fa5659a93e9273abac9b6ad266a8c352193f183f71ca220dab1fe5d20ce75ba659bf5838f435b9f00b156df3436664a80765df0d85e1b931859358b384d6448f32467c05410ffd45f7de47e5f566663d8ee6be3be4ecb979c8f3b58893cb40d7aadb7038fd93aa344bf9c131ad0154db827dae76355918b4f3418ffc42323dcddc4c51024b1d753525aa0219e7d17534f00932e0cf4f630a5bbc87f659851b914325ee755a4f68bf92ec160afd5d272fcf3557739f427d5384bd1f555edcedd3e427f614f80c5ca68850d6e6256a7a73101af8a754250939b09da2e15eeed8a656e60a5c7e6299cd5248c4f17b52eb9c7183b01a2e96f8335eb94415874fbe3e763bed0372f2d6854afefb8de5ed23c2232ec110b9ef1f7550e3242a86ef2e9fef07d36934252cd9fdb0ae4307d9b2dc359683c7ec1d6c4a0d3cb6df64e8304597b2f9cb17b5ba9648480fe75e724fb678357df71ebbef27494d60436272ef2a18e92b7452c1749a1df6a60e7fbc6955fdeca576ecaa593bf6bd6614d49598af4b2c859afa04969c8a864961d7572dd0effdb2c62974b103e815fbb367ca5eef12acb7d9ea5dd2a0291c24d3781d0a852b49303e560e6deca212ba8723c0f3a894786ae9ac879ce51467fe441695e4c701c2012efba7879858cd3ad66465cf949cfc1d3563ad3b2a6306ac273e5adb25f7f674b28c1e85bd395b1ecfab32655f9ae74f88f28db4db75c7e629f6735e64561a273f83a4c47b58571560018c7c1562074d0c25167eb04dcee4b1aa3587acc0b16fabc4322e50f756e3441e994784cac52e6e26325bf19bab718edb0eed85f474e7365f5f89dde476657ec2c220c13cefe5e70c3d7746277943705e66ba939f48579789e269391631c652f5c93bbab5ed091fdd3bb147f37ccdb4fe70769b39d09ccd97cbb81199ecad353fcd599cb64e4d693588db5bb4fb1f60403cbfe5c26917bcacb235ee6797c08380e04c6c2a4c4e1c6b6c7d619b270f6884a5bf41b6b8fc23052f64415916874b5c8e01a26370f3e6e4539650894e5f4eca3f513e8832c8d8d0c6eaff2d4beb31eaee0bbef972217c4ae9b98494d3aad9570c501054cca9706c4c03e92a9afafe8bdcb6441e2fabfb60ec4f5d59c6da5bfcc39e23426c2483f068e7b525cf13953cf5c79c2c97e7d4079ae1c43c6f0980b1dd848145d452d35181240ab26b0f47a694de30308bc65cf5336cc3817670f6ead4e5bef956a0b7484bd3e48e2db89f3a12c17a09f350f7b149e30e9f2f0b4df62533d91cfd616c7dda8794df8a575b7349cb633057b65b188c2326701d5bc3f3f5414bc27049575cebae47a3654b6ebaadd7f91069f57c8d863ba47ab20561e92433c1077b52d173a912f245a3dbd1bb15557d036260a93292365779985e268d2663c63e025fccbce6d7d6c3dbc9146061ca24210ecd803be3541a9decdefa3e0e9c05fa378844431c36f8bf7c9ff718afb6dfeae16a310e4ff5c234c274511c7225ef70e0e57101106e0ed8f8c2d4d47f21ea22afd3559f0cdad58d84108eba1d84564bd0789776aea07ff1624b4489e3f8f2718fd4aff96e4a8babbd544043bf678dfccb217a0a29e8b5bf28e216ba969a2b96b314692db59c6008ad2d892761408a0b7b773db4d3e042ec40945e6f25fb4a15982e1a1a5e44311186a84b6a6a3ca992ed06ee14c346503fff0bd24d75f54321a658fbd60a3410babe2393a1f9023dd637822d7bf0c73fa9e971ce3abd2a7c74965a500bbbda5672079bf6bf5cd77f6aa37770de6fbf80ef91ba81d550f49f2c7ca181d35c1f60907008ac2da5c3554882945fb108528446420ce2c2c86a51e26869f2ac8b5ea0ad0d4170ed4e9d3ebeea08a1a031bbef058de0ede978309420b40b6600e309d6e82031fe8efa5336b0725f9ca7d2fd2ef2563342070890991ba72a437ab000ac03e3b3f0e08b53595735005437225fb69f5f2790663ee24791296e5d30f1da02ea0a5592bba965f8352d01eebfa03152c48e717fbc6b4dc754404ed6a91470b17b2feeb1442fd109f789a818666ec1ad560bed6bbee9b7d203156de047a6d34d0f1de7d8c8c2c24599b8a2fb7b7b052e2d93de207d6204df37983c1e32bb732c4691048db579f86339779b96535253f54cf152e4262972ccd4414c83a9ce5f182a675ceb23e5cea29b49ee88cdb942086856697de884b595045dc749142b9b915db68486170b90873346d7d93504d3a49c232ce5794370ca5244203bd9a7fadffa19ed7748b7c822ada0377660ef0343c873027c83e73040772e3421d1e23e150ad3f2b721e32197c490275500c79e0ad3493fd2723fde722c09cafcdae52459807c8a1d45a42ed1dd3e9aa134a993edfe1e4edbc6296f0ad0932100f577e05ee569f4f45e84c359ae057a858e47f656a96a75a1b5db650824afbe65f65ec18c49fe650daac6f3735248e186fedca1b0214e9cacdb40ab1caa82f668d6df9320634bbb5dd4f0419d319894b6ae280a4fa003ed9e05d103944271dfb29a7487ca3fe1661e6a453b9754e8f0719bcbf4bbefc7aebba0c0a03ecdeb43f010a42b85f5f2b2bd1ebc14ef954adf49afd12c1523b7685718e0ac452a6cc36132856db972ef1c72972cf74151010e32718d5866eaae002ae4100cb9da75e676c5ec387fcede5d5961d7cd7a4ffc13e672b2774d6c125b78e00c7dd0107557f4ab069459cbf694997dc3cc4df481671812ff9b824541f213045c17333f6152a784c98d38286d77800a826689cf180d4d54b994d013822f687fd105a6e463252d952325a89078e5d790592bddf71af61a366169058332c2e236b82393babf9f7b9f09defb1ff60026bc6a94eb7f04cfb614e809cbde6cdfe9f30f657f3fa9c41278bdd73b14cc9e6e5afb773bdc4d258064f9c924e2362e9d6bd764f7b8ad27dbb6f0a3907aeffeccbeeb55b480c6bf42ac8ac60527be37dcff3f76d90783a2b52129338c94f498cd2fa1e1f7dc744f3a3f76c9671004cf2ce03e8f5d9aca05452d6ae47a7f8e8572bc2ccfd2d06189214629a71858681299874cecd49b155c3359bf76387c2898ae9503e50d4e88e5cc9484f3d008ac0d8ecae9d6d7d83eece17729cc58ea66ab41f4506c4a3acb53efe084af3420a2bb4a1599c482d48936491bdbd94923710c5aca3a3bdaf71aa18b0481204d4dd72332ec012d6eeb9aeb07e393f58472e81cec9ab3da5868cb07c213c68a4ce09a716134a440ea8611be1ccd50ba6ebbd106f32db9f357a695bb473ff4fcb326da583f22dedb04d9ea3b09eebedc9e84ab82e1b5d07d83f2fe8e8825072008e3cd0dc37067f13d22589598913c26f38bccb2e5ae49f424c2c306dba5dceb93a6c59c6686a1a39b9cf81bbbcee5586b51459f5fbce10f45397c880b627b5ae942d55221133c63b9996b0c67a19adbedddcc2bc16ed5b2ba8d74ee7c2479cdc52323ffb227ed40a6a47250a278e10fd00c5488dd8c7a3c0165ac847a7c4e9e474eaa95801c846d3001260908b7138fa0c690d2e496ef2a69eeda6daff3444fa60e54b75819d8261d71c065a44cc93eada143711bb19db903fdb8eddb5ed417bb63c35f3c0457c92e0bd6ad742d7b494e955fba54d9b64c39e977d64269d697d155438fb152fbd72189222746dc7d6b404c73ceb550bf2033427d5eb8986adf3c8ddcdc828a3a3e314746257961980bec417793f59a878fb035d6dc009bab382d766061986602b0706f541d8af9a9464da5f2f87f1282903523f028fea6c34033d726e605ab9021ca252e2ce07eb01ccdaf765f36c85f7315e6e22f7e3e0c254a3a231c39d3a3e756a87845ce231857716f0318210aa44cecb854c656d7b99d7b596157044ae88fa3d33326f26de5fd154cdd41a93a7fa5c51d38e57dba54e0e3c6c981cc5c4457de96df6b242180e4023133645fa791e9cb3a228c5c12f9d4d6ddd1dcf3296d35ca8661b4a5f26ec215890f4b250d829ce3f5428c4034c48a8fb428bec38ebd021e0f690de126e00d68cd6136ffec9b4f1d2f8f99000b45afcdc58ff7d0d334df16f4973ba5f9e745c10fec4f40e6359522c518393cd097038bf594910167d1e74bb90d31a4259c43ab5463b9d7bed8cf26f2917d6162d2e52331c0769838b071cf230cf6b7b461f1feba12d1d11adeb38460d4423950f4aba490acfba1cf82244eef83756e9eaf8f4a2555946c3bfc1f565ffa20839bb6005b2561a1668e1f2bbb10134f91658ad5a044fa10925262a620fc18956563502e23afe38fb1df2c37704f67a08379f5b92dafea4ba517d883838082b9e71f2c8f39462848ea57dd7bb39440faddf6222b05a46e8e8c5b2df2cca07c382ad827ef490c5bcc473a36fd42dbc20fbdb342fdabbfe47917b802bcc5c0a7c6a76abe08b2cd8f35328ac0b96612807d85770527142820d50e6888b61e2b9585ac5c732bb4f56f98f32ede60ec402d1b9329529a5ac4f8cafedcb8c3bbc693c60b92607934e6f2a285c1e8b25e9fa7ed73515d97aeec5678a7a6810c788194eb31cc95e9c639b7d9f0940c11bde483ffe1ca15b9bf3d28da4183dcc496cf3252f85e2c3b05fd27dc6c52a5d15443f63fe127de72e89caf182175ff7fe6b8aae2eaf5345d9f42d6aa186a217967eb0dac61c38933cd2de4291c237ea8e7a102e0f4e9f8b1d68785f3e6345adf2dda8c7af53f6987c53a2130f58a5224fe68ea9b801a5c59d2cd7192498b53a053191db612db9db82508fbae12446654616dfc0ade26f9a76e0044dbb34615e365e77ab9ffb4aa92f7e5127e2085f1b734108271b80f6811f2147829abbb569deac4ebb2e6ee341ac10bae90ebeec2e58b690996bb09c57aa1ff5658f6a0e68be1be8a88c1624ed21f4bcca92e853cfd5966965466642a8e597afc230bae6680e0cfbd3802e922068550644a34475c144d2fd9bfa507f4885e9a6003dc95294a88beba450f6b9c24515aa7e26904b14b2cd994c5bdf02516ef6633cbd31d779ac8e58dbf015e50a18a5ba7d317368a4b25019afff5bebf7315152bc71189b76c987a6c6a9b82a7c4de9f59393f5637b39cf29968654156e9ae43aa95787544b7f7edebb6fb9bb05a20bcebd60aee40e801dac2d963eb9308dab49c81af3f4a4ca0708694af5e73ef3b246f339986d4a612069a3ce4251f5beae156a766ed49d84c7343b6e70a5e1100f5359f9a52327ebbb43f5deb77b64bca4d9d20813e3488e431a94be0ce890d46e5853f01664b683ad38d0a225b01ff866e54b9f03d358a40f169fc8479d84c6ee29ffc941b61348a2c54b63cfe836b4db2c4066b209b20a6b997f18d6cc31c57bc9c24d6dcc77476ce6bae6471ba212def3f94cbe30d64e3232b24d19a1aea793029ca25a8741ac5c9ba46f2064d996f4b57a81d7f21c8c7cef00582423548ce2701808195f4b4659bfad5b131b7ce8842cd0592698a6d8f575f2441aa6f521caf20be416d56b7c285cc9b8053c4c24bf94cf015b451de0fee5d84103d763c154d54a2116bb2cf60e2af77681a72ad7930a482c383586ef448a000547db63fe934b11c0a65450ebec1895d24cc194f4ca27310ca1faa46c335f96d57770adac034eb905ba575e80d3ff9cc7a979234004170c228f1779c512f679ea76d33267c4ab066245a0bffa89543896cc34367613da43c165478481e2c985f32396ac18797e874446b044186f1d243f66582e75a39140b658f9375af73efd6a25c45c631366d5316ea804e77110da44fbbc6de2207f922c250de875aaa32cf1ab29f3a40d1206f07cfe31d632a5c59f3c952fdd7b228e0e877da16f721c0ebaa7b3749382850d100ea18726f006089c3c42db4e1945b4f8fbc9edb6b01dab0b863314faad61c88da1d92a11a6c1200bd72a265bfababfbc775a9f1094eb5a8302b3fc343ffb69ced1f1d3690d93c54ce03e5856558468a34d0c2aecd56b9f2cd3139dc598a1eae629df4c280717c347ef85e02416058560af9a0bbefe7bfca5a626efc8509de79c0e2310e6af2c4a266a559e03050d504018fce9f2c23a6a99f5734fe26fab04278129b0177a380f02ebe68b35bec52c47aab9bf3d026f10905a90eee1fefcb7824b36e320dcdcb5d2e965888b2a036ed91888ae853da2ffe935f00caa282f492503e168d8435bca0429bf76d6eaf3936b22d92752d875c2c8579958bad641bce9473b6ad0a6fb8cdeeb8ae493e732e3ba9e2990dcd77e66d91782482a7b589d3d0c39f19d901248af1ecb5aad188ded38687567f29c4f488fbb8f049aa6168097b5631babd4e9471b20a8efb9f1caf9ecf186a60fad208d438975b60858d1aff570bbb88dd0c54c46d3c9a804c6445e5ebfadbf56ea9defc9c1a33fdfd2fda25f24138d9d3254f7a371dc0b643ccf62c0f0ea68483b6b5a3cd8797c850d3ad5f6dad93010d72722ccf1927833b1ff4b8bb9c0c5fb84df743712591108af6cd4c83697a6ba647a80dd27620726ec7f7d28af5f4f3799329d6007124ffd8961d03ef173065a8404baa02ea7ae15d95c4256d9a76ae28bf4f9a5f4f6389e599e0c41907ec13ca7fbac280a9a942b4787c3c6cbc260fc877352bd52b9c045975cbfc61a5008c9bfc0848f8321fef87060de556eb13cb370c9ada7fbdbe10ba3ad66d66f833b8f52a91f44bb22282a98f133ea7203452decfc55aa8997b094b4be91c0c9c482f52b41e0d246405e16012d370cb97021c31a3aead5847b46029945be07f96bef842aea8254fa7bbb1f6fc68c009156474ce96a48bac505b16d2edc6753740ec1bae0ba6f55d64f5cc9a9c3dd0919397339e77c12514dbd7a337a9f1e0aaaf93abcf0552f42e7286a0645848a1ddfa513b5b6cda26f59bcb68fc1a18a483e872ead27bfcafed5f1b0de297a72990224f9c283cd2ae7148edcb8a53fe7cd942ed22c1e5fa92bfd4cf8bbdd95d09a5bd0f2434514d23b905e569126e1c50f514e77df7b9715ba9252880fc75e2ead263451ed2faf89054b7799202f43929901123d916cdd2157f4f9378b41d7b0262b883f32bfd8e07a1ba19da3bec5eae2fdf90b36ebebcb6adb48821b1cb015d0159975a4f1a2134a3b370e6ede4ddcb264d369940b358bad2885bb4e3a2c8ab05d91514833eaec66880429f89f19cdd58d35ec6a6ecf314da62772902349ccb8b50be5b7ca048c9b5d629cb18634bd7b78fe090863468e2a59efc85c325363b3d85bdcfe4f1bdfbe2a8944ef8d5efb129a62c829ac1568cefb0260182684a3ff45ea01ca62eaa805e95043099c259ecd3e4f0e9361ab84b7bc971a543d5a03bd9101b507f40c918b688a5744f0eb80e3e1bee5d882e91de0f722713c9944ee4a2bc3817d90fd0dba7e5bdc39ca5c3a6086073f1cf8acad8e2d9a5dc932b9f68ff96f00d202eb9c775f455976a25c5aaa71eba52290ac63ca7b5f4ae7774016781ecb1031acad044a1c1c29ba2113269da3025a83f46d6f4746209078aded86d5cde20315e404f23152ddf562c8ea9ca4d695def60af7947936ecc7762a70da92e091f23d20573a16e29529a33928c3481066de8f81dfc4320a681891515429b712846d3a6a769f988c82b0ab62b2ec61af28cc9059ae694e1d5e52a6d233cc1bda6a7db95dbe14c3809e974bf6e24fd235ce85f74a5714b1264518ec210452764b318c123949782006e935d0555cc371068303b178b73438fe61c7d2d58e033d772a1b9a8e3af534f9d5b83335046172ce86aada694832eaf868ebfa7f1318d39a446bc072cae396bd1099c2c8cc23405e198f310da32ed9350f7c513657a33a6d8aef50eeb5a7926a3ddda6fdbeeba977db545d982ce65d2ca938be0fa031cb715df42b41f5cb2177435edea4f31ce81fbfb698d72ee9c92d755a0b4b16c739ac8be2516bf27288c9480a29274c1b0456347b7b7fb78f86c337b62edca2d74058231c41dbbc8168f4b0d4c6072a3f70290753e3e84c7fa8b9df84b611fdb5110e0bb4b049cad2449f8a6ddb2213a7ddd8601b3ad99b530de6cd7979d494b000c9e02f52e194fc25f069e312912de49bbdccae34394b18001ba1e7def3eafd4303a62f001469362735dcaa4a668b5a63c0b2530efc7e194cf910274150d82d0c6ff9bf936253baf57054ba4f9d432c07aa320d6ae22226bdb57658dcbd68b249757a98f4ce6b72868985424bb7b9a002d403b540200d6e99423d88e53a419d6c1c242e0035f8cacdac8454a792c08045d3616fb414c10ee76f22cdc6411f95b481e3fe547bf6cf73ac95bf8c3e98d5a2cdd52c939e2cf61d4be7cc5aecbca891c316c01ddf3e6823f5c7e0ce401e3c9f7693f24dd44d57da645a8ba7d12b2e079aba96e20532fdfaceb93b743618179fbe3217fda92e4a0f78b9cbc102853532f8b60f85192df71599f3937c88b319df2ad74cbeb87d1571c81a5179034e32d6ed67a99a786f589dbbef7966796498fd35fb5fbd34cac9956cabb86e1304dc92ab541e595f9d99df1c99bfe8c17225f80957183ad6baa321bc0c13bc33942c5c49fbb651a15a181b074d20d329b5ca469bbfc1bb0d4b25263850188bdbdb8617d246ea6ea547ea192718a0754e1c5604eb381ca71120d789e3749dea99f998fc3e27d25bdb32cbd6f673b7c6b52fe4ad043dc8207ed401a908bca002d8bbafc851c528e87fdd216d4731ed51d17763e7b9217dc9c2ea51fc3fe88046ab7d330285f95b5126892fc8cd0f56a3b6ba1bb3212c4dc015b697f71af2b7dcb793551e2575896b44e1ff948b6b43b177bac4d897a597fb71eada0959158c599534ec3d45496e0e7df98e5ef9b7ae414682c161b4fb3d7d93cff534b38e14f44fb7912f61de626419ce0a2bfb88b1d21f5eeedf659f29b8db440f9356aa984eafc495d0d6f7b36141b276cff7875ccd84bdaa901a228b6197c267964bed333c6bfbcc00c3073c102c9a2d64ca5632619508676c96c73e1e057a1528c57d411d8cfbd3fafc3d7b886131576a8b7c8dcafb69a892ce4cf92c9f4eabbf9e2eb32372497ce98656325fcb39fcbd1db8e6f69fe5b2bec7207e48a22957e867bcf44ca9347e2239753ab34a9c5014edc0daf8141f6c4084efcf96e752f4242adabab4bf7e7d3fda8fe18b4f4f375e38deef7de15d1e7dfb092b2a912fae6b0fb05a2839ba2cf3f2d0cce2196a0fe9d31dea028e981be739c35441e8a8e40c4dfa52887d406a81b9d56f8bd8e27c4ff776a899886c66ce215f8b3486d3ba4119910a69226b965c0fde905487d9555be0c9bd19a5bd98dcba339d89390990fb9a8c00ca51799272aeef0304820429fe2d78baefaddd2e0ad9f2252ce1a3d4d5278edecc668a65478761a8c353393549622fb80a1786a7dc210c2e0e65f8bf0c1961f28fd0d9b7c2662527bbae163deb62f8e16803eb82c1a4cbb7120df766b85b39f207faa1c8196d6049e891461031be577197a5c99c2c5713ecc90ced40117ff30d67e1145fd47142742a52cb60dd660c297ec90ea0d8f93bf8142f3d39a416a29e137fad8be47f69dbd42c4d361526c5d30ea714eb5bfa8a450731df437f7bb65640e34ea6881dd6f03d92a9f75bb07de3780ccce3f494aedea6f0060df0f7377ca61d24e112a624cfcbb78d5e2fa445b103a2e0f9404ab3b9d2d0918e96a2dfb03ca0c811e5429ad083f5ccab045f7a99a8b9c4136d0f48cb5f83893c82817238abeba90a94cdeb28f955f4174a594e0fa894c0b9c7099323e6217c3ae501e5ddcd8fd45de67f6675ab30f1e239fd62e4b5655b879e2bee6fbaad4d25220944303490a09b4823722d5a1e57bc64b8dc62ca0af99d4be9c7818ec0fe588254c5877790aa2e7d84080f720f708fdad3c2dbac20101aa7eeb97184ce3a70f2e64a685d78f14b074554987b13a2ff160c36b75121a90b8a5538db9f3e29ee21222b7277d481f0162be53d0235c4a4766e7607ab99a2c8db12a41b0c094fc44a6e5f1778a25e07e122677e51de2102a8640c24303c30298c5d8dbbbd11165751b782421f9179e1d42988bd0e5929c9dece33a544a4f82daa01452e7afa064b253a242113535e5fb0c3f5f12443ce7ac85898c36c1017db0ede02e4f7388a2a1de73ec356d58a2e1898534c3410f77084905b05d1a23e85daf670da05f158266ed1c9680faefaf3e0bc771837446134b206c1f5b272144b0c8c35cf48e23e867204a13cb96a7daf5cc4ec5e2e6d62a4b2a51a2b67a09a20834d6a7b724865e275b9288a0b3646c28578aa8302e7b8ae249bfacd138e6e1afa733c08fbc0c24e8d06359fbe84cde1fb69f94d899e68367aad22488ac3d115953344a7cc5e14963bb6a966697e2ba490cc93791b98febac9b4b6048216596dcdd0ee44027800b1e2d97292749d47221985fea770493e56fb47c6471c7785a18bfb41a7d9ed4f9ab8db46f266b8db71c8a16de8e39aceb10b8474491c5cb90540ca74cd1de12c1b7783483b28316fcc8eabed85920172a905b6ef242a9c30c8051d72d567c06430829a0b46cd9374df5c0b05cf459e9f818dc0be2dbe5949d254f3a5e3b92a7d6d43d0ed57ad56f406501045d3505f1668f251efc4b37ba767ad651d319606526568e13b0a9bbd3eecee280df5f6e3ea76db037f9a440569db7ac837bbfaf1f4db7abccd42d4379b1b210efc078f67c216c4ab7497a682764c07ed88be613f8afcaa22405050190c1ceba101d776da3d84118f0af5f8b32db2e94510c67d178ddf36101148d205558eecd2a07b5712a82f945241f3f78bca602d266ed87fb25bc645d64a8114f1b85e2708277ca043efdc75051d27c2490f343193dc2f15979f3b9c4f74dcc46ffb9b64a011c58dc796166cc01d66be652bb31aca91728da6fb1a40c590f12d89f1bbc8d28dda328ddc2c7689c98e5571c1f64ef4ff42275ce6366285704becf58a2617f562e8d9ac3cdc4d06a5ba94eef8e1140b7487851fe736ff7e5a1dc74665f7d54a1ff6feef380da62a7f94b7dcb6fa4798f4b6d1daf75af900ffd81a8faddfed6f5cb1e26dbc43dc6752b6707115c3a1e326bf0ab5eda07a948d1d1483dee8ddaf075298e4c92e0d7dc186d840d49fd10aabbfbdb8b078b77ebc8eadc9c4ba9051674efebdb8f813f182ed50c9a5e7dbce670e3035b0ccaabf79e74f587b1f6eef2ca8593f1ebe9738e8153eb2d0f97b05ec8bafb76676d5851649eb4b16310f6d101f562aea59883d1783c4650972e5e06b937e8eb730d7f5470a1e16b228bcb5c5f73e00fa1185c270b144c517409f486eac37ee3683bc44e08d7f603a9beffcd8e76453313c2ea78e4f9e1a529527370f0d1baf8b3f5a295c64300ca0c3515b83d438b2dfc2c66646d4e9ca90629e8d8d48ba938deb313c9963c88d624c801cbfd1d06839eabc332e7c5e9caf427c5c68f1b0661afd6d5093e8b0ad8c26087846330e98268b015d547539466f518be149503f3d581604c266d9933e77b3202dbef467e5f24d3d9a26ac5c5cba145d03edb31149aaa27ac58d84f8839788c0de20a3b2911988dfb3cece23ccb5bc587f4137fd9934fc777f6f6a1085b04defaaa725e64b601351783b4de2792f9c0b560ca699c4ee3cc39500b215c2ca22832d6303d660f41f34bf4c3000670eb61d064c0a34ef43919614389356719b9a27866018a910581d0ed460735c2c0ca850a4ef15bddea787c770a07452f4076a2d5f857a8e82c00c0cba4958e32ea0f5af1129d941c558350fb358fa5193266aa4cadc58e05b4d3b4ee53234dbfbca8a4a25bc35ad2a4497e172e6efb32e7fda30df51bf2a4042ec7723d04757389fc81f0991a5b473d9242fedee87429420ca41587649be20e53e754fdcd95a61ee262e4194657d5cef3b21a88af2bb260d051071751226bfcc87fb39f391a7b553335a53b6186d039d40897dadbd0a4f2cd3549ee70c19652dee7ed752c8bf12dcbaedc1e4b6a69254e83554c9c409ebf3404b5fcdbab363656f6689eecac367ecb4335798bf966d5db9df61dddbb3bfd0650fd69b8497e55f10f4fc6cde04907a92cb488d539001d0149f370f70b98b238c086e1faa44d3ffde1a3a7e8c5d3286c38b511777705e70a914e96fc385b77b67f3b8be9335fc9c37953a1c204ce24c038c40006b12012d4a37f96c058dff7adcb33c2e466a414b0c9380371fea2e3fad4d4702a2a9d3e98f456ecfb0d3efe440ad4d3108a7f1565b5bfc80eb85cc35f81f773c522ce55939d1da002b47093f35b240b1d093c6539affc749bc6d6f8e5035d952608b39a974818dff29e6ec9f06ef926b7889baa92bbe36d4cd0b9c36c8725f50db0fb2e3008affa85989489797b202ae80a99b07e3acc978da4ce39c4b6e2d67ddd255860ebcd53459178f2a8fb82733262773c0958d053f5f5080e44293dfd778d2d96b821c2637c72c4c0e03ac9e8d5ad791f9bd7deb746c63863acb269f5f5516abbdd74ca40a06bdb940964a4727a01e71013db10562a741440a8ab0f7f4dc43a88efc2d45b3bb36b0b86fdcd284f8ebd2c833604cacc6147aae2e180fdd61721b573b963927828e6cdbe2245b867ca98367d5b11ddca9b21b1594b5c232e513f18f27c745008abf79c6f2ed687853bd14dee531b416007babad02f7daba3bc8233dd7c4f17417a01270d7d416dbb10e4192a4b5682e9097d32b3847604d3b16eb5e0d8ca4a45c9c6d4e7c63293253c94922fefb94932534b38671e65f862e7c8e6fcb998ca79182f7123e5460b21727eba8638e28314fa84c9cf032c23d4d957cec2f5ac6355a4ced1f8f868128082ed82991e12e8e6aff567feb320413a6d11d2b5644bbd127396a8cc1a1135191914b8216cf448e0b594dd70c92f0b06cf1fb733a4c0f51856324b9a40aac033399b0d70519d0ff158b6cb305398b166cd725d0d63d0f8731d19fdbe8f3f2b28cd102a10c78520aced8459ccdf1a4b0c351cb1440ef1debc641ce735d330b1617a6ad6ee26ab6ce1fee8065eecf593144b15d690a24ea63c1b70fa087ec47ba47520cc5d028e5fbac225da51e69fe98c9832ae1854f9871eceb3164ebe1558c9e93d9b93f3eaad31baa4f6efedfeccb704fa761e7ec75529754bf4cfdc43c7b11ac0b0cc7287edcb0901a89871aed84e2fbc406efb21a7384a5ab02c5dbf9d2d20820c85cc2a52d779e167782828308950f5655adce304681f5b7bc1cca9df18adbcfda3079d2469a1f12fcee7d2e2ef88b2ca1a98fc57c076bf77f82abd6b6696479f9e89adc31bb54887c59417793fb982b12f74c0b22a5f0ec2f44a0f9ab6fe39396703aa8ff673272344b98ea29ae585c1edd3bcb82ecbc4abfc2b403f3a025fdc5f5e35670c9f1fd60311d80e866ceea6e99aa2d484d705e92ec251cb9b045931677003862a91180b911d70b0dccb7f16914e323e4f135023ec267b983ea8f7baf895dd7a2bad17b8d465075074e1d69625837c4f4e927779583a7047cf50486bcc52ff5bd36aeaf1ab5930543200cbb15a21bc17d2dca05e6180b8a0d8e50cc3e56a79f5e8a93beb56dd3e3aed8fcb8bcfe5910e16bbb3bdc03627f49fe867920160ac82cc3dcee267d0f08f5c9d7871e3c70ef9389ac70510bb316b26967f50135d7f6db54806c4f1a703a01b42cf2a9e1ff6246fe8b699aa32f5fb2c64bd976e1d0cde240c204c5fba230e05d20525ce2531fdb37ff7fd61ba1b833e3b856fa3a208d21cf684897373f76ca90bd9e6cea30b234373ff89105b324d076ed5c1fd9dd5ccb38fd89aec9bf9997190cc3ba883621095c4858f4a9c95feb61a921260095d4a661c3badfe57724431a7b572e58b5fd82ca73a632fe32d483355aa14edef11c69f1fff60d37b02d293996078f2f60abfe42be44615705714f1e609b6a0337ca34a37d3946e74f495b67be0dcd4eb8963b25e4a898c538d0612a8168e950e6ec3c4583fa48578458bf2d863ce9edb2cf99ecf9619fc5cb0233489d3054ff90dc1e5d37d18de73838bb3066ccc0e24b7ef877ad078c7a39eaec557dad4909bf8117bcbdf3fa4d3df35126777c793327bd3bfa565f97a18684af18199d81f60b44c3f0ea24eff1cdb97d9efa861681377449a6106ea7f6e7ad2ddbd07ac69ffb94bc848a21f55d8ec69c065c760e4a87f23e1a853eb0f3c0be920592a585830be2b784cefb3dba97a0e373aa05e0e1101aa7a35fa0937592700d3a5efce119a81b2b4a4375920b05663d67e02028763c8fea07bf7743026fa7c1707f593891c490602938ff30e4b23068989d0ed36688b4373ca291b6bef9af2d235fb00cf8c879bf0501f88d9832f9f51c15c83b9f8bce5e0e89fbe2a761d736aa1381300e2c4293121775467ff865350d24dd1673b8caf41298a39ba1b3f054e70358cc1ac200d2bceb6e6d93cf2bc900384d5c4b0d6df97b584a82a30b05c35f843540a0ad7de87c48b3f16e1b28e72703b70dcc3905e18c461bbc36aa49d9bc556c88d91ee80a9a48310af46939df8bf3237d0b546d5329ad0b658973b77785d0330dcf837d7b4ab2501ca15e2138939ba6edbe8b4a0c54a59c9b989ff497382f8252999bd239565cfdf2da4f8c6b97d2d45dcf0e4c491b15f084df55ff284682e0e1da78634506634ae975086e903d406b5bc5cb8c23089c4ca692e06a6e17dd53b59a76b968aa26e43eaf6d3fedad3fa673f1c43432514b23557f068cb0bc9909b75843627ca29df9757c4f37d6c2a882ee4b82de67fd93378b18896203839133e632757be1b88533f7c1dbe4c6da1e217ed3b88b1062b848221d1655356acb5c8bad5110fbfd09bf4bf38fbec4df40eb3041c20dc853ac4f19dbc9d34cd17ddf3303cb3d59ea2562f844c0f6da77bfd94c92c461367e6b85a20af87f9e60b0496f49c33f691b68b88151850ae78af3f54f42ae39b816eb571a28d41a49f8a0294db5644fd9f7ec908d3cb4c6aa3cd36d30d053b2f745fb7a7871398c7a7a31d2da2b746ba979b919d9869dc04a121c3e623309f3427bb6ef16580d857a539a6c747823976ab22080b4dfa5c5f40df0902d48270357f5ae59eb08dbb7d56b5419de775944831894cde3b5a8ff2b5046365a7cefbcfde750fb11095d98603b07d6c12f5ab87591b73c63497b60310203e129bdbb4add1dc4e35982e0b33a07cdacb8ce8e15a4c33e76d3df1e063987419e0489759adb18fb9a6178039ab9ba2e7ca32b11bf23d222d872415ec0c1871ecc45e6713387309a5c9a5dfbd0fac55f559d2e7d55bc3756f90ad642c08e49c1df0c4a2177fce941e95b83bddb53e3106fa559eb69b7642980c5d57afe82e50c0e872dda800cc9410cdfde7859a6826caabbc1570142dea8bb5ff44cb19147cb82fe0eff533cdf2d50cae09974a6939c004e2817d9b785d7810070886b1733bf332a2db3a37a7ac1a7ba1d98f394901614a1d9720fb1944a54bc555cb961a17811638eed2bf1c8c5cc4673bcd6d160b0c5edf8a51e1deb624e72709e2ea062bff03d8ecbd0e14a742ffa0f964f37f770dfc5e40ef892fe0e1b1c07a6436955dab8ee6b4e30d80141d187f21242b890c9d3393e11aad07837816a241024fa6f0c425b31d153cc72595d72e5c8644cfaf5ed8d7e9c1e792aa0ea70a3eb9c2be79d1ab57ff35438f27867506c534c05021f2de1d1f2392d7c9aabb08a59cec3760e70ca0f27f60284c936f633ea28cb6fe8b01cc35e2fbd5d64c0cc2bd9152f39ab47baa61a4a5ef78e0749bd913cd883b563a3a1291b9919092665a7b03e56203ecf4896c3eaad7cbaee24b52cb20a3eac54f352f69bf48c22b6222ed976ed3dbb41ef2fe0888f2fc27a36dca67a252aaa9e5f41c29d8fa98a1cfdb1be61d2b68bef874ea2c46292c6c738d22c02f4cc65e595b59c2a7904dddff7d749866222e0ef3bf63596e7285fa0f07b52631394d286e17fb6150a48e2948376cb306112d8e25ac37a3c5dc84aeace72200693a9e1dc4d15dcf23a17e78b494cca3854a9697e1d9910a3b931d1009df25f581d34b51755332f6e709ebbc7f674493683f3350891135a4df4dc66a2d22eed87d87aac41395d63dd30190455c8e06690030a62285f0ed39f12d2695678d28f2901c792501275d8caed6df8f10e5490cf61661cc582d58c4e2f47bf3947f8b1ae774e625354b368567fdf71fcddd6b1480747df79c7517a9fb2efd4ada392281e7ca502a9d6c4d2475a59d53fad91acd4633c37112bfa7ad26533d86b7841252086ef24950e3cc9238e140aefaa30ab139ef761cd1d4857fc7372f3dac21594b922bed9d7d8fc8633ab0e2650dadb26b66384cfef9e70fef87c26ba9db38a460be236b20c000547fc14bfcb4a48ff8b5b6cb2ca5e80d84b874de7760ca393317fc564cf2277274e7561b3b7cd8ebd044284f38d065392a5ed3ae9cee933fce99415723dddf19d4144e75c4a84d9ffe09806b27696948bab3b8525619fcb2aa8360697e23d53a6f051ce05e4cc1a9995a23941b5a616e5af786e9b3552b1f3013779e6d03e0ba5cde0001a1235e8408a7b7a2f588fe96f2fedc714862aef3e7f4bd3fefb33c15ab847dd0e474edecc4c8648ddd72906e1109f650891b87ca470e3e8f6a8270520fdb33ea7fb31216e67d47c57381f52d6916e5e9c9b12081d18ab076c9f17e8c4425c14fbd372829773f9dab6c327c3c9f1da2936711328f8e0417286b941d116e811424e3f718fdc2f60f08d4d4e224d42edb0866555169adc563dab369e169137cf9db61c11c1a96c98089bec82f5adb5f02758dd5b70e62f635b7e6d9131c74748c2d01b52ae340ec20807145124af05e14e4443667ab8ab74e6337cd1a8304a07796ebf94ae8eb69a9895b0a0a27011b0a85337af6858b445c01c686a7f069b2a796d9eb5868295cee429ba4f36789389425beeb4646b1002e64296bc822c3c4e9616c480fdcca1d94fc8d34b10ab1e53d7d7743eaa1cd5d30705aa34b112e0f229b6719c1251f157935a8a5a1cad3e0efb1ed997cadc809ee9de092db2b3f054e8cddcaa574054f5ae46f82591a45ef48ca62f91ea840ce1abdafcc62955e514aee0fc4e226c14584b8f2693e56bc173deb749b051b55641cfa7439d8283652f9f213778b771615da31cf280929032f97f17fc6bc8e9c3cdf2046dfa10a2a688b2e637c9c92fd4b0a1a7fe408389c7a12cc82b8cd1fdc30279d1615016799495fb0062bab01ec7961cedda986847246812d6c8752b47299dc6957aad01211f92bbd6809ea6fc2f4ba868ef12b706a4905ae349859f186c1f06b4188ba2d05f9fdf723bed08a97b0d6be42800f6e1a1f6948c86044b3cc9ae27533a826cec7e60ccde4ca2cd0d65b624b9a9fa1e38e99cf43db488fc3eff84f53601b6c1de2df42e6209742dce165f9d56670e3d842979f4a39064428b6c835ff6b7576f78d3b8e038091ad737c10bb10f9d863f51d633566c8f84b5d286b2ba0df8f13c9c9e3f2cbbb6c092c6ba703898383e129c16d35cd33f82402d5f6c22d0a7facd371c8c4c4a15665ddc5ce62040350cad471d4300849dbe271b1476a6ef55f0b27ddfad50d6542b29c6e02a97f9ee393165aa45276621671c0db2348233fe95628f89184c3c22c7e84abe9d0e7daf268f6edf5b345b65d41044fedc6f9acdba67353ea23bd402bbdd129396a6834b6a7b2377e787eccf7b3c8a0d1f4bfa394100b83dd6f73ac3a2650564c0184f1a5aeecf2c27a750a67d0130ae925a44112098e1032511ae4598d11012682c393f3afcd445c381e3e9cd294077c233bc261e6bd912cf208fcf7aa80e144e5a539ee65580c57c53bd4f63292d41f3475a877d82eb9121c99ea2a7cd74a9000eb32c93c500374d9f940d46cdf9e235d1d54db969571085292a20f273a01cd9c8cf538f649bf0abc6dfa9e0791811778ee788d1bff612ad1949c2bc7571066721b4d99a2a348c7095cbc923196f5481d2db944e04e490fda70d27b6c222bbd3452387e708bda4858cc750685c02416b572ff9c7b0b104142cb5db39ca9bdf35ee2e04a0530693582b6e5eea834a6a1c26d5d46068147c861dab6084cf8b3059f28a436702e5f760764fe30013c1d82db531c6e9b0b46acb6f3b2fb4d1e2379dcecef53ef65269d9b71298c632141dd74f9f341b8428908c3c0c0a901c2ad23fb0783d5f033b15b421ff5bcac656ba528bdfdbdacee553528701dae5b465e3e598cb6ed21a2a02f27c6dc102182c46b07f243365e3a11db953a46a86c217dcfdd35258642a96fc08362fb6836d9f9c47523732026bb68586a2adab2c1c9e3d90d53827f00d60af07cb45bb17c2fd4194f679f92cf27d8e9d74344ef4d5d51e4d01c5fbea521b62dcd6f7eb89f59c3201621f5096802f25923a3d1a62819591b607d4c0f5197202305a442a4a2bd8a71fc1b9ce9dcfd1b43c57802fba8b838ccd275f539ff35035fdfe039d309dfefc40ae68f7350954a78528bf78fde762a473fd44e65868d3ac56062720a52b0be0435694c21b16ef67ec629928ec817107fcda8539fc3fb74063bdc1f890e2d2be27e9dffb79c107db2c23df71dbd2c07c1698e3f0c34012cf746d1c23fa89aa0ef4cc1274e1df4db001ff219bcf26c8d4509cb05f1abc30ce48b6cea01eefc4a03e6adaa57f2988c0c77f621096f5d78f156454cc4892d08a448c3a7c864e107fc6f432e2c4ffa270258ca939ae316efe62863f0b170880d25a3794d172632f6b884d4fe8223fcbd378cf559fb757021676b0104257bfce528068d12dc9340c5b5d19e72605099b775b270a158f9899fa27441e8578bd852acfd601e55fc478f22a6b38f4dff9496cf0a2125b2e9e6781a88596dc7f74c47ac54d198e6cfe4c4a3757552d1c49af95633426dee0d3e2694febf06158f9254975bb26f27f40c5e7115736298f0ea660295b3266b96a85ebb7ad8b62adeb56f3f5450b8bcca6286b406b65d14f99a0449d75d71132cb667299657c2faed91405d165e7125128822baafd77cb81a96e864973ed5ca2ed8febe6a79671f76f3d200e990b4dc5cafcae4c03cca2b5196a1471e7cd0d809b32d4c3fd3d9e1a71069afb8b47f5022d7389de116fe2df9df2544a1f8d0b08798bef99796dab3f7d8406190eb9b152ddaf0905741f4b5d9318d45846278f660e4216052d149c8053aeaba2770a4edd0eb560475212eca9d0e752bcfb8a6da650b19571c6de5d49ae6f4fa8e29e177aececcd90b7eb73edb97d012721a06e8792848c32d3854992d46983410dc603afac54d4096d866a0239e7d6efa642987c714fda98ac51392842b4eb5a32162c46f84387b91b67a80e4fd2b6ba2dbf72ca988d04c4a7a29fea931480f99fee72765c4ba3a45a3bad034a1238b37125319d9133177642ff62c50637ece8442d081ec52094eb0eef0762a73aa4836a2dae8d5544b5ecbf52f37ca3e1db7696444668f17146e7d2cca992a9d5b3293d84a7ce7ad92cd2da4345d8a88239f9f8c4075c01b68e6f8b9f77a6816516fad47fe60358fdfcbd245803f033704d5a43429b823e5d75a41d5d0ee70dda36c264d069bd0f4debcb2ee45537d127c0f953a981118394ac3737f62138cceb49c5346a222db4db0c7464a42d5c8aac47e53cf4516a10dc0fa194358658634628b49abc680553f1ffb5386a2fce5af64064e634d785fe6db7582021585df41eac4abb6c8372594ca903448808ce4d27b98676235f281b06df89a9df5c1aa8a70be0e56a3f2489f7851f836735215bc3415d5847ba4481d4c143feb859fd4ac1cd826f5d479521c64ad6dc4501aa6c40178724a87fef556945b52d91bbbe2f3bacd26488ecc2222998b1a54536f2</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix优化建议[5.x]</title>
    <url>/2023/12/28/Zabbix%E4%BC%98%E5%8C%96%E5%BB%BA%E8%AE%AE-5-x/</url>
    <content><![CDATA[<p>在使用Zabbix过程中，正确的调整Zabbix系统，使之保持高性能是非常重要的，能够充分利用硬件资源，监控更多主机和性能指标。</p>
<h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><p>关于zabbix server端硬件的建议:</p>
<ul>
<li>处理器：使用最新稳定的处理器，一般同级别的处理器，新一代的往往比上一代的性能更强、功耗更低；</li>
<li>磁盘：建议固态硬盘，或者不低于10K RPM的机械硬盘，建议做RAID；</li>
<li>内存：通常建议不低于8G，若监控主机超过1000台，建议配置更高的内存；</li>
<li>网卡：建议至少千兆网卡；</li>
</ul>
<p>官网硬件配置参考：</p>
<table>
<thead>
<tr>
<th>规模</th>
<th>平台</th>
<th>CPU&#x2F;内存</th>
<th>数据库</th>
<th>受监控的主机数量</th>
</tr>
</thead>
<tbody><tr>
<td><em>小型</em></td>
<td>CentOS</td>
<td>Virtual Appliance</td>
<td>MySQL InnoDB</td>
<td>100</td>
</tr>
<tr>
<td><em>中型</em></td>
<td>CentOS</td>
<td>2 CPU cores&#x2F;2GB</td>
<td>MySQL InnoDB</td>
<td>500</td>
</tr>
<tr>
<td><em>大型</em></td>
<td>RedHat Enterprise Linux</td>
<td>4 CPU cores&#x2F;8GB</td>
<td>RAID10 MySQL InnoDB 或 PostgreSQL</td>
<td>&gt;1000</td>
</tr>
<tr>
<td><em>极大型</em></td>
<td>RedHat Enterprise Linux</td>
<td>8 CPU cores&#x2F;16GB</td>
<td>Fast RAID10 MySQL InnoDB 或 PostgreSQL</td>
<td>&gt;10000</td>
</tr>
</tbody></table>
<blockquote>
<p>Tips：实际配置应不低于官方推荐。</p>
</blockquote>
<h2 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h2><ul>
<li>使用最新稳定版的操作系统，比如CentOS目前最新稳定版是7.9；</li>
<li>最小化安装系统镜像，按需安装Zabbix Server需要的依赖；</li>
<li>调整内核参数，调整<code>open files</code>、<code>max user processes</code>等参数；</li>
<li>应以特定用户最小权限去运行Zabbix程序和文件；</li>
<li>时间同步，在运行 Zabbix 的服务器上拥有精确的系统日期非常重要；</li>
</ul>
<h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><ul>
<li>推荐MySQL5.7+；</li>
<li>独立部署；</li>
<li>推荐使用固态+Raid；</li>
<li>足够的磁盘空间；</li>
</ul>
<p>Zabbix 数据库大小主要取决于这些变量，这些变量决定了存储的历史数据量：</p>
<ul>
<li>每秒处理值的数量；</li>
<li>历史数据；</li>
</ul>
<p>Zabbix 将接收到的值保存一段固定的时间，通常为几周或几个月。 每个新值都需要一定量的磁盘空间用于数据和索引。</p>
<h2 id="web服务"><a href="#web服务" class="headerlink" title="web服务"></a>web服务</h2><ul>
<li>PHP：建议使用Zabbix官网推荐版本；</li>
<li>Nginx：建议使用最新稳定版本；</li>
</ul>
<h2 id="Zabbix-Server"><a href="#Zabbix-Server" class="headerlink" title="Zabbix Server"></a>Zabbix Server</h2><p>配置文件优化参考：</p>
<table>
<thead>
<tr>
<th>参数名称</th>
<th>推荐值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>CacheSize</td>
<td>256M</td>
<td>缓存大小, 单位为字节。 用于存储主机、监控项、触发器数据的共享内存大小。 Zabbix2.2.3以前的版本最大可配置值为2GB。</td>
</tr>
<tr>
<td>CacheUpdateFrequency</td>
<td>60</td>
<td>Zabbix 配置缓存更新频率, 单位为秒. 另外参考 <a href="https://www.zabbix.com/documentation/5.0/manual/concepts/server#server_process">runtime control</a> 选项。</td>
</tr>
<tr>
<td>DebugLevel</td>
<td>3</td>
<td>指定调试等级: 0 - Zabbix进程的起停基本信息 1 - 严重（Critical）信息 2 - 错误（Error）信息 3 - 警告（Warning）信息 4 - 调试（Debug）信息 (产生大量信息) 5 - 扩展调试 (产生更多信息) 另外可参考 <a href="https://www.zabbix.com/documentation/5.0/manual/concepts/server#server_process">runtime control</a> 选项。</td>
</tr>
<tr>
<td>ExportFileSize</td>
<td>1G</td>
<td>每个导出文件的最大限制，单位为字节。仅当ExportDir参数设置后才使用，用于轮转生成导出的文件。 此参数从Zabbix 4.0.0开始支持。</td>
</tr>
<tr>
<td>HistoryCacheSize</td>
<td>128M</td>
<td>历史缓存数据大小, 单位为字节。</td>
</tr>
<tr>
<td>HistoryIndexCacheSize</td>
<td>16M</td>
<td>历史索引缓存大小, 单位为字节。\缓存一个item大概需要大小为100字节的空间。 该参数从Zabbix 3.0.0开始支持。</td>
</tr>
<tr>
<td>HistoryStorageDateIndex</td>
<td>1</td>
<td>启用历史数据预处理，可以将数据存储到不同的基于时间的索引: 0 - 禁止 1 - 允许</td>
</tr>
<tr>
<td>HistoryStorageURL</td>
<td>你的ES URL</td>
<td>历史数据存储 HTTP[S] URL，用于把历史数据存储到ElasticSearch。 这个参数参考 <a href="https://www.zabbix.com/documentation/5.0/manual/appendix/install/elastic_search_setup">Elasticsearch</a>进行配置。</td>
</tr>
<tr>
<td>HistoryStorageTypes</td>
<td>uint,dbl,str,log,text</td>
<td>以逗号分隔的列表配置哪些类型的历史数据需要存储到Elasticsearch。 这个参数参考 <a href="https://www.zabbix.com/documentation/5.0/manual/appendix/install/elastic_search_setup">Elasticsearch</a> 进行配置。</td>
</tr>
<tr>
<td>HousekeepingFrequency</td>
<td>3</td>
<td>Zabbix 执行 housekeeping 的频率 (单位为小时)。 housekeeping负责从数据库中删除过期的信息。 <em>注意</em>: 为了防止 housekeeper 负载过大 (例如, 当历史和趋势周期大大减小时), 对于每一个监控项，不会在一个housekeeping周期内删除超过4倍HousekeepingFrequency 的过期数据。 因此, 如果 HousekeepingFrequency 是 1小时, 一个周期内不会删除超过4小时的过期信息 (从最旧的数据开始) 。 <em>备注</em>: 为降低 server压力， housekeeping将在server启动以后，延迟30分钟执行。 因此, 如果 HousekeepingFrequency 是1小时,server启动30分后执行第一次 housekeeping , 然后按1小时为周期重复执行。从Zabbix 2.4.0以后有了这种延迟行为。 从Zabbix 3.0.0开始，可以设置HousekeepingFrequency为0来禁止自动housekeeping。 此时 housekeeping 只能通过 <em>housekeeper_execute</em> 启动， 在一个housuekeeping周期内删除的过期信息时长为从最后一次housekeeping以来到配置周期的4倍,不少于4小时且不大于4天。 也可参见<a href="https://www.zabbix.com/documentation/5.0/manual/concepts/server#server_process">运行控制</a> 选项。</td>
</tr>
<tr>
<td>LogFile</td>
<td></td>
<td>日志文件名称。</td>
</tr>
<tr>
<td>LogFileSize</td>
<td>128</td>
<td>日志文件大小，单位 MB。 0 - 禁止日志文件自动回滚. <em>注意</em>: 如果日志文件达到限定的大小，文件回滚失败, 不管是什么原因, 现有的日志会被截断，并重新记录日志。</td>
</tr>
<tr>
<td>LogType</td>
<td>file</td>
<td>日志输出类型: <em>file</em> - 写入LogFile 参数指定的日志文件中, <em>system</em> - 写入syslog, <em>console</em> - 控制台输出. 从Zabbix 3.0.0开始支持该参数。</td>
</tr>
<tr>
<td>LogSlowQueries</td>
<td>3000</td>
<td>数据库查询消耗时间，大于该时间将会记入日志 (毫秒)。 0 - 不记录慢查询日志。 DebugLevel&#x3D;3时该选项可用。 从Zabbix 1.8.2开始支持该参数</td>
</tr>
<tr>
<td>MaxHousekeeperDelete</td>
<td>50000</td>
<td>一个housekeeping周期内，一个任务删除的最大行数 （相应的表名，字段名，值）。 如果设置为0，不限制删除的行数，这种情况，你必须清楚这样做的影响! 从Zabbix 1.8.2 开始支持该参数，仅在对已经被删除的监控项进行历史和趋势数据删除操作时有效。</td>
</tr>
<tr>
<td>ProxyConfigFrequency</td>
<td>180</td>
<td>Zabbix server 多少秒向Zabbix proxy 发送一次配置数据，用于被动模式的proxy 。 从Zabbix 1.8.3开始支持该参数。</td>
</tr>
<tr>
<td>ProxyDataFrequency</td>
<td>1</td>
<td>Zabbix server 多少秒向Zabbix proxy请求一次历史数据， 用于被动模式的proxy。\从Zabbix 1.8.3开始支持该参数。</td>
</tr>
<tr>
<td>StartDBSyncers</td>
<td>8</td>
<td>数据库进程的初始实例数量。</td>
</tr>
<tr>
<td>StartAlerters</td>
<td>12</td>
<td>报警进程的初始实例数量。 从Zabbix 3.4.0开始支持该参数。</td>
</tr>
<tr>
<td>StartDiscoverers</td>
<td>12</td>
<td>发现进程的初始实例数量。 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartEscalators</td>
<td>12</td>
<td>escalators进程的初始实例数量。 从Zabbix 3.0.0开始支持该参数。</td>
</tr>
<tr>
<td>StartHTTPPollers</td>
<td>6</td>
<td>HTTP 轮询进程的初始实例数量**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartIPMIPollers</td>
<td>3</td>
<td>IPMI 轮询进程的初始实例数量。 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartJavaPollers</td>
<td>6</td>
<td>Java 轮询子进程的初始实例数量。**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. 从Zabbix 2.0.0开始支持该参数。</td>
</tr>
<tr>
<td>StartLLDProcessors</td>
<td>2</td>
<td>Number of pre-forked instances of low-level discovery (LLD) workers**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. The LLD manager process is automatically started when an LLD worker is started. This parameter is supported since Zabbix 4.2.0.</td>
</tr>
<tr>
<td>StartPingers</td>
<td>12</td>
<td>ICMP pingers进程的初始实例数量**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartPollersUnreachable</td>
<td>6</td>
<td>不可达主机 (包括IPMI 和 Java)的轮询进程的初始实例数量。**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. 从Zabbix 2.4.0开始，如果IPMI或Java轮询器启动，那么至少有一个针对不可访问主机的轮询进程必须运行。 在Zabbix 1.8.5版本之前，最大能设置为255。 这个参数从Zabbix 1.8.3版本缺失。</td>
</tr>
<tr>
<td>StartPollers</td>
<td>12</td>
<td>轮询进程的初始实例数量。**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**.\_注意_如果要内部，聚合，计算的监控项能正常工作，这个参数值必须非0。</td>
</tr>
<tr>
<td>StartPreprocessors</td>
<td>12</td>
<td>预处理工作进程的初始实例数量。\预处理管理进程将跟随预处理工作进程启动。**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. 从Zabbix 3.4.0开始支持该参数。</td>
</tr>
<tr>
<td>StartProxyPollers</td>
<td>3</td>
<td>被动proxy的轮询进程初始实例数量。**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**.\在Zabbix 1.8.5版本之前，最大能设置为255。 从Zabbix 1.8.3开始支持该参数。</td>
</tr>
<tr>
<td>StartSNMPTrapper</td>
<td>0</td>
<td>设置为1, SNMP trapper进程将启动。 从Zabbix 2.0.0开始支持该参数。</td>
</tr>
<tr>
<td>StartTimers</td>
<td>1</td>
<td>计时器进程的初始实例数量。 计时器进程处理基于时间的触发器和维护期功能。 只有第一个计时器进程处理维护期。 从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>StartTrappers</td>
<td>12</td>
<td>trapper进程的初始实例数量。**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. Trapper接收来自Zabbix发送者、主动agent和主动proxies的数据。 至少要运行一个trapper进程用于在web前端展示服务器可用性和队列视图。 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartVMwareCollectors</td>
<td>2</td>
<td>vmware采集器进程的初始实例数量。\从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>StatsAllowedIP</td>
<td></td>
<td>逗号分隔的IP地址列表,可选CIDR表示法, 或外部Zabbix实例的DNS名称. 只接受来自此处列出的地址的Stats请求。如果未设置此参数，则不接受stats请求。 如果启用IPv6支持，则’127.0.0.1’, ‘::127.0.0.1’, ‘::ffff:127.0.0.1’ 与’::&#x2F;0’等价表示为允许任何IPv4或IPv6地址。’0.0.0.0&#x2F;0’可用于允许任何IPv4地址。 示例: StatsAllowedIP&#x3D;127.0.0.1,192.168.1.0&#x2F;24,::1,2001:db8::&#x2F;32,zabbix.example.com 从Zabbix 4.2.0开始支持此参数。</td>
</tr>
<tr>
<td>Timeout</td>
<td>3</td>
<td>agent, SNMP设备或外部检查的超时时长(单位为秒)。</td>
</tr>
<tr>
<td>TrapperTimeout</td>
<td>300</td>
<td>定义trapper处理数据的超时时间。</td>
</tr>
<tr>
<td>TrendCacheSize</td>
<td>16M</td>
<td>趋势数据缓存大小，单位字节。 用于存储趋势数据的共享内存大小。</td>
</tr>
<tr>
<td>UnavailableDelay</td>
<td>60</td>
<td>在资源<a href="https://www.zabbix.com/documentation/5.0/manual/appendix/items/unreachability#unavailable_host">不可用</a>期间，Zabbix多少秒检查一次资源是否可用。</td>
</tr>
<tr>
<td>UnreachableDelay</td>
<td>15</td>
<td>在资源<a href="https://www.zabbix.com/documentation/5.0/manual/appendix/items/unreachability#unreachable_host">不可达</a>期间 ，Zabbix多少秒检查一次资源是否可达。</td>
</tr>
<tr>
<td>UnreachablePeriod</td>
<td>45</td>
<td>在主机 <a href="https://www.zabbix.com/documentation/5.0/manual/appendix/items/unreachability#unreachable_host">不可用</a>多少秒后，即视为主机不可用。</td>
</tr>
<tr>
<td>User</td>
<td>zabbix</td>
<td>降低系统某普通用户的权限。 仅当以’root’身份运行且AllowRoot参数设置为禁止时，该参数才起作用。 从Zabbix 2.4.0开始支持该参数。</td>
</tr>
<tr>
<td>ValueCacheSize</td>
<td>8M</td>
<td></td>
</tr>
<tr>
<td>VMwareCacheSize</td>
<td>8M</td>
<td>存储VMware数据的共享内存大小。 VMware内部检查[vmware,buffer,…] 可以用来监控VMware缓存使用情况 (参见 <a href="https://www.zabbix.com/documentation/5.0/manual/config/items/itemtypes/internal">内部检查</a>)。 注意，如果没有配置并启动vmware收集器实例，那么共享内存就不会被分配。\从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>VMwareFrequency</td>
<td>60</td>
<td>间隔多少秒从单个VMware服务收集数据。\任何VMware监控项的最小更新周期都大于或等于该时间。 从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>VMwarePerfFrequency</td>
<td>60</td>
<td>间隔多少秒从单个VMware服务检索性能计数器统计数据。 该时间为任一VMware <a href="https://www.zabbix.com/documentation/5.0/manual/config/items/itemtypes/simple_checks/vmware_keys#footnotes">监控项</a>（使用VMware性能计数器）的最小更新间隔。 从Zabbix 2.2.9, 2.4.4开始支持该参数。</td>
</tr>
<tr>
<td>VMwareTimeout</td>
<td>10</td>
<td>vmware采集器等待 VMware 服务(vCenter or ESX 管理程序)响应的最大时长。 从Zabbix 2.2.9, 2.4.4开始支持该参数。</td>
</tr>
</tbody></table>
<blockquote>
<p>Tips：太多的数据采集进程 (pollers, unreachable pollers, HTTP pollers, Java pollers, pingers, trappers, proxypollers) 与 IPMI manager , SNMP trapper 和预处理工作进程(preprocessing workers)一起会<strong>耗尽</strong>预处理管理器的每进程文件描述符限制。因此，需要增大<code>open files</code>、<code>max user processes</code>。</p>
</blockquote>
<h2 id="Agent"><a href="#Agent" class="headerlink" title="Agent"></a>Agent</h2><p>推荐使用Zabbix Agent2。Agent和Agent2版本对比如下：</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>Zabbix agent</th>
<th>Zabbix agent 2</th>
</tr>
</thead>
<tbody><tr>
<td>程序设计语言</td>
<td>C</td>
<td>一部分使用C，其他用go</td>
</tr>
<tr>
<td>守护进程</td>
<td>yes</td>
<td>no (Windows 5.0.4之后版本支持)</td>
</tr>
<tr>
<td>扩展支持</td>
<td>自定义C的<a href="https://www.zabbix.com/documentation/5.0/zh/manual/conf%E7%9A%84ig/items/loadablemodules">可加载模块</a>。</td>
<td>自定义GO的<a href="https://www.zabbix.com/documentation/5.0/zh/manual/config/items/plugins">插件</a>。</td>
</tr>
<tr>
<td>请求</td>
<td></td>
<td></td>
</tr>
<tr>
<td>支持平台</td>
<td>Linux, IBM AIX, FreeBSD, NetBSD, OpenBSD, HP-UX, Mac OS X, Solaris: 9, 10, 11, Windows: 从xp开始所有的桌面和服务端版本。</td>
<td>Linux, Windows: 从xp开始所有的桌面和服务端版本。</td>
</tr>
<tr>
<td>支持的加密库</td>
<td>GnuTLS 3.1.18 and newer OpenSSL 1.0.1, 1.0.2, 1.1.0, 1.1.1 SSL库 - tested with versions 2.7.4, 2.8.2 (某些限制的使用, 查看 <a href="https://www.zabbix.com/documentation/5.0/zh/manual/encryption#compiling_zabbix_with_encryption_support">加密</a>详情页).</td>
<td>Linux: OpenSSL 1.0.1和最新版本在Zabbix 4.4.8之后支持。 MS Windows: OpenSSL 1.1.1或者最新版. OpenSSL库必须开启PSK，否则LibreSSL不支持.</td>
</tr>
<tr>
<td>监控进程</td>
<td></td>
<td></td>
</tr>
<tr>
<td>进程</td>
<td>每个server&#x2F;proxy都有独立的进程。</td>
<td>单个进程多线程。 这最大的线程数由GOMAXPROCS环境变量决定。</td>
</tr>
<tr>
<td>指标</td>
<td><strong>UNIX</strong>: 查看支持的 <a href="https://www.zabbix.com/documentation/5.0/zh/manual/config/items/itemtypes/zabbix_agent">items</a>. <strong>Windows</strong>: 查看指定Windows版本的<a href="https://www.zabbix.com/documentation/5.0/zh/manual/config/items/itemtypes/zabbix_agent/win_keys">监控项</a>.</td>
<td><strong>UNIX</strong>: Zabbix agent支持所有指标。 其他的, agent2 提供Docker, Memcached, MySQL, PostgreSQL, Redis, systemd (查看agent2的<a href="https://www.zabbix.com/documentation/5.0/zh/manual/config/items/itemtypes/zabbix_agent/zabbix_agent2">监控项</a>)的Zabbix-native监控方案 <strong>Windows</strong>: Zabbix agent支持所有指标和HTTPS检查 net.tcp.service* , LDAP. 其他的, agent2 提供关于PostgreSQL, Redis的Zabbix-native监控方案。</td>
</tr>
<tr>
<td>并发</td>
<td>单进程按监控项顺序进行检查</td>
<td>来自不同插件的检查或一个插件内的多个检查可以同时执行。</td>
</tr>
<tr>
<td>计划&#x2F;灵活 间隔</td>
<td>仅支持被动检查。</td>
<td>支持主动检查。</td>
</tr>
<tr>
<td>第三方traps</td>
<td>no</td>
<td>yes</td>
</tr>
<tr>
<td>Additional features</td>
<td></td>
<td></td>
</tr>
<tr>
<td>永久存储</td>
<td>no</td>
<td>yes</td>
</tr>
<tr>
<td>超时设置</td>
<td>只能定义agent级别。</td>
<td>超时插件可以覆盖在agent上的级别超时设置。</td>
</tr>
<tr>
<td>删除用户权限</td>
<td>yes (Unix-like systems only)</td>
<td>no</td>
</tr>
<tr>
<td>用户可配置密码套件</td>
<td>yes</td>
<td>no</td>
</tr>
</tbody></table>
<h2 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h2><p>Zabbix proxy 是一个可以从一个或多个受监控设备采集监控数据并将信息发送到 Zabbix server 的进程，主要是代表 Zabbix server 工作。 所有收集的数据都在本地缓存，然后传输到 proxy 所属的 Zabbix server。</p>
<p>部署Zabbix proxy 是可选的，但可能非常有利于分担单个 Zabbix server 的负载。 如果只有代理采集数据，则 Zabbix server 上会减少 CPU 和磁盘 I&#x2F;O 的开销。</p>
<p>建议：</p>
<ul>
<li>尽量减少Server直接监控主机的数量，建议由多个Proxy负担大部分的负载；</li>
<li>选择性能较好的主机作为Proxy；</li>
</ul>
<p>配置优化参考：</p>
<table>
<thead>
<tr>
<th>必须配置</th>
<th>推荐值</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>CacheSize</td>
<td>256M</td>
<td>缓存大小, 单位为字节。 用于存储主机、监控项数据的共享内存大小。 在Zabbix 5.0.1版本这参数的最大值可以从8G增加到64G。</td>
</tr>
<tr>
<td>ConfigFrequency</td>
<td>180</td>
<td>每隔多少秒proxy从Zabbix server获取配置数据。 该参数只有主动proxy才会使用，proxy工作模式由参数ProxyMode决定。</td>
</tr>
<tr>
<td>DataSenderFrequency</td>
<td>1</td>
<td>Proxy将采集到的数据以一定的时间间隔（单位为秒）发送给Zabbix server。 该参数只有主动proxy才会使用，proxy工作模式由参数ProxyMode决定。</td>
</tr>
<tr>
<td>DebugLevel</td>
<td>3</td>
<td>指定调试等级: 0 - Zabbix进程的起停基本信息 1 - 重要（Critical）信息 2 - 错误（Error）信息 3 - 警告（Warning）信息 4 - 调试（Debug）信息 (产生大量信息) 5 - 扩展调试 (产生更多信息)</td>
</tr>
<tr>
<td>EnableRemoteCommands</td>
<td>0</td>
<td>是否允许Zabbix server远程执行命令。 0 - 禁止 1 - 允许 从Zabbix 3.4.0开始支持该参数。</td>
</tr>
<tr>
<td>HeartbeatFrequency</td>
<td>60</td>
<td>心跳信息发送频率，单位为秒。 用于监视proxy的可用性。 0 - 禁止 该参数只有主动proxy才会使用，proxy工作模式由参数ProxyMode决定。</td>
</tr>
<tr>
<td>HistoryCacheSize</td>
<td>128M</td>
<td>历史缓存数据大小, 单位为字节。 存储历史数据使用共享内存.</td>
</tr>
<tr>
<td>HistoryIndexCacheSize</td>
<td>16M</td>
<td>历史索引缓存大小, 单位为字节。\缓存一个item大概需要大小为100字节的空间。 该参数从Zabbix 3.0.0开始支持。</td>
</tr>
<tr>
<td>HousekeepingFrequency</td>
<td>1</td>
<td>Zabbix 执行 housekeeping 的频率 (单位为小时)。 housekeeping负责从数据库中删除过期的信息。 <em>注意</em>: 为了防止 housekeeper 负载过大 (例如, 当历史和趋势周期大大减小时), 对于每一个监控项，不会在一个housekeeping周期内删除超过4倍HousekeepingFrequency 的过期数据。 因此, 如果 HousekeepingFrequency 是 1小时, 一个周期内不会删除超过4小时的过期信息 (从最旧的数据开始) 。 <em>备注</em>: 为降低 server压力， housekeeping将在server启动以后，延迟30分钟执行。 因此, 如果 HousekeepingFrequency 是1小时,serverg启动30分后执行第一次 housekeeping , 然后按1小时为周期重复执行。从Zabbix 2.4.0以后有了这种延迟行为。 从Zabbix 3.0.0开始，可以设置HousekeepingFrequency为0来禁止自动housekeeping。 此时 housekeeping 只能通过 <em>housekeeper_execute</em> 启动， 在一个housuekeeping周期内删除的过期信息时长为从最后一次housekeeping以来到配置周期的4倍,不少于4小时且不大于4天。</td>
</tr>
<tr>
<td>LogFile</td>
<td></td>
<td>日志文件名字</td>
</tr>
<tr>
<td>LogFileSize</td>
<td>128M</td>
<td>日志文件大小，单位 MB。 0 - 禁止日志文件自动回滚. <em>注意</em>: 如果日志文件达到限定的大小，文件回滚失败, 不管是什么原因, 现有的日志会被截断，并重新记录日志。</td>
</tr>
<tr>
<td>LogRemoteCommands</td>
<td>1</td>
<td>当执行shell命令时可以记录日志。 0 - 禁止 1 - 允许 从Zabbix 3.4.0开始支持该参数。</td>
</tr>
<tr>
<td>LogType</td>
<td>file</td>
<td>日志输出类型: <em>file</em> - 写入LogFile 参数指定的日志文件中, <em>system</em> - 写入syslog, <em>console</em> - 控制台输出. 从Zabbix 3.0.0开始支持该参数。</td>
</tr>
<tr>
<td>LogSlowQueries</td>
<td>3000</td>
<td>数据库查询消耗时间，大于该时间将会记入日志 (毫秒)。 0 - 不记录慢查询日志。 DebugLevel&#x3D;3时该选项可用。 从Zabbix 1.8.2开始支持该参数。</td>
</tr>
<tr>
<td>ProxyLocalBuffer</td>
<td>24</td>
<td>Proxy将在本地保留数据N小时，即使数据已与server同步。\如果第三方应用程序将使用本地数据，则可以使用此参数。</td>
</tr>
<tr>
<td>ProxyMode</td>
<td>0</td>
<td>Proxy工作模式。 0 - 主动模式 1 - 被动模式 从Zabbix 1.8.3开始支持该参数。 <em>注意</em> 当使用 Active proxy 时，敏感的 proxy 配置数据可供有权访问Zabbix server trapper端口的应用使用。 因为第三方应用可以假装是活动proxy并请求配置数据而不会进行身份验证。</td>
</tr>
<tr>
<td>ProxyOfflineBuffer</td>
<td>72</td>
<td>如果无法连接Zabbix server，proxy将保留数据N小时。\旧数据将丢失。</td>
</tr>
<tr>
<td>StartDBSyncers</td>
<td>8</td>
<td>数据库进程的初始实例数量。 在版本1.8.5之前，上限是64。 这个参数从Zabbix 1.8.3开始得到了支持。</td>
</tr>
<tr>
<td>StartDiscoverers</td>
<td>8</td>
<td>发现进程的初始实例数量。 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartHTTPPollers</td>
<td>3</td>
<td>HTTP 轮询进程的初始实例数量。</td>
</tr>
<tr>
<td>StartIPMIPollers</td>
<td>1</td>
<td>IPMI 轮询进程的初始实例数量。 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartJavaPollers</td>
<td>3</td>
<td>Java 轮询子进程的初始实例数量。 从Zabbix 2.0.0开始支持该参数。</td>
</tr>
<tr>
<td>StartPingers</td>
<td>4</td>
<td>ICMP pingers进程的初始实例数量 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartPollersUnreachable</td>
<td>8</td>
<td>不可达主机 (包括IPMI 和 Java)的轮询进程的初始实例数量。 从Zabbix 2.4.0开始，如果IPMI或Java轮询器启动，那么至少有一个针对不可访问主机的轮询进程必须运行。\在Zabbix 1.8.5版本之前，最大能设置为255。 这个参数从Zabbix 1.8.3开始得到了支持。</td>
</tr>
<tr>
<td>StartPollers</td>
<td>12</td>
<td>轮询进程的初始实例数量。\在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartPreprocessors</td>
<td>8</td>
<td>pre-forked实例的预处理线程数量**<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/config/zabbix_server#footnotes">1</a>**. 预处理器工作进程启动时，预处理管理器进程将自动启动。 从Zabbix 4.2.0开始支持该参数。</td>
</tr>
<tr>
<td>StartSNMPTrapper</td>
<td>0</td>
<td>设置为1, SNMP trapper进程将启动。 从Zabbix 2.0.0开始支持该参数。</td>
</tr>
<tr>
<td>StartTrappers</td>
<td>8</td>
<td>trapper进程的初始实例数量。 Trapper接收来自Zabbix发送者、主动agent的数据。 至少要运行一个trapper进程用于在web前端展示服务器可用性和队列视图。 在Zabbix 1.8.5版本之前，最大能设置为255。</td>
</tr>
<tr>
<td>StartVMwareCollectors</td>
<td>2</td>
<td>vmware采集器进程的初始实例数量。\从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>StatsAllowedIP</td>
<td></td>
<td>ip地址列表以”，”分割,也可以使用CIDR、或者DNS. 只接受ip里表中的请求. 如果未设置此参数，则不接受请求.如果启用ipv6,则 ‘127.0.0.1’, ‘::127.0.0.1’, ‘::ffff:127.0.0.1’ ipv4和ipv6都支持 ，’::&#x2F;0’ 支持IPv4或者IPv6地址. ‘0.0.0.0&#x2F;0’ 只支持ipv4. 例如:StatsAllowedIP&#x3D;127.0.0.1,192.168.1.0&#x2F;24,::1,2001:db8::&#x2F;32,zabbix.example.com 从Zabbix 4.2.0开始支持该参数。</td>
</tr>
<tr>
<td>Timeout</td>
<td>3</td>
<td>agent、SNMP设备或外部检查的超时时长(单位为秒)。</td>
</tr>
<tr>
<td>TrapperTimeout</td>
<td>60</td>
<td>定义trapper处理数据的超时时间。</td>
</tr>
<tr>
<td>UnavailableDelay</td>
<td>60</td>
<td>在资源<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/items/unreachability#unavailable_host">不可达</a>期间，Zabbix多少秒检查一次资源是否可用。</td>
</tr>
<tr>
<td>UnreachableDelay</td>
<td>15</td>
<td>在资源<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/items/unreachability#unreachable_host">不可</a> 期间 ，Zabbix多少秒检查一次资源是否可达.</td>
</tr>
<tr>
<td>UnreachablePeriod</td>
<td>45</td>
<td>在资源<a href="https://www.zabbix.com/documentation/5.0/zh/manual/appendix/items/unreachability#unreachable_host">不可</a>期间 ，Zabbix多少秒检查一次资源是否可达。</td>
</tr>
<tr>
<td>VMwareCacheSize</td>
<td>64M</td>
<td>存储VMware数据的共享内存大小。 VMware内部检查[vmware,buffer,…] 可以用来监控VMware缓存使用情况 (参见 <a href="https://www.zabbix.com/documentation/5.0/manual/config/items/itemtypes/internal">内部检查</a>)。 注意，如果没有配置并启动vmware收集器实例，那么共享内存就不会被分配。\从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>VMwareFrequency</td>
<td>60</td>
<td>间隔多少秒从单个VMware服务收集数据。\任何VMware监控项的最小更新周期都大于或等于该时间。 从Zabbix 2.2.0开始支持该参数。</td>
</tr>
<tr>
<td>VMwarePerfFrequency</td>
<td>60</td>
<td>间隔多少秒从单个VMware服务检索性能计数器统计数据。 该时间为任一VMware <a href="https://www.zabbix.com/documentation/5.0/zh/manual/config/items/itemtypes/simple_checks/vmware_keys#footnotes">监控项</a>（使用VMware性能计数器）的最小更新间隔。 从Zabbix 2.2.9, 2.4.4开始支持该参数。</td>
</tr>
<tr>
<td>VMwareTimeout</td>
<td>10</td>
<td>vmware采集器等待 VMware 服务(vCenter or ESX 管理程序)响应的最大时长。 从Zabbix 2.2.9, 2.4.4开始支持该参数。</td>
</tr>
</tbody></table>
<blockquote>
<p>注意：Zabbix只支持不带BOM的UTF-8编码的配置文件。</p>
</blockquote>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix服务端进程剖析</title>
    <url>/2023/12/28/Zabbix%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%BF%9B%E7%A8%8B%E5%89%96%E6%9E%90/</url>
    <content><![CDATA[<blockquote>
<p>参考：《深入理解Zabbix监控系统》、<a href="https://www.zabbix.com/documentation/5.0/en/manual">《Zabbix用户手册》</a></p>
</blockquote>
<p>Zabbix服务端进程被分为不同的种类，每一种进程负责相应的任务，包括收集原始监控数据、对原始监控数据进行预处理、将预处理后的监控数据同步到数据库、对监控数据进行计算以生成事件、计算和获取内部监控数据，以及对数据库中的数据进行清理等。</p>
<h3 id="监控数据的收集进程"><a href="#监控数据的收集进程" class="headerlink" title="监控数据的收集进程"></a>监控数据的收集进程</h3><p>Zabbix服务器的重要任务之一就是被动接收由Zabbix代理和各种Zabbix客户端发送的监控数据，以及主动向Zabbix代理、Zabbix java gateway和Zabbix客户端等数据源请求数据，其中被动接收数据由<strong>trapper类进程</strong>实现，主动请求数据则由<strong>poller类</strong>进程实现。</p>
<p>trapper类进程通过监听<strong>TCP套接字</strong>来捕获符合通信协议的原始监控数据，poller类进程则使用<code>ConfigCache</code>作为输入，根据缓存信息实现完善的任务调度。trapper类和poller类进程的下游是<strong>预处理进程</strong>，这两类进程需要将收集到的原始监控数据发送到预处理进程。trapper类进程和poller类进程都会在进程内部维护一个静态变量<code>cached_message</code>，用于暂存待发送的监控数据，并在各种必要的时机将该变量中的消息发送到预处理进程。</p>
<h4 id="trapper类进程"><a href="#trapper类进程" class="headerlink" title="trapper类进程"></a>trapper类进程</h4><p>Zabbix服务器端的trapper进程负责接收来自Zabbix客户端、Zabbix代理、zabbix_sender及其他外部进程发来的请求并进行处理，按照Zabbix 5.0的通信协议规范，trapper进程只能接收JSON格式字符串的请求。</p>
<p>trapper进程由配置文件中的<code>StartTrappers</code>参数决定其启动数量（允许启动0～1000个进程，默认为5个）。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@prod-zabbix-server ~]<span class="comment"># ps -ef|grep trapper</span></span><br><span class="line">zabbix    8740  8643  0 Feb21 ?        01:55:26 /usr/sbin/zabbix_server: trapper <span class="comment">#1 [processed data in 0.001288 sec, waiting for connection]</span></span><br><span class="line">zabbix    8741  8643  0 Feb21 ?        01:13:24 /usr/sbin/zabbix_server: trapper <span class="comment">#2 [processed data in 0.000863 sec, waiting for connection]</span></span><br><span class="line">zabbix    8742  8643  0 Feb21 ?        01:02:48 /usr/sbin/zabbix_server: trapper <span class="comment">#3 [processed data in 0.000664 sec, waiting for connection]</span></span><br><span class="line">zabbix    8743  8643  0 Feb21 ?        01:55:36 /usr/sbin/zabbix_server: trapper <span class="comment">#4 [processed data in 0.000788 sec, waiting for connection]</span></span><br><span class="line">zabbix    8744  8643  0 Feb21 ?        01:43:59 /usr/sbin/zabbix_server: trapper <span class="comment">#5 [processed data in 0.000802 sec, waiting for connection]</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>💡注意：至少要运行一个trapper进程用于在web前端展示服务器可用性和队列视图。</p>
</blockquote>
<p>总体而言，trapper进程所做的事情就是循环从TCP 套接字读取请求消息，然后根据消息类型调用不同的函数进行处理，处理完毕后关闭该套接字连接。即每个循环处理一个请求，每个请求的处理都是在新的连接中进行通信的。</p>
<p>数据处理：</p>
<ul>
<li>处理agent data和sender data请求：两者处理过程类似，唯一区别是验证过程，agent data要求监控项属于主动客户端（active agent）类型，而发送者数据（sender data）要求监控项属于Zabbix trapper类型。请求的过程中，trapper进程的作用在于验证数据的有效性，包括监控项状态、监控项类型和主机状态等。</li>
<li>处理proxy config请求：将Zabbix服务器的配置信息传输到Zabbix代理。可以由Zabbix代理发送到Zabbix服务器(主动模式，默认)，也可以由Zabbix服务器发送到Zabbix代理（被动模式）。</li>
<li>处理proxy data请求：可能由Zabbix服务器或者被动模式下的Zabbix代理来处理。如果是Zabbix服务器，说明它接收了一批来自Zabbix代理的监控值，此时需要将数据写入缓存或者进行LLD(Low-level discovery，自动发现)处理；如果是被动代理，说明它接收了Zabbix服务器发送的数据请求，此时需要做的是将监控数据回复给Zabbix服务器。从Zabbix 5.0开始，Zabbix代理具有了预处理的能力，所以proxy data中的监控值其实是已经预处理过的，不需要在Zabbix服务器端再次预处理。</li>
</ul>
<h5 id="snmp-trapper进程"><a href="#snmp-trapper进程" class="headerlink" title="snmp trapper进程"></a>snmp trapper进程</h5><p>snmp trapper进程由配置参数<code>StartSNMPTrapper</code>决定其启动数量（允许0或1个进程），默认为0。该进程的工作方式是循环调用get_latest_data()和read_traps()函数，从trap文件（文件路径由SNMPTrapperFile配置参数决定）中读取数据，然后调用parse_traps()函数进行解析处理。</p>
<h4 id="poller类进程"><a href="#poller类进程" class="headerlink" title="poller类进程"></a>poller类进程</h4><p>poller类进程是指以主动方式获取原始监控数据的进程，包括poller进程、unreachable poller进程、ipmi manager&#x2F;poller进程、icmp pinger进程、javapoller进程、proxy poller进程和http poller进程，一共有7种，它们各自负责采集不同类型的监控项数据。与trapper类进程不同的是，poller类进程需要自己执行监控数据采集逻辑，每一种监控项都需要调用不同的函数进行处理才能得到监控数据，而trapper类进程可以直接接收监控数据。从这个角度来说，<strong>对于同样数量的监控任务，使用poller工作方式要比使用trapper工作方式的负载更高</strong>。</p>
<h5 id="工作机制"><a href="#工作机制" class="headerlink" title="工作机制"></a>工作机制</h5><p>poller类进程首先需要解决的问题是如何调度数据采集过程，以保证大量数据采集任务的执行顺序和间隔是正确且准确的。此外，每一种进程都并非唯一的，所以还要保证多进程之间的协调，避免冲突。Zabbix的解决方案是通过<code>ConfigCache</code>中定义的6个二叉堆结构来确定数据采集任务的执行顺序和间隔。</p>
<p>多进程之间的冲突问题，解决方法是使用<strong>ConfigCache互斥锁</strong>，即在访问二叉堆之前加锁，在访问结束以后解锁，从而保证同一时间只有一个进程在访问。</p>
<h5 id="poller进程"><a href="#poller进程" class="headerlink" title="poller进程"></a>poller进程</h5><p>poller进程能够处理除IPMI类型之外的所有监控项的数据采集，包括Zabbix客户端（Zabbix agent）监控项、简单检查（Simple check）监控项、SNMP客户端（SNMP agent）监控项、Zabbix内部（Zabbix internal）监控项、Zabbix聚合（Zabbix aggregate）监控项、外部检查（External check）监控项、数据库监视（Database monitor）监控项、HTTP客户端（HTTP agent）监控项、SSH客户端（SSH agent）监控项、TELNET客户端（TELNET agent）监控项、JMX客户端（JMX agent）监控项以及计算型（Calculated）监控项，共12种。</p>
<h5 id="Zabbix客户端监控项处理"><a href="#Zabbix客户端监控项处理" class="headerlink" title="Zabbix客户端监控项处理"></a>Zabbix客户端监控项处理</h5><p>poller进程对Zabbix客户端（Zabbix agent）监控项进行处理的过程实际上就是以TCP套接字客户端的身份与作为服务器端的Zabbix客户端进行通信的过程。因此，当poller进程需要处理大量Zabbix客户端监控项时，会同时与很多Zabbix客户端建立TCP连接。（同一时刻每个进程最多建立一个连接，用后即关闭。）</p>
<h5 id="unreachable-poller进程"><a href="#unreachable-poller进程" class="headerlink" title="unreachable poller进程"></a>unreachable poller进程</h5><p>在网络通信良好并且各方服务正常的情况下，poller进程所处理的Zabbix客户端和SNMP客户端监控项，以及IPMI进程处理的IPMI客户端（IPMIagent）监控项和java poller进程处理的JMX监控项，都能够成功执行并获取监控数据。但是，当出现agent服务故障时，如果继续由原来的poller类进程处理对应的监控项，大量的连接超时就有可能引起整体服务水平下降。unreachable poller进程就是对该问题的解决方案，<strong>当客户端（包括Zabbix客户端、SNMP客户端、IPMI客户端和JMX客户端）服务不可用时，对应的监控项会转移到unreachable poller队列中处理</strong>。当unreachable poller进程发现某个客户端已经恢复正常时，则将对应的监控项再转移回原始队列中。</p>
<p>一般情况下，由于大部分客户端状态是良好的，因此unreachable poller进程的负载并不高。但是，一旦发生大面积网络故障，会有大量监控项转移到unreachablepoller进程的任务队列中，此时进程的负载会飙升。<strong>如果要降低负载，可以考虑增加UnavailableDelay参数值，或者增加unreachable poller进程的启动数量。</strong></p>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>Zabbix支持<strong>推</strong>和<strong>拉</strong>两种收集监控数据的模式，在Zabbix服务器端表现为同时存在trapper类进程和poller类进程。</p>
<p>trapper类进程用于被动接收来自Zabbix客户端或者Zabbix代理的监控数据；poller类进程用于主动发起连接并向被监控对象请求监控数据。t<strong>rapper类进程包括纯trapper进程和snmp trapper进程，前者用于从Zabbix客户端和Zabbix代理接收监控数据，后者用于从snmp trap文件读取监控数据。</strong>当采用拉的工作模式时，由于每种监控项的具体拉取方式存在较大区别，因此poller类进程进一步划分为多种进程，包括纯poller进程、unreachable poller进程、ipmi manager与ipmi poller进程、icmp pinger进程、java poller进程、proxy poller进程和http poller进程。每一种poller进程负责拉取相应类型的监控数据。</p>
<h3 id="预处理进程"><a href="#预处理进程" class="headerlink" title="预处理进程"></a>预处理进程</h3><p>预处理（preprocessing）进程是从Zabbix 3.4开始新增的一种进程类型，它用于对原始的监控数据进行各种形式的变换和计算，并通过共享内存，将输出结果传递到history syncer进程进行处理。在Zabbix的早期版本中，预处理进程只能运行在Zabbix服务器端，当数据量大时会给Zabbix服务器端造成较大的压力。因此从Zabbix 4.2版本开始，预处理进程可以同时运行在Zabbix服务器端和Zabbix代理端。在这种情况下，<strong>由Zabbix代理负责采集的监控数据在传输到Zabbix服务器端之前就已经完成了预处理，直接从Zabbix客户端传输到Zabbix服务器端的数据则需要由Zabbix服务器端完成预处理。</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@prod-zabbix-server ~]<span class="comment"># ps -ef|grep preprocessing</span></span><br><span class="line">zabbix    8652  8643  0 Feb21 ?        00:47:49 /usr/sbin/zabbix_server: preprocessing manager <span class="comment">#1 [queued 0, processed 716 values, idle 5.029540 sec during 5.035809 sec]</span></span><br><span class="line">zabbix    8653  8643  0 Feb21 ?        00:13:20 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#1 started</span></span><br><span class="line">zabbix    8654  8643  0 Feb21 ?        00:04:00 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#2 started</span></span><br><span class="line">zabbix    8655  8643  0 Feb21 ?        00:03:44 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#3 started</span></span><br><span class="line">zabbix    8656  8643  0 Feb21 ?        00:03:35 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#4 started</span></span><br><span class="line">zabbix    8657  8643  0 Feb21 ?        00:03:29 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#5 started</span></span><br><span class="line">zabbix    8658  8643  0 Feb21 ?        00:03:23 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#6 started</span></span><br><span class="line">zabbix    8659  8643  0 Feb21 ?        00:03:25 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#7 started</span></span><br><span class="line">zabbix    8660  8643  0 Feb21 ?        00:02:28 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#8 started</span></span><br><span class="line">zabbix    8661  8643  0 Feb21 ?        00:02:17 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#9 started</span></span><br><span class="line">zabbix    8662  8643  0 Feb21 ?        00:02:18 /usr/sbin/zabbix_server: preprocessing worker <span class="comment">#10 started</span></span><br></pre></td></tr></table></figure>

<p>以上命令结果可知，preprocessing进程由1个preprocessing manager(管理者进程)和多个preprocessing worker(工作者进程)进程组成。</p>
<p>processing manager进程负责监听预处理所使用的Unix域套接字并处理由poller &#x2F; trapper进程和preprocessing worker进程发送过来的消息。还会向lld manager进程发送消息，因为原始监控数据中同时包含LLD规则监控项数据，这些数据在预处理完毕以后还需要进行LLD处理（由lld manager和lld worker进程完成）</p>
<p>预处理工作者（preprocessing worker）进程的数量由配置参数StartPreprocessors决定，允许1～1 000个进程。工作者进程负责读取管理者进程发送的进程间通信服务消息，并执行所获得的任务。</p>
<h3 id="LLD进程"><a href="#LLD进程" class="headerlink" title="LLD进程"></a>LLD进程</h3><p>LLD进程是从Zabbix 5.0开始出现的专门负责LLD规则（LLD rule）监控数据处理的进程，由于底层发现（Low Level Discovery，LLD）得到越来越多的应用，因此这类数据的处理压力随之增加，将这些工作交给单独的进程来处理将有利于性能的提升和将来的进一步扩展。</p>
<p>LLD进程包括lld manager进程和lld worker进程两种，其中管理者进程是唯一的，工作者进程可以启动多个。LLD进程只能运行在Zabbix服务器端，它们位于预处理进程的下游，接收预处理进程发送的消息作为输入，而输出则是对各项监控配置的更新操作。本质上，<strong>LLD就是通过解析LLD规则监控项（一种特殊类型的监控项，其配置信息存储在items表中，其监控值不用于存储，只用于更新监控配置）返回的特殊格式的字符串，创建、更新或者删除监控项、触发器、图表或主机，使之与返回结果保持一致。</strong>由于LLD规则监控值会按照设定的频率进行更新，因此Zabbix可以随着数据的更新而动态调整监控对象、监控指标和监控参数等。从Zabbix 4.2开始，LLD规则的监控值跟普通监控项一样可以进行预处理，在预处理结束以后，LLD进程再对数据进行解析并更新配置信息，这一方式赋予用户更多对LLD规则数据进行处理的能力，从而增强了底层发现的功能。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@prod-zabbix-server ~]<span class="comment"># ps -ef|grep lld</span></span><br><span class="line">zabbix    8663  8643  0 Feb21 ?        00:01:33 /usr/sbin/zabbix_server: lld manager <span class="comment">#1 [processed 15 LLD rules, idle 5.385801sec during 5.385996 sec]</span></span><br><span class="line">zabbix    8664  8643  0 Feb21 ?        00:29:15 /usr/sbin/zabbix_server: lld worker <span class="comment">#1 [processed 14 LLD rules, idle 6.001249 sec during 6.150509 sec]</span></span><br><span class="line">zabbix    8665  8643  0 Feb21 ?        00:29:28 /usr/sbin/zabbix_server: lld worker <span class="comment">#2 [processed 15 LLD rules, idle 8.471019 sec during 8.725697 sec]</span></span><br></pre></td></tr></table></figure>

<p>lld manager进程虽然只有一个，但是其需要完成的任务有多种，包括注册lldworker进程、接收其他进程发送的消息、给lld worker进程分配任务、处理lldworker进程返回的结果以及响应队列长度请求等。</p>
<p>lld worker进程负责处理lld manager进程分配的任务，即接收并处理通过进程间通信服务发送过来的code 1100消息。总体的处理过程包括解析消息，验证LLD规则有效性（通过ConfigCache），加载filter、LLD macros和overrides，解析LLD消息的JSON数组，进行配置信息更新，以及根据LLD规则监控项状态生成内部事件。lld worker进程的工作机制是被动模式，即发出注册消息以后，并不会主动向管理者进程请求任务，而是等待管理者进程分配任务。</p>
<p><a href="https://rohn-web.oss-cn-hangzhou.aliyuncs.com/img/blog/image-20220303143549989.png?x-oss-process=style/cnblog"><img src="/assets/1703734418-cdc903939eda71add522c8bd6397f37a.png"></a></p>
<p><strong>预处理进程和LLD进程处于poller类进程和trapper类进程的下游</strong>，负责处理poller类进程和trapper类进程获取的原始监控数据。预处理进程按照用户设置的处理规则对数据进行变换和计算，处理之后的数据传递给history syncer进程处理。预处理进程通过进程间通信服务方式与上游进程通信。<strong>处理之后的数据写入共享内存，供下游进程使用</strong>。</p>
<h3 id="history-syncer进程"><a href="#history-syncer进程" class="headerlink" title="history syncer进程"></a>history syncer进程</h3><p>history syncer进程是Zabbix服务器端最为核心的进程，它负责将监控数据（包括趋势数据）写入数据库和写入缓存、生成并处理事件，以及处理动作（action）并生成升级序列（escalation）等。<strong>如果没有history syncer进程，Zabbix服务器将什么也做不了：既不能处理监控数据，又不能生成事件，也不能进行告警。</strong>history syncer进程位于预处理进程的下游，它将预处理进程写入HistoryCache和HistoryIndexCache的数据作为输入。</p>
<p>history syncer进程的启动数量由配置文件中的<code>StartDBSyncers</code>参数控制，允许1～100个进程。history syncer进程的作用是将HistoryCache和HistoryIndexCache中的监控值写入数据库中的history表和trends表，同时根据监控值计算触发器表达式，决定是否触发事件。该进程在Zabbix服务器端和Zabbix代理端都存在，但是有所不同，这一点体现在代码清单9-1所示的进程标题中。在Zabbix服务器端时，该进程既需要处理监控值（values），也需要处理触发器（triggers），在Zabbix代理端时，该进程只需要处理监控值，而不需要处理触发器，因为触发器表达式统一由Zabbix服务器端处理。本章讲述Zabbix服务器端的处理过程。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@prod-zabbix-server ~]<span class="comment"># ps -ef|grep history</span></span><br><span class="line">zabbix    8720  8643  0 Feb21 ?        00:30:13 /usr/sbin/zabbix_server: <span class="built_in">history</span> syncer <span class="comment">#1 [processed 10 values, 8 triggers in 0.004174 sec, idle 1 sec]</span></span><br><span class="line">zabbix    8721  8643  0 Feb21 ?        00:30:28 /usr/sbin/zabbix_server: <span class="built_in">history</span> syncer <span class="comment">#2 [processed 12 values, 5 triggers in 0.004013 sec, idle 1 sec]</span></span><br><span class="line">zabbix    8722  8643  0 Feb21 ?        00:30:38 /usr/sbin/zabbix_server: <span class="built_in">history</span> syncer <span class="comment">#3 [processed 24 values, 7 triggers in 0.006277 sec, idle 1 sec]</span></span><br><span class="line">zabbix    8723  8643  0 Feb21 ?        00:30:21 /usr/sbin/zabbix_server: <span class="built_in">history</span> syncer <span class="comment">#4 [processed 4 values, 3 triggers in 0.004239 sec, idle 1 sec]</span></span><br><span class="line">zabbix    8724  8643  0 Feb21 ?        00:30:30 /usr/sbin/zabbix_server: <span class="built_in">history</span> syncer <span class="comment">#5 [processed 236 values, 146 triggers in 0.058686 sec, idle 1 sec]</span></span><br><span class="line">zabbix    8725  8643  0 Feb21 ?        00:30:18 /usr/sbin/zabbix_server: <span class="built_in">history</span> syncer <span class="comment">#6 [processed 0 values, 0 triggers in 0.000022 sec, idle 1 sec]</span></span><br></pre></td></tr></table></figure>

<h3 id="处理动作相关进程"><a href="#处理动作相关进程" class="headerlink" title="处理动作相关进程"></a>处理动作相关进程</h3><p>escalator进程用于处理事件触发的整个动作序列，该进程读取escalations表中的数据并进行处理，并将生成的警报消息插入alerts表中，供alerter进程使用。所以，escalator进程并不实际发送警报消息，而只生成警报。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@prod-zabbix-server ~]<span class="comment"># ps -ef|grep escalator</span></span><br><span class="line">zabbix    8726  8643  0 Feb21 ?        00:00:32 /usr/sbin/zabbix_server: escalator <span class="comment">#1 [processed 0 escalations in 0.001072 sec, idle 3 sec]</span></span><br></pre></td></tr></table></figure>

<p>alerter进程族用于实际发送警报，该进程族包括alert syncer进程、alert manger进程和alerter进程。alert syncer进程负责将数据库中的警报信息和媒体类型信息同步到alert manager进程，具体方法是从数据库读取数据，然后构造为进程间通信服务消息并发送到alert manager进程。alert manager进程负责向alerter进程分发警报处理任务，并接收alerter进程反馈的结果。alerter进程负责按照alertmanager分配的任务处理警报并反馈结果。task manager进程运行在Zabbix服务器端和Zabbix代理端，它负责处理存储在数据库task表中的远程命令（remote command）、立即检查（check now）、问题确认（problem acknowledge）和问题关闭（problem close）等任务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@prod-zabbix-server ~]<span class="comment"># ps -ef|grep alert</span></span><br><span class="line">zabbix    8645  8643  0 Feb21 ?        00:00:44 /usr/sbin/zabbix_server: alert manager <span class="comment">#1 [sent 0, failed 0 alerts, idle 5.006731 sec during 5.006787 sec]</span></span><br><span class="line">zabbix    8646  8643  0 Feb21 ?        00:00:00 /usr/sbin/zabbix_server: alerter <span class="comment">#1 [sent 0, failed 0 alerts, idle 657.095715 sec during 657.405902 sec]</span></span><br><span class="line">zabbix    8647  8643  0 Feb21 ?        00:00:00 /usr/sbin/zabbix_server: alerter <span class="comment">#2 [sent 0, failed 0 alerts, idle 656.705429 sec during 657.122473 sec]</span></span><br><span class="line">zabbix    8648  8643  0 Feb21 ?        00:00:00 /usr/sbin/zabbix_server: alerter <span class="comment">#3 [sent 0, failed 0 alerts, idle 656.675887 sec during 657.107786 sec]</span></span><br><span class="line">zabbix    8649  8643  0 Feb21 ?        00:00:00 /usr/sbin/zabbix_server: alerter <span class="comment">#4 [sent 0, failed 0 alerts, idle 656.699989 sec during 657.124047 sec]</span></span><br><span class="line">zabbix    8650  8643  0 Feb21 ?        00:00:00 /usr/sbin/zabbix_server: alerter <span class="comment">#5 [sent 0, failed 0 alerts, idle 656.677134 sec during 657.137743 sec]</span></span><br><span class="line">zabbix    8651  8643  0 Feb21 ?        00:00:00 /usr/sbin/zabbix_server: alerter <span class="comment">#6 [sent 0, failed 0 alerts, idle 658.772114 sec during 659.591568 sec]</span></span><br><span class="line">zabbix    8746  8643  0 Feb21 ?        00:01:29 /usr/sbin/zabbix_server: alert syncer [queued 0 alerts(s), flushed 0 result(s) <span class="keyword">in</span> 0.001063 sec, idle 1 sec]</span><br></pre></td></tr></table></figure>

<h3 id="优化建议"><a href="#优化建议" class="headerlink" title="优化建议"></a>优化建议</h3><p>以4C8G配置、能够处理监控项5万个为例，相关进程优化项如下(仅供参考)：</p>
<table>
<thead>
<tr>
<th>配置</th>
<th>默认值</th>
<th>推荐值</th>
</tr>
</thead>
<tbody><tr>
<td>StartDBSyncers</td>
<td>4</td>
<td>8，不宜太高，默认值已能处理4000 NVPS</td>
</tr>
<tr>
<td>StartAlerters</td>
<td>3</td>
<td>6</td>
</tr>
<tr>
<td>StartDiscoverers</td>
<td>1</td>
<td>3</td>
</tr>
<tr>
<td>StartPollers</td>
<td>5</td>
<td>12</td>
</tr>
<tr>
<td>StartPreprocessors</td>
<td>3</td>
<td>6</td>
</tr>
<tr>
<td>StartProxyPollers</td>
<td>1</td>
<td>3</td>
</tr>
<tr>
<td>StartTrappers</td>
<td>5</td>
<td>12</td>
</tr>
<tr>
<td>StartLLDProcessors</td>
<td>2</td>
<td>3</td>
</tr>
<tr>
<td>StartEscalators</td>
<td>1</td>
<td>1</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>docker安装最新版zabbix</title>
    <url>/2023/12/22/docker%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88zabbix/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="0a0240b2bc087edffcd59bde0073b0745d86c5b6d53330f74b38769aec92adc2"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/12/08/hello-world/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="3d7971fbd5a149f7db9a320b0ae454c4f4ab28e282156e1173d4e98117dbb4b4">41ddf685774b2c4c74b5865fbaee426dbac08d0161a0961b14fb12a310670093cd7277ceccc3d57e1f117bcf2930c45b8f2a5373375a56a59166b9f0014234451db4067445a94c47d1d4a746477aaeee12b61073fbff81a8635425e919e102e8fb6be346ebd74ab096fca27beb270fc0da1484f8dbd7d17981a16a978b367e2c9c8f7d4e3b0c37d3f22dbfcc1a5939747016786c6c34f9dfc54381a38e0b7801190c3443d4fa2458c5dd5e314f2c316336ae5d2edaa83bb117e8280f55f3d922b7e5ee171575bf2516f0f7e6aed0f38001779f2674ac6f9839a6fcb86502127b760156aa519bdf63f0778caf7ac5e2a731711675be8a515fffe604818b894c781d56ff6c5827009ebe0b1dfc9b321a0592c322314dc044d0d0c3ee929a8021448f6fe24866d14baac612e28146873cc0b7686ad9c15895d3f77c08ed28d20e32608a02189ccd1e3307856c74b7490af57cc1d50b11934d848b9a8fac6897a89ed44c9ac210c059730c3036f8a7c26d87a5f4a574320769d3aa762739416d09eb9adaaf613c39dbf43b276f3a718335fea4c6b8123f69b1d011e1cf8b5ad04b220f4ca1641d4c707659b81e77b2fb3938f3926683617883b33beec18c95f806c1110ad2641ff9a202bb30eb4c7c3b57038322fc54daad8d949b88867316e3831696d50c37cdc3861bd5fc5b3a55dd1b04729119d55205573b431f9e95f21318329d7db85007cb0a3727c3df884e97e113b26aa5eafdb0f165e9be77315950351e612af5a32d302e388fe1981a7a4f1c87d8f12bb847661c4e3d9f6b38c22c20389c960199b765dfddc0b5a0f9972216779d73e6e1d8aee29cbefe1105f6ae9df9791eacd5bdc8d8a38ce655f070f3183a3e1ce7a4f296241f5661a91a976c5995cb5bad1ad9c89ded86110fedd2d187477eeb0ae6337e9587d503b48ca11082792dc3b9a920fc923a9171f000af688356507587a6acdc2d960716e42afa8cbc9200f41ce6eff6d27a5f8dd39be39e69ff0b7b6c314d6bef1b9844c0a6e82ff54305cc8943308ecb57557ba37b3348a97048aebeaeede57a0bff5c0ab40f8bad2af7731cbe5a016699cda0baa63e9290e219e2ae3cade3660a4d73fac6a56ea52247e3e25b570f22854c93e1d898a41191e776a7befa83f647e1f682d43972457533f156f142cf1a2eb90ba9deb5a982dcc2b1860b790dc1e93ef0ee698775717f5c1f6b68913788d7300ed76d9aa5ecf8284cbc5632620d8f71f6ab242e6865b62e6e2b29b44cec95f19e5a909148e2d1c12b94815d9e1ffe8f1b73ca2b939377c692a874ca54bca9f9564a3a03406574171f199db0ea09db03f31df9f47f878ad21701ca45ef8a3fbcfe3d012bce3666ebfdccc69e073ae0404317c6d8a922f09412772778a123d16b981ffcba0d967e9f9c42255914225f90db27fcab861038c31ab7bdb72e0db113b372b7d459c8d1ed9c206388d8b389be952a104e483c9af9847d5644e4d3f1769bdaa53b77963aa84e940c30c59fb9ec4e859db3331f6d8c5ded5d572757f3bfee7eea3d4041f0740e37e2dd1ee458c0736e4b6d7ef1b88a09663c73e0213162845368bcf5ee66a7b733e51e18b705747f856f57132cf08abca5c921eccf8c5e51581bc108ff91674be661970f5bde89ed51cce5201210c94d2a751162c9874ada7f06ced3f0dce66915413be7aac05df2c808f8b1b11edb5b678bc39d54297836e2f948c7291aba65568ff1ebd264f44e476e58b4d25c48e430f273a5b7b095383fcf696909b24570c2f7f920ff1645343ea185472de5ab20449253e35b755ed660f525e36d8b0b6d1b14f993bddac3a80b65a39fa025d9d222627d1979e46511364676e357af20e86d487858b45937f3a22dc260278678e9649d7591543b0ec507e7853c0f4ca94b6752ce8a07381f9a254b1b32b30da0771af17abbf71d5792bc98c46bab73f74c3d1e04186e94e3ebbeff8096e775fc8d7a486912f54be312edef742a41de44a3f032cb901b9f780d24191c05113ee97134f9f26803e9cfc737f389762b7458a5e03c35d460f8d3874a166c6bfa36b7467780c51d05b0dc9f384eb716673473ca081f1fc269771e238037366bea99abd4a612aacc4435a3b90720f7e77548df1b5dd09477f03d07f961511b03f338cdf2940525ff125a95f80c544336cbd787ae60c4c78116dbba9fd631d96a2b8163e9916afa3fa01c9796a8f683d09a71c5799a81cfaf6bfffa3fc59241f10b41b5ea5bb5da65a29e2b714724ca6e7687ec00f8eba08d0c15d58218e2b7b5d8b7f631b5b5f06ac6b3cf3a01d0febe5782a575137265ceacda8311b5cf8b08ceb92bc9e918fb49e78e28fa1905a5ffe9e08e7571f852ea7e95d83e840c540505a1c62f0fe7d09fba7070a1ba9c0c509d42fee6ea4e1d051fb9f7c469a4d1d207e91c71ae0ca4f50ae2fb3b163bf9c141b9cc0df9752668c4d04342946fdb6236216805d3d47d84858206d685495910191b754956a669e450a28a7ae5d78027cac2a328ac95067feab498b70d693d9e71bad60d48ba6f5d9734927d306ec49de0da6a55b74f97ab07c77a002d1208800069a477c28403d8c69b390c382075bbd9e44d73f0c540ac9863b271c532e066f7304467f149d3a19443b0d687be66423ba65b3806e129b0fe66bf76e8e551fc2b7e61b2359ce11cb89c934923ea80fa42d904a6899804a8cbd28d6c76f3d29f575e86694b0f931c95ce40e328cb94af7eeae13d1de015ca6ebe050b9000b9c0a6aa46dd93b50cf2dcdca2df01a5efd4f717291ddc1da3b01cb1262080f2c27a6d516b3e13ea17d23a676ecd0ab3426a8debf7fc7842ec1231d8e5c453df3da3a50794dd5a265710fed35691d08c4d7363cb89410a5d5460b95a07d722ad7f2321b055fbc1e14825ca0bd68b64ba7317231a8ec1e4febc72782d73546af986dc20fe492755c2c89163a138fda65be738c37df12ffbed7df240ecf8c2fa52a1024efeb4711a9a7ae89dcf4caab6baf644dde5e441c21ea30c5cab728adac8652f602da482822c6fe77679b28207bccb0f2fa010d7befe6dea1661c45ce45959ee2ad6913f1244d091ccbd36b5bf69dacb673704bb013b54263f0fdbd7e35bf5c6e344</script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
  </entry>
  <entry>
    <title>pmm-server服务部署过程详解</title>
    <url>/2023/12/18/pmm-server%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<p>pmm-server官方提供了容器的部署方式，通过一个docker镜像就可以运行了，然而这个容器里面包含了很多个服务：prometheus，grafana，consul，nginx等。如果不搞清里面到底有哪些东西，后期的使用和维护总感觉没有底。所以，根据pmm-server在github上的Dockerfile及脚本来解读一下它里面都包含了什么。</p>
<p>所在github地址：<br><a href="https://github.com/percona/pmm-server">https://github.com/percona/pmm-server</a><br>官方文档地址：<br><a href="https://www.percona.com/doc/percona-monitoring-and-management/index.html">https://www.percona.com/doc/percona-monitoring-and-management/index.html</a><br><a href="https://www.percona.com/doc/percona-monitoring-and-management/deploy/server/docker.html#run-server-docker">https://www.percona.com/doc/percona-monitoring-and-management/deploy/server/docker.html#run-server-docker</a></p>
<h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>Dockerfile里面不到20行，操作流程比较清晰：<br>使用的是centos作为基础镜像<br>1）创建pmm账号<br>2）安装ansible并执行了playbook-install.yml和playbook-init.yml两个playbook<br>3）设置CMD容器启动脚本entrypoint.sh</p>
<p>所以，只要搞清楚这两playbook和一个entrypoint.sh就能知道pmm-server容器是如何运行的了。</p>
<p>大牛们的playbook写的还是很好的，通过读这playbook还能从中学到不少小技巧。里面的内容比较多，就找关键的说明一下。</p>
<h3 id="playbook-install-yml"><a href="#playbook-install-yml" class="headerlink" title="playbook-install.yml"></a>playbook-install.yml</h3><p><a href="https://github.com/percona/pmm-server/blob/master/playbook-install.yml">https://github.com/percona/pmm-server/blob/master/playbook-install.yml</a></p>
<p>1）首先是安装系统工具<br>screen<br>yum-utils<br>yum-cron<br>supervisor<br>2）创建需要的目录<br>&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;scripts&#x2F;per-once<br>&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;scripts&#x2F;per-boot<br>&#x2F;opt&#x2F;prometheus&#x2F;data<br>&#x2F;opt&#x2F;consul-data<br>3）配置yum-cron<br>将&#x2F;etc&#x2F;yum&#x2F;yum-cron-hourly.conf和&#x2F;etc&#x2F;yum&#x2F;yum-cron.conf配置文件中的’update_cmd &#x3D; default’改为’update_cmd &#x3D; minimal-security’<br>4）安装Percona Client<br>Percona-Server-client-55<br>5）安装Pecona Server<br>先卸载mariadb-libs再安装，因为Percona Server里面集成了有mysql服务<br>Percona-Server-server-55<br>MySQL-python<br>安装后，可以通过rpm -ql命令查看Percona-Server-server-55都有哪些文件<br>6）添加mysql密码生成脚本<br>保存在&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;scripts&#x2F;per-once&#x2F;init-mysql-password<br>7）添加pmm-laboratory源，并安装工具<br>nginx<br>percona-consul<br>percona-grafana<br>percona-prometheus<br>percona-orchestrator<br>percona-node_exporter<br>percona-qan-api<br>percona-qan-app<br>percona-qan-app2<br>percona-toolkit<br>percona-dashboards<br>pmm-server<br>pmm-manage<br>pmm-update<br>8）配置nginx<br>注释掉listen配置；生成&#x2F;var&#x2F;lib&#x2F;cloud&#x2F;scripts&#x2F;per-boot&#x2F;generate-ssl-certificate脚本，并通过此脚本生成ssl证书<br>9）配置Grafana匿名访问权限<br>&#x2F;etc&#x2F;grafana&#x2F;grafana.ini<br>[auth.anonymous]<br>enabled &#x3D; True<br>org_role &#x3D; Editor<br>10）配置supervisor<br>&#x2F;etc&#x2F;supervisord.conf<br>[supervisorctl]<br>username &#x3D; dummy<br>password &#x3D; dummy<br>11）配置&#x2F;etc&#x2F;my.cnf<br>添加 !includedir &#x2F;etc&#x2F;my.cnf.d&#x2F; 这一行，注意：前面有一个感叹号<br>表示引入&#x2F;etc&#x2F;my.cnf.d&#x2F;目录下的配置文件</p>
<h3 id="playbook-init-yml"><a href="#playbook-init-yml" class="headerlink" title="playbook-init.yml"></a>playbook-init.yml</h3><p><a href="https://github.com/percona/pmm-server/blob/master/playbook-init.yml">https://github.com/percona/pmm-server/blob/master/playbook-init.yml</a></p>
<p>有一些操作好像和前面的playbook里面重复了，这里只挑主要的看一下。<br>1）supervisord.conf里面配置了所涉及到的服务的启动，先运行supervisord服务<br>2）等待mysql服务起来，再创建orchestrator库，和名为orchestrator的mysql用户<br>3）利用pmm.sql脚本倒入pmm库，创建名为qan-api的用户并授予对pmm库的所有操作权限<br>4）等待grafana服务起来之后，重启orchestrator服务<br>5）等orchestrator服务器起来之后，检查pmm相关的一些目录和文件是否存在，如果不存在，则运行&#x2F;usr&#x2F;bin&#x2F;pmm-update-stage2命令生成<br>6）通过supervisorctl shutdown停掉服务<br>7）清理刚才运行服务产生的日志文件</p>
<h3 id="entrypoint-sh"><a href="#entrypoint-sh" class="headerlink" title="entrypoint.sh"></a>entrypoint.sh</h3><p><a href="https://github.com/percona/pmm-server/blob/master/entrypoint.sh">https://github.com/percona/pmm-server/blob/master/entrypoint.sh</a></p>
<p>这个shell脚本主要是对相关配置文件做了些修改，最后执行supervisord的启动命令。</p>
<p>总之，这一个docker容器里面，包含了好多个服务。不看不知道，一看吓一跳…不过确实从中学感受到别人打包部署服务还是蛮牛的。</p>
]]></content>
      <categories>
        <category>PMM</category>
      </categories>
      <tags>
        <tag>PMM</tag>
      </tags>
  </entry>
  <entry>
    <title>victoriametrics在kubesphere中prometheus的应用</title>
    <url>/2023/12/27/victoriametrics%E5%9C%A8kubesphere%E4%B8%ADprometheus%E7%9A%84%E5%BA%94%E7%94%A8/</url>
    <content><![CDATA[<p>具体victoriametrics的功能和使用，我这里就不介绍了，官方文档上很全面的。</p>
<p>这里说下我的拓扑和架构。</p>
<ol>
<li>prometheus的部署使用kube-prometheus的 operator方式部署。</li>
<li>victoriametrics的部署使用sts方式部署。</li>
<li>prometheus的数据通过remote_write方式写到victoriametrics里面，victoriametrics的压缩比较高，可以轻松存储数月的历史数据。</li>
</ol>
<p>为什么没有采用全套的victoriametrics的方案？</p>
<ol>
<li>现有的prometheus+alertmanager已经部署并对接到内部告警系统，不想再进行改造。</li>
<li>victoriametrics在我们这是作为历史数据存储用，非核心的监控数据库。</li>
<li>victoriametrics全套的技术栈组件也很多，引入太多，人力不足。</li>
</ol>
<h3 id="prometheus-crd的修改"><a href="#prometheus-crd的修改" class="headerlink" title="prometheus crd的修改"></a>prometheus crd的修改</h3><p>kubectl get Prometheus -n monitoring k8s -oyaml  下面是我修改后的配置：</p>
<p>注意是加了个remoteWrite的配置项，并且我把存储换成了nfs盘。</p>
<p>这里的存储方案大家根据自己需求来配就行。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion</span>: monitoring.<span class="property">coreos</span>.<span class="property">com</span>/v1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">Prometheus</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">annotations</span>:</span><br><span class="line">  <span class="attr">generation</span>: <span class="number">27</span></span><br><span class="line">  <span class="attr">labels</span>:</span><br><span class="line">    <span class="attr">app</span>: prometheus</span><br><span class="line">    <span class="attr">prometheus</span>: k8s</span><br><span class="line">  <span class="attr">name</span>: k8s</span><br><span class="line">  <span class="attr">namespace</span>: monitoring</span><br><span class="line">  <span class="attr">resourceVersion</span>: <span class="string">&quot;3757019465&quot;</span></span><br><span class="line">  <span class="attr">selfLink</span>: <span class="regexp">/apis/m</span>onitoring.<span class="property">coreos</span>.<span class="property">com</span>/v1/namespaces/monitoring/prometheuses/k8s</span><br><span class="line">  <span class="attr">uid</span>: 8c7be613-1a60-11ea-a1d8-72c40774f54f</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">additionalScrapeConfigs</span>:</span><br><span class="line">    <span class="attr">key</span>: prometheus-additional.<span class="property">yaml</span></span><br><span class="line">    <span class="attr">name</span>: additional-scrape-configs</span><br><span class="line">  <span class="attr">alerting</span>:</span><br><span class="line">    <span class="attr">alertmanagers</span>:</span><br><span class="line">    - <span class="attr">name</span>: alertmanager-main</span><br><span class="line">      <span class="attr">namespace</span>: monitoring</span><br><span class="line">      <span class="attr">port</span>: web</span><br><span class="line">  <span class="attr">remoteWrite</span>:</span><br><span class="line">  - <span class="attr">url</span>: <span class="attr">http</span>:<span class="comment">//victoriametrics.monitoring.svc.cluster.local:8428/api/v1/write</span></span><br><span class="line">  <span class="attr">replicas</span>: <span class="number">2</span></span><br><span class="line">  <span class="attr">ruleSelector</span>:</span><br><span class="line">    <span class="attr">matchLabels</span>:</span><br><span class="line">      <span class="attr">prometheus</span>: k8s</span><br><span class="line">      <span class="attr">role</span>: alert-rules</span><br><span class="line">  <span class="attr">securityContext</span>:</span><br><span class="line">    <span class="attr">fsGroup</span>: <span class="number">2000</span></span><br><span class="line">    <span class="attr">runAsNonRoot</span>: <span class="literal">true</span></span><br><span class="line">    <span class="attr">runAsUser</span>: <span class="number">1000</span></span><br><span class="line">  <span class="attr">serviceAccountName</span>: prometheus</span><br><span class="line">  <span class="attr">serviceMonitorNamespaceSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">serviceMonitorSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">storage</span>:</span><br><span class="line">    <span class="attr">volumeClaimTemplate</span>:</span><br><span class="line">      <span class="attr">spec</span>:</span><br><span class="line">        <span class="attr">resources</span>:</span><br><span class="line">          <span class="attr">requests</span>:</span><br><span class="line">            <span class="attr">storage</span>: 500Gi</span><br><span class="line">        <span class="attr">storageClassName</span>: alicloud-nas-prometheus</span><br><span class="line">  <span class="attr">version</span>: v2<span class="number">.25</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>

<h3 id="victoriametrics的2个配置"><a href="#victoriametrics的2个配置" class="headerlink" title="victoriametrics的2个配置"></a>victoriametrics的2个配置</h3><p>victoriametrics.svc.yaml   内容如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion</span>: v1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">Service</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">annotations</span>:</span><br><span class="line">  <span class="attr">labels</span>:</span><br><span class="line">    <span class="attr">app</span>: victoriametrics</span><br><span class="line">  <span class="attr">name</span>: victoriametrics</span><br><span class="line">  <span class="attr">namespace</span>: monitoring</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">ports</span>:</span><br><span class="line">  - <span class="attr">name</span>: http</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8428</span></span><br><span class="line">    <span class="attr">protocol</span>: <span class="variable constant_">TCP</span></span><br><span class="line">    <span class="attr">targetPort</span>: <span class="number">8428</span></span><br><span class="line">  <span class="attr">selector</span>:</span><br><span class="line">    <span class="attr">app</span>: victoriametrics</span><br><span class="line">  <span class="attr">sessionAffinity</span>: <span class="title class_">None</span></span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">ClusterIP</span>---<span class="attr">apiVersion</span>: v1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">Service</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">annotations</span>:</span><br><span class="line">  <span class="attr">creationTimestamp</span>: <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels</span>:</span><br><span class="line">    <span class="attr">app</span>: victoriametrics</span><br><span class="line">  <span class="attr">name</span>: victoriametrics-nodeport</span><br><span class="line">  <span class="attr">namespace</span>: monitoring</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">externalTrafficPolicy</span>: <span class="title class_">Cluster</span></span><br><span class="line">  <span class="attr">ports</span>:</span><br><span class="line">  - <span class="attr">name</span>: http</span><br><span class="line">    <span class="attr">port</span>: <span class="number">8428</span></span><br><span class="line">    <span class="attr">protocol</span>: <span class="variable constant_">TCP</span></span><br><span class="line">    <span class="attr">targetPort</span>: <span class="number">8428</span></span><br><span class="line">  <span class="attr">selector</span>:</span><br><span class="line">    <span class="attr">app</span>: victoriametrics</span><br><span class="line">  <span class="attr">sessionAffinity</span>: <span class="title class_">None</span></span><br><span class="line">  <span class="attr">type</span>: <span class="title class_">NodePort</span></span><br></pre></td></tr></table></figure>

<p>victoriametrics.sts.yaml  内容如下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion</span>: apps/v1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">StatefulSet</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">annotations</span>:</span><br><span class="line">  <span class="attr">creationTimestamp</span>: <span class="literal">null</span></span><br><span class="line">  <span class="attr">generation</span>: <span class="number">1</span></span><br><span class="line">  <span class="attr">labels</span>:</span><br><span class="line">    <span class="attr">app</span>: victoriametrics</span><br><span class="line">  <span class="attr">name</span>: victoriametrics</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">podManagementPolicy</span>: <span class="title class_">OrderedReady</span></span><br><span class="line">  <span class="attr">replicas</span>: <span class="number">1</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit</span>: <span class="number">10</span></span><br><span class="line">  <span class="attr">selector</span>:</span><br><span class="line">    <span class="attr">matchLabels</span>:</span><br><span class="line">      <span class="attr">app</span>: victoriametrics</span><br><span class="line">  <span class="attr">serviceName</span>: victoriametrics</span><br><span class="line">  <span class="attr">template</span>:</span><br><span class="line">    <span class="attr">metadata</span>:</span><br><span class="line">      <span class="attr">creationTimestamp</span>: <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels</span>:</span><br><span class="line">        <span class="attr">app</span>: victoriametrics</span><br><span class="line">    <span class="attr">spec</span>:</span><br><span class="line">      <span class="attr">containers</span>:</span><br><span class="line">      - <span class="attr">args</span>:</span><br><span class="line">        - --storageDataPath=/storage        - --httpListenAddr=:<span class="number">8428</span></span><br><span class="line">        - --retentionPeriod=<span class="number">1</span></span><br><span class="line">        <span class="attr">image</span>: victoriametrics/victoria-metrics</span><br><span class="line">        <span class="attr">imagePullPolicy</span>: <span class="title class_">IfNotPresent</span></span><br><span class="line">        <span class="attr">livenessProbe</span>:</span><br><span class="line">          <span class="attr">failureThreshold</span>: <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet</span>:</span><br><span class="line">            <span class="attr">path</span>: /health</span><br><span class="line">            <span class="attr">port</span>: <span class="number">8428</span></span><br><span class="line">            <span class="attr">scheme</span>: <span class="variable constant_">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds</span>: <span class="number">120</span></span><br><span class="line">          <span class="attr">periodSeconds</span>: <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold</span>: <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds</span>: <span class="number">30</span></span><br><span class="line">        <span class="attr">name</span>: victoriametrics</span><br><span class="line">        <span class="attr">ports</span>:</span><br><span class="line">        - <span class="attr">containerPort</span>: <span class="number">8428</span></span><br><span class="line">          <span class="attr">protocol</span>: <span class="variable constant_">TCP</span></span><br><span class="line">        <span class="attr">readinessProbe</span>:</span><br><span class="line">          <span class="attr">failureThreshold</span>: <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet</span>:</span><br><span class="line">            <span class="attr">path</span>: /health</span><br><span class="line">            <span class="attr">port</span>: <span class="number">8428</span></span><br><span class="line">            <span class="attr">scheme</span>: <span class="variable constant_">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds</span>: <span class="number">30</span></span><br><span class="line">          <span class="attr">periodSeconds</span>: <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold</span>: <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds</span>: <span class="number">30</span></span><br><span class="line">        <span class="attr">resources</span>:</span><br><span class="line">          <span class="attr">limits</span>:</span><br><span class="line">            <span class="attr">cpu</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            <span class="attr">memory</span>: 8000Mi</span><br><span class="line">          <span class="attr">requests</span>:</span><br><span class="line">            <span class="attr">cpu</span>: <span class="string">&quot;4&quot;</span></span><br><span class="line">            <span class="attr">memory</span>: 8000Mi</span><br><span class="line">        <span class="attr">terminationMessagePath</span>: <span class="regexp">/dev/</span>termination-log</span><br><span class="line">        <span class="attr">terminationMessagePolicy</span>: <span class="title class_">File</span></span><br><span class="line">        <span class="attr">volumeMounts</span>:</span><br><span class="line">        - <span class="attr">mountPath</span>: /storage</span><br><span class="line">          <span class="attr">name</span>: victormetrics-storage</span><br><span class="line">      <span class="attr">dnsPolicy</span>: <span class="title class_">ClusterFirst</span></span><br><span class="line">      <span class="attr">restartPolicy</span>: <span class="title class_">Always</span></span><br><span class="line">      <span class="attr">schedulerName</span>: <span class="keyword">default</span>-scheduler</span><br><span class="line">      <span class="attr">securityContext</span>: &#123;&#125;</span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds</span>: <span class="number">30</span></span><br><span class="line">  <span class="attr">updateStrategy</span>:</span><br><span class="line">    <span class="attr">rollingUpdate</span>:</span><br><span class="line">      <span class="attr">partition</span>: <span class="number">0</span></span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">RollingUpdate</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates</span>:</span><br><span class="line">  - <span class="attr">metadata</span>:</span><br><span class="line">      <span class="attr">creationTimestamp</span>: <span class="literal">null</span></span><br><span class="line">      <span class="attr">name</span>: victormetrics-storage</span><br><span class="line">    <span class="attr">spec</span>:</span><br><span class="line">      <span class="attr">accessModes</span>:</span><br><span class="line">      - <span class="title class_">ReadWriteOnce</span></span><br><span class="line">      <span class="attr">resources</span>:</span><br><span class="line">        <span class="attr">requests</span>:</span><br><span class="line">          <span class="attr">storage</span>: 300Gi</span><br><span class="line">      <span class="attr">storageClassName</span>: alicloud-nas-prometheus</span><br><span class="line">      <span class="attr">volumeMode</span>: <span class="title class_">Filesystem</span></span><br></pre></td></tr></table></figure>

<p>几个apply下，然后到grafana添加一个victoriametrics的数据源，然后可以画板子了。</p>
<p>磁盘占用空间对比：同样时间窗口内，victoriametrics的体积只有prometheus的25%。因为我们这里的victoriametrics只是一个历史数据存储+灾备的功能，对性能上要求不高，victoriametrics的sts里面的配置给得也不是很高，各位可以根据实际情况来修改cpu mem配额。</p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>vmagent简介与部署</title>
    <url>/2023/12/22/vmagent%E7%AE%80%E4%BB%8B%E4%B8%8E%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h3 id="什么是vmagent"><a href="#什么是vmagent" class="headerlink" title="什么是vmagent"></a>什么是vmagent</h3><p>看看官方对vmagent的介绍：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">vmagent is a tiny but mighty agent which helps you collect metrics from various sources and store them </span><br><span class="line">in VictoriaMetrics or any other Prometheus-compatible storage systems that support the remote_write protocol</span><br></pre></td></tr></table></figure>

<p>直译过来就是 vmagent是一个微小但又十分强大的agent,它可以帮助我们从不同的来源处收集指标，将指标存储在vm或者其他支持remote_write协议的prometheus兼容的存储系统。</p>
<p>vmagent有什么特点</p>
<ul>
<li><p>支持作为prometheus的临时替代品，用于从比如nodex_exportor抓取数据  </p>
</li>
<li><p>支持从kafka读取数据，也可以把数据写入到kafka  </p>
</li>
<li><p>支持通过Prometheus relable 添加，删除和修改标签。支持在将数据发送到远程存储之前过滤数据  </p>
</li>
<li><p>支持接受通过vm支持的数据注入协议的数据  </p>
</li>
<li><p>支持将收集到的数据复制到多个远端存储系统  </p>
</li>
<li><p>与prometheus相比，它使用更少的cpu、内存、磁盘io和网络带宽  </p>
</li>
<li><p>。。。</p>
</li>
</ul>
<h3 id="如何安装vmagent"><a href="#如何安装vmagent" class="headerlink" title="如何安装vmagent"></a>如何安装vmagent</h3><p>1、创建外挂目录</p>
<p>mkdir -p &#x2F;data&#x2F;vmagent<br>touch prometheus.yml</p>
<p>2、创建docker-compose.yml</p>
<p>vi docker-compose.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span>  <span class="string">&quot;3&quot;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">vmagent:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">victoriametrics/vmagent</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/data/vmagent/prometheus.yml:/etc/prometheus/prometheus.yml</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">8429</span><span class="string">:8429</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-promscrape.config=/etc/prometheus/prometheus.yml</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-remoteWrite.basicAuth.username=prometheus</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-remoteWrite.basicAuth.password=uPwrRd&#123;ysv1SOW#</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">-remoteWrite.url=http://vmauth:8427</span></span><br></pre></td></tr></table></figure>

<p>3、启动</p>
<p>docker-compose up -d</p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>vmalert集成alertmanager</title>
    <url>/2023/12/22/vmalert%E9%9B%86%E6%88%90alertmanager/</url>
    <content><![CDATA[<p>#创建外挂目录</p>
<p>1，mkdir -p &#x2F;data&#x2F;vmalert</p>
<p>#创建docker-compose.yml文件</p>
<p>集成单个alertmanager</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  vmalert:</span><br><span class="line">    image: victoriametrics/vmalert:v1.86.1</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8880:8880</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/vmalert:/etc/vmalert/</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - <span class="string">&#x27;-rule=/etc/vmalert/*.yml&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-datasource.url=http://10.250.9.74:8427&#x27;</span>             <span class="comment">#读取数据源，配置victoriametrics地址</span></span><br><span class="line">      - <span class="string">&#x27;-datasource.basicAuth.username=prometheus&#x27;</span>   <span class="comment">#配置victoriametrics地址访问账号</span></span><br><span class="line">      - <span class="string">&#x27;-datasource.basicAuth.password=prometheus&#x27;</span>    <span class="comment">#配置victoriametrics地址访问密码</span></span><br><span class="line">      - <span class="string">&#x27;-notifier.url=http://10.250.9.74:19093&#x27;</span>                   <span class="comment">#配置alertmanager访问地址</span></span><br><span class="line">      - <span class="string">&#x27;-remoteWrite.url=http://10.250.9.75:8802/insert/0/prometheus&#x27;</span>         <span class="comment">#配置victoriametrics写入地址</span></span><br><span class="line">      - <span class="string">&#x27;-remoteRead.url=http://10.250.9.75:8902/select/0/prometheus&#x27;</span>          <span class="comment">#配置victoriametrics读取地址</span></span><br></pre></td></tr></table></figure>

<p>集成集群alertmanager</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version: <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  vmalert:</span><br><span class="line">    image: victoriametrics/vmalert:v1.86.1</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8880:8880</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/vmalert:/etc/vmalert/</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - <span class="string">&#x27;-rule=/etc/vmalert/*.yml&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-datasource.url=http://10.250.9.74:8427&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-datasource.basicAuth.username=prometheus&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-datasource.basicAuth.password=prometheus&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-notifier.url=http://10.250.5.145:19093,http://10.250.5.145:19095,http://10.250.5.145:19097&#x27;</span></span><br><span class="line"><span class="comment">#      - &#x27;-notifier.url=http://10.250.5.145:19095&#x27;</span></span><br><span class="line"><span class="comment">#      - &#x27;-notifier.url=http://10.250.5.145:19097&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-remoteWrite.url=http://10.250.9.75:8802/insert/0/prometheus&#x27;</span></span><br><span class="line">      - <span class="string">&#x27;-remoteRead.url=http://10.250.9.75:8902/select/0/prometheus&#x27;</span></span><br></pre></td></tr></table></figure>

<p>2，启动</p>
<p>docker-compose -f docker-compose.yml up -d</p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>vmauth容器启动配置</title>
    <url>/2023/12/22/vmauth%E5%AE%B9%E5%99%A8%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>1，创建docker-compose.yml文件</p>
<p>vi docker-compose.yml</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">version:  <span class="string">&quot;3&quot;</span></span><br><span class="line">services:</span><br><span class="line"></span><br><span class="line">  vmauth:</span><br><span class="line">    image: victoriametrics/vmauth:latest</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8427:8427</span><br><span class="line">    volumes:</span><br><span class="line">      - /data/vmauth/config.yml:/etc/victoriametrics/config.yml</span><br><span class="line">    <span class="built_in">command</span>:</span><br><span class="line">      - <span class="string">&#x27;-auth.config=/etc/victoriametrics/config.yml&#x27;</span></span><br></pre></td></tr></table></figure>

<p>2，创建容器并启动</p>
<p>docker-compose -f docker-compose.yml up -d</p>
<p>3，config.yml文件内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">users</span>:</span><br><span class="line">- username: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">  password: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line">  url_map:</span><br><span class="line">  - src_paths:</span><br><span class="line">    - <span class="string">&quot;/api/v1/query&quot;</span></span><br><span class="line">    - <span class="string">&quot;/api/v1/query_range&quot;</span></span><br><span class="line">    - <span class="string">&quot;/api/v1/label/[^/]+/values&quot;</span></span><br><span class="line">    url_prefix:</span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8901/select/0/prometheus&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8902/select/0/prometheus&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8903/select/0/prometheus&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8904/select/0/prometheus&quot;</span></span><br><span class="line">  - src_paths: [<span class="string">&quot;/api/v1/write&quot;</span>]</span><br><span class="line">    url_prefix:</span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8801/insert/0/prometheus&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8802/insert/0/prometheus&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8803/insert/0/prometheus&quot;</span></span><br><span class="line">    - <span class="string">&quot;http://10.133.23.142:8804/insert/0/prometheus&quot;</span></span><br><span class="line"><span class="comment">#    headers:</span></span><br><span class="line"><span class="comment">#    - &quot;X-Scope-OrgID: abc&quot;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>一站式运维平台的建设思路[二]</title>
    <url>/2023/12/29/%E4%B8%80%E7%AB%99%E5%BC%8F%E8%BF%90%E7%BB%B4%E5%B9%B3%E5%8F%B0%E7%9A%84%E5%BB%BA%E8%AE%BE%E6%80%9D%E8%B7%AF-%E4%BA%8C/</url>
    <content><![CDATA[<p>企业构建一站式运维平台的目的是为了提升运维效率。那么一个成熟的自动化运维系统核心组成包括哪些呢？笔者认为主要包括<strong>CMDB+自动化平台+统一监控+ITSM</strong>。</p>
<p><strong>CMDB</strong> </p>
<p><strong>CMDB是运维的基石</strong>，也是运维的权威数据库，权威不仅体现在数据准确，也要求数据唯一，不能在多套系统里维护着同样的运维资源数据，这样数据准确性更难保证。<strong>CMDB的价值体现在数据被消费</strong>，最常见的消费场景就是监控、运维作业的调度执行、ITSM流程类相关的系统。</p>
<p><strong>自动化运维平台</strong> </p>
<p><strong>自动化运维平台是提升运维效率的利器</strong>。简单来说就是可以把机器上的各种运维操作比如：巡检、日志操作、部署等等重复的运维任务编排成作业，去调度执行。</p>
<p><strong>监控</strong> </p>
<p><strong>监控是实现系统和业务连续稳定运行的重要技术保障手段</strong>。业内比较知名的开源解决方案有zabbix和Prometheus，很多企业的实践也是结合了2者。</p>
<p><strong>ITSM</strong> </p>
<p><strong>ITSM对这些系统进行了一个串联，用流程方式规范IT和运维。</strong>在ITIL4的规范和指导下，与CMDB、Monitor、AutoFlow高度结合，一同打造一站式运维平台，从公司实际出发，解决流程失误、人员失误，打造贴合的流程工单，提升IT生产力，提供IT新视野，提高IT运维效率。</p>
<p><strong>CMDB</strong></p>
<p>CMDB是<strong>运维的权威数据库</strong>, 网上对CMDB的建设和落地思路表述各异。其实直接衡量CMDB成功与否标志是运维或者架构的系统是否愿意消费CMDB，如果是则证明数据是足够权威的。所以CMDB的建设大部分时间可能花在保证数据的正确性上，这个可以通过<strong>自动发现和ITSM的流程</strong>加以保证。比如主机的从购买、上架、系统初始化、应用部署、各种变更、下线、下架等等一个完整的生命周期，都是可以通过ITSM来进行规范的。</p>
<p>由于企业运维需求和场景各异，因此，要实现一个尽可能<strong>通用、灵活、可扩展</strong>的运维资源数据的配置和管理系统，系统必须要满足:</p>
<ul>
<li><p>运维人员能根据企业的运维场景和需求，自己去构建存储的数据模型，以及模型之间的关系</p>
</li>
<li><p>提供丰富的API，尤其是在数据和关系检索要做到通用，便于二次开发</p>
</li>
<li><p>用户可以方便的订阅自己关心的数据，有丰富的图表展示</p>
</li>
<li><p>数据的自动发现和细粒度的权限控制</p>
</li>
</ul>
<p><strong>自动化运维平台</strong></p>
<p>自动化运维平台简单概括为对运维对象的任何变更操作都是由该平台来实现的，也即运维作业平台。实现该系统的核心是灵活的<strong>编排运维任务、任务的调度执行</strong>。首先在系统上可以通过拖拽的方式来编排任务，这个任务节点可能是一个脚本、文件传输、发送邮件等。其次任务的调度执行可以完全关联CMDB来选择执行目标。当然任务执行方式既可以是人工触发也可以是计划任务的方式触发。</p>
<p><strong>统一监控</strong></p>
<p>监控 是实现系统和业务连续稳定运行的重要技术保障手段，对运维来说监控必定是必不可少的功能。业内最知名的开源解决方案有<strong>zabbix和prometheus</strong>，很多企业的实践也是采用两者的结合。当然这些开源的监控在企业实践中还是有很多工作去做，比如单纯的监控告警带来的收益并不是特别明显，因此一般都是与企业的CMDB系统进行关联才能提升其价值。监控的同时最好带有告警的管理功能，否则在大规模告警风暴的情况下会出现很多无效告警，导致重要告警被淹没的情况。</p>
<p><strong>ITSM</strong></p>
<p>下面是ITSM建设的一些实践方法:</p>
<p><strong>集中定义精准的、可用的IT服务：</strong>根据ITIL4，分为服务、事件、问题、变更四大项，满足用户对IT服务的不同需求用户可自定义创建子分类、模板支持针对不同模板的发起权限、编辑权限的用户、部门授权。</p>
<p><strong>自定义流程：</strong>满足不同场景。支持并行，支持分支节点，与工单数据联动，支持设置处理时间，支持自定义按钮文案，支持超时设置，支持CMDB联动，新增、更新、删除数据，支持通知设置、自动任务。</p>
<p><strong>创建表单：</strong>模板字段配置齐全，灵活易上手。与CMDB联动：数据映射，数据关联；预览实时更新；必填、编辑、可见均可编辑；支持自定义公式</p>
<p><strong>打造个性化工作台：</strong>提升工作效率和工单流转速度。已提工单、待办工单一目了然；用户可清晰掌握工单当前状态、快速处理事件；公告消息、通知消息一键直达。</p>
<p>一目了然看到工单所有信息，全方面运转工单。支持多种动作，配有动态流程图，用户知晓概况；工单下可留言，及时沟通；日志留档，记录工单操作日志；关联资源，沉淀知识，正向循环；自动化解决问题，提升服务效率。</p>
]]></content>
      <categories>
        <category>技术咖</category>
      </categories>
      <tags>
        <tag>技术咖</tag>
      </tags>
  </entry>
  <entry>
    <title>vmbackup和vmrestore使用介绍</title>
    <url>/2023/12/27/vmbackup%E5%92%8Cvmrestore%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h4 id="vmbackup"><a href="#vmbackup" class="headerlink" title="vmbackup"></a><strong>vmbackup</strong></h4><p>vmbackup是一个数据备份的工具，可以从vmstorage即时的快照中去备份vm数据，同时支持将备份数据存储到存储系统，如：</p>
<ul>
<li>GCS. Example: gs:&#x2F;&#x2F;&#x2F;&lt;path&#x2F;to&#x2F;backup&gt;</li>
<li>S3. Example: s3:&#x2F;&#x2F;&#x2F;&lt;path&#x2F;to&#x2F;backup&gt;</li>
<li>Any S3-compatible storage such as MinIO, Ceph or Swift. See these docs for details</li>
<li>Local filesystem. Example: fs:&#x2F;&#x2F;&lt;&#x2F;absolute&#x2F;path&#x2F;to&#x2F;backup&gt;</li>
</ul>
<p>vmbackup支持增量备份和全备。当备份数据存储路径已经有了之前的备份数据，增量备份将自动进行；而全备则可以通过-origin指定相同的远端存储去加速备份。因为在这种情况下，可以在远端存储进行新备份与已经存在的备份之间进行共有数据的复制，从而节省了时间和其他花销。备份进程可以在任何时间被打断，但当你使用vmbackup使用同样的参数进行再次备份时，备份将从打断处自动恢复。同时，通过vmbackup备份的数据能够被vmrestore用来恢复数据。</p>
<h4 id="vmrestore"><a href="#vmrestore" class="headerlink" title="vmrestore"></a><strong>vmrestore</strong></h4><p>vmrestore被用于从通过vmbackup备份的数据中进行恢复数据，跟vmbackup备份进程一样，恢复数据进程也可以在任何时候被打断；当再次使用相同的命令和参数去恢复数据时，将从断点处自动恢复。原vmstorage数据存储的的数据将被恢复的数据所替换。</p>
<h4 id="实操"><a href="#实操" class="headerlink" title="实操"></a><strong>实操</strong></h4><h5 id="数据备份"><a href="#数据备份" class="headerlink" title="数据备份"></a><strong>数据备份</strong></h5><p>1、创建快照</p>
<p>上面提到过，vmbackup需要从即时的快照去备份数据，因此想要备份，我们需要先创建快照。vmstorage给我们提供了API去创建快照。使用以下的方式：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># request</span><br><span class="line">curl <span class="attr">http</span>:<span class="comment">//&lt;victoriametrics-addr&gt;:8428/snapshot/create # 需要根据实际部署修改地址和端口</span></span><br><span class="line"></span><br><span class="line"># response</span><br><span class="line">&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;snapshot&quot;</span>:<span class="string">&quot;&lt;snapshot-name&gt;&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>下面来实操一下：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[root@test ~]# curl <span class="attr">http</span>:<span class="comment">//172.16.47.122:8482/snapshot/create</span></span><br><span class="line">&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;snapshot&quot;</span>:<span class="string">&quot;20220119051931-16CA0D126A870F8B&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>我们再看看vmstorage的日志：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>767Z info <span class="title class_">VictoriaMetrics</span>/lib/storage/storage.<span class="property">go</span>:<span class="number">304</span> creating <span class="title class_">Storage</span> snapshot <span class="keyword">for</span> <span class="string">&quot;/vm-data&quot;</span>...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>771Z info <span class="title class_">VictoriaMetrics</span>/lib/storage/table.<span class="property">go</span>:<span class="number">143</span> creating table snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/data&quot;</span>...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>773Z info <span class="title class_">VictoriaMetrics</span>/lib/storage/partition.<span class="property">go</span>:<span class="number">1549</span> creating partition snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/data/small/2022_01&quot;</span> and <span class="string">&quot;/vm-data/data/big/2022_01&quot;</span>...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>920Z info <span class="title class_">VictoriaMetrics</span>/lib/storage/partition.<span class="property">go</span>:<span class="number">1570</span> created partition snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/data/small/2022_01&quot;</span> and <span class="string">&quot;/vm-data/data/big/2022_01&quot;</span> at <span class="string">&quot;/vm-data/data/small/snapshots/20220119051931-16CA0D126A870F8B/2022_01&quot;</span> and <span class="string">&quot;/vm-data/data/big/snapshots/20220119051931-16CA0D126A870F8B/2022_01&quot;</span> <span class="keyword">in</span> <span class="number">0.146</span> seconds</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>920Z info <span class="title class_">VictoriaMetrics</span>/lib/storage/table.<span class="property">go</span>:<span class="number">171</span> created table snapshot <span class="keyword">for</span> <span class="string">&quot;/vm-data/data&quot;</span> at (<span class="string">&quot;/vm-data/data/small/snapshots/20220119051931-16CA0D126A870F8B&quot;</span>, <span class="string">&quot;/vm-data/data/big/snapshots/20220119051931-16CA0D126A870F8B&quot;</span>) <span class="keyword">in</span> <span class="number">0.149</span> seconds</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>921Z info <span class="title class_">VictoriaMetrics</span>/lib/mergeset/table.<span class="property">go</span>:<span class="number">1161</span> creating <span class="title class_">Table</span> snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/indexdb/16CA0D126A874608&quot;</span>...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>963Z info <span class="title class_">VictoriaMetrics</span>/lib/mergeset/table.<span class="property">go</span>:<span class="number">1230</span> created <span class="title class_">Table</span> snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/indexdb/16CA0D126A874608&quot;</span> at <span class="string">&quot;/vm-data/indexdb/snapshots/20220119051931-16CA0D126A870F8B/16CA0D126A874608&quot;</span> <span class="keyword">in</span> <span class="number">0.041</span> seconds</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>963Z info <span class="title class_">VictoriaMetrics</span>/lib/mergeset/table.<span class="property">go</span>:<span class="number">1161</span> creating <span class="title class_">Table</span> snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/indexdb/16CA0D126A874607&quot;</span>...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>966Z info <span class="title class_">VictoriaMetrics</span>/lib/mergeset/table.<span class="property">go</span>:<span class="number">1230</span> created <span class="title class_">Table</span> snapshot <span class="keyword">of</span> <span class="string">&quot;/vm-data/indexdb/16CA0D126A874607&quot;</span> at <span class="string">&quot;/vm-data/indexdb/snapshots/20220119051931-16CA0D126A870F8B/16CA0D126A874607&quot;</span> <span class="keyword">in</span> <span class="number">0.003</span> seconds</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">19</span>:<span class="number">31.</span>971Z info <span class="title class_">VictoriaMetrics</span>/lib/storage/storage.<span class="property">go</span>:<span class="number">361</span> created <span class="title class_">Storage</span> snapshot <span class="keyword">for</span> <span class="string">&quot;/vm-data&quot;</span> at <span class="string">&quot;/vm-data/snapshots/20220119051931-16CA0D126A870F8B&quot;</span> <span class="keyword">in</span> <span class="number">0.204</span> seconds</span><br></pre></td></tr></table></figure>

<p>最后去vmstorage的存储路径下看看文件：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 我这里是直接去我的nfs下vmstorage对应的存储path下查看的。</span><br><span class="line"># 可以很清楚看到我们之前的快照</span><br><span class="line">[root@test ~]# cd /nfs_data/pvc-b06968ca-f31e-4d93-b16d-cf66a10c64d9/</span><br><span class="line">[root@test pvc-b06968ca-f31e-4d93-b16d-cf66a10c64d9]# ls -al</span><br><span class="line">total <span class="number">24</span></span><br><span class="line">drwxr-xr-x <span class="number">6</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> .</span><br><span class="line">drwxr-xrwx <span class="number">6</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> ..</span><br><span class="line">drwxr-xr-x <span class="number">4</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> data</span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root    <span class="number">0</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> flock.<span class="property">lock</span></span><br><span class="line">drwxr-xr-x <span class="number">5</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> indexdb</span><br><span class="line">drwxr-xr-x <span class="number">2</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> metadata</span><br><span class="line">drwxr-xr-x <span class="number">3</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> snapshots</span><br><span class="line">[root@test pvc-b06968ca-f31e-4d93-b16d-cf66a10c64d9]# cd snapshots/</span><br><span class="line">[root@test snapshots]# ls -al</span><br><span class="line">total <span class="number">12</span></span><br><span class="line">drwxr-xr-x <span class="number">3</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> .</span><br><span class="line">drwxr-xr-x <span class="number">6</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">14</span> <span class="number">13</span>:<span class="number">49</span> ..</span><br><span class="line">drwxr-xr-x <span class="number">4</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> <span class="number">20220119051931</span>-16CA0D126A870F8B</span><br><span class="line">[root@test snapshots]# cd <span class="number">20220119051931</span>-16CA0D126A870F8B/</span><br><span class="line">[root@test <span class="number">20220119051931</span>-16CA0D126A870F8B]# ls -al</span><br><span class="line">total <span class="number">16</span></span><br><span class="line">drwxr-xr-x <span class="number">4</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> .</span><br><span class="line">drwxr-xr-x <span class="number">3</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> ..</span><br><span class="line">drwxr-xr-x <span class="number">2</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> data</span><br><span class="line">lrwxrwxrwx <span class="number">1</span> root root   <span class="number">55</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> indexdb -&gt; ../../indexdb/snapshots/<span class="number">20220119051931</span>-16CA0D126A870F8B</span><br><span class="line">drwxr-xr-x <span class="number">2</span> root root <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">13</span>:<span class="number">19</span> metadata</span><br></pre></td></tr></table></figure>

<p>其实也可以通过vmstorage提供的API去查看我们刚刚创建的快照</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 到这里我们的快照已经准备就绪了</span><br><span class="line">[root@test ~]# curl <span class="attr">http</span>:<span class="comment">//172.16.47.122:8482/snapshot/list</span></span><br><span class="line">&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;snapshots&quot;</span>:[</span><br><span class="line"><span class="string">&quot;20220119051931-16CA0D126A870F8B&quot;</span></span><br></pre></td></tr></table></figure>

<p>2、数据备份</p>
<p>有了上面的快照，下面我们来进行备份,我这边没有s3、gcs，直接用local filesystem，将其备份到本地&#x2F;opt目录下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 通过刚刚创建的快照进行备份</span><br><span class="line">./vmbackup-prod -storageDataPath=<span class="regexp">/vm-data -snapshotName=20220119051931-16CA0D126A870F8B -dst=fs:/</span><span class="comment">//opt</span></span><br><span class="line"></span><br><span class="line"># 输出如下</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">12</span> build <span class="attr">version</span>: vmbackup-<span class="number">20210715</span>-<span class="number">111047</span>-tags-v1<span class="number">.63</span><span class="number">.0</span>-<span class="number">0</span>-g61cc13c16</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">13</span> command line flags</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;concurrency&quot;</span>=<span class="string">&quot;10&quot;</span> (is_set=<span class="literal">false</span>)</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;configFilePath&quot;</span>=<span class="string">&quot;&quot;</span> (is_set=<span class="literal">false</span>)</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;configProfile&quot;</span>=<span class="string">&quot;&quot;</span> (is_set=<span class="literal">false</span>)</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;credsFilePath&quot;</span>=<span class="string">&quot;&quot;</span> (is_set=<span class="literal">false</span>)</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;customS3Endpoint&quot;</span>=<span class="string">&quot;&quot;</span> (is_set=<span class="literal">false</span>)</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">45</span>:<span class="number">29.</span>709Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;dst&quot;</span>=<span class="string">&quot;fs:///opt&quot;</span> (is_set=<span class="literal">true</span>)</span><br><span class="line">...省略...</span><br><span class="line">00_22197_20220119051721<span class="number">.456_20220119051724</span>.766_16CA152B5133B4AD/timestamps.<span class="property">bin</span><span class="string">&quot;, file_size: 0, offset: 0, size: 0&#125; from src fslocal &quot;</span>/vm-data/snapshots/<span class="number">20220119051931</span>-16CA0D126A870F8B<span class="string">&quot; to dst fsremote &quot;</span>/opt<span class="string">&quot;</span></span><br><span class="line"><span class="string">2022-01-19T05:45:30.374Z info VictoriaMetrics/lib/backup/actions/backup.go:164 uploaded 125373885 out of 125373885 bytes from src fslocal &quot;</span>/vm-data/snapshots/<span class="number">20220119051931</span>-16CA0D126A870F8B<span class="string">&quot; to dst fsremote &quot;</span>/opt<span class="string">&quot; in 627.488079ms</span></span><br><span class="line"><span class="string">2022-01-19T05:45:30.374Z info VictoriaMetrics/lib/backup/actions/backup.go:171 backup from src fslocal &quot;</span>/vm-data/snapshots/<span class="number">20220119051931</span>-16CA0D126A870F8B<span class="string">&quot; to dst fsremote &quot;</span>/opt<span class="string">&quot; with origin fsnil is complete; backed up 125373885 bytes in 0.664 seconds; deleted 0 bytes; server-side copied 0 bytes; uploaded 125373885 bytes</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 再去/opt目录下确保数据备份正确</span></span><br><span class="line"><span class="string">/vm-data # cd /opt/</span></span><br><span class="line"><span class="string">/opt # ls -al</span></span><br><span class="line"><span class="string">total 24</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root          4096 Jan 19 05:45 .</span></span><br><span class="line"><span class="string">drwxr-xr-x    1 root     root          4096 Jan 14 05:49 ..</span></span><br><span class="line"><span class="string">-rw-------    1 root     root             2 Jan 19 05:45 backup_complete.ignore</span></span><br><span class="line"><span class="string">drwx------    4 root     root          4096 Jan 19 05:45 data</span></span><br><span class="line"><span class="string">drwx------    4 root     root          4096 Jan 19 05:45 indexdb</span></span><br><span class="line"><span class="string">drwx------    3 root     root          4096 Jan 19 05:45 metadata</span></span><br></pre></td></tr></table></figure>

<p>3、创建第二个快照</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">[root@test /]# curl <span class="attr">http</span>:<span class="comment">//172.16.47.122:8482/snapshot/create</span></span><br><span class="line">&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;snapshot&quot;</span>:<span class="string">&quot;20220119055254-16CA0D126A870F8C&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>4、增量备份</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 备份</span><br><span class="line">./vmbackup-prod -storageDataPath=<span class="regexp">/vm-data -snapshotName=20220119055254-16CA0D126A870F8C  -dst=fs:/</span><span class="comment">//opt</span></span><br><span class="line"># 日志输出</span><br><span class="line">...省略...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T05</span>:<span class="number">55</span>:<span class="number">18.</span>548Z info <span class="title class_">VictoriaMetrics</span>/lib/backup/actions/backup.<span class="property">go</span>:<span class="number">171</span> backup <span class="keyword">from</span> src fslocal <span class="string">&quot;/vm-data/snapshots/20220119055254-16CA0D126A870F8C&quot;</span> to dst fsremote <span class="string">&quot;/opt&quot;</span> <span class="keyword">with</span> origin fsnil is complete; backed up <span class="number">127597222</span> bytes <span class="keyword">in</span> <span class="number">0.214</span> seconds; deleted <span class="number">2714902</span> bytes; server-side copied <span class="number">0</span> bytes; uploaded <span class="number">4938239</span> bytes</span><br><span class="line"></span><br><span class="line">从日志上不难看出，增量备份时，<span class="keyword">delete</span> file 的值不为<span class="number">0</span>，这里删除的是第一次快照中存在，但在第二次快照中不会存在的数据；另外</span><br><span class="line">花费的时间也明显小于咱们第一次全备。</span><br></pre></td></tr></table></figure>

<p>5、再做一个快照，测试server-side copy</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 创建快照</span><br><span class="line">[root@test ~]# curl <span class="attr">http</span>:<span class="comment">//172.16.47.122:8482/snapshot/create</span></span><br><span class="line">&#123;<span class="string">&quot;status&quot;</span>:<span class="string">&quot;ok&quot;</span>,<span class="string">&quot;snapshot&quot;</span>:<span class="string">&quot;20220119073821-16CA0D126A870F8D&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>6、全备，备份时添加-origin参数</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 备份，添加-origin指定之前备份数据所在目录</span><br><span class="line">./vmbackup-prod -storageDataPath=<span class="regexp">/vm-data -snapshotName=20220119073821-16CA0D126A870F8D  -dst=fs:/</span><span class="comment">//ss -origin=fs:///opt</span></span><br><span class="line"></span><br><span class="line"># 从命令输出来看，确定有进行server-side copy</span><br><span class="line">...省略...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T07</span>:<span class="number">44</span>:<span class="number">56.</span>657Z info <span class="title class_">VictoriaMetrics</span>/lib/backup/actions/backup.<span class="property">go</span>:<span class="number">171</span> backup <span class="keyword">from</span> src fslocal <span class="string">&quot;/vm-data/snapshots/20220119073821-16CA0D126A870F8D&quot;</span> to dst fsremote <span class="string">&quot;/ss&quot;</span> <span class="keyword">with</span> origin fsremote <span class="string">&quot;/opt&quot;</span> is complete; backed up <span class="number">131747249</span> bytes <span class="keyword">in</span> <span class="number">0.190</span> seconds; deleted <span class="number">0</span> bytes; server-side copied <span class="number">121316947</span> bytes; uploaded <span class="number">10430302</span> bytes</span><br></pre></td></tr></table></figure>

<h5 id="数据恢复"><a href="#数据恢复" class="headerlink" title="数据恢复"></a><strong>数据恢复</strong></h5><p>上面我们创建了多个快照，也进行了多次备份。这里我选择从fs:&#x2F;&#x2F;&#x2F;ss目录下的备份进行恢复到&#x2F;tt目录下</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># 进行恢复</span><br><span class="line">./vmrestore-prod  -src=<span class="attr">fs</span>:<span class="comment">///ss -storageDataPath=/tt</span></span><br><span class="line"># vm停止，再进行数据恢复；恢复后，vm再次重启时-storageDataPath参数需要指定为/tt目录，即恢复的数据所在的目录</span><br><span class="line"># 控制台输出</span><br><span class="line">...省略...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T07</span>:<span class="number">58</span>:<span class="number">32.</span>117Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;src&quot;</span>=<span class="string">&quot;fs:///ss&quot;</span> (is_set=<span class="literal">true</span>)</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T07</span>:<span class="number">58</span>:<span class="number">32.</span>117Z info <span class="title class_">VictoriaMetrics</span>/lib/logger/flag.<span class="property">go</span>:<span class="number">28</span> flag <span class="string">&quot;storageDataPath&quot;</span>=<span class="string">&quot;/tt&quot;</span> (is_set=<span class="literal">true</span>)</span><br><span class="line">...省略...</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T07</span>:<span class="number">58</span>:<span class="number">32.</span>751Z info <span class="title class_">VictoriaMetrics</span>/lib/backup/actions/restore.<span class="property">go</span>:<span class="number">185</span> downloaded <span class="number">131747249</span> out <span class="keyword">of</span> <span class="number">131747249</span> bytes <span class="keyword">from</span> fsremote <span class="string">&quot;/ss&quot;</span> to fslocal <span class="string">&quot;/tt&quot;</span> <span class="keyword">in</span> <span class="number">624.</span>892637ms</span><br><span class="line"><span class="number">2022</span>-<span class="number">01</span>-19<span class="attr">T07</span>:<span class="number">58</span>:<span class="number">32.</span>751Z info <span class="title class_">VictoriaMetrics</span>/lib/backup/actions/restore.<span class="property">go</span>:<span class="number">192</span> restored <span class="number">131747249</span> bytes <span class="keyword">from</span> backup <span class="keyword">in</span> <span class="number">0.635</span> seconds; deleted <span class="number">0</span> bytes; downloaded <span class="number">131747249</span> bytes</span><br><span class="line"></span><br><span class="line"># 查看/tt目录下的恢复的数据</span><br><span class="line">/vm-data # ls -al /tt/</span><br><span class="line">total <span class="number">20</span></span><br><span class="line">drwxr-xr-x    <span class="number">5</span> root     root          <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">07</span>:<span class="number">58</span> .</span><br><span class="line">drwxr-xr-x    <span class="number">1</span> root     root          <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">07</span>:<span class="number">44</span> ..</span><br><span class="line">drwx------    <span class="number">4</span> root     root          <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">07</span>:<span class="number">58</span> data</span><br><span class="line">-rw-r--r--    <span class="number">1</span> root     root             <span class="number">0</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">07</span>:<span class="number">58</span> flock.<span class="property">lock</span></span><br><span class="line">drwx------    <span class="number">4</span> root     root          <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">07</span>:<span class="number">58</span> indexdb</span><br><span class="line">drwx------    <span class="number">2</span> root     root          <span class="number">4096</span> <span class="title class_">Jan</span> <span class="number">19</span> <span class="number">07</span>:<span class="number">58</span> metadata</span><br></pre></td></tr></table></figure>

<p>注：在进行恢复数据期间，vm应该停止。</p>
<h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a><strong>Troubleshooting</strong></h3><ul>
<li>当发现备份数据时很慢，可以通过设置-concurrency参数来设置并发来加快上传数据至存储系统</li>
<li>如果vmbackup&#x2F;vmrestore使用了太多的带宽，可以通过maxBytesPerSecond参数进行限制</li>
<li>如果备份&#x2F;恢复数据时被打断，使用相同的命令参数重新备份&#x2F;恢复即可，将在断点处自动恢复</li>
<li>单节点vm备份的数据不能被用于恢复数据至集群版本vm</li>
</ul>
<h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a><strong>总结</strong></h4><p>以上就是本次我对vmbackup和vmrestore的简单介绍了，更多内容请查看官网。如果你觉得vm不错，动手试试看吧！</p>
<h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a><strong>参考</strong></h4><ul>
<li><a href="https://docs.victoriametrics.com/">https://docs.victoriametrics.com</a></li>
</ul>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Keepalived构建LVS高可用集群</title>
    <url>/2024/01/02/%E4%BD%BF%E7%94%A8Keepalived%E6%9E%84%E5%BB%BALVS%E9%AB%98%E5%8F%AF%E7%94%A8%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>下图为DR模型的通信过程，图中的IP不要被扑结构中的IP迷惑，图里只是为了说明DR的通信原理，应用到本例中的拓扑上其工作原理不变。</p>
<p><img src="/images/1704166931-473ad9a370127e6bc722bb924b66cea4.png"></p>
<h2 id="拓扑结构"><a href="#拓扑结构" class="headerlink" title="拓扑结构"></a>拓扑结构</h2><table>
<thead>
<tr>
<th>服务器</th>
<th>IP地址</th>
<th>角色</th>
</tr>
</thead>
<tbody><tr>
<td>Srv01</td>
<td>172.16.42.100  <br>VIP: 172.16.42.111</td>
<td>LVS+Keepalive</td>
</tr>
<tr>
<td>Srv02</td>
<td>172.16.42.101  <br>VIP: 192.168.100.1</td>
<td>LVS+Keepalive</td>
</tr>
<tr>
<td>Srv03</td>
<td>172.16.42.102  <br>VIP: 172.16.42.111</td>
<td>Nginx</td>
</tr>
<tr>
<td>Srv04</td>
<td>172.16.42.103  <br>VIP: 172.16.42.111</td>
<td>Nginx</td>
</tr>
</tbody></table>
<p>另外，我这4台主机都是2个网卡， 其中有ens33是172.16.42.0&#x2F;24这个网络，ens34是192.168.100.0&#x2F;24网络，这个网络在本例中没有用，请忽略。</p>
<h2 id="设置后端服务器"><a href="#设置后端服务器" class="headerlink" title="设置后端服务器"></a>设置后端服务器</h2><h3 id="ARP的内核参数"><a href="#ARP的内核参数" class="headerlink" title="ARP的内核参数"></a>ARP的内核参数</h3><p>由于LVS服务器和后端服务器的网卡上都配置了VIP，那么当客户端联系VIP的时候肯定是和LVS服务器的VIP进行通信，然后由LVS服务器基于规则进行调度，我们知道2层通信是基于MAC地址的，那么首次通信时客户端可能并不知道LVS服务器的MAC地址，那么就需要进行ARP广播来解析出VIP所在的服务器的MAC地址，那么显然对客户端进行ARP应答的只能是LVS服务器不能是后端服务器，所以我们就要在后端上修改内核参数来禁止ARP应答和宣告。那么有2个内核参数表示这两个设置：</p>
<p>arp_ignore：表示接收到ARP广播时的响应级别，默认值为0</p>
<ul>
<li><p>0，默认值，表示响应所有，只要对方查询的IP配置在我自己这台主机上且无论ARP请求从哪个网卡进来，该主机都会响应</p>
</li>
<li><p>1，收到该ARP请求的网卡IP与ARP请求的IP一致，该主机才响应</p>
</li>
</ul>
<p>arp_announce：定义将自己的地址向外通告的级别，默认是0</p>
<ul>
<li><p>0，表示将本机所有的MAC地址都向外通告</p>
</li>
<li><p>1，多网卡主机且都配置了IP地址，那么该主机接入到网络时，无论哪个网卡接入到网络，该网卡都会向外宣告自己所有的MAC地址，所以1表示如果IP不在这个接口上，就避免向外通告，但是不保证一定不会下外通告。</p>
</li>
<li><p>2，仅向网卡IP直连的网络进行通告</p>
</li>
</ul>
<p>为什么会有这些级别呢？因为主机可以有多个网卡，每个网卡都对应一个网段，默认情况下这个多网卡主机只要接入网络它就会把自己所在的所有网络地址都向外进行通告。</p>
<p>所以对于后端服务器，也就是本例子中的Nginx，我们应该在lo上配置子接口，且设置arp_ignore为1，arp_announce为2。</p>
<h3 id="设置后端服务器-1"><a href="#设置后端服务器-1" class="headerlink" title="设置后端服务器"></a>设置后端服务器</h3><p>后端服务器的所有操作都是一样，我这里就演示一台。首先要保证2台后端服务器都安装了Nginx，我用Nginx只是为了后端提供一个Web服务而已，你使用Tomcat也是一样的。</p>
<p>通过这个命令查看当前服务器设置<code>sysctl -a | egrep &quot;arp_ignore|arp_announce&quot;</code></p>
<p><img src="/images/1704166931-1b60e5c0915c674f0758a32713b8695d.png"></p>
<p>可以看到这里每个网卡都有这2个参数还有一个All也有，那应该配置在哪里呢？all表示全局，理论上来说在all上配置就可以，但是为了保险我们在ens33上也配置。</p>
<p>记住arp_announce配置为2；apr_ignore配置为1。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -w net.ipv4.conf.all.arp_announce=2</span><br><span class="line">sysctl -w net.ipv4.conf.ens33.arp_announce=2</span><br></pre></td></tr></table></figure>

<blockquote>
<p>我使用sysctl -w来修改只是临时生效，重启就没有了，为了永久有效请修改<code>/etc/sysctl.conf</code>文件。</p>
</blockquote>
<p><img src="/images/1704166931-b525f935df6dfc0aca5386a5225a6140.png"></p>
<p>现在在说以为什么arp_announce配置为2，我这个主机有2个网卡，每个网卡所连接的是不同网段。我要使用的是ens33上面这个172.16.42.0&#x2F;24这个网段，且VIP也是这个网段，当我把ens33的apr_announce配置为2 的时候，这就意味着当这个ens33接入网络时它不会对外宣告ens34的网络设置，也不会对外宣告lo的网络设置（因为我们要在lo上配置一个子接口，该接口的IP就是VIP），下面配置apr_ignore</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -w net.ipv4.conf.all.arp_ignore=1</span><br><span class="line">sysctl -w net.ipv4.conf.ens33.arp_ignore=1</span><br></pre></td></tr></table></figure>

<p><img src="/images/1704166931-61ba638bd3ce17301fd94621bcec8fb5.png"></p>
<p>下面设置lo的子接口，这里为什么要32位呢？因为要把广播地址设置为自己，这样它的广播就不会广播到其他地方。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ifconfig lo:0 172.16.42.111 netmask 255.255.255.255 broadcast 172.16.42.111 up</span><br></pre></td></tr></table></figure>

<p><img src="/images/1704166931-400090c6863b5cf48ed5867288483d76.png"></p>
<p>下面我们在Srv01上ping一下这个地址，发现没有人应答，所以ping不通。</p>
<p><img src="/images/1704166931-6a9f6cae47772a2a4ddb70b11ff96635.png"></p>
<p>接下来添加一条路由，其目的是由于后端服务器是直接应答客户端请求的，所以就需要确保应答是其源IP一定是VIP（因为客户端请求的就是VIP），但是当LVS修改完数据包发送给后端服务器时，使用的是后端服务器的真实IP地址进行通信的，而网络通信是请求入栈是哪个接口，响应出栈还走哪个接口，这就势必导致后端服务器会使用自己的真实IP而不是VIP对客户端响应，这肯定是不对的，所以我们要通过这一条路由设置让ens33网卡收到数据包后转发给lo:0这个子接口，这样响应出栈的时候就会经过lo:0，这样也就会把响应报文的源IP设置为VIP了。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">route add -host 172.16.42.111 dev lo:0</span><br></pre></td></tr></table></figure>

<p>这条命令的含义是如果目标地址是172.16.42.111就要送到lo:0，这样就保证了入栈经过lo:0，那么出栈自然会经过。如果你不理解，那么就要好好看看最上面的图，二层通信是使用mac地址，而此时后端服务器收到这个数据包的时候，IP报文中源IP是客户端的IP，而目标IP则是VIP，只是数据链路层报文mac地址信息被LVS替换了。</p>
<p><img src="/images/1704166931-ecd91f21b1e8d4c6667e7d0c7c316f2f.png"></p>
<p>之后启动后端服务的Nginx服务，两台后端服务器上都做上面的修改。</p>
<h2 id="安装keepalive"><a href="#安装keepalive" class="headerlink" title="安装keepalive"></a>安装keepalive</h2><p>之间通过yum安装即可<code>yum install -y keepalived</code>。我这里使用的是阿里云的源，它默认就在里面，如下图：</p>
<p><img src="/images/1704166931-ffb26b5d1be062953010bb3b6cbcc7ec.png"></p>
<p>在2个节点都安装。</p>
<table>
<thead>
<tr>
<th>文件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>&#x2F;usr&#x2F;sbin&#x2F;keepalived</td>
<td>二进制程序</td>
</tr>
<tr>
<td>&#x2F;etc&#x2F;keepalived&#x2F;keepalived.conf</td>
<td>配置文件</td>
</tr>
<tr>
<td>&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;keepalived.service</td>
<td>服务文件</td>
</tr>
</tbody></table>
<h3 id="Keepalive配置文件说明"><a href="#Keepalive配置文件说明" class="headerlink" title="Keepalive配置文件说明"></a>Keepalive配置文件说明</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 全局配置</span></span><br><span class="line">global_defs &#123;</span><br><span class="line">   <span class="comment"># 邮件通知信息</span></span><br><span class="line">   notification_email &#123;</span><br><span class="line">     <span class="comment"># 定义收件人</span></span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="comment"># 定义发件人</span></span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   <span class="comment"># SMTP服务器地址</span></span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   <span class="comment"># 路由器标识，一般不用改，也可以写成每个主机自己的主机名</span></span><br><span class="line">   router_id LVS_DEVEL</span><br><span class="line">   <span class="comment"># VRRP的ipv4和ipv6的广播地址，配置了VIP的网卡向这个地址广播来宣告自己的配置信息，下面是默认值</span></span><br><span class="line">   vrrp_mcast_group4 224.0.0.18</span><br><span class="line">   vrrp_mcast_group6 ff02::12</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义用于实例执行的脚本内容，比如可以在线降低优先级，用于强制切换</span></span><br><span class="line">vrrp_script SCRIPT_NAME &#123;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个vrrp_instance就是定义一个虚拟路由器的，实例名称</span></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    <span class="comment"># 定义初始状态，可以是MASTER或者BACKUP</span></span><br><span class="line">    state MASTER</span><br><span class="line">    <span class="comment"># 工作接口，通告选举使用哪个接口进行</span></span><br><span class="line">    interface ens33</span><br><span class="line">    <span class="comment"># 虚拟路由ID，如果是一组虚拟路由就定义一个ID，如果是多组就要定义多个，而且这个虚拟</span></span><br><span class="line">    <span class="comment"># ID还是虚拟MAC最后一段地址的信息，取值范围0-255</span></span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    <span class="comment"># 使用哪个虚拟MAC地址</span></span><br><span class="line">    use_vmac XX:XX:XX:XX:XX</span><br><span class="line">    <span class="comment"># 监控本机上的哪个网卡，网卡一旦故障则需要把VIP转移出去</span></span><br><span class="line">    track_interface &#123;</span><br><span class="line">        eth0</span><br><span class="line">        ens33</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 如果你上面定义了MASTER,这里的优先级就需要定义的比其他的高</span></span><br><span class="line">    priority 100</span><br><span class="line">    <span class="comment"># 通告频率，单位为秒</span></span><br><span class="line">    advert_int 1</span><br><span class="line">    <span class="comment"># 通信认证机制，这里是明文认证还有一种是加密认证</span></span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 设置虚拟VIP地址，一般就设置一个，在LVS中这个就是为LVS主机设置VIP的，这样你就不用自己手动设置了</span></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        <span class="comment"># IP/掩码 dev 配置在哪个网卡</span></span><br><span class="line">        192.168.200.16/24 dev eth1</span><br><span class="line">        <span class="comment"># IP/掩码 dev 配置在哪个网卡的哪个别名上</span></span><br><span class="line">        192.168.200.17/24 dev label eth1:1</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 虚拟路由，在需要的情况下可以设置lvs主机 数据包在哪个网卡进来从哪个网卡出去</span></span><br><span class="line">    virtual_routes &#123;</span><br><span class="line">        192.168.110.0/24 dev eth2</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 工作模式，nopreempt表示工作在非抢占模式，默认是抢占模式 preempt</span></span><br><span class="line">    nopreempt|preempt</span><br><span class="line">    <span class="comment"># 如果是抢占默认则可以设置等多久再抢占，默认5分钟</span></span><br><span class="line">    preempt delay 300</span><br><span class="line">    <span class="comment"># 追踪脚本，通常用于去执行上面的vrrp_script定义的脚本内容</span></span><br><span class="line">    track_script &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment"># 三个指令，如果主机状态变成Master|Backup|Fault之后会去执行的通知脚本，脚本要自己写</span></span><br><span class="line">    notify_master <span class="string">&quot;&quot;</span></span><br><span class="line">    notify_backup <span class="string">&quot;&quot;</span></span><br><span class="line">    notify_fault <span class="string">&quot;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义LVS集群服务，可以是IP+PORT；也可以是fwmark 数字，也就是防火墙规则</span></span><br><span class="line"><span class="comment"># 所以通过这里就可以看出来keepalive天生就是为ipvs而设计的</span></span><br><span class="line">virtual_server 10.10.10.2 1358 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    <span class="comment"># 算法</span></span><br><span class="line">    lb_algo rr|wrr|lc|wlc|lblc|sh|dh </span><br><span class="line">    <span class="comment"># LVS的模式</span></span><br><span class="line">    lb_kind NAT|DR|TUN</span><br><span class="line">    <span class="comment"># 子网掩码，这个掩码是VIP的掩码</span></span><br><span class="line">    net_mask 255.255.255.0</span><br><span class="line">    <span class="comment"># 持久连接超时时间</span></span><br><span class="line">    persistence_timeout 50</span><br><span class="line">    <span class="comment"># 定义协议</span></span><br><span class="line">    protocol TCP</span><br><span class="line">    <span class="comment"># 如果后端应用服务器都不可用，就会定向到那个服务器上</span></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 后端应用服务器 IP PORT</span></span><br><span class="line">    real_server 192.168.200.2 1358 &#123;</span><br><span class="line">        <span class="comment"># 权重</span></span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;这里写的是路径，如果脚本后有参数，整体路径+参数引起来&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/PATH/SCRIPTS.sh 参数&quot;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># MSIC_CHECK|SMTP_CHEKC|TCP_CHECK|SSL_GET|HTTP_GET这些都是</span></span><br><span class="line">        <span class="comment"># 针对应用服务器做健康检查的方法</span></span><br><span class="line">        MISC_CHECK &#123;&#125;</span><br><span class="line">        <span class="comment"># 用于检查SMTP服务器的</span></span><br><span class="line">        SMTP_CHEKC &#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 如果应用服务器不是WEB服务器，就用TCP_CHECK检查</span></span><br><span class="line">        TCP_CHECK &#123;</span><br><span class="line">          <span class="comment"># 向哪一个端口检查，如果不指定默认使用上面定义的端口</span></span><br><span class="line">          connect_port &lt;PORT&gt;</span><br><span class="line">          <span class="comment"># 向哪一个IP检测，如果不指定默认使用上面定义的IP地址</span></span><br><span class="line">          bindto &lt;IP&gt;</span><br><span class="line">          <span class="comment"># 连接超时时间</span></span><br><span class="line">          connect_timeout 3</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 如果对方是HTTPS服务器就用SSL_GET方法去检查，里面配置的内容和HTTP_GET一样</span></span><br><span class="line">        SSL_GET &#123;&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 使用HTTP_GET方法去检查</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              <span class="comment"># 具体检测哪一个URL</span></span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              <span class="comment"># 检测内容的哈希值，也就是网页的md5值</span></span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl3/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334d</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># 向哪一个端口检查，如果不指定默认使用上面定义的端口</span></span><br><span class="line">            connect_port &lt;PORT&gt;</span><br><span class="line">            <span class="comment"># 向哪一个IP检测，如果不指定默认使用上面定义的IP地址</span></span><br><span class="line">            bindto &lt;IP&gt;</span><br><span class="line">            <span class="comment"># 连接超时时间</span></span><br><span class="line">            connect_timeout 3</span><br><span class="line">            <span class="comment"># 尝试次数</span></span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            <span class="comment"># 每次尝试之间间隔几秒</span></span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 192.168.200.3 1358 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            url &#123; </span><br><span class="line">              path /testurl2/test.jsp</span><br><span class="line">              digest 640205b7b0fc66c1ea91c463fac6334c</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="配置Srv01和Srv02"><a href="#配置Srv01和Srv02" class="headerlink" title="配置Srv01和Srv02"></a>配置Srv01和Srv02</h3><h4 id="配置VRRP部分"><a href="#配置VRRP部分" class="headerlink" title="配置VRRP部分"></a>配置VRRP部分</h4><p>Srv01上的keepalived.conf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id srv01</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.16.42.111/24 brd 172.16.42.111 dev ens33 label ens33:0</span><br><span class="line">    &#125;</span><br><span class="line">    preempt delay 60</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Srv02上的keepalived.conf，唯一不同的就是state、priority以及router_id。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen@firewall.loc</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 127.0.0.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id srv02</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 51</span><br><span class="line">    priority 90</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass 1111</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        172.16.42.111/24 brd 172.16.42.111 dev ens33 label ens33:0</span><br><span class="line">    &#125;</span><br><span class="line">    preempt delay 60</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>启动2个节点，启动后会自动配置ens33:0这个子接口的虚拟IP</p>
<p><img src="/images/1704166931-5484ba8942bf3241a9a4311d8e308413.png"></p>
<p>在主节点上你通过<code>systemctl status keepalived</code>看不到它到底是什么角色，不过在BACKUP节点上你可以看到，但是你在主节点日志中<code>cat /var/log/message</code>里可以看到Srv01进入到MASTER状态，如下图：</p>
<p><img src="/images/1704166931-306c2e546b3e867e8c55e3a195b879bc.png"></p>
<p>查看Srv02的状态</p>
<p><img src="/images/1704166931-d868cb03befe8b388a47173446f5830e.png"></p>
<p>那么你通过停止Srv01上的keepalived服务就看到MASTER会被转移到Srv02上。</p>
<p>使用该命令查看VRRP通告<code>tcpdum -i ens33 -nn host 224.0.0.18</code>，你在2台主机都会看到相同的信息。</p>
<p><img src="/images/1704166931-ef3d53c56d6a02f44023a76e72da0e76.png"></p>
<p>Srv01使用真实物理IP对该地址进行发送通告，那么Srv02也会收到，如果Srv01宕机，那么Srv02就会使用自己的物理IP向该地址发送通告，由于Srv01已经宕机那么此时Srv02的优先级就是最高的，所以Srv02就变成了MASTER。</p>
<h4 id="配置LVS部分"><a href="#配置LVS部分" class="headerlink" title="配置LVS部分"></a>配置LVS部分</h4><p>在keepalived.conf文件中增加下面的内容，2台服务器增加的内容一致，所以这里就写一份。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">virtual_server 172.16.42.111 80 &#123;</span><br><span class="line">    delay_loop 6</span><br><span class="line">    lb_algo rr</span><br><span class="line">    lb_kind DR</span><br><span class="line">    nat_mask 255.255.255.0</span><br><span class="line">    persistence_timeout 0</span><br><span class="line">    protocol TCP</span><br><span class="line"></span><br><span class="line">    sorry_server 192.168.200.200 1358</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 后端应用服务器 IP PORT</span></span><br><span class="line">    real_server 172.16.42.102 80 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;/usr/local/notify.sh 172.16.42.102 up&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/usr/local/notify.sh 172.16.42.102 down&quot;</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              path /index.html</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    real_server 172.16.42.103 80 &#123;</span><br><span class="line">        weight 1</span><br><span class="line">        <span class="comment"># 应用服务器UP或者DOWN，就执行那个脚本</span></span><br><span class="line">        notify_up <span class="string">&quot;/usr/local/notify.sh 172.16.42.103 up&quot;</span></span><br><span class="line">        notify_down <span class="string">&quot;/usr/local/notify.sh 172.16.42.103 down&quot;</span></span><br><span class="line">        HTTP_GET &#123;</span><br><span class="line">            <span class="comment"># 检测URL</span></span><br><span class="line">            url &#123; </span><br><span class="line">              path /index.html</span><br><span class="line">              <span class="comment"># 除了检测哈希值还可以检测状态码，比如HTTP的200 表示正常，两种方法二选一即可</span></span><br><span class="line">              status_code 200</span><br><span class="line">            &#125;</span><br><span class="line">            connect_timeout 3</span><br><span class="line">            nb_get_retry 3</span><br><span class="line">            delay_before_retry 3</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这里的notify_up|down脚本我写的很简单就是为了使用一下这个功能，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$2</span> == <span class="string">&quot;up&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;Real server <span class="variable">$&#123;1&#125;</span> is UP&quot;</span> &gt; /tmp/notify.txt</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$2</span> == <span class="string">&quot;down&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line"> <span class="built_in">echo</span> <span class="string">&quot;Real server <span class="variable">$&#123;1&#125;</span> is DOWN&quot;</span> &gt; /tmp/notify.txt</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>重启Keepalived服务之后你就可以通过<code>ipvsadm -Ln</code>查看ipvs规则了，这些规则在2台服务器上都会有，如下图：</p>
<p><img src="/images/1704166931-bd68070b556cc40a50f8da03fb1195a7.png"></p>
<p>测试访问</p>
<p>使用下面的命令快速访问<code>for i in &#123;1..20&#125;; do curl http://172.16.42.111/ | grep &quot;Srv0&quot; --color ; done</code></p>
<p><img src="/images/1704166931-787a076ee53f4aeaff1cbe07291c2faf.png"></p>
<p>可以看到2台服务器交替，因为我们使用的rr调度算法。</p>
<h3 id="故障转移测试"><a href="#故障转移测试" class="headerlink" title="故障转移测试"></a>故障转移测试</h3><p>连续访问VIP，然后停止Srv01上面的keepalived服务，这就意味着Srv01也就是失去了VIP，然后观察请求情况以及是否触发之前设定的脚本。</p>
<p><img src="/images/1704166931-ac66f1fd9ad1adf56c86f8442406c65f.png"></p>
<p>查看Srv02上面的日志</p>
<p><img src="/images/1704166931-89c1404519c53373fd4182492797b0e8.png"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>为了提供一个Nginx或者某种后端服务器的负载均衡功能，那么我们需要一个LVS来做调度，但是一台LVS存在单点故障，为了解决LVS单点故障我们使用Keepalived来组建一个LVS的高可用集群。</p>
]]></content>
      <categories>
        <category>Keepalived</category>
      </categories>
      <tags>
        <tag>Keepalived</tag>
      </tags>
  </entry>
  <entry>
    <title>使用VictoriaMetrics Operator管理VM集群</title>
    <url>/2023/12/27/%E4%BD%BF%E7%94%A8VictoriaMetrics-Operator%E7%AE%A1%E7%90%86VM%E9%9B%86%E7%BE%A4/</url>
    <content><![CDATA[<p>Operator 我们知道是 Kubernetes 的一大杀器，可以大大简化应用的安装、配置和管理，同样对于 VictoriaMetrics 官方也开发了一个对应的 Operator 来进行管理 - **<code>vm-operator</code>**，它的设计和实现灵感来自 **<code>prometheus-operator</code>**，它是管理应用程序监控配置的绝佳工具。</p>
<p>vm-operator 定义了如下一些 CRD：</p>
<ul>
<li><code>VMCluster</code>：定义 VM 集群</li>
<li><code>VMAgent</code>：定义 vmagent 实例</li>
<li><code>VMServiceScrape</code>：定义从 Service 支持的 Pod 中抓取指标配置</li>
<li><code>VMPodScrape</code>：定义从 Pod 中抓取指标配置</li>
<li><code>VMRule</code>：定义报警和记录规则</li>
<li><code>VMProbe</code>：使用 blackbox exporter 为目标定义探测配置</li>
</ul>
<p>此外该 Operator 默认还可以识别 prometheus-operator 中的 <code>ServiceMonitor</code>、<code>PodMonitor</code>、<code>PrometheusRule</code> 和 <code>Probe</code> 对象，还允许你使用 CRD 对象来管理 Kubernetes 集群内的 VM 应用。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>vm-operator 提供了 Helm Charts 包，所以可以使用 Helm 来进行一键安装：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ helm repo add vm <span class="attr">https</span>:<span class="comment">//victoriametrics.github.io/helm-charts/</span></span><br><span class="line">☸ ➜ helm repo update</span><br></pre></td></tr></table></figure>

<p>根据自己的需要定制 values 值，默认的 <code>values.yaml</code> 可以通过下面的命令获得：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ helm show values vm/victoria-metrics-operator &gt; values.<span class="property">yaml</span></span><br></pre></td></tr></table></figure>

<p>我们这里只对下面的内容做了修改：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># values.<span class="property">yaml</span></span><br><span class="line"><span class="attr">rbac</span>:</span><br><span class="line">  <span class="attr">create</span>: <span class="literal">true</span></span><br><span class="line">  <span class="attr">pspEnabled</span>: <span class="literal">false</span> # 不创建psp</span><br><span class="line"></span><br><span class="line"><span class="attr">operator</span>:</span><br><span class="line">  # -- 默认情况下，vm-operator会转换prometheus-operator对象</span><br><span class="line">  <span class="attr">disable_prometheus_converter</span>: <span class="literal">false</span></span><br><span class="line">  # -- 默认情况下，vm-operator会为它的对象创建psp</span><br><span class="line">  <span class="attr">psp_auto_creation_enabled</span>: <span class="literal">false</span></span><br><span class="line">  # -- 启用转换后的 prometheus-operator 对象的所有权引用，如果删除 prometheus 对象，它将删除相应的 victoria-metrics 对象。</span><br><span class="line">  <span class="attr">enable_converter_ownership</span>: <span class="literal">false</span></span><br><span class="line">  # -- <span class="title class_">Enables</span> custom config-reloader, bundled <span class="keyword">with</span> operator.</span><br><span class="line">  # <span class="title class_">It</span> should reduce  vmagent and vmauth config sync-time and make it predictable.</span><br><span class="line">  <span class="attr">useCustomConfigReloader</span>: <span class="literal">true</span></span><br><span class="line"># -- 是否开启资源校验的准入控制器(生产环境建议开启)</span><br><span class="line"># <span class="attr">admissionWebhooks</span>:</span><br><span class="line">#   # -- <span class="title class_">Enables</span> validation webhook.</span><br><span class="line">#   <span class="attr">enabled</span>: <span class="literal">false</span></span><br><span class="line">#   # -- <span class="title class_">What</span> to <span class="keyword">do</span> <span class="keyword">in</span> <span class="keyword">case</span>, when operator not available to validate request.</span><br><span class="line">#   <span class="attr">policy</span>: <span class="title class_">Fail</span></span><br><span class="line">#   # -- <span class="title class_">Enables</span> custom ca bundle, <span class="keyword">if</span> you are not using cert-manager.</span><br><span class="line">#   # -- <span class="keyword">in</span> <span class="keyword">case</span> <span class="keyword">of</span> custom ca, you have to create secret - &#123;&#123;chart-name&#125;&#125;-validation</span><br><span class="line">#   # -- <span class="keyword">with</span> <span class="attr">keys</span>: tls.<span class="property">key</span>, tls.<span class="property">crt</span>, ca.<span class="property">crt</span></span><br><span class="line">#   <span class="attr">caBundle</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">#   <span class="attr">certManager</span>:</span><br><span class="line">#     # -- <span class="title class_">Enables</span> cert creation and injection by cert-manager.</span><br><span class="line">#     <span class="attr">enabled</span>: <span class="literal">false</span></span><br><span class="line">#     # --<span class="title class_">If</span> needed, provide own issuer. <span class="title class_">Operator</span> will create self-signed <span class="keyword">if</span> empty.</span><br><span class="line">#     <span class="attr">issuer</span>: &#123;&#125;</span><br></pre></td></tr></table></figure>

<p>然后使用下面的命令即可一键安装 vm-operator：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ helm upgrade --install victoria-metrics-operator vm/victoria-metrics-operator -f values.<span class="property">yaml</span> -n vm-operator --create-namespace</span><br><span class="line"><span class="attr">NAME</span>: victoria-metrics-operator</span><br><span class="line"><span class="variable constant_">LAST</span> <span class="attr">DEPLOYED</span>: <span class="title class_">Tue</span> <span class="title class_">May</span> <span class="number">17</span> <span class="number">15</span>:<span class="number">51</span>:<span class="number">40</span> <span class="number">2022</span></span><br><span class="line"><span class="attr">NAMESPACE</span>: vm-operator</span><br><span class="line"><span class="attr">STATUS</span>: deployed</span><br><span class="line"><span class="attr">REVISION</span>: <span class="number">1</span></span><br><span class="line"><span class="variable constant_">TEST</span> <span class="attr">SUITE</span>: <span class="title class_">None</span></span><br><span class="line"><span class="attr">NOTES</span>:</span><br><span class="line">victoria-metrics-operator has been installed. <span class="title class_">Check</span> its status by <span class="attr">running</span>:</span><br><span class="line">  kubectl --namespace vm-operator get pods -l <span class="string">&quot;app.kubernetes.io/instance=victoria-metrics-operator&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title class_">Get</span> more information on <span class="attr">https</span>:<span class="comment">//github.com/VictoriaMetrics/helm-charts/tree/master/charts/victoria-metrics-operator.</span></span><br><span class="line"><span class="title class_">See</span> <span class="string">&quot;Getting started guide for VM Operator&quot;</span> on <span class="attr">https</span>:<span class="comment">//docs.victoriametrics.com/guides/getting-started-with-vm-operator.html .</span></span><br></pre></td></tr></table></figure>

<p>安装完成后可以查看 vm-operator 的状态来验证是否安装成功：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ helm ls -n vm-operator</span><br><span class="line"><span class="variable constant_">NAME</span>                            <span class="variable constant_">NAMESPACE</span>       <span class="variable constant_">REVISION</span>        <span class="variable constant_">UPDATED</span>                                 <span class="variable constant_">STATUS</span>       <span class="variable constant_">CHART</span>                           <span class="variable constant_">APP</span> <span class="variable constant_">VERSION</span></span><br><span class="line">victoria-metrics-operator       vm-operator     <span class="number">1</span>               <span class="number">2022</span>-<span class="number">05</span>-<span class="number">17</span> <span class="number">15</span>:<span class="number">53</span>:<span class="number">14.60667</span> +<span class="number">0800</span> <span class="variable constant_">CST</span>     deployed     victoria-metrics-operator-<span class="number">0.9</span><span class="number">.0</span> <span class="number">0.24</span><span class="number">.0</span></span><br><span class="line">☸ ➜ kubectl --namespace vm-operator get pods -l <span class="string">&quot;app.kubernetes.io/instance=victoria-metrics-operator&quot;</span></span><br><span class="line"><span class="variable constant_">NAME</span>                                        <span class="variable constant_">READY</span>   <span class="variable constant_">STATUS</span>    <span class="variable constant_">RESTARTS</span>   <span class="variable constant_">AGE</span></span><br><span class="line">victoria-metrics-operator-d467cf69c-glh6v   <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>          2m58s</span><br></pre></td></tr></table></figure>

<h2 id="部署-VM-集群"><a href="#部署-VM-集群" class="headerlink" title="部署 VM 集群"></a>部署 VM 集群</h2><p>Operator 安装完成后会包含如下所示的一些 CRD：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl get crd |grep victoriametrics</span><br><span class="line">vmagents.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>                <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmalertmanagerconfigs.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>   <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmalertmanagers.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>         <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmalerts.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>                <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmauths.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>                 <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmclusters.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>              <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmnodescrapes.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>           <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmpodscrapes.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>            <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmprobes.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>                <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmrules.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>                 <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmservicescrapes.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>        <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmsingles.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>               <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmstaticscrapes.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>         <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br><span class="line">vmusers.<span class="property">operator</span>.<span class="property">victoriametrics</span>.<span class="property">com</span>                 <span class="number">2022</span>-<span class="number">05</span>-17<span class="attr">T07</span>:<span class="number">51</span>:42Z</span><br></pre></td></tr></table></figure>

<p>比如现在我们要来部署 VM，如果只是想要单节点模式则可以直接使用 <code>VMSingle</code> 对象，如果要部署一套 VM 的集群则可以直接使用 <code>VMCluster</code> 来定义一个对象即可，完全不需要我们去手动创建各个组件，Operator 会根据我们的定义去帮我们拉起一套集群起来。</p>
<p>比如这里我们定义一个如下所示的 <code>VMCluster</code> 对象：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># vmcluster-demo.<span class="property">yaml</span></span><br><span class="line"><span class="attr">apiVersion</span>: operator.<span class="property">victoriametrics</span>.<span class="property">com</span>/v1beta1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">VMCluster</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">name</span>: vmcluster-demo</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">replicationFactor</span>: <span class="number">1</span></span><br><span class="line">  <span class="attr">retentionPeriod</span>: <span class="string">&quot;1w&quot;</span></span><br><span class="line">  <span class="attr">vmstorage</span>:</span><br><span class="line">    <span class="attr">replicaCount</span>: <span class="number">2</span></span><br><span class="line">    <span class="attr">storage</span>:</span><br><span class="line">      <span class="attr">volumeClaimTemplate</span>:</span><br><span class="line">        <span class="attr">spec</span>:</span><br><span class="line">          <span class="attr">accessModes</span>:</span><br><span class="line">            - <span class="title class_">ReadWriteOnce</span></span><br><span class="line">          <span class="attr">resources</span>:</span><br><span class="line">            <span class="attr">requests</span>:</span><br><span class="line">              <span class="attr">storage</span>: 10G</span><br><span class="line">          <span class="attr">storageClassName</span>: nfs-client</span><br><span class="line">    <span class="attr">storageDataPath</span>: /vm-data</span><br><span class="line">  <span class="attr">vmselect</span>:</span><br><span class="line">    <span class="attr">replicaCount</span>: <span class="number">2</span></span><br><span class="line">    <span class="attr">cacheMountPath</span>: /cache</span><br><span class="line">    <span class="attr">storage</span>:</span><br><span class="line">      <span class="attr">volumeClaimTemplate</span>:</span><br><span class="line">        <span class="attr">spec</span>:</span><br><span class="line">          <span class="attr">storageClassName</span>: nfs-client</span><br><span class="line">          <span class="attr">accessModes</span>:</span><br><span class="line">            - <span class="title class_">ReadWriteOnce</span></span><br><span class="line">          <span class="attr">resources</span>:</span><br><span class="line">            <span class="attr">requests</span>:</span><br><span class="line">              <span class="attr">storage</span>: 1G</span><br><span class="line">  <span class="attr">vminsert</span>:</span><br><span class="line">    <span class="attr">replicaCount</span>: <span class="number">2</span></span><br></pre></td></tr></table></figure>

<p>这里我们通过 <code>spec.retentionPeriod</code> 指定了数据保留的时长为 1 周，<code>replicaCount</code> 用来指定各个组件的副本数为 2，通过 <code>storage.volumeClaimTemplate</code> 指定了数据持久化的 PVC 模板，整个对象可配置的属性我们可以通过 <code>kubectl explain</code> 来获取：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl explain <span class="title class_">VMCluster</span>.<span class="property">spec</span></span><br><span class="line"><span class="attr">KIND</span>:     <span class="title class_">VMCluster</span></span><br><span class="line"><span class="attr">VERSION</span>:  operator.<span class="property">victoriametrics</span>.<span class="property">com</span>/v1beta1</span><br><span class="line"></span><br><span class="line"><span class="attr">RESOURCE</span>: spec &lt;<span class="title class_">Object</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">DESCRIPTION</span>:</span><br><span class="line">     <span class="title class_">VMClusterSpec</span> defines the desired state <span class="keyword">of</span> <span class="title class_">VMCluster</span></span><br><span class="line"></span><br><span class="line"><span class="attr">FIELDS</span>:</span><br><span class="line">   clusterVersion       &lt;string&gt;</span><br><span class="line">     <span class="title class_">ClusterVersion</span> defines <span class="keyword">default</span> images tag <span class="keyword">for</span> all components. it can be</span><br><span class="line">     overwritten <span class="keyword">with</span> component specific image.<span class="property">tag</span> value.</span><br><span class="line"></span><br><span class="line">   imagePullSecrets     &lt;[]<span class="title class_">Object</span>&gt;</span><br><span class="line">     <span class="title class_">ImagePullSecrets</span> <span class="title class_">An</span> optional list <span class="keyword">of</span> references to secrets <span class="keyword">in</span> the same</span><br><span class="line">     namespace to use <span class="keyword">for</span> pulling images <span class="keyword">from</span> registries see</span><br><span class="line">     <span class="attr">http</span>:<span class="comment">//kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod</span></span><br><span class="line"></span><br><span class="line">   podSecurityPolicyName        &lt;string&gt;</span><br><span class="line">     <span class="title class_">PodSecurityPolicyName</span> - defines name <span class="keyword">for</span> podSecurityPolicy <span class="keyword">in</span> <span class="keyword">case</span> <span class="keyword">of</span> empty</span><br><span class="line">     value, prefixedName will be used.</span><br><span class="line"></span><br><span class="line">   replicationFactor    &lt;integer&gt;</span><br><span class="line">     <span class="title class_">ReplicationFactor</span> defines how many copies <span class="keyword">of</span> data make among distinct</span><br><span class="line">     storage nodes</span><br><span class="line"></span><br><span class="line">   retentionPeriod      &lt;string&gt; -required-</span><br><span class="line">     <span class="title class_">RetentionPeriod</span> <span class="keyword">for</span> the stored metrics <span class="title class_">Note</span> <span class="title class_">VictoriaMetrics</span> has data/ and</span><br><span class="line">     indexdb/ folders metrics <span class="keyword">from</span> data/ removed eventually <span class="keyword">as</span> soon <span class="keyword">as</span> partition</span><br><span class="line">     leaves retention period reverse index data at indexdb rotates once at the</span><br><span class="line">     half <span class="keyword">of</span> configured retention period</span><br><span class="line">     <span class="attr">https</span>:<span class="comment">//docs.victoriametrics.com/Single-server-VictoriaMetrics.html#retention</span></span><br><span class="line"></span><br><span class="line">   serviceAccountName   &lt;string&gt;</span><br><span class="line">     <span class="title class_">ServiceAccountName</span> is the name <span class="keyword">of</span> the <span class="title class_">ServiceAccount</span> to use to run the</span><br><span class="line">     <span class="title class_">VMSelect</span> <span class="title class_">Pods</span>.</span><br><span class="line"></span><br><span class="line">   vminsert     &lt;<span class="title class_">Object</span>&gt;</span><br><span class="line"></span><br><span class="line">   vmselect     &lt;<span class="title class_">Object</span>&gt;</span><br><span class="line"></span><br><span class="line">   vmstorage    &lt;<span class="title class_">Object</span>&gt;</span><br></pre></td></tr></table></figure>

<p>同样要想获取组件可以定义的属性也可以通过该方式来获取，比如查看 <code>vmstorage</code> 对象可以配置的属性：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl explain <span class="title class_">VMCluster</span>.<span class="property">spec</span>.<span class="property">vmstorage</span></span><br><span class="line"><span class="attr">KIND</span>:     <span class="title class_">VMCluster</span></span><br><span class="line"><span class="attr">VERSION</span>:  operator.<span class="property">victoriametrics</span>.<span class="property">com</span>/v1beta1</span><br><span class="line"></span><br><span class="line"><span class="attr">RESOURCE</span>: vmstorage &lt;<span class="title class_">Object</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">DESCRIPTION</span>:</span><br><span class="line">     &lt;empty&gt;</span><br><span class="line"></span><br><span class="line"><span class="attr">FIELDS</span>:</span><br><span class="line">   affinity     &lt;&gt;</span><br><span class="line">     <span class="title class_">Affinity</span> <span class="title class_">If</span> specified, the pod<span class="string">&#x27;s scheduling constraints.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   configMaps   &lt;[]string&gt;</span></span><br><span class="line"><span class="string">     ConfigMaps is a list of ConfigMaps in the same namespace as the VMSelect</span></span><br><span class="line"><span class="string">     object, which shall be mounted into the VMSelect Pods. The ConfigMaps are</span></span><br><span class="line"><span class="string">     mounted into /etc/vm/configs/&lt;configmap-name&gt;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   containers   &lt;[]&gt;</span></span><br><span class="line"><span class="string">     Containers property allows to inject additions sidecars or to patch</span></span><br><span class="line"><span class="string">     existing containers. It can be useful for proxies, backup, etc.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   dnsConfig    &lt;Object&gt;</span></span><br><span class="line"><span class="string">     Specifies the DNS parameters of a pod. Parameters specified here will be</span></span><br><span class="line"><span class="string">     merged to the generated DNS configuration based on DNSPolicy.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   dnsPolicy    &lt;string&gt;</span></span><br><span class="line"><span class="string">     DNSPolicy sets DNS policy for the pod</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   extraArgs    &lt;map[string]string&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   extraEnvs    &lt;[]&gt;</span></span><br><span class="line"><span class="string">     ExtraEnvs that will be added to VMSelect pod</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   hostNetwork  &lt;boolean&gt;</span></span><br><span class="line"><span class="string">     HostNetwork controls whether the pod may use the node network namespace</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   image        &lt;Object&gt;</span></span><br><span class="line"><span class="string">     Image - docker image settings for VMStorage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   initContainers       &lt;[]&gt;</span></span><br><span class="line"><span class="string">     InitContainers allows adding initContainers to the pod definition. Those</span></span><br><span class="line"><span class="string">     can be used to e.g. fetch secrets for injection into the VMSelect</span></span><br><span class="line"><span class="string">     configuration from external sources. Any errors during the execution of an</span></span><br><span class="line"><span class="string">     initContainer will lead to a restart of the Pod. More info:</span></span><br><span class="line"><span class="string">     https://kubernetes.io/docs/concepts/workloads/pods/init-containers/ Using</span></span><br><span class="line"><span class="string">     initContainers for any use case other then secret fetching is entirely</span></span><br><span class="line"><span class="string">     outside the scope of what the maintainers will support and by doing so, you</span></span><br><span class="line"><span class="string">     accept that this behaviour may break at any time without notice.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   livenessProbe        &lt;&gt;</span></span><br><span class="line"><span class="string">     LivenessProbe that will be added CRD pod</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   logFormat    &lt;string&gt;</span></span><br><span class="line"><span class="string">     LogFormat for VMSelect to be configured with. default or json</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   logLevel     &lt;string&gt;</span></span><br><span class="line"><span class="string">     LogLevel for VMSelect to be configured with.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   maintenanceInsertNodeIDs     &lt;[]integer&gt;</span></span><br><span class="line"><span class="string">     MaintenanceInsertNodeIDs - excludes given node ids from insert requests</span></span><br><span class="line"><span class="string">     routing, must contain pod suffixes - for pod-0, id will be 0 and etc. lets</span></span><br><span class="line"><span class="string">     say, you have pod-0, pod-1, pod-2, pod-3. to exclude pod-0 and pod-3 from</span></span><br><span class="line"><span class="string">     insert routing, define nodeIDs: [0,3]. Useful at storage expanding, when</span></span><br><span class="line"><span class="string">     you want to rebalance some data at cluster.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   maintenanceSelectNodeIDs     &lt;[]integer&gt;</span></span><br><span class="line"><span class="string">     MaintenanceInsertNodeIDs - excludes given node ids from select requests</span></span><br><span class="line"><span class="string">     routing, must contain pod suffixes - for pod-0, id will be 0 and etc.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   name &lt;string&gt;</span></span><br><span class="line"><span class="string">     Name is deprecated and will be removed at 0.22.0 release</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   nodeSelector &lt;map[string]string&gt;</span></span><br><span class="line"><span class="string">     NodeSelector Define which Nodes the Pods are scheduled on.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   podDisruptionBudget  &lt;Object&gt;</span></span><br><span class="line"><span class="string">     PodDisruptionBudget created by operator</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   podMetadata  &lt;Object&gt;</span></span><br><span class="line"><span class="string">     PodMetadata configures Labels and Annotations which are propagated to the</span></span><br><span class="line"><span class="string">     VMSelect pods.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   port &lt;string&gt;</span></span><br><span class="line"><span class="string">     Port for health check connetions</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   priorityClassName    &lt;string&gt;</span></span><br><span class="line"><span class="string">     Priority class assigned to the Pods</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   readinessProbe       &lt;&gt;</span></span><br><span class="line"><span class="string">     ReadinessProbe that will be added CRD pod</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   replicaCount &lt;integer&gt; -required-</span></span><br><span class="line"><span class="string">     ReplicaCount is the expected size of the VMStorage cluster. The controller</span></span><br><span class="line"><span class="string">     will eventually make the size of the running cluster equal to the expected</span></span><br><span class="line"><span class="string">     size.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   resources    &lt;Object&gt;</span></span><br><span class="line"><span class="string">     Resources container resource request and limits,</span></span><br><span class="line"><span class="string">     https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   rollingUpdateStrategy        &lt;string&gt;</span></span><br><span class="line"><span class="string">     RollingUpdateStrategy defines strategy for application updates Default is</span></span><br><span class="line"><span class="string">     OnDelete, in this case operator handles update process Can be changed for</span></span><br><span class="line"><span class="string">     RollingUpdate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   runtimeClassName     &lt;string&gt;</span></span><br><span class="line"><span class="string">     RuntimeClassName - defines runtime class for kubernetes pod.</span></span><br><span class="line"><span class="string">     https://kubernetes.io/docs/concepts/containers/runtime-class/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   schedulerName        &lt;string&gt;</span></span><br><span class="line"><span class="string">     SchedulerName - defines kubernetes scheduler name</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   secrets      &lt;[]string&gt;</span></span><br><span class="line"><span class="string">     Secrets is a list of Secrets in the same namespace as the VMSelect object,</span></span><br><span class="line"><span class="string">     which shall be mounted into the VMSelect Pods. The Secrets are mounted into</span></span><br><span class="line"><span class="string">     /etc/vm/secrets/&lt;secret-name&gt;.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   securityContext      &lt;&gt;</span></span><br><span class="line"><span class="string">     SecurityContext holds pod-level security attributes and common container</span></span><br><span class="line"><span class="string">     settings. This defaults to the default PodSecurityContext.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   serviceScrapeSpec    &lt;&gt;</span></span><br><span class="line"><span class="string">     ServiceScrapeSpec that will be added to vmselect VMServiceScrape spec</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   serviceSpec  &lt;Object&gt;</span></span><br><span class="line"><span class="string">     ServiceSpec that will be create additional service for vmstorage</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   startupProbe &lt;&gt;</span></span><br><span class="line"><span class="string">     StartupProbe that will be added to CRD pod</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   storage      &lt;Object&gt;</span></span><br><span class="line"><span class="string">     Storage - add persistent volume for StorageDataPath its useful for</span></span><br><span class="line"><span class="string">     persistent cache</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   storageDataPath      &lt;string&gt;</span></span><br><span class="line"><span class="string">     StorageDataPath - path to storage data</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   terminationGracePeriodSeconds        &lt;integer&gt;</span></span><br><span class="line"><span class="string">     TerminationGracePeriodSeconds period for container graceful termination</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   tolerations  &lt;[]Object&gt;</span></span><br><span class="line"><span class="string">     Tolerations If specified, the pod&#x27;</span>s tolerations.</span><br><span class="line"></span><br><span class="line">   topologySpreadConstraints    &lt;[]&gt;</span><br><span class="line">     <span class="title class_">TopologySpreadConstraints</span> embedded kubernetes pod configuration option,</span><br><span class="line">     controls how pods are spread across your cluster among failure-domains such</span><br><span class="line">     <span class="keyword">as</span> regions, zones, nodes, and other user-defined topology domains</span><br><span class="line">     <span class="attr">https</span>:<span class="comment">//kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/</span></span><br><span class="line"></span><br><span class="line">   vmBackup     &lt;<span class="title class_">Object</span>&gt;</span><br><span class="line">     <span class="title class_">VMBackup</span> configuration <span class="keyword">for</span> backup</span><br><span class="line"></span><br><span class="line">   vmInsertPort &lt;string&gt;</span><br><span class="line">     <span class="title class_">VMInsertPort</span> <span class="keyword">for</span> <span class="title class_">VMInsert</span> connections</span><br><span class="line"></span><br><span class="line">   vmSelectPort &lt;string&gt;</span><br><span class="line">     <span class="title class_">VMSelectPort</span> <span class="keyword">for</span> <span class="title class_">VMSelect</span> connections</span><br><span class="line"></span><br><span class="line">   volumeMounts &lt;[]<span class="title class_">Object</span>&gt;</span><br><span class="line">     <span class="title class_">VolumeMounts</span> allows configuration <span class="keyword">of</span> additional <span class="title class_">VolumeMounts</span> on the output</span><br><span class="line">     <span class="title class_">Deployment</span> definition. <span class="title class_">VolumeMounts</span> specified will be appended to other</span><br><span class="line">     <span class="title class_">VolumeMounts</span> <span class="keyword">in</span> the <span class="title class_">VMSelect</span> container, that are generated <span class="keyword">as</span> a result <span class="keyword">of</span></span><br><span class="line">     <span class="title class_">StorageSpec</span> objects.</span><br><span class="line"></span><br><span class="line">   volumes      &lt;[]&gt;</span><br><span class="line">     <span class="title class_">Volumes</span> allows configuration <span class="keyword">of</span> additional volumes on the output <span class="title class_">Deployment</span></span><br><span class="line">     definition. <span class="title class_">Volumes</span> specified will be appended to other volumes that are</span><br><span class="line">     generated <span class="keyword">as</span> a result <span class="keyword">of</span> <span class="title class_">StorageSpec</span> objects.</span><br></pre></td></tr></table></figure>

<p>直接应用上面定义的对象：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl apply -f vmcluster-demo.<span class="property">yaml</span></span><br><span class="line">☸ ➜ kubectl get vmcluster</span><br><span class="line"><span class="variable constant_">NAME</span>             <span class="variable constant_">INSERT</span> <span class="variable constant_">COUNT</span>   <span class="variable constant_">STORAGE</span> <span class="variable constant_">COUNT</span>   <span class="variable constant_">SELECT</span> <span class="variable constant_">COUNT</span>   <span class="variable constant_">AGE</span>     <span class="variable constant_">STATUS</span></span><br><span class="line">vmcluster-demo   <span class="number">2</span>              <span class="number">2</span>               <span class="number">2</span>              7m21s   expanding</span><br></pre></td></tr></table></figure>

<p>应用后 vm-operator 会 watch 到我们创建了该 CRD 对象，然后会根据我们的定义去自动创建对应的 VM 集群，也就是前面提到的几个组件服务：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl get pods</span><br><span class="line"><span class="variable constant_">NAME</span>                                       <span class="variable constant_">READY</span>   <span class="variable constant_">STATUS</span>    <span class="variable constant_">RESTARTS</span>      <span class="variable constant_">AGE</span></span><br><span class="line">vminsert-vmcluster-demo-84956d98b5-5ckft   <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>             93s</span><br><span class="line">vminsert-vmcluster-demo-84956d98b5-kpcj6   <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>             93s</span><br><span class="line">vmselect-vmcluster-demo-<span class="number">0</span>                  <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>             3m7s</span><br><span class="line">vmselect-vmcluster-demo-<span class="number">1</span>                  <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>             3m7s</span><br><span class="line">vmstorage-vmcluster-demo-<span class="number">0</span>                 <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>             4m54s</span><br><span class="line">vmstorage-vmcluster-demo-<span class="number">1</span>                 <span class="number">1</span>/<span class="number">1</span>     <span class="title class_">Running</span>   <span class="number">0</span>             4m54s</span><br><span class="line">☸ ➜ kubectl get svc</span><br><span class="line"><span class="variable constant_">NAME</span>                       <span class="variable constant_">TYPE</span>        <span class="variable constant_">CLUSTER</span>-<span class="variable constant_">IP</span>      <span class="variable constant_">EXTERNAL</span>-<span class="variable constant_">IP</span>   <span class="title function_">PORT</span>(S)                      <span class="variable constant_">AGE</span></span><br><span class="line">vminsert-vmcluster-demo    <span class="title class_">ClusterIP</span>   <span class="number">10.102</span><span class="number">.145</span><span class="number">.24</span>   &lt;none&gt;        <span class="number">8480</span>/<span class="variable constant_">TCP</span>                     4m57s</span><br><span class="line">vmselect-vmcluster-demo    <span class="title class_">ClusterIP</span>   <span class="title class_">None</span>            &lt;none&gt;        <span class="number">8481</span>/<span class="variable constant_">TCP</span>                     6m31s</span><br><span class="line">vmstorage-vmcluster-demo   <span class="title class_">ClusterIP</span>   <span class="title class_">None</span>            &lt;none&gt;        <span class="number">8482</span>/<span class="variable constant_">TCP</span>,<span class="number">8400</span>/<span class="variable constant_">TCP</span>,<span class="number">8401</span>/<span class="variable constant_">TCP</span>   8m18s</span><br></pre></td></tr></table></figure>

<p>我们只通过定义简单的 <code>VMCluster</code> 对象就可以来管理 VM 集群了，是不是非常方便，特别是当你组件副本数量非常多的时候不需要我们去手动配置 <code>-storageNode</code> 参数了。</p>
<p>现在 VM 集群安装成功了，但是现在还没有任何数据，所以还需要去配置监控指标的抓取，这里我们可以直接去创建一个 <code>VMAgent</code> 对象即可，创建一个如下所示的对象：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># vmagent-demo.<span class="property">yaml</span></span><br><span class="line"><span class="attr">apiVersion</span>: operator.<span class="property">victoriametrics</span>.<span class="property">com</span>/v1beta1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">VMAgent</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">name</span>: vmagent-demo</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">serviceScrapeNamespaceSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">podScrapeNamespaceSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">podScrapeSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">serviceScrapeSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">nodeScrapeSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">nodeScrapeNamespaceSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">staticScrapeSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">staticScrapeNamespaceSelector</span>: &#123;&#125;</span><br><span class="line">  <span class="attr">replicaCount</span>: <span class="number">1</span></span><br><span class="line">  <span class="attr">remoteWrite</span>:</span><br><span class="line">    - <span class="attr">url</span>: <span class="string">&quot;http://vminsert-vmcluster-demo.default.svc.cluster.local:8480/insert/0/prometheus/api/v1/write&quot;</span></span><br></pre></td></tr></table></figure>

<p>同样要获取 <code>VMAgent</code> 的所有可配置的属性可以通过 <code>kubectl explain VMAgent.spec</code> 来获取，这里最主要的配置就是通过 <code>remoteWrite.url</code> 来指定远程写入的 URL 地址，也就是 <code>vminsert</code> 组件的服务地址，其他几个属性可以用来对要抓取的指标进行过滤。</p>
<p>直接应用上面的 <code>VMAgent</code> 对象即可开始抓取监控数据：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl apply -f vmagent-demo.<span class="property">yaml</span></span><br><span class="line">☸ ➜ kubectl get vmagent</span><br><span class="line"><span class="variable constant_">NAME</span>           <span class="variable constant_">AGE</span></span><br><span class="line">vmagent-demo   6s</span><br></pre></td></tr></table></figure>

<p>创建后 vm-operator 会根据对应的描述创建一个对应的 <code>vmagent</code> 实例：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl get pods -l app.<span class="property">kubernetes</span>.<span class="property">io</span>/name=vmagent</span><br><span class="line"><span class="variable constant_">NAME</span>                                    <span class="variable constant_">READY</span>   <span class="variable constant_">STATUS</span>    <span class="variable constant_">RESTARTS</span>   <span class="variable constant_">AGE</span></span><br><span class="line">vmagent-vmagent-demo-6dcc7f9dfd-hxsff   <span class="number">2</span>/<span class="number">2</span>     <span class="title class_">Running</span>   <span class="number">0</span>          4m24s</span><br></pre></td></tr></table></figure>

<p>可以看到 <code>vmagent</code> 有两个容器，一个是 <code>vmagent</code> 应用容器，另外一个是用于挂载 Secret 对象的 <code>config-reloader</code> 容器，它会 watch 配置的变化，并发送信号为 <code>vmagent</code> 重新加载配置，该 Secret 对象中就是定义的 <code>vmagent</code> 抓取指标的配置内容。</p>
<p>我们可以运行以下命令使 <code>vmagent</code> 的端口可以从本地机器上访问。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl port-forward svc/vmagent-vmagent-demo <span class="number">8429</span>:<span class="number">8429</span></span><br><span class="line"><span class="title class_">Forwarding</span> <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8429</span> -&gt; <span class="number">8429</span></span><br><span class="line"><span class="title class_">Forwarding</span> <span class="keyword">from</span> [::<span class="number">1</span>]:<span class="number">8429</span> -&gt; <span class="number">8429</span></span><br></pre></td></tr></table></figure>

<p>我们可以在浏览器中访问 <a href="http://127.0.0.1:8429/targets">http://127.0.0.1:8429/targets</a> 来检查 <code>vmagent</code> 采集的集群指标：</p>
<p><img src="/assets/1703668417-5c9fb5084a49e2598ec92da0f9126dc2.jpeg"></p>
<p><code>vmagent</code> 会通过 Kubernetes 服务发现去获取需要抓取的目标，此服务发现由 vm-operator 控制。</p>
<h2 id="验证-VM-集群"><a href="#验证-VM-集群" class="headerlink" title="验证 VM 集群"></a>验证 VM 集群</h2><p>接下来我们安装 Grafana 来验证 VM 集群，这里为了简单我们就直接使用 Helm Chart 进行安装：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ helm repo add grafana <span class="attr">https</span>:<span class="comment">//grafana.github.io/helm-charts</span></span><br><span class="line">☸ ➜ helm repo update</span><br></pre></td></tr></table></figure>

<p>我们可以在 values 中提前定义数据源和内置一些 dashboard，如下所示：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;<span class="variable constant_">EOF</span> | helm install grafana grafana/grafana -f -</span><br><span class="line">  <span class="attr">datasources</span>:</span><br><span class="line">    datasources.<span class="property">yaml</span>:</span><br><span class="line">      <span class="attr">apiVersion</span>: <span class="number">1</span></span><br><span class="line">      <span class="attr">datasources</span>:</span><br><span class="line">        - <span class="attr">name</span>: victoriametrics</span><br><span class="line">          <span class="attr">type</span>: prometheus</span><br><span class="line">          <span class="attr">orgId</span>: <span class="number">1</span></span><br><span class="line">          <span class="attr">url</span>: <span class="attr">http</span>:<span class="comment">//vmselect-vmcluster-demo.default.svc.cluster.local:8481/select/0/prometheus/</span></span><br><span class="line">          <span class="attr">access</span>: proxy</span><br><span class="line">          <span class="attr">isDefault</span>: <span class="literal">true</span></span><br><span class="line">          <span class="attr">updateIntervalSeconds</span>: <span class="number">10</span></span><br><span class="line">          <span class="attr">editable</span>: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">dashboardProviders</span>:</span><br><span class="line">   dashboardproviders.<span class="property">yaml</span>:</span><br><span class="line">     <span class="attr">apiVersion</span>: <span class="number">1</span></span><br><span class="line">     <span class="attr">providers</span>:</span><br><span class="line">     - <span class="attr">name</span>: <span class="string">&#x27;default&#x27;</span></span><br><span class="line">       <span class="attr">orgId</span>: <span class="number">1</span></span><br><span class="line">       <span class="attr">folder</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">       <span class="attr">type</span>: file</span><br><span class="line">       <span class="attr">disableDeletion</span>: <span class="literal">true</span></span><br><span class="line">       <span class="attr">editable</span>: <span class="literal">true</span></span><br><span class="line">       <span class="attr">options</span>:</span><br><span class="line">         <span class="attr">path</span>: <span class="regexp">/var/</span>lib/grafana/dashboards/<span class="keyword">default</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">dashboards</span>:</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">      <span class="attr">victoriametrics</span>:</span><br><span class="line">        <span class="attr">gnetId</span>: <span class="number">11176</span></span><br><span class="line">        <span class="attr">revision</span>: <span class="number">18</span></span><br><span class="line">        <span class="attr">datasource</span>: victoriametrics</span><br><span class="line">      <span class="attr">vmagent</span>:</span><br><span class="line">        <span class="attr">gnetId</span>: <span class="number">12683</span></span><br><span class="line">        <span class="attr">revision</span>: <span class="number">7</span></span><br><span class="line">        <span class="attr">datasource</span>: victoriametrics</span><br><span class="line">      <span class="attr">kubernetes</span>:</span><br><span class="line">        <span class="attr">gnetId</span>: <span class="number">14205</span></span><br><span class="line">        <span class="attr">revision</span>: <span class="number">1</span></span><br><span class="line">        <span class="attr">datasource</span>: victoriametrics</span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line"><span class="attr">NAME</span>: grafana</span><br><span class="line"><span class="variable constant_">LAST</span> <span class="attr">DEPLOYED</span>: <span class="title class_">Tue</span> <span class="title class_">May</span> <span class="number">17</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">14</span> <span class="number">2022</span></span><br><span class="line"><span class="attr">NAMESPACE</span>: <span class="keyword">default</span></span><br><span class="line"><span class="attr">STATUS</span>: deployed</span><br><span class="line"><span class="attr">REVISION</span>: <span class="number">1</span></span><br><span class="line"><span class="attr">NOTES</span>:</span><br><span class="line"><span class="number">1.</span> <span class="title class_">Get</span> your <span class="string">&#x27;admin&#x27;</span> user password by <span class="attr">running</span>:</span><br><span class="line"></span><br><span class="line">   kubectl get secret --namespace <span class="keyword">default</span> grafana -o jsonpath=<span class="string">&quot;&#123;.data.admin-password&#125;&quot;</span> | base64 --decode ; echo</span><br><span class="line"></span><br><span class="line"><span class="number">2.</span> <span class="title class_">The</span> <span class="title class_">Grafana</span> server can be accessed via port <span class="number">80</span> on the following <span class="variable constant_">DNS</span> name <span class="keyword">from</span> within your <span class="attr">cluster</span>:</span><br><span class="line"></span><br><span class="line">   grafana.<span class="property">default</span>.<span class="property">svc</span>.<span class="property">cluster</span>.<span class="property">local</span></span><br><span class="line"></span><br><span class="line">   <span class="title class_">Get</span> the <span class="title class_">Grafana</span> <span class="variable constant_">URL</span> to visit by running these commands <span class="keyword">in</span> the same <span class="attr">shell</span>:</span><br><span class="line"></span><br><span class="line">     <span class="keyword">export</span> <span class="variable constant_">POD_NAME</span>=$(kubectl get pods --namespace <span class="keyword">default</span> -l <span class="string">&quot;app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">     kubectl --namespace <span class="keyword">default</span> port-forward $POD_NAME <span class="number">3000</span></span><br><span class="line"></span><br><span class="line"><span class="number">3.</span> <span class="title class_">Login</span> <span class="keyword">with</span> the password <span class="keyword">from</span> step <span class="number">1</span> and the <span class="attr">username</span>: admin</span><br><span class="line">#################################################################################</span><br><span class="line">######   <span class="attr">WARNING</span>: <span class="title class_">Persistence</span> is disabled!!! <span class="title class_">You</span> will lose your data when   #####</span><br><span class="line">######            the <span class="title class_">Grafana</span> pod is terminated.                            #####</span><br><span class="line">#################################################################################</span><br></pre></td></tr></table></figure>

<p>安装完成后可以使用上面提示的命令在本地暴露 Grafana 服务：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ <span class="keyword">export</span> <span class="variable constant_">POD_NAME</span>=$(kubectl get pods --namespace <span class="keyword">default</span> -l <span class="string">&quot;app.kubernetes.io/name=grafana,app.kubernetes.io/instance=grafana&quot;</span> -o jsonpath=<span class="string">&quot;&#123;.items[0].metadata.name&#125;&quot;</span>)</span><br><span class="line">     kubectl --namespace <span class="keyword">default</span> port-forward $POD_NAME <span class="number">3000</span></span><br><span class="line"><span class="title class_">Forwarding</span> <span class="keyword">from</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">3000</span> -&gt; <span class="number">3000</span></span><br><span class="line"><span class="title class_">Forwarding</span> <span class="keyword">from</span> [::<span class="number">1</span>]:<span class="number">3000</span> -&gt; <span class="number">3000</span></span><br></pre></td></tr></table></figure>

<p>登录的用户名为 <code>admin</code>，密码可以通过下面的命令获取：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl get secret --namespace <span class="keyword">default</span> grafana -o jsonpath=<span class="string">&quot;&#123;.data.admin-password&#125;&quot;</span> | base64 --decode ; echo</span><br></pre></td></tr></table></figure>

<p>我们可以查看下 victoriametrics cluster 的 dashboard：</p>
<p><img src="/assets/1703668417-0844ee17493d5458d12393435ffe09a5.png"></p>
<p>正常可以看到如下所示的页面：</p>
<p><img src="/assets/1703668417-3fedc310e6983ab6c48f12322e119b74.png"></p>
<p>这是因为默认情况下 <code>VMAgent</code> 会采集 VM 集群相关组件的指标，包括 <code>vmagent</code> 本身的，所以我们可以正常看到 VM 集群的 Dashboard，但是没有采集其他的指标，比如 node-exporter，我们可以在 Grafana 中导入 <code>16098</code> 这个 dashboard：</p>
<p><img src="/assets/1703668417-4c316be38c36e9d77298eebd4a7e866b.png"></p>
<p>这个时候我们可以通过 <code>VMNodeScrape</code> 这个 CRD 对象来进行定义，<code>VMNodeScrape</code> 对象可以用来自动发现 Kubernetes 节点，创建如下所示的资源对象来采集 node-exporter 指标：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"># vmnode-exporter-scrape.<span class="property">yaml</span></span><br><span class="line"><span class="attr">apiVersion</span>: operator.<span class="property">victoriametrics</span>.<span class="property">com</span>/v1beta1</span><br><span class="line"><span class="attr">kind</span>: <span class="title class_">VMNodeScrape</span></span><br><span class="line"><span class="attr">metadata</span>:</span><br><span class="line">  <span class="attr">name</span>: node-exporter</span><br><span class="line"><span class="attr">spec</span>:</span><br><span class="line">  <span class="attr">path</span>: /metrics</span><br><span class="line">  <span class="attr">port</span>: <span class="string">&quot;9111&quot;</span> # 指定 node-exporter 的端口</span><br><span class="line">  <span class="attr">scrape_interval</span>: 15s</span><br><span class="line">#   relabelConfigs：  # relabel配置</span><br><span class="line">#   <span class="attr">selector</span>:  # 过滤节点</span><br></pre></td></tr></table></figure>

<p>直接应用上面的对象即可：</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">☸ ➜ kubectl apply -f vmnode-exporter-scrape.<span class="property">yaml</span></span><br><span class="line">☸ ➜ kubectl get vmnodescrape</span><br><span class="line"><span class="variable constant_">NAME</span>            <span class="variable constant_">AGE</span></span><br><span class="line">node-exporter   19s</span><br></pre></td></tr></table></figure>

<p>创建后 vmagent 就会自动去识别该对象去对 node-exporter 进行抓取了：</p>
<p><img src="/assets/1703668417-4766dde35f5372f123d8692abc09fa36.png"></p>
<p>这个时候再去查看 node-exporter 的 dashboard 就正常了：</p>
<p><img src="/assets/1703668417-f1b358df84b37980702a24bb54527149.png"></p>
<p>此外还可以通过 <code>VMServiceScrape</code> 去定义要抓取的 Service 服务（Endpoints），它基于选择器为 <code>vmagent</code> 生成抓取配置，如果想要抓取没有定义 Service 的 Pod 的指标，则可以通过 <code>VMPodScrape</code> 来进行定义，同样还有报警相关的也都有相应的 CRD 来进行管理。vm-operator 大大降低了我们对 VM 集群的管理，非常推荐使用。</p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用Prometheus在GitLab中进行异常检测</title>
    <url>/2023/12/11/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8Prometheus%E5%9C%A8GitLab%E4%B8%AD%E8%BF%9B%E8%A1%8C%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/</url>
    <content><![CDATA[<p>【转载】Prometheus 查询语言的最基本功能之一是实时汇总时间序列数据。GitLab基础架构团队的杰出工程师 Andrew Newdigate 认为 Prometheus 查询语言也可以用于检测时间序列数据中的异常。本博客文章解释了异常检测如何与 Prometheus 一起工作，并包括您需要在自己的系统上亲自尝试的代码片段。</p>
<p>为什么异常检测有效？</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9iMllsVEx1R2JLRHNiSnp1cG5JTFZGaFB0TWFSam12UEtZUnFUTWppYkU5cG5kOG9pYXdMVnJRYk9IUWU0d0JYa0JRa3pwS0NXUEtCcVdnT0xnd2NjQnVnLzY0MA?x-oss-process=image/format,png"></p>
<p>异常检测对 GitLab 非常重要的四个关键原因：</p>
<ul>
<li>诊断事件：我们可以快速找出哪些服务执行超出正常范围，并减少检测事件的平均时间（MTTD），从而更快地解决问题。</li>
<li>检测应用程序性能回归：例如，如果引入 n+1 回归，发现一个服务以很高的速率调用另一个服务，可以迅速找到问题并加以解决。</li>
<li>识别并解决滥用问题：GitLab 提供免费计算（GitLab CI&#x2F;CD）和托管（GitLab Pages），会被一小部分用户加以利用。</li>
<li>安全性：异常检测对于发现 GitLab 时间序列数据中的异常趋势至关重要。</li>
</ul>
<p>由于以上以及其他许多原因，Andrew 研究了是否可以仅通过使用 Prometheus 查询和规则对 GitLab 时间序列数据执行异常检测。</p>
<p>正确的聚合级别是什么？</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9iMllsVEx1R2JLRHNiSnp1cG5JTFZGaFB0TWFSam12UEtZUnFUTWppYkU5cG5kOG9pYXdMVnJRYk9IUWU0d0JYa0JRa3pwS0NXUEtCcVdnT0xnd2NjQnVnLzY0MA?x-oss-process=image/format,png"></p>
<p>首先，时间序列数据必须正确聚合。尽管可以将相同的技术应用到许多其他类型的指标，Andrew 使用了标准计数器 http_requests_total 作为数据源进行演示。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_requests_total&#123;</span><br><span class="line"> job=&quot;apiserver&quot;,</span><br><span class="line"> method=&quot;GET&quot;,</span><br><span class="line"> controller=&quot;ProjectsController&quot;,</span><br><span class="line"> status_code=&quot;200&quot;,</span><br><span class="line"> environment=&quot;prod&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>上述示例指标有一些额外的维度：method，controller，status_code，environment，如同 Prometheus 添加的维度 instance 和 job 一样。</p>
<p>接下来，您必须为正在使用的数据选择正确的聚合级别。这有点像“金发姑娘问题”-太多，太少还是恰到好处-但这对于发现异常至关重要。过多地汇总数据，数据将缩减为过小的维度，从而产生两个潜在的问题：</p>
<ol>
<li>可能会错过真正的异常，因为聚合隐藏了数据子集中出现的问题。</li>
<li>如果确实检测到异常，则不对异常进行更多调查，则很难将其归因于系统的特定部分。</li>
</ol>
<p>但是，聚合的数据汇太少，最终可能会得到一系列样本量非常小的数据。如此可能导致误报，并可能将真实数据标记为离群值（outliers）。</p>
<p>恰到好处：我们的经验表明，正确的聚合级别是服务级别，因此我们将 job 和 environment 标签标签包括进来，但删除了其他维度。在本演讲的以下部分中使用的数据聚合包括：job、http requests、五分钟速率（基本上是五分钟窗口中覆盖 job 和 environment 之上的速率）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- record: job:http_requests:rate5m</span><br><span class="line">expr: sum without(instance, method, controller, status_code)</span><br><span class="line">(rate(http_requests_total[5m]))</span><br><span class="line"># --&gt; job:http_requests:rate5m&#123;job=&quot;apiserver&quot;, environment=&quot;prod&quot;&#125;  21321</span><br><span class="line"># --&gt; job:http_requests:rate5m&#123;job=&quot;gitserver&quot;, environment=&quot;prod&quot;&#125;  2212</span><br><span class="line"># --&gt; job:http_requests:rate5m&#123;job=&quot;webserver&quot;, environment=&quot;prod&quot;&#125;  53091</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>使用 z-score 进行异常检测</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9iMllsVEx1R2JLRHNiSnp1cG5JTFZGaFB0TWFSam12UEtZUnFUTWppYkU5cG5kOG9pYXdMVnJRYk9IUWU0d0JYa0JRa3pwS0NXUEtCcVdnT0xnd2NjQnVnLzY0MA?x-oss-process=image/format,png"></p>
<p>一些统计学的主要原理可以应用于 Prometheus 检测异常。</p>
<p>如果知道 Prometheus 序列的平均值和标准偏差（σ），则可以使用该系列中的任何样本来计算 z-score。z-score 表示为：与平均值的标准偏差值。因此 z-score 为 0 表示 z-score 与具有正态分布的数据的平均值相同，而 z-score 为 1 则相对于平均值为 1.0σ，依此类推。</p>
<p>假设基础数据是正态分布的，则 99.7％ 的样本的 z-score 应介于 0 到 3 之间。z-score 距离 0 越远，它越不可能出现。我们将此特性应用于检测 Prometheus 序列中的异常。</p>
<p>使用样本数量较大的数据计算指标的平均值和标准偏差。在此示例中，我们使用了一周的数据。如果假设我们每分钟评估一次记录规则，那么一周的时间，能获得 10,000 多个样本。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Long-term average value for the series</span><br><span class="line">- record: job:http_requests:rate5m:avg_over_time_1w</span><br><span class="line">expr: avg_over_time(job:http_requests:rate5m[1w])</span><br><span class="line"></span><br><span class="line"># Long-term standard deviation for the series</span><br><span class="line">- record: job:http_requests:rate5m:stddev_over_time_1w</span><br><span class="line">expr: stddev_over_time(job:http_requests:rate5m[1w])</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>一旦有了聚合的平均值和标准差，就可以计算 Prometheus 查询的 z-score。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Z-Score for aggregation</span><br><span class="line">(</span><br><span class="line">job:http_requests:rate5m -</span><br><span class="line">job:http_requests:rate5m:avg_over_time_1w</span><br><span class="line">) /  job:http_requests:rate5m:stddev_over_time_1w</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>根据正态分布的统计原理，我们可以假设任何超出大约 +3 到 -3 范围的值都是异常。我们可以围绕这一原则建立警报。例如，当聚合超出此范围超过五分钟时，我们将收到警报。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9BMUhLVlhzZkhOazFlNGlhd2liSm55NHRyVXZMOTZ3WGRBUjZjZ2JsYVRXTmFnVjdpYTViTm1pY0s1YmtLUGVwZjY0SmxodTlkSXZsaWFKcWE4WVRTTkdSeExnLzY0MA?x-oss-process=image/format,png"></p>
<p>GitLab.com 页面服务 48 小时的 RPS， ±3 z-score 区域为绿色</p>
<p>z-score 在图形上难以解释，因为它们没有度量单位。但是此图表上的异常很容易检测。出现在绿色区域（表示 z-score 在 +3 或 -3 范围内）之外的任何值都是异常。</p>
<p><strong>如果不是正态分布怎么办？</strong></p>
<p>但是，请稍等：我们大跃进的假设潜在的聚合具有正态分布。如果我们使用非正态分布的数据计算 z-score，结果将不正确。有许多统计技术可以测试您的数据是否为正态分布，但是最好的选择是测试您的潜在数据的 z-score 约为 +4 到 -4。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(</span><br><span class="line"> max_over_time(job:http_requests:rate5m[1w]) - avg_over_time(job:http_requests:rate5m[1w])</span><br><span class="line">) / stddev_over_time(job:http_requests:rate5m[1w])</span><br><span class="line"># --&gt; &#123;job=&quot;apiserver&quot;, environment=&quot;prod&quot;&#125;  4.01</span><br><span class="line"># --&gt; &#123;job=&quot;gitserver&quot;, environment=&quot;prod&quot;&#125;  3.96</span><br><span class="line"># --&gt; &#123;job=&quot;webserver&quot;, environment=&quot;prod&quot;&#125;  2.96</span><br><span class="line"></span><br><span class="line">(</span><br><span class="line"> min_over_time(job:http_requests:rate5m[1w]) - avg_over_time(job:http_requests:rate5m[1w])</span><br><span class="line">) / stddev_over_time(job:http_requests:rate5m[1w])</span><br><span class="line"># --&gt; &#123;job=&quot;apiserver&quot;, environment=&quot;prod&quot;&#125;  -3.8</span><br><span class="line"># --&gt; &#123;job=&quot;gitserver&quot;, environment=&quot;prod&quot;&#125;  -4.1</span><br><span class="line"># --&gt; &#123;job=&quot;webserver&quot;, environment=&quot;prod&quot;&#125;  -3.2</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>两个 Prometheus 查询测试 z-score 的最小和最大值。</p>
<p>如果结果返回的范围是 +20 到 -20，则尾巴太长，结果将倾斜。还要记住，这需要在聚合而不是非聚合的序列上运行。可能没有正态分布的指标包括诸如错误率、等待时间、队列长度等，但是无论如何，在固定阈值下告警，许多这些指标都趋向于工作的很好。</p>
<p>使用季节性检测异常</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9iMllsVEx1R2JLRHNiSnp1cG5JTFZGaFB0TWFSam12UEtZUnFUTWppYkU5cG5kOG9pYXdMVnJRYk9IUWU0d0JYa0JRa3pwS0NXUEtCcVdnT0xnd2NjQnVnLzY0MA?x-oss-process=image/format,png"></p>
<p>尽管时间序列数据为正态分布时，计算 z-score 效果很好，但是还有第二种方法可以产生更准确的异常检测结果。季节性是时间序列指标的一个特征，其中该指标会经历定期且可预测的变化，这些变化会在每个周期重复出现。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9BMUhLVlhzZkhOazFlNGlhd2liSm55NHRyVXZMOTZ3WGRBdHJybnBaM0pWR0oydjVzY1VlaWJ4ZnBKZUhSc2JDdE1DWE5uWU9wM0Z0dU1YNkpMUEpueXpnZy82NDA?x-oss-process=image/format,png"></p>
<p>周一至周日连续四个星期的每秒 Gitaly 请求（RPS）</p>
<p>该图说明了连续四周的周一到周日的 7 天中 Gitaly 的 RPS（每秒请求数）速率。七天范围称为“偏移”，表示需要度量的模式。图上的每个星期都有不同的颜色。数据的季节性由图表中所示趋势的一致性表示 —— 每个星期一早晨，RPS 速率都会上升，而在星期五晚上，RPS 速率会逐渐下降，每周如此。</p>
<p>通过利用时间序列数据中的季节性，可以创建更准确的预测，从而更好地进行异常检测。</p>
<p><strong>如何利用季节性？</strong></p>
<p>使用 Prometheus 计算季节性，需要在一些不同的统计原理上迭代。</p>
<p>在第一次迭代中，我们通过将目前滚动的一周的增长趋势（注：平均值）与前一周的值相加来计算。通过从目前滚动的一周平均值中减去上周的滚动一周平均值来计算增长趋势。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- record: job:http_requests:rate5m_prediction</span><br><span class="line">  expr: &gt;</span><br><span class="line">    job:http_requests:rate5m offset 1w                     # Value from last period</span><br><span class="line">    + job:http_requests:rate5m:avg_over_time_1w            # One-week growth trend</span><br><span class="line">    - job:http_requests:rate5m:avg_over_time_1w offset 1w</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>第一次迭代有点狭窄；我们使用本周和上周的五分钟窗口来得出我们的预测。</p>
<p>在第二次迭代中，将上周的四个小时平均值作为平均值，并将其与本周进行比较，以扩大范围。因此，如果要预测一个星期一上午 8 点的指标值，不是使用一周前的相同五分钟窗口，而是使用前一周早上的上午 6 点至上午 10 点的指标平均值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- record: job:http_requests:rate5m_prediction</span><br><span class="line">  expr: &gt;</span><br><span class="line">    avg_over_time(job:http_requests:rate5m[4h] offset 166h) # Rounded value from last period</span><br><span class="line">    + job:http_requests:rate5m:avg_over_time_1w             # Add 1w growth trend</span><br><span class="line">    - job:http_requests:rate5m:avg_over_time_1w offset 1w</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在查询中使用 166 个小时而不是一周，因为要根据一天中的当前时间使用四个小时，因此需要将偏移减少两个小时。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9BMUhLVlhzZkhOazFlNGlhd2liSm55NHRyVXZMOTZ3WGRBRVRsYkVGbDJxVWliaG1wdkY0UzFFNno0MnNlOE50TlcyWUNUSWFCUHFsd2ljalM5Wm5Ud3M1TGcvNjQw?x-oss-process=image/format,png"></p>
<p>两周的 Gitaly 服务 RPS（黄色）vs 预测（蓝色）</p>
<p>将实际的 Gitaly RPS（黄色）与 预测（蓝色）进行比较表明，计算相当准确。但是，这种方法有缺陷。因为 5 月 1 日是国际劳动节，一个许多国家庆祝的节日，GitLab 的使用量低于平常的星期三。由于增长率是由前一周的使用情况决定的，因此我们对下周（5 月 8 日，星期三）RPS 的预测会比 如果 5 月 1 日（星期三）没有假期更低。</p>
<p>可以通过在 5 月 1 日（星期三）之前连续三周（之前的星期三，再之前的星期三和三周之前的星期三）进行三个预测来解决此问题。查询保持不变，但偏移量已调整。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- record: job:http_requests:rate5m_prediction</span><br><span class="line">  expr: &gt;</span><br><span class="line">   quantile(0.5,</span><br><span class="line">     label_replace(</span><br><span class="line">       avg_over_time(job:http_requests:rate5m[4h] offset 166h)</span><br><span class="line">       + job:http_requests:rate5m:avg_over_time_1w - job:http_requests:rate5m:avg_over_time_1w offset 1w</span><br><span class="line">       , &quot;offset&quot;, &quot;1w&quot;, &quot;&quot;, &quot;&quot;)</span><br><span class="line">     or</span><br><span class="line">     label_replace(</span><br><span class="line">       avg_over_time(job:http_requests:rate5m[4h] offset 334h)</span><br><span class="line">       + job:http_requests:rate5m:avg_over_time_1w - job:http_requests:rate5m:avg_over_time_1w offset 2w</span><br><span class="line">       , &quot;offset&quot;, &quot;2w&quot;, &quot;&quot;, &quot;&quot;)</span><br><span class="line">     or</span><br><span class="line">     label_replace(</span><br><span class="line">       avg_over_time(job:http_requests:rate5m[4h] offset 502h)</span><br><span class="line">       + job:http_requests:rate5m:avg_over_time_1w - job:http_requests:rate5m:avg_over_time_1w offset 3w</span><br><span class="line">       , &quot;offset&quot;, &quot;3w&quot;, &quot;&quot;, &quot;&quot;)</span><br><span class="line">   )</span><br><span class="line">   without (offset)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9BMUhLVlhzZkhOazFlNGlhd2liSm55NHRyVXZMOTZ3WGRBb1owZU5Ob2NwbmczSjVtR1FQMTdyREJPalQ1S3V0UFpnS3N3cmxrQXRzbmF3Z0Nod1ZKMmVBLzY0MA?x-oss-process=image/format,png"></p>
<p>三个星期三的三个预测与实际 5 月 8 日（星期三，国际劳动节之后的一周）的 Gitaly RPS</p>
<p>在该图上，绘制了 5 月 8 日星期三和 5 月 8 日之前连续三个星期的三个预测。可以看到其中两个预测是好的，但是 5 月 1 日的预测仍远未达到基准。</p>
<p>而且，我们不需要三个预测，我们想要一个预测。取平均值是不可行的，因为它将被倾斜的 5 月 1 日 RPS 数据所稀释。相反，我们要计算中位数。Prometheus 没有中位数查询，但可以使用分位数聚合来代替中位数。该方法的一个问题是，试图在一个聚合中包括三个系列，而这三个系列实际上在三周内都是相同的系列。换句话说，它们都具有相同的标签，因此连接它们很棘手。为避免混淆，我们创建了一个名为 offset 的标签，并使用 label-replace 函数为三个星期添加 offset。接下来，在分位数聚合中，将其去除，以获得了三个中间值。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- record: job:http_requests:rate5m_prediction</span><br><span class="line">  expr: &gt;</span><br><span class="line">   quantile(0.5,</span><br><span class="line">     label_replace(</span><br><span class="line">       avg_over_time(job:http_requests:rate5m[4h] offset 166h)</span><br><span class="line">       + job:http_requests:rate5m:avg_over_time_1w - job:http_requests:rate5m:avg_over_time_1w offset 1w</span><br><span class="line">       , &quot;offset&quot;, &quot;1w&quot;, &quot;&quot;, &quot;&quot;)</span><br><span class="line">     or</span><br><span class="line">     label_replace(</span><br><span class="line">       avg_over_time(job:http_requests:rate5m[4h] offset 334h)</span><br><span class="line">       + job:http_requests:rate5m:avg_over_time_1w - job:http_requests:rate5m:avg_over_time_1w offset 2w</span><br><span class="line">       , &quot;offset&quot;, &quot;2w&quot;, &quot;&quot;, &quot;&quot;)</span><br><span class="line">     or</span><br><span class="line">     label_replace(</span><br><span class="line">       avg_over_time(job:http_requests:rate5m[4h] offset 502h)</span><br><span class="line">       + job:http_requests:rate5m:avg_over_time_1w - job:http_requests:rate5m:avg_over_time_1w offset 3w</span><br><span class="line">       , &quot;offset&quot;, &quot;3w&quot;, &quot;&quot;, &quot;&quot;)</span><br><span class="line">   )</span><br><span class="line">   without (offset)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>现在，从三个聚合系列中得出中值的预测更加准确。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9BMUhLVlhzZkhOazFlNGlhd2liSm55NHRyVXZMOTZ3WGRBZ01sMFluMGljaWJSaGFPc0dpY2tudDlvSnZIRmljaWF6QnRWRTNmNUtMYk5tRkJVRzlTa3h0bkZpYTlnLzY0MA?x-oss-process=image/format,png"></p>
<p>中位数预测与实际 Gitaly RPS 的比较，5 月 8 日（星期三，国际劳动节之后的一周）</p>
<p><strong>怎么知道预测是真正准确的？</strong></p>
<p>为了测试预测的准确性，可以返回 z-score。可以使用 z-score 来测量样本与标准偏差预测值之间的差距。偏离预测的标准偏差越多，则特定值是异常可能性就越大。</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9BMUhLVlhzZkhOazFlNGlhd2liSm55NHRyVXZMOTZ3WGRBY0ZIUFlhbHNicW1pYTlaN1pYZ3NEeDRuakNkYjlKOTRzTnJ5dW9Jc2szZk51aWM4NndSeW1lcGcvNjQw?x-oss-process=image/format,png"></p>
<p>Gitaly 服务的预测正常范围 ±1.5σ</p>
<p>我们可以更新 Grafana 图表以使用季节性预测而不是每周滚动平均值。一天中特定时间的正常范围以绿色阴影显示。任何落在绿色阴影区域之外的东西都被认为是异常值。在这种情况下，离群值发生在周日下午，此时我们的云提供商遇到了一些网络问题。在我们的预测的任一侧使用±2σ的边界是确定季节性预测的异常值的一种很好的方法。</p>
<p>如何使用 Prometheus 设置警报</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9iMllsVEx1R2JLRHNiSnp1cG5JTFZGaFB0TWFSam12UEtZUnFUTWppYkU5cG5kOG9pYXdMVnJRYk9IUWU0d0JYa0JRa3pwS0NXUEtCcVdnT0xnd2NjQnVnLzY0MA?x-oss-process=image/format,png"></p>
<p>如果要为异常事件设置警报，可以对 Prometheus 应用一个非常简单的规则，该规则检查指标的 z-score 是否在标准偏差 +2 或 -2 之间。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- alert: RequestRateOutsideNormalRange</span><br><span class="line">  expr: &gt;</span><br><span class="line">   abs(</span><br><span class="line">     (</span><br><span class="line">       job:http_requests:rate5m - job:http_requests:rate5m_prediction</span><br><span class="line">     ) / job:http_requests:rate5m:stddev_over_time_1w</span><br><span class="line">   ) &gt; 2</span><br><span class="line">  for: 10m</span><br><span class="line">  labels:</span><br><span class="line">    severity: warning</span><br><span class="line">  annotations:</span><br><span class="line">    summary: Requests for job &#123;&#123; $labels.job &#125;&#125; are outside of expected operating parameters</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在 GitLab，我们使用了自定义路由规则，该规则会在检测到任何异常时 pings Slack，但不会寻呼值班的支持人员。</p>
<p>总结</p>
<p><img src="https://imgconvert.csdnimg.cn/aHR0cHM6Ly9tbWJpei5xcGljLmNuL21tYml6X3BuZy9iMllsVEx1R2JLRHNiSnp1cG5JTFZGaFB0TWFSam12UEtZUnFUTWppYkU5cG5kOG9pYXdMVnJRYk9IUWU0d0JYa0JRa3pwS0NXUEtCcVdnT0xnd2NjQnVnLzY0MA?x-oss-process=image/format,png"></p>
<ul>
<li>Prometheus 可用于某些类型的异常检测</li>
<li>正确级别的数据聚合是异常检测的关键</li>
<li>如果数据具有正态分布，则 z-score 是一种有效的方法</li>
<li>季节性指标可以为异常检测提供出色的结果</li>
</ul>
<p>译文链接：<a href="https://www.cyningsun.com/01-22-2020/use-prometheus-for-anomaly-detection.html">https://www.cyningsun.com/01-22-2020/use-prometheus-for-anomaly-detection.html</a></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>监控与可观测[一]</title>
    <url>/2023/12/29/%E7%9B%91%E6%8E%A7%E4%B8%8E%E5%8F%AF%E8%A7%82%E6%B5%8B-%E4%B8%80/</url>
    <content><![CDATA[<p>在现代的软件开发和运维中，可观测性和监控是两个关键概念。随着系统和应用程序的复杂性不断增加，我们需要一种方式来实时监测和分析系统的运行状态、行为和性能。可观测性和监控提供了这种能力，使我们能够获得对系统内部和外部的可见性，以便及时发现问题并采取适当的措施。</p>
<p>然而很多人混淆这两个概念，本文将阐述这两个概念的区别，主要探讨可观测性相关的一些概念、建设要素、以及一些挑战等。</p>
<p><strong>01</strong></p>
<p>  <strong>概念</strong></p>
<p><strong>可观测性：</strong>指根据系统产生的数据评估内部系统状态的能力。可帮助IT运维团队同时观察或深入了解IT基础架构中不同应用程序和资源的健康状况和状态。IT团队通过从每个系统的数据中获取洞察力，可以主动检测异常、分析问题并解决问题。</p>
<p>可观测性工具使用基于数学控制理论的算法来理解公司多层次IT基础架构之间的关系，这些工具使用日志、指标和跟踪（可观测性的三个支柱）来监控系统的健康状况和状态，当工具检测到异常时，它会通知团队并提供他们解决问题所需的数据。</p>
<p><strong>监控：</strong>可观测性的基础，没有监控就无法实现可观测性。</p>
<p>监控是指从IT系统中收集和分析数据的过程，使用仪表板来跟踪特定指标，以衡量系统、网络、应用程序等的健康状况。通过提供关于应用程序使用模式的信息、系统以及网络信息等，帮助IT团队检测和解决问题。要使监控发挥作用，必须预先知道要跟踪哪些指标，如果没有预先定义这些跟踪数据，问题就很难被察觉。</p>
<p><strong>02</strong></p>
<p>  <strong>概念对比</strong></p>
<p>在谈到可观测性时经常也会提到一些概念，主要包括遥测(telemetry)，APM。那这些和监控，可观测又是什么关系？</p>
<p><strong>可观测 vs 遥测</strong></p>
<p><strong>遥测（telemetry）</strong>: 一种在不同系统之间收集数据（包括日志、指标和跟踪）的能力，特别是在动态云环境或云原生应用程序中。虽然遥测工具提供了强大的数据收集和标准化，但它们仍无法提供开发运维团队需要快速调试系统并找到问题根本原因的能力。遥测本质是一种高级的监控工具。</p>
<p><strong>可观测 vs APM</strong></p>
<p><strong>APM（Application Performance Moni</strong>toring）：一种监控和管理应用程序性能的方法。通常是通过收集和分析应用程序的指标、日志和跟踪数据来实现的。这些数据可以提供关于应用程序性能、资源利用率和错误率等方面的洞察。APM工具可以帮助开发人员和运维团队监控应用程序的健康状况，识别性能瓶颈和故障，并进行故障排除和优化。APM可以被看作是可观测性的一个子集，它专注于应用程序性能的监控和管理</p>
<p>APM更专注于应用程序性能的监控和管理。它提供了一种高级的方法来跟踪系统健康状况和应用程序事务的端到端监控。可以帮助开发人员和运维团队监控应用程序的性能，识别性能瓶颈和故障，并进行故障排除和优化。</p>
<p>可观测性更加综合和全面，关注整个系统的状态和行为。它涵盖了应用程序、基础设施、网络和其他相关组件的观察和监控。通过收集和分析各种数据源（如日志、指标、事件和分布式跟踪），可观测性提供对系统的全面洞察。这使得开发人员和运维团队能够更好地理解系统的运行情况，快速识别和解决问题，并优化系统的性能和提高系统的可靠性。</p>
<p><strong>可观测 vs 监控</strong></p>
<p><strong>监控：</strong>收集和聚合IT环境的各种数据，主要包含诸如网络流量、服务器和终端节点带宽使用情况、日志和事件数据、配置更改、跟踪用户的活动(访问的文件、使用的应用程序以及登录历史记录)等等。</p>
<p>监控类似于遥测和APM，都可以支持可用性监控，并为IT系统的健康度和性能提供独特的洞察力。监控其实是需要有一些知识储备的，即确定采集哪些指标，如何确定这些指标的正常阈值等，这些都是基于一定的经验去实现的。换句话说是对已知的可能会发生的问题的提前应对，当然对于未知事件就会显得力不从心。</p>
<p>相比之下，可观测性提供了对IT环境中发生的事件以及其原因的详细、细粒度的视图。通过利用跟踪、日志和指标，可观测性允许对原始IT数据进行深入、有针对性地探索。它可以实现自定义故障排除，从最终用户体验一直追踪数据路径，直到找到根本原因。</p>
<p><strong>关系总结</strong></p>
<p>APM仅限于应用程序，而可观测性则提供了对整个IT基础架构的健康和性能的指标和洞察力，而不仅仅是应用程序。</p>
<p>可观测性和监控是相辅相成的。然而，在选择适合团队的正确工具时，您可能觉得必须在监控工具和可观测性平台之间做出选择。</p>
<p>可观测性对于开发人员有效地进行根因分析和调试系统至关重要。通过可观测性软件，开发人员可以比仅依赖监控工具（包括遥测和APM工具）更轻松地进行这项工作。</p>
<p>在现代IT环境中，所有这些工具可以共同支持不同的IT团队，并为您的IT基础设施中的各种系统、服务器、环境和应用程序的健康状况、性能和可用性提供重要的洞察力。</p>
<p><strong>03</strong></p>
<p>  <strong>可观测性必备要素</strong></p>
<p>来自Google Cloud Architecture Center的指南列出了应该在可观测性解决方案设计中构建的能力， 主要包括如下几点：</p>
<ul>
<li>报告系统的整体健康状况</li>
</ul>
<p>    系统是否正常运行，是否有足够的资源可用等。</p>
<ul>
<li><p>报告客户所经历的系统状态</p>
<p>如系统出现故障，客户是否知晓，并且客户的体验是否受到负面影响？</p>
</li>
<li><p>监控关键业务和系统指标</p>
</li>
<li><p>明确记录的服务水平目标(Service Level Object)，定义了成功或失败的值</p>
</li>
<li><p>提供工具来帮助理解和调试生产环境中的系统</p>
</li>
<li><p>提供工具来识别未预料到的问题</p>
</li>
<li><p>提供工具和数据，帮助跟踪、理解和诊断生产环境中的基础设施问题，包括服务之间的交互作用</p>
</li>
</ul>
<p><strong>04</strong></p>
<p>  <strong>可观测实现的挑战</strong></p>
<p>实现可观测不是一件容易的事情，这其中可能有技术的原因，也有一些技术以外的挑战，一般会存在于以下这些方面：</p>
<ol>
<li><p><strong>无法找到支持多种用例的工具：</strong>通常情况下，多个团队需要从相同的数据中提取有效信息，以帮助他们更好地理解数据，做出更明智的决策，或者采取更有效的行动，这些用例主要包括开发、IT运营、站点可靠性工程和安全等，一般工具很难将所有这些都纳管进来。</p>
</li>
<li><p><strong>团队间协作挑战：</strong>建立可观测需要多个团队甚至是多个部门的协作才能完成，因此如何建立团队间的有效协作对于主导建设的团队来说是一个不小的挑战。</p>
</li>
<li><p><strong>路由安全事件问题：</strong>在网络安全领域，安全事件可以是指潜在的威胁、攻击行为、异常活动等。路由安全事件涉及将这些安全事件从一个系统或组件传递到适当的处理程序、分析工具或安全团队，以便进行进一步的分析、响应和处理。这个过程通常涉及使用适当的协议、规则和机制来确保安全事件的准确传递和处理。</p>
</li>
<li><p><strong>成本问题：</strong>为了控制管理日益增加的机器数据的成本，公司可能限制了摄取或存储的日志数据量。这导致开发人员只能用样本数据而不是所需的完整信息来解决问题，这减慢了故障排除、调试和事故响应的工作，并增加了安全风险。</p>
</li>
<li><p><strong>数据多样性：</strong>企业中各种应用、网站、终端设备等数据是多种多样，获取和处理这些数据到标准的格式中难度不小。</p>
</li>
<li><p><strong>路由数据：</strong>可观测数据通常需要在不同的工具中进行处理，以满足不同的用例和需求。这些工具可能包括日志管理系统、监控工具、安全分析平台等。通过将数据路由到多个工具，可以实现对数据的多方面分析、监控和处理，以提取有用的信息和支持不同团队的工作。</p>
</li>
</ol>
<p>当然，在可观测性的建设中可能还有更多的挑战，这里只是罗列了一些通常遇到的情况，要建设企业的可观测是一项持续和需要广泛协作的工程。</p>
]]></content>
      <categories>
        <category>技术咖</category>
      </categories>
      <tags>
        <tag>技术咖</tag>
      </tags>
  </entry>
  <entry>
    <title>Skywalking-千亿级的数据储能、毫秒级的查询耗时</title>
    <url>/2024/01/03/Skywalking-%E5%8D%83%E4%BA%BF%E7%BA%A7%E7%9A%84%E6%95%B0%E6%8D%AE%E5%82%A8%E8%83%BD%E3%80%81%E6%AF%AB%E7%A7%92%E7%BA%A7%E7%9A%84%E6%9F%A5%E8%AF%A2%E8%80%97%E6%97%B6/</url>
    <content><![CDATA[<h3 id="1、开篇"><a href="#1、开篇" class="headerlink" title="1、开篇"></a>1、开篇</h3><p>自从Skywaling开始在公司推广，时不时会在排查问题的人群中听到这样的话：“你咋还没接Skywalking？接入后，一眼就看出是哪儿的问题了…”，正如同事所说的，在许多情况下，Skywalking就是这么秀。作为实践者，我非常感谢Skywalking，因为这款国产全链路监控产品给公司的伙伴们带来了实实在在的帮助；也特别感谢公司的领导和同事们，正因为他们的支持和帮助，才让这套Skywalking系统从起初的有用进化到现在的好用；<strong>从几十亿的Segment储能上限、</strong>几十秒的查询耗时<strong>，优化到千亿级的Segment储能、毫秒级的查询耗时</strong>。</p>
<p>小提示：</p>
<ul>
<li>我们使用的是V8.5.0，根据最新社区通告，V8系列即将下线，进入全新的V9时代，新版本，功能、性能都会更好。</li>
<li>Segment是Skywalking中提出的概念，表示一次请求在某个服务内的执行链路片段的合集，一个请求在多个服务中先后产生的Segment串起来构成一个完整的Trace，如下图所示：<img src="/images/1704244102-d910af76f04bd1caed730297c70be362.webp" alt="图片"></li>
</ul>
<p>Skywalking的这次实践，截止到现在有一年多的时间，回顾总结一下这段历程中的些许积累和收获，愿能反哺社区，给有需求的道友提供个案例借鉴；也希望能收获到专家们的指导建议，把项目做得更好。因为某某约束吧，把有些内容先和谐掉，但也努力把这段历程中那些<strong>靓丽的风景，</strong> 尽可能完整的呈现给大家。</p>
<h3 id="2、为什么需要全链路监控"><a href="#2、为什么需要全链路监控" class="headerlink" title="2、为什么需要全链路监控"></a>2、为什么需要全链路监控</h3><p>随着微服务架构的演进，单体应用按照服务维度进行拆分，组织架构也随之演进以横向、纵向维度拆分；一个业务请求的执行轨迹，也从单体应用时期一个应用实例内一个接口，变成多个服务实例的多个接口；对应到组织架构，可能跨越多个BU、多个Owner。虽然微服务架构高内聚低耦合的优势是不言而喻的，但是低耦合也有明显的副作用，它在现实中给跨部门沟通、协作带来额外的不可控的开销；因此开发者尤其是终端业务侧的架构师、管理者，特别需要一些可以帮助理解系统拓扑和用于分析性能问题的工具，便于在架构调整、性能检测和发生故障时，缩减沟通协作方面的精力和时间耗费，快速定位并解决问题。</p>
<p>我所在公司是微服务架构的深度实践者，为了进一步降低机器成本、提高服务质量、提升问题响应效率，部门在21年结合自身的一些情况，决定对现行的全链路监控系统进行升级，目的与以下网络中常见的描述基本一致：</p>
<ul>
<li>快速发现问题</li>
<li>判断故障影响范围</li>
<li>梳理服务依赖并判断依赖的合理性</li>
<li>分析链路性能并实施容量规划</li>
</ul>
<h3 id="3、为什么选择Skywalking"><a href="#3、为什么选择Skywalking" class="headerlink" title="3、为什么选择Skywalking"></a>3、为什么选择Skywalking</h3><p>在做技术选型时，网络中搜集的资料显示，谷歌的 Dapper系统，算是链路追踪领域的始祖。受其公开论文中提出的概念和理念的影响，一些优秀的企业、个人先后做出不少非常nice的产品，有些还在社区开源共建，如：韩国的Pinpoint，Twitter的Zipkin，Uber的Jaeger及中国的Skywalking 等，我司选型立项的过程中综合考虑的因素较多，这里只归纳一下Skywalking吸引我们的2个优势：</p>
<ol>
<li>产品的完善度高：</li>
</ol>
<ul>
<li>java生态，功能丰富</li>
<li>社区活跃，迭代迅速</li>
</ul>
<ol start="2">
<li>链路追踪、拓扑分析的能力强：</li>
</ol>
<ul>
<li>插件丰富，探针无侵入。</li>
<li>先进的<strong>流式拓扑分析</strong></li>
</ul>
<p>“好东西不需要多说,实际行动告诉你“，这句话我个人非常喜欢，关于Skywalking的众多的优点，网络上可以找到很多，此处先不逐一比较、赘述了。</p>
<h3 id="4、预研阶段"><a href="#4、预研阶段" class="headerlink" title="4、预研阶段"></a>4、预研阶段</h3><p>当时最新版本8.5.0，梳理分析8.x的发布记录后，评估此版本的核心功能是蛮稳定的，于是基于此版本开始了Skywalking的探索之旅。当时的认知是有限的，串行思维模型驱使我将关注的问题聚焦在<strong>架构原理是怎样</strong>、<strong>有什么副作用</strong>这两个方面：</p>
<ol>
<li>架构和原理：</li>
<li><ul>
<li>agent端 主要关注 Java Agent的机制、Skywalking Agent端的配置、插件的工作机制、数据采集及上报的机制。</li>
<li>服务端 主要关注 角色和职责、模块和配置、数据接收的机制、指标构建的机制、指标聚合的机制及指标存储的机制。</li>
<li>存储端 主要关注 数据量，存储架构要求以及资源评估。</li>
</ul>
</li>
<li>副作用：</li>
<li><ul>
<li>功能干扰</li>
<li>性能损耗</li>
</ul>
</li>
</ol>
<h5 id="4-1-架构和原理"><a href="#4-1-架构和原理" class="headerlink" title="4.1 架构和原理"></a>4.1 架构和原理</h5><p>Skywalking社区很棒，官网文档和官方出版的书籍有较系统化的讲解，因为自己在APM系统以及Java Agent方面有一些相关的经验沉淀，通过在这两个渠道的学习，对Agent端和OAP(服务端)很快便有了较系统化的认知。在做系统架构选型时，评估数据量会比较大（成千上万的JVM实例数，每天采集的Segment数量可能是50-100亿的级别），所以传输通道选择Kafka、存储选择Elasticsearch，如此简易版的架构以及数据流转如下图所示：</p>
<p><img src="/images/1704244102-9e995c2b666ff7ebc25a07eb5431d55f.webp" alt="图片"></p>
<p>Mixed角色模式的数据流转.png</p>
<p>这里有几处要解释一下：</p>
<ol>
<li>Agent上报数据给OAP端，有grpc通道和kafka通道，当时就盲猜grpc通道可能撑不住，所以选择kafka通道来削峰；kafka通道是在8.x里加入的。</li>
<li>千亿级的数据用ES来做存储肯定是可以的（毕竟前东家中通科技的ES日志集群算是PB级的，最近换成clickhouse后也是6的飞起）。</li>
<li>图中L1聚合的意思是：Skywalking OAP服务端 接收数据后，构建metric并完成metric 的Level-1聚合，这里简称L1聚合。</li>
<li>图中L2聚合的意思是：服务端 基于metric的Level-1聚合结果，再做一次聚合，即Level-2聚合，这里简称L2聚合。后续把纯Mixed角色的集群拆成了两个集群。</li>
</ol>
<h5 id="4-2-副作用"><a href="#4-2-副作用" class="headerlink" title="4.2 副作用"></a>4.2 副作用</h5><p>对于质量团队和接入方来说，他们最关注的问题是，接入Skywalking后：</p>
<ul>
<li>是否对应用有功能性干扰</li>
<li>在运行期能带来哪些性能损耗</li>
</ul>
<p>这两个问题从3个维度来得到答案：</p>
<ol>
<li>网络资料显示：</li>
<li><ul>
<li>Agent带来的性能损耗在5%以内</li>
<li>未搜到功能性干扰相关的资料（盲猜没有这方面问题）</li>
</ul>
</li>
<li>实现机制评估：</li>
<li><ul>
<li>字节码增强机制是JVM提供的机制，Skywalking使用的字节码操控框架ByteBuddy也是成熟稳定的；通过自定义ClassLoader来加载管理插件类，不会产生冲突和污染。</li>
<li>Agent内插件开发所使用的AOP机制是基于模板方法模式实现的，风控很到位，即使插件的实现逻辑有异常也不影响用户逻辑的执行；</li>
<li>插件采集数据跟上报逻辑之间用了一个<strong>轻量级的无锁环形队列</strong>进行解耦，算是一种保护机制；这个队列在MPSC场景下性能还不错；队列采用满时丢弃的策略，不会有积压阻塞和OOM。</li>
</ul>
</li>
<li>性能测试验证</li>
<li><ul>
<li>测试的老师针对dubbo、http 这两种常规RPC通信场景，进行压力测试和稳定性测试，结果与网络资料描述一致，符合预期。</li>
</ul>
</li>
</ol>
<h3 id="5、POC阶段"><a href="#5、POC阶段" class="headerlink" title="5、POC阶段"></a>5、POC阶段</h3><p>在POC阶段，接入几十个种子应用，在非生产环境试点观察，同时完善插件补全链路，对接公司的配置中心，对接发布系统，完善自监控…全面准备达到推广就绪状态。</p>
<h5 id="5-1-对接发布系统"><a href="#5-1-对接发布系统" class="headerlink" title="5.1 对接发布系统"></a>5.1 对接发布系统</h5><p>为了对接公司的发布系统，方便系统的发布，将Skywalking应用拆分为4个子应用：</p>
<table>
<thead>
<tr>
<th>应用</th>
<th>介绍</th>
</tr>
</thead>
<tbody><tr>
<td>Webapp</td>
<td>Skywalking的web端</td>
</tr>
<tr>
<td>Agent</td>
<td>Skywalking的Agent端</td>
</tr>
<tr>
<td>OAP-Receiver</td>
<td>skywakling的服务端，角色是Mixed或Receiver</td>
</tr>
<tr>
<td>OAP-Aggregator</td>
<td>skywalking的服务端，角色是Aggregator</td>
</tr>
</tbody></table>
<p>这里有个考虑，暂定先使用纯Mixed角色的单集群，不够用的话就试试 Receiver+Aggregator双角色集群模式，最终选哪种视效果而定。</p>
<p>Skywalking Agent端是基于Java Agent机制实现的，采用的是启动挂载模式；启动挂载需在启动脚本里加入挂载Java Agent的逻辑，发布系统实现这个功能需要注意2点：</p>
<ol>
<li>启动脚本挂载Skywalking Agent的环节，尽量让用户无感知。</li>
<li>发布系统在挂载Agent的时候，给Agent指定应用名称和所属分组信息。</li>
</ol>
<p>Skywalking Agent的发布和升级也由发布系统来负责；Agent的升级采用了灰度管控的方案，控制的粒度是应用级和实例级两种：</p>
<ol>
<li>按照应用灰度，可给应用指定使用什么版本的Agent</li>
<li>按照应用的实例灰度，可给应用指定其若干实例使用什么版本的Agent</li>
</ol>
<h5 id="5-2-完善插件补全链路"><a href="#5-2-完善插件补全链路" class="headerlink" title="5.2 完善插件补全链路"></a>5.2 完善插件补全链路</h5><p>针对公司OLTP技术栈，量身定制了插件套，其中大部分在开源社区的插件库中有，缺失的部分通过自研快速补齐。</p>
<p>这些插件给各组件的核心环节埋点，采集数据上报给Skywalking后，Webapp端的【追踪】页面就能勾勒出丰满完美的请求执行链路；这对架构师理解真实架构，测试同学验证逻辑变更和分析性能损耗，开发同学精准定位问题都非常的有帮助。这里借官方在线Demo的截图一用（抱歉后端程序员，五毛特效都没做出来，丰满画面还请自行脑补）<img src="/images/1704244102-625bfe39f0aa99836aeb3beab71dd2b4.webp" alt="图片"></p>
<p><strong>友情小提示</strong>：移除不用的插件对程序编译打包和减少应用启动耗时很有帮助。</p>
<h5 id="5-3压测稳测"><a href="#5-3压测稳测" class="headerlink" title="5.3压测稳测"></a>5.3压测稳测</h5><p>测试的老师，针对Skywalking Agent端的插件套，设计了丰富的用例，压力测试和稳定性测试的结果都符合预期；每家公司的标准不尽一致，此处不再赘述。</p>
<h5 id="5-4-对接自研的配置中心"><a href="#5-4-对接自研的配置中心" class="headerlink" title="5.4 对接自研的配置中心"></a>5.4 对接自研的配置中心</h5><p>把应用中繁杂的配置交给配置中心来管理是非常必要的，配置中心既能提供启动时的静态配置，又能管理运行期的动态配置，而且外部化配置的机制特别容易满足容器场景下应用的无状态化要求。啰嗦一下，举2个例子：</p>
<ol>
<li>调优时，修改参数的值不用来一遍开发到测试再到生产的发布。</li>
<li>观测系统状态，修改日志配置后不需要来一遍开发到测试再到生产的发布。</li>
</ol>
<p>Skywaling在外接配置中心这块儿，适配了市面中主流的配置中心产品，其中有个人偏爱的Apollo。而公司的配置中心是自研的，需要对接一下，得益于Skywalking提供的模块化管理机制，只用扩展一个模块即可。</p>
<p>在POC阶段，梳理服务端各模块的功能，能感受到其配置化做的不错，配置项很丰富，管控的粒度也很细；在POC阶段几乎没有变动，除了对Webapp模块的外部化配置稍作改造，与配置中心打通以便在配置中心管理 Webapp模块中Ribbon和Hystrix的相关配置。</p>
<h5 id="5-5完善自监控"><a href="#5-5完善自监控" class="headerlink" title="5.5完善自监控"></a>5.5完善自监控</h5><p>自监控是说监控Skywalking系统内各模块的运转情况：</p>
<table>
<thead>
<tr>
<th>组件</th>
<th>监控方案</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>kafka</td>
<td>kafka-manager</td>
<td>它俩是老搭档了</td>
</tr>
<tr>
<td>Agent端</td>
<td>Skywalking</td>
<td>Agent端会发心跳信息给服务端，可在Web中看到Agent的信息</td>
</tr>
<tr>
<td>OAP集群</td>
<td>prometheus</td>
<td>指标还算丰富，感觉缺的可以自己补充</td>
</tr>
<tr>
<td>ES集群</td>
<td>prometheus</td>
<td>指标还算丰富</td>
</tr>
</tbody></table>
<p>完善自监控后的架构如下图所示：</p>
<p><img src="/images/1704244102-bd2706367969deb46a69bf254f9f5570.webp" alt="图片"></p>
<p>自监控.png</p>
<h5 id="5-6-自研Native端SDK"><a href="#5-6-自研Native端SDK" class="headerlink" title="5.6 自研Native端SDK"></a>5.6 自研Native端SDK</h5><p>公司移动端的应用很核心，也要使用链路追踪的功能，社区缺了这块，于是基于Skywalking的协议，移动端的伙伴们自研了一套SDK，弥补了Native端链路数据的缺失，也在后来的秒开页面指标统计中发挥了作用。随着口口相传，不断有团队提出需求、加入建设，所以也在持续迭代中；内容很多，这里先不展开。</p>
<h5 id="5-7-小结"><a href="#5-7-小结" class="headerlink" title="5.7 小结"></a>5.7 小结</h5><p>POC阶段数据量不大，主要是发现系统的各种功能性问题，查缺补漏。</p>
<h3 id="6、推广和优化阶段"><a href="#6、推广和优化阶段" class="headerlink" title="6、推广和优化阶段"></a>6、推广和优化阶段</h3><p>Skywalking的正式推广采用的是城市包围农村的策略；公司的核心应用作为第一批次接入，这个策略有几个好处：</p>
<ol>
<li>核心应用的监管是重中之重，优先级默认最高。</li>
<li>核心应用的上下游应用，会随着大家对Skywalking依赖的加深，而逐步自主接入。</li>
</ol>
<p>当然安全是第一位的，无论新系统多好、多厉害，其引入都需遵守安全稳定的前提要求。既要安全又要快速还要方便，兴总提出了解决方案，在之前的Agent灰度接入的能力之上，发布系统增加了应用Owner<strong>自助式灰度接入和快速卸载</strong>Skywalking Agent的能力，即应用负责人可自主选择哪个应用接入，接入几个实例，倘若遇到问题仅通过重启即可完成快速卸载；这个能力在推广的前期发挥了巨大的作用；毕竟安全第一，信任也需逐步建立。</p>
<p>随着应用的接入、使用，我们也逐渐遇到了一些问题，这里按照时间递增的顺序将问题和优化效果快速的介绍给大家，更多的细节计划在【Skywalking(v8.5.0)优化系列汇总】补充。开始之前有几个事项要说明：</p>
<ol>
<li>下文中提到的数字仅代表我司的情况，标注的Segment数量是处理这个问题的那段时间的情况，并不是说达到这个数量才开始出现这个现象。</li>
<li>这些数值以及当时的现象，受到宿主机配置、Segment数据的大小、存储处理能力等多种因素的影响；请关注调整的过程和效果，无需把数字和现象对号入座哈。</li>
</ol>
<h4 id="6-1-启动耗时："><a href="#6-1-启动耗时：" class="headerlink" title="6.1 启动耗时："></a>6.1 启动耗时：</h4><h6 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h6><p>有同事反馈应用启动变慢，排查发现容器中多数应用启动的总耗时，在接入Skywalking前是2秒，接入后变成了16秒以上，公司很多核心应用的实例数很多，这样的启动损耗对它们的发布影响太大。</p>
<h6 id="优化："><a href="#优化：" class="headerlink" title="优化："></a>优化：</h6><ol>
<li>记录启动耗时并随着其他启动数据上报到服务端，方便查看对比。</li>
<li>优化Kafka Reporter的启动过程，将启动耗时减少了3-4秒。</li>
<li>优化类匹配和增强环节（重点）后，容器中的应用启动总耗时从之前16秒以上降低到了3秒内。</li>
<li>梳理Kafka 启动和上报的过程中，顺带调整了Agent端的数据上报到kafka的分区选择策略，将一个JVM实例中的数据全部发送到同一个的分区中，如此在L1层的聚合就完成了JVM实例级的Metric聚合，需注意调整Kafka分片数来保证负载均衡。</li>
</ol>
<h4 id="6-2-kafka积压-6亿segment-天"><a href="#6-2-kafka积压-6亿segment-天" class="headerlink" title="6.2 kafka积压-6亿segment&#x2F;天"></a>6.2 kafka积压-6亿segment&#x2F;天</h4><h6 id="问题：-1"><a href="#问题：-1" class="headerlink" title="问题："></a>问题：</h6><p>Skywalking OAP端消费慢，导致Kafka中Segment积压。未能达到能用的目标。</p>
<h6 id="优化：-1"><a href="#优化：-1" class="headerlink" title="优化："></a>优化：</h6><p>从Skywalking OAP端的监控指标中没有定位出哪个环节的问题，把服务端单集群拆为双集群，即把 Mixed角色的集群 ，修改为 Receiver 角色（接收和L1聚合）的集群 ，并加入 Aggregation角色（L2聚合）的集群，调整成了双集群模式，数据流传如下图所示：</p>
<p><img src="/images/1704244102-726063b70716295d47168d61f1e856bd.webp" alt="图片"></p>
<p>Receiver角色+Aggregation角色模式的数据流转.png</p>
<h4 id="6-3-kafka积压-8亿segment-天"><a href="#6-3-kafka积压-8亿segment-天" class="headerlink" title="6.3 kafka积压-8亿segment&#x2F;天"></a>6.3 kafka积压-8亿segment&#x2F;天</h4><h6 id="问题：-2"><a href="#问题：-2" class="headerlink" title="问题："></a>问题：</h6><p>Skywalking OAP端消费慢，导致Kafka中Segment积压，监控指标能看出是在ES存储环节慢，未能达到能用的目标。</p>
<h6 id="优化：-2"><a href="#优化：-2" class="headerlink" title="优化："></a>优化：</h6><ol>
<li>优化segment保存到ES的批处理过程，调整BulkProcessor的线程数和批处理大小。</li>
<li>优化metrics保存到ES的批处理过程，调整批处理的时间间隔、线程数、批处理大小以及刷盘时间。</li>
</ol>
<h4 id="6-4-kafka积压-20亿segment-天"><a href="#6-4-kafka积压-20亿segment-天" class="headerlink" title="6.4 kafka积压-20亿segment&#x2F;天"></a>6.4 kafka积压-20亿segment&#x2F;天</h4><h6 id="问题：-3"><a href="#问题：-3" class="headerlink" title="问题："></a>问题：</h6><p>Aggregation集群的实例持续Full GC，Receiver集群通过grpc 给Aggregation集群发送metric失败。未能达到能用的目标。</p>
<h6 id="优化：-3"><a href="#优化：-3" class="headerlink" title="优化："></a>优化：</h6><ol>
<li><p>增加ES节点、分片，效果不明显。</p>
</li>
<li><p>ES集群有压力，但无法精准定位出是什么数据的什么操作引发的。采用分治策略，尝试将数据拆分，从OAP服务端读写逻辑调整，将ES单集群拆分为 trace集群 和 metric集群；之后，ES的监控指标明确看出是metric集群读写压力太大。</p>
</li>
<li><p>优化Receiver集群metric的L1聚合，完成1分钟的数据聚合后，再提交给Aggregation集群做L2聚合。</p>
</li>
<li><p>Aggregation集群metric的L2 聚合是基于db实现的，会有 空读-写-再读-累加-更新写 这样的逻辑，每次写都会有读，调整逻辑是：提升读的性能，优化缓存机制减少读的触发；调整间隔，避免触发累加和更新。</p>
</li>
<li><p>将metric批量写ES操作调整成BulkProcessor。</p>
</li>
<li><p>ES的metric集群 使用SSD存储，增加节点数和分片数。</p>
</li>
</ol>
<p>这一次的持续优化具有里程碑式的意义，Kafka消费很快，OAP各机器的Full GC没了，ES的各方面指标也很稳定；接下来开始优化查询，提升易用性。</p>
<h4 id="6-5-trace查询慢-25亿segment-天"><a href="#6-5-trace查询慢-25亿segment-天" class="headerlink" title="6.5 trace查询慢-25亿segment&#x2F;天"></a>6.5 trace查询慢-25亿segment&#x2F;天</h4><h6 id="问题：-4"><a href="#问题：-4" class="headerlink" title="问题："></a>问题：</h6><p>Webapp的【追踪】页中查询都很慢，保存了15天的数据，按照traceId查询耗时要20多秒，按照条件查询trace列表的耗时更糟糕；这给人的感受就是“一肚子墨水倒不出来”，未能达到好用的目标。</p>
<h6 id="优化：-4"><a href="#优化：-4" class="headerlink" title="优化："></a>优化：</h6><p>ES查询优化方面的信息挺多，但通过百度筛选出解决此问题的有效方案，就要看咱家爱犬的品种了；当时搜集整理了并尝试了N多优化条款，可惜没有跟好运偶遇，结论是颜值不可靠。言归正传，影响读写性能的基本要素有3个：读写频率，数据规模，硬件性能；trace的情况从这三个维度来套一套模板：</p>
<table>
<thead>
<tr>
<th>要素</th>
<th>trace的情况</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>读写频率</td>
<td>宏观来看是写多读少的状况</td>
<td></td>
</tr>
<tr>
<td>数据规模</td>
<td>按照每天50亿个segment来算，半个月是750亿，1个月是1500亿。</td>
<td></td>
</tr>
<tr>
<td>硬件性能</td>
<td>普通硬盘速度一般</td>
<td></td>
</tr>
</tbody></table>
<p>这个分析没有得出具有指导意义的结论，读写频率这里粒度太粗，用户的使用情况跟时间也有紧密的关系，情况大概是：</p>
<ol>
<li>当天的数据是读多写多（当天不断有新数据写入，基于紧急响应的需求，问题出现时可能是近实时的排查处理）。</li>
<li>前一天的数据是读多写少（一般也会有问题隔天密集上报的情况，0点后会有前一天数据延迟到达的情况）。</li>
<li>再早的话无新数据写入，数据越早被读的概率也越小。</li>
</ol>
<p>基于以上分析，增加时间维度并细化更多的参考因素后，分析模型变成了这样：</p>
<table>
<thead>
<tr>
<th>要素</th>
<th>当天</th>
<th>当天-1</th>
<th>当天-2 ~ 当天-N</th>
</tr>
</thead>
<tbody><tr>
<td>写频率</td>
<td>多</td>
<td>少</td>
<td>无</td>
</tr>
<tr>
<td>读（查询）频率</td>
<td>多</td>
<td>多</td>
<td>少</td>
</tr>
<tr>
<td>读响应速度要求</td>
<td>快</td>
<td>快</td>
<td>慢点也行</td>
</tr>
<tr>
<td>数据规模</td>
<td>50亿</td>
<td>50亿</td>
<td>50亿* (N-2)</td>
</tr>
<tr>
<td>宿主机性能要求</td>
<td>高</td>
<td>高</td>
<td>次高</td>
</tr>
<tr>
<td>硬盘速度要求</td>
<td>高(SSD)</td>
<td>高(SSD)</td>
<td>次高(机械)</td>
</tr>
<tr>
<td>硬件成本</td>
<td>高</td>
<td>高</td>
<td>次高</td>
</tr>
<tr>
<td>期望成本</td>
<td>低</td>
<td>低</td>
<td>低</td>
</tr>
</tbody></table>
<p>从上表可以看出，整体呈现出hot-warm数据架构的需求之势，近1-2天为hot数据，之前的为warm数据；恰好ES7提供了hot-warm架构支持，按照hot-warm改造后架构如下图所示：</p>
<p><img src="/images/1704244102-59de10b2791e8c2c93d814b2dfef3276.webp" alt="图片"></p>
<p>hot-warm架构.png</p>
<ol>
<li><p>对 trace集群进行hot-warm架构调整，查询耗时从20多秒变成了2-3秒，效果是非常明显的。</p>
</li>
<li><p>ES启用公司出品的ZSTD压缩算法，空间压缩效果不错。</p>
</li>
<li><p>从查询逻辑进一步调整，充分利用ES的数据分片、路由机制，把全量检索调整为精准检索，即降低检索时需要扫描的数据量，把2-3秒优化到毫秒。</p>
</li>
</ol>
<p>这里要炫一个5毛特效，这套机制下，Segment数据即使是保留半年的，按照TraceId查询的耗时也是毫秒。</p>
<p>至此完成了<strong>查询千亿级Trace数据只要毫秒级耗时</strong>的阶段性优化。</p>
<h4 id="6-6-仪表盘和拓扑查询慢"><a href="#6-6-仪表盘和拓扑查询慢" class="headerlink" title="6.6 仪表盘和拓扑查询慢"></a>6.6 仪表盘和拓扑查询慢</h4><h6 id="问题：-5"><a href="#问题：-5" class="headerlink" title="问题："></a>问题：</h6><p>Webapp中的【拓扑】页，在开始只有几十个应用的时候，虽然很慢，但还是能看到数据，随着应用增多后，【拓扑】页面数据请求一直是超时(配置的60s超时)的，精力有限，先通过功能降级把这个页面隐藏了；【仪表盘】的指标查询也非常的慢，未能达到好用的目标。</p>
<h6 id="优化：-5"><a href="#优化：-5" class="headerlink" title="优化："></a>优化：</h6><p>Webapp中的【仪表盘】页和【拓扑】页是对Skywalking里metric数据的展现，metric数据同trace数据一样满足hot-warm的特征。</p>
<ol>
<li>metric集群采用hot-warm架构调整，之后仪表盘中的查询耗时也都减小为毫秒级。</li>
<li>【拓扑】页接口依然是超时(60s)，对拓扑这里做了几个针对性的调整：</li>
</ol>
<ul>
<li><p>把内部的循环调用合并，压缩调用次数。</p>
</li>
<li><p>去除非必要的查询。</p>
</li>
<li><p>拆分隔离通用索引中的数据，避免互相干扰。</p>
</li>
<li><p>全量检索调整为精准检索，即降低检索时需要扫描的数据量。</p>
</li>
</ul>
<p>至此完成了 <strong>【拓扑】页数据查询毫秒级耗时</strong>的阶段性优化。</p>
<h4 id="6-7-小结"><a href="#6-7-小结" class="headerlink" title="6.7 小结"></a>6.7 小结</h4><p>Skywalking调优这个阶段，恰逢上海疫情封城，既要为生存抢菜，又要翻阅学习着各种ES原理、调优的文档资料，一行一行反复的品味思考Skywalking相关的源码，尝试各种方案去优化它，梦中都在努力提升它的性能。疫情让很多人变得焦虑烦躁，但以我的感受来看在系统的性能压力下疫情不值一提。<strong>凡事贵在坚持</strong>，时间搞定了诸多困难，调优的效果是很显著的。</p>
<p>可能在在_业务价值驱动_的价值观中这些技术优化不产生直接业务价值，顶多是五毛特效，但从其他维度来看它价值显著：</p>
<ul>
<li>对个人来说，技术有提升。</li>
<li>对团队来说，练兵加强配合，协作加深友情；尤其要感谢科科老师这段时间的鼎力支持！</li>
<li>对公司来说，易用性的提升将充分发挥Skywalking的价值，在问题发生时，给到同事们切实、高效的帮助，使得问题可以被快速响应。须知战争拼的是保障。</li>
</ul>
<p>上一段让我回想起上海疫情那段缺吃少喝、压力很大的时光，确实是有点上头式的真情流露，保留下来就当对上海封城的见证吧。这期间其实也是有考虑过其他的2个方案的：</p>
<ol>
<li>使用降低采样率的兜底方案；但为了得到更准确的指标数据，以及后续其他的规划而坚持了全采样。</li>
<li>采用ClickHouse优化存储；因为公司有定制优化的ES版本，所以就继续在ES上做存储优化，刚好借此机会验证一下。后续【全链路结构化日志】的存储会使用ClickHouse。</li>
</ol>
<p>这个章节将内容聚焦在落地推广时期技术层面的准备和调优，未描述团队协调、推广等方面的情况；因每个公司情况不同，所以并未提及；但其实对多数公司来说，有时项目的推广比技术本身可能难度更大，这个项目也遇到过一些困难，推广是既靠能力又靠颜值，比如咱家的PM-中英老师的脸都快刷秃噜皮儿了<img src="/images/1704244102-ede14cfbe0c5d5eb6a3155e0b57f7f45.webp" alt="图片">…  以后有机会再跟大家探讨吧。</p>
<h3 id="7、Skywalking的后续规划"><a href="#7、Skywalking的后续规划" class="headerlink" title="7、Skywalking的后续规划"></a>7、Skywalking的后续规划</h3><p>H5、Native以及后端应用还在持续接入中，相应的SDK也在持续的迭代；目前正在设计规划【全链路业务状态追踪】和【全链路结构化日志追踪】，感兴趣的同学可以关注加好友讨论。</p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch集群配置解析-master节点配置组合</title>
    <url>/2024/01/03/Elasticsearch%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE%E8%A7%A3%E6%9E%90-master%E8%8A%82%E7%82%B9%E9%85%8D%E7%BD%AE%E7%BB%84%E5%90%88/</url>
    <content><![CDATA[<h3 id="ES各种节点的分工"><a href="#ES各种节点的分工" class="headerlink" title="ES各种节点的分工"></a>ES各种节点的分工</h3><p><strong>1. 客户端节点</strong><br>　　当主节点和数据节点配置都设置为false的时候，该节点只能处理路由请求，处理搜索，分发索引操作等，从本质上来说该客户节点表现为智能负载平衡器。独立的客户端节点在一个比较大的集群中是非常有用的，他协调主节点和数据节点，客户端节点加入集群可以得到集群的状态，根据集群的状态可以直接路由请求。</p>
<p><strong>2. 数据节点</strong><br>　　数据节点主要是存储索引数据的节点，主要对文档进行增删改查操作，聚合操作等。数据节点对cpu，内存，io要求较高， 在优化的时候需要监控数据节点的状态，当资源不够的时候，需要在集群中添加新的节点。</p>
<p><strong>3. 主节点</strong><br>　 主资格节点的主要职责是和集群操作相关的内容，如创建或删除索引，跟踪哪些节点是群集的一部分，并决定哪些分片分配给相关的节点。稳定的主节点对集群的健康是非常重要的，默认情况下任何一个集群中的节点都有可能被选为主节点，索引数据和搜索查询等操作会占用大量的cpu，内存，io资源，为了确保一个集群的稳定，分离主节点和数据节点是一个比较好的选择。</p>
<p><strong>4.建议</strong><br>　　在一个生产集群中我们可以对这些节点的职责进行划分，建议集群中设置3台以上的节点作为master节点，这些节点只负责成为主节点，维护整个集群的状态。再根据数据量设置一批data节点，这些节点只负责存储数据，后期提供建立索引和查询索引的服务，这样的话如果用户请求比较频繁，这些节点的压力也会比较大，所以在集群中建议再设置一批client节点(node.master: false node.data: false)，这些节点只负责处理用户请求，实现请求转发，负载均衡等功能。<br>在生产环境下，如果不修改elasticsearch节点的角色信息，在高数据量，高并发的场景下集群容易出现脑裂等问题。<br>默认情况下，elasticsearch 集群中每个节点都有成为主节点的资格，也都存储数据，还可以提供查询服务。这些功能是由两个属性控制的。</p>
<p>二、如何实现分布式</p>
<p>1、分片</p>
<p>Elasticsearch 也是会对数据进行切分，同时每一个分片会保存多个副本，其原因是为了保证分布式环境下的高可用，同时也扩大了存储空间。es也是master-slave架构，在 es 中，节点是对等的，节点间会通过自己的一些规则选取集群的 Master，Master 会负责集群状态信息的改变，并同步给其他节点。值得注意的是，只有建立索引和类型需要经过 Master，数据的写入有一个简单的 Routing 规则，可以 Route 到集群中的任意节点，所以数据写入压力是分散在整个集群的。</p>
<p>具体就是你先建立一个索引，这个索引可以拆分成多个 shard，每个 shard 存储部分数据。这个shard 的数据实际是有多个备份，就是说每个 shard 都有一个 primary shard，负责写入数据，但是还有几个 replica shard。primary shard 写入数据之后，会将数据同步到其他几个 replica shard 上去。</p>
<p><img src="/images/1704252501-c001a28963e19d1e9619d08abd9c919b.png" alt="在这里插入图片描述"><br>通过这个 replica 的方案，每个 shard 的数据都有多个备份，如果某个机器宕机了，没关系啊，还有别的数据副本在别的机器上呢。高可用了吧。</p>
<p>es 集群多个节点，会自动选举一个节点为 master 节点，这个 master 节点其实就是干一些管理的工作的，比如维护索引元数据、负责切换 primary shard 和 replica shard 身份等。要是 master 节点宕机了，那么会重新选举一个节点为 master 节点。如果是非 master节点宕机了，那么会由 master 节点，让那个宕机节点上的 primary shard 的身份转移到其他机器上的 replica shard。接着你要是修复了那个宕机机器，重启了之后，master 节点会控制将缺失的 replica shard 分配过去，同步后续修改的数据之类的，让集群恢复正常。说得更简单一点，就是说如果某个非 master 节点宕机了。那么此节点上的 primary shard 不就没了。那好，master 会让 primary shard 对应的 replica shard（在其他机器上）切换为 primary shard。如果宕机的机器修复了，修复后的节点也不再是 primary shard，而是 replica shard。</p>
<p>其实上述就是 ElasticSearch 作为分布式搜索引擎最基本的一个架构设计。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">.</span> <span class="string">node.master</span></span><br><span class="line"><span class="number">2</span><span class="string">.</span> <span class="string">node.data</span></span><br><span class="line"><span class="string">默认情况下这两个属性的值都是true</span></span><br></pre></td></tr></table></figure>

<p>node.master：这个属性表示节点是否具有成为主节点的资格,注意：此属性的值为true，并不意味着这个节点就是主节点。因为真正的主节点，是由多个具有主节点资格的节点进行选举产生的。所以，这个属性只是代表这个节点是不是具有主节点选举资格</p>
<p>node.data：这个属性表示节点是否存储数据。</p>
<h3 id="五种组合"><a href="#五种组合" class="headerlink" title="五种组合"></a>五种组合</h3><p><strong>组合1.</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">node.ingest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>这种组合表示这个节点既有成为主节点的资格，又可以存储数据，还可以作为预处理节点，这个时候如果某个节点被选举成为了真正的主节点，那么他还要存储数据，这样对于这个节点的压力就比较大了。<br>elasticsearch 默认是：每个节点都是这样的配置，在测试环境下这样做没问题。实际工作中建议不要这样设置，这样相当于 主节点 和 数据节点 的角色混合到一块了。</p>
<p><strong>组合2.</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">node.master:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">node.ingest:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>这种组合表示这个节点没有成为主节点的资格，也就不参与选举，只会存储数据。这个节点我们称为 data(数据)节点。在集群中需要单独设置几个这样的节点负责存储数据。后期提供存储和查询服务</p>
<p><strong>组合3.</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">node.master:</span> <span class="literal">true</span> </span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">node.ingest:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>这种组合表示这个节点不会存储数据，有成为主节点的资格，可以参与选举，有可能成为真正的主节点。这个节点我们称为master节点</p>
<p><strong>组合4.</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">node.master:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">node.ingest:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>这种组合表示这个节点即不会成为主节点，也不会存储数据，这个节点的意义是作为一个 client(客户端)节点，主要是针对海量请求的时候可以进行负载均衡。在新版 ElasticSearch5.x 之后该节点称之为：coordinate 节点，其中还增加了一个叫：ingest 节点，用于预处理数据（索引和搜索阶段都可以用到），当然，作为一般应用是不需要这个预处理节点做什么额外的预处理过程，那么这个节点和我们称之为 client 节点之间可以看做是等同的，我们在代码中配置访问节点就都可以配置这些 ingest 节点即可</p>
<p><strong>组合5.</strong></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">node.master:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">node.data:</span> <span class="literal">false</span> </span><br><span class="line"><span class="attr">node.ingest:</span> <span class="literal">false</span> </span><br></pre></td></tr></table></figure>

<p>这种配置为纯查询模式，节点只可以接受查询，对于查询数据量比较大的集群，配置这种节点可以有效的保护数据节点，防止datanode内存溢出。这种模式比模式四更节省资源，为纯查询模式！</p>
<p>总结<br>　　默认情况下，每个节点都有成为主节点的资格，也会存储数据，还会处理客户端的请求。在一个生产集群中我们可以对这些节点的职责进行划分。</p>
<p>建议集群中设置 3台 以上的节点作为 master 节点【node.master: true node.data: false node.ingest:false】，这些节点只负责成为主节点，维护整个集群的状态。</p>
<p>再根据数据量设置一批 data节点【node.master: false node.data: true node.ingest:false】，这些节点只负责存储数据，后期提供建立索引和查询索引的服务，这样的话如果用户请求比较频繁，这些节点的压力也会比较大<br>　　<br>所以在集群中建议再设置一批 ingest 节点也称之为 client 节点<br>【<br>node.master: false<br>node.data: false<br>node.ingest:true<br>】<br>或者<br>【<br>node.master: false<br>node.data: false<br>node.ingest:false<br>】<br>这些节点只负责处理用户请求，实现请求转发，负载均衡等功能。</p>
<p>master节点：普通服务器即可(CPU 内存 消耗一般)<br>data 节点：主要消耗磁盘，内存<br>client | ingest 节点：普通服务器即可(如果要进行分组聚合操作的话，建议这个节点内存也分配多一点)</p>
<p>配置文件中配置的注释事项<br>脑裂：</p>
<p>如果网络的故障导致一个集群被划分成两片，每片都有多个node，以及一个master。因为master是维护集群状态，以及shard的分配。如果出现了两个master，可能导致数据破损。</p>
<p>discovery.zen.minimum_master_nodes的作用是只有足够的master候选节点时，才可以选举出一个master。该参数必须设置为集群中master候选节点的quorum数量。</p>
<p>quorum的算法&#x3D;master候选节点数量&#x2F;2+1 也就是至少有（master候选节点数量&#x2F;2+1 ）参与投票选举</p>
<p>举例：</p>
<p>1、如果有10个节点，都是data node，也是master的候选节点。则quorum&#x3D;10&#x2F;2+1&#x3D;6</p>
<p>2、如果有3个master候选节点，100个数据节点。则quorum&#x3D;3&#x2F;2+1&#x3D;2</p>
<p>3、如果有2个节点，都是data node，也是master的候选节点。则quorum&#x3D;2&#x2F;2+1&#x3D;2（有问题）</p>
<p>如果其中一个节点挂了，那么master的候选节点只有一个，无法满足quorum数量。即无法选举出master。此时只能将quorum设置成1，但是设置为1有可能出现脑裂。</p>
<p>总结：一般es集群的节点至少要有3个，quorum设置为2</p>
<p>注意：在安装elk的时候es的版本要跟kibana的版本一致，否则会出现问题。</p>
]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch究竟要设置多少分片数</title>
    <url>/2024/01/03/Elasticsearch%E7%A9%B6%E7%AB%9F%E8%A6%81%E8%AE%BE%E7%BD%AE%E5%A4%9A%E5%B0%91%E5%88%86%E7%89%87%E6%95%B0/</url>
    <content><![CDATA[<h1 id="0、引言"><a href="#0、引言" class="headerlink" title="0、引言"></a><strong>0、引言</strong></h1><p>本文翻译自Elasticsearch20170918热乎的官方博客，原作者：Christian Dahlqvist。 在构建Elasticsearch集群的初期如果集群分片设置不合理，可能在项目的中后期就会出现性能问题。</p>
<p>Elasticsearch是一个非常通用的平台，支持各种各样的用例，并且为数据组织和复制策略提供了巨大灵活性。这种灵活性使得作为ELK新手的你将数据组织成索引和分片变得困难。虽然不一定会在首次启动时出现问题，但由于数据量随时间的推移，可能会导致性能问题。集群所拥有的数据越多，纠正问题就越困难，甚至有时可能需要重新索引大量数据。</p>
<p>当我们遇到遭遇性能问题的用户时，可以追溯到关于数据索引的数据和群集数量的问题并不罕见。 对于涉及multi-tenancy或使用基于时间的索引的用户尤其如此。 在与用户讨论这个问题时（会议、论坛形式），引申出的一些最常见的问题是：</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1）“我应该有多少个分片？”</span><br><span class="line">2）“我的分片应该有多大”？</span><br></pre></td></tr></table></figure>
</blockquote>
<p>这篇博客文章旨在帮助您回答这些问题，并为使用基于时间的索引的使用案例（ 日志记录或安全分析 ）提供实用的指导。</p>
<h1 id="1、什么是分片？"><a href="#1、什么是分片？" class="headerlink" title="1、什么是分片？"></a><strong>1、什么是分片？</strong></h1><p>在开始之前，让我们约定文章中用到的一些概念和术语。 </p>
<p>Elasticsearch中的数据组织成索引。每一个索引由一个或多个分片组成。每个分片是Luncene索引的一个实例，你可以把实例理解成自管理的搜索引擎，用于在Elasticsearch集群中对一部分数据进行索引和处理查询。</p>
<p>【刷新】当数据写入分片时，它会定期地发布到磁盘上的新的不可变的Lucene段中，此时它可用于查询。——这被称为刷新。更详细的解读请参考： <a href="http://t.cn/R05e3YR">http://t.cn/R05e3YR</a></p>
<p>【合并】随着分段数（segment）的增长，这些segment被定期地整合到较大的segments。 这个过程被称为合并（merging）。</p>
<p>由于所有段都是不可变的， 因为新的合并段需要创建，旧的分段将被删除 ，这意味着所使用的磁盘空间通常在索引时会波动。 合并可能资源相当密集，特别是在磁盘I&#x2F;O方面。</p>
<p>分片是Elasticsearch在集群周围分发数据的单位。 Elasticsearch在重新平衡数据时 （例如 发生故障后） 移动分片的速度 取决于分片的大小和数量以及网络和磁盘性能。</p>
<p>提示：避免有非常大的分片，因为大的分片可能会对集群从故障中恢复的能力产生负面影响。 对于多大的分片没有固定的限制，但是分片大小为50GB通常被界定为适用于各种用例的限制。</p>
<p><strong>2、索引有效期（ retention period ）</strong></p>
<p>由于段是不可变的，更新文档需要Elasticsearch首先查找现有文档，然后将其标记为已删除，并添加更新的版本。删除文档还需要找到文档并将其标记为已删除。因此，删除的文档将继续占据磁盘空间和一些系统资源，直到它们被合并，这将消耗大量的系统资源。</p>
<p>Elasticsearch允许从文件系统直接删除完整索引，而不必明确地必须单独删除所有记录。这是迄今为止从Elasticsearch删除数据的最有效的方式。</p>
<p><strong><em>提示：</em><strong>尽可能使用基于时间的索引来管理数据。根据保留期（retention period，可以理解成有效期）将数据分组。基于时间的索引还可以轻松地随时间改变主分片和副本分片的数量（以为要生成的下一个索引进行更改）。这简化了适应不断变化的数据量和需求。</strong>3、索引和分片不是空闲的？</strong></p>
<p>【集群状态】对于每个Elasticsearch索引，其映射和状态的信息都存储在集群状态。 这些集群状态信息保存在内存中以便快速访问。 因此，如果在集群中拥有大量索引，可能导致大的集群状态（特别是如果映射较大）。 所有更新集群状态操作为了在集群中保证一致性，需要通过单个线程完成，因此更新速度将变慢。</p>
<p>**<em>提示</em>**：为了减少索引数量并避免大的乃至非常庞大的映射，请考虑将相同索引结构的数据存储在相同的索引中，而不是基于数据的来源将数据分割成独立的索引。 在每个索引的索引数量和映射大小之间找到一个很好的平衡很重要。**</p>
<p>每个分片都有数据需要保存在内存中并使用堆空间。 这包括在分片级别保存信息的数据结构，也包括在段级别的数据结构，以便定义数据驻留在磁盘上的位置。 这些数据结构的大小不是固定的，并且将根据用例而有所不同。</p>
<p>然而，段相关开销的一个重要特征是它与分段的大小不成正比。 这意味着与较小的段相比，较大的段的每个数据量具有较少的开销，且这种差异很大。</p>
<p>【堆内存的重要性】为了能够每个节点存储尽可能多的数据，重要的是尽可能多地管理堆内存使用量并减少其开销。 节点拥有的堆空间越多，它可以处理的数据和分片越多。</p>
<p>因此，索引和分片从集群的角度看待不是空闲的，因为每个索引和分片都有一定程度的资源开销。</p>
<p>**<em>提示1</em>**：小分片会导致小分段(segment)，从而增加开销。目的是保持平均分片大小在几GB和几十GB之间。对于具有基于时间的数据的用例，通常看到大小在20GB和40GB之间的分片。</p>
<p>**<em>提示2</em>**：由于每个分片的开销取决于分段数和大小，通过强制操作迫使较小的段合并成较大的段可以减少开销并提高查询性能。一旦没有更多的数据被写入索引，这应该是理想的。请注意，这是一个消耗资源的（昂贵的）操作，较为理想的处理时段应该在非高峰时段执行。</p>
<p>**<em>提示3</em>**：您可以在集群节点上保存的分片数量与您可用的堆内存大小成正比，但这在Elasticsearch中没有的固定限制。 一个很好的经验法则是：确保每个节点的分片数量保持在低于每1GB堆内存对应集群的分片在20-25之间。 因此，具有30GB堆内存的节点最多可以有600-750个分片，但是进一步低于此限制，您可以保持更好。 这通常会帮助群体保持处于健康状态。</p>
<p><strong>4、分片的大小如何影响性能？</strong></p>
<p>在Elasticsearch中，每个查询在每个分片的单个线程中执行。然而，可以并行处理多个分片，并可以在相同分片上执行多个查询和聚合。</p>
<p>【小分片的利弊】这意味着，在不涉及高速缓存时，最小查询延迟将取决于数据、查询的类型、分片的大小。查询大量小分片将使得每个分片的处理速度更快，但是随着更多的任务需要按顺序排队和处理，它不一定要比查询较小数量的更大的分片更快。如果有多个并发查询，则有很多小碎片也会降低查询吞吐量。</p>
<p>提示：从查询性能角度确定最大分片大小的最佳方法是使用逼真的数据和查询进行基准测试（真实数据而非模拟数据）。 始终使用查询和索引负载进行基准测试，代表节点在生产中需要处理的内容，因为单个查询的优化可能会产生误导性的结果。</p>
<p><strong>5、如何管理分片大小？</strong></p>
<p>当使用基于时间的索引时，每个索引传统上都与固定的时间段相关联。 每日索引非常普遍，经常用于持有时间区间短或每日量大的数据。 这些允许数据期限期间以良好的粒度进行管理，并且可以方便地对每天更换调整volumes。</p>
<p>时间周期长的数据，特别是如果每日不保存每天的索引数据，则通常会使用每周或每月的保存的碎片大小的增加。 这减少了随着时间的流逝需要存储在群集中的索引和碎片数量大小（直译有点费劲此处）。</p>
<p>提示：如果使用固定期限的时间索引数据，可以<strong>根据时间周期</strong>和<strong>预期数据量</strong>调整所涵盖的时间范围，以达到目标分片大小。</p>
<p>【均匀更新&amp;快速变化的索引数据对比】具有固定时间间隔的基于时间的索引在数据量合理预测并且变化缓慢的情况下工作良好。 如果索引率可以快速变化，则很难保持均匀的目标分片大小。</p>
<p>为了能够更好地处理这种情况，推出了<strong>Rollover</strong>和<strong>Shrink API。</strong> 这些增加了如何管理索引和分片的灵活性，尤其适用于基于时间的索引。</p>
<p>此处省略了 Rollover和Shrink API的介绍。（建议查询官网补齐概念再深入）</p>
<p><strong>6、结论</strong></p>
<p>这篇博客文章提供了有关如何在Elasticsearch中最好地管理数据的提示和实用指南。 如果您有兴趣了解更多，推荐阅读Google搜索 “Elasticsearch: the definitive guide” （有点旧，值得阅读）。</p>
<p>然而，关于如何最好地在索引和分片上分发数据的许多决策将取决于用例细节，有时可能难以确定如何最佳地应用可用的建议。</p>
<p>文章提及的几个核心建议清单如下，以回答文章开头的提问。</p>
<blockquote>
<p>1） “我应该有多少个分片？</p>
<p>” 答： 每个节点的分片数量保持在低于每1GB堆内存对应集群的分片在20-25之间。</p>
<p> 2） “我的分片应该有多大”？ </p>
<p>答：分片大小为50GB通常被界定为适用于各种用例的限制。</p>
</blockquote>
]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>ES节点角色详解</title>
    <url>/2024/01/04/ES%E8%8A%82%E7%82%B9%E8%A7%92%E8%89%B2%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>ES如果采用单节点部署，不用考虑什么节点角色，默认就好。但是在大规模的ES集群中，一定要根据服务器配置，数据冷热，并发情况等合理配置节点的角色，才能让ES集群节点更好的协调合作，对外提供稳定的服务。</p>
<hr>
<h2 id="一、ES节点有哪些角色？"><a href="#一、ES节点有哪些角色？" class="headerlink" title="一、ES节点有哪些角色？"></a>一、ES节点有哪些角色？</h2><p>ES节点有如下角色：</p>
<ul>
<li>​<code>​master​</code>​ 主节点</li>
<li>​<code>​data​</code>​ 数据节点</li>
<li>​<code>​data_content​</code>​ 内容数据节点</li>
<li>​<code>​data_hot​</code>​ 热点数据节点</li>
<li>​<code>​data_warm​</code>​ 暖数据节点</li>
<li>​<code>​data_cold​</code>​ 冷数据节点</li>
<li>​<code>​data_frozen​</code>​ 冻结数据节点</li>
<li>​<code>​ingest​</code>​ 摄取节点</li>
<li>​<code>​ml​</code>​ 机器学习节点</li>
<li>​<code>​remote_cluster_client​</code>​ 远程集群客户端节点</li>
<li>​<code>​transform​</code>​ 转换节点</li>
<li>​<code>​voting_only​</code>​ 仅投票节点</li>
<li>​<code>​coordinating​</code>​ 仅协调节点</li>
</ul>
<p>注意⚠️：<br>1、如果你设置了 node.roles，则节点只会分配你指定的角色。 如果不设置 node.roles，节点将被分配以上所有角色（除了voting_only 和coordinating角色例外）。<br>2、节点不等同于服务器，一个服务器上可以部署多个节点。<br>3、启动一个Elasticsearch 实例时，都在启动一个节点。 连接节点的集合称为集群。<br>4、集群中的每个节点都可以处理 HTTP 和传输流量。 传输层专门用于节点之间的通信； HTTP 层由 REST 客户端使用。<br>5、所有节点都知道集群中的所有其他节点，并且可以将客户端请求转发到适当的节点。</p>
<h2 id="二、怎么设置节点的角色"><a href="#二、怎么设置节点的角色" class="headerlink" title="二、怎么设置节点的角色"></a>二、怎么设置节点的角色</h2><p>只需要在elasticsearch.yml通过node.roles属性设置即可</p>
<p>可以同时指定多个角色</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data, master, voting_only ]</span><br></pre></td></tr></table></figure>

<p><strong>注意⚠️：</strong><br>一个ES集群中，必须有以下角色：</p>
<ul>
<li>master</li>
<li>data_content and data_hot<br>OR<br>data</li>
</ul>
<h2 id="三、节点角色介绍"><a href="#三、节点角色介绍" class="headerlink" title="三、节点角色介绍"></a>三、节点角色介绍</h2><h3 id="1、master-主节点"><a href="#1、master-主节点" class="headerlink" title="1、master 主节点"></a>1、master 主节点</h3><p><strong>功能说明：</strong><br>主节点负责轻量级集群范围的操作，例如创建或删除索引、跟踪哪些节点是集群的一部分<br>以及决定将哪些分片分配给哪些节点。</p>
<p>任何不是仅投票节点的主合格节点都可以通过主选举过程选举成为主节点。</p>
<p>主节点必须有一个path.data目录，其内容在重启后仍然存在，就像数据节点一样，因为这是<br>存储集群元数据的地方。集群元数据描述了如何读取存储在数据节点上的数据，因此如果丢失，<br>则无法读取存储在数据节点上的数据。</p>
<p>如果小型或轻负载集群的主节点具有其他角色和职责，则其可能运行良好，但是一旦您的集群包含多个节点，使用专用的主节点通常是有意义的。</p>
<p><strong>角色配置：</strong><br>要创建一个专用的主节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ master ]</span><br></pre></td></tr></table></figure>

<h3 id="2、voting-only-仅投票节点"><a href="#2、voting-only-仅投票节点" class="headerlink" title="2、voting_only 仅投票节点"></a>2、voting_only 仅投票节点</h3><p><strong>功能说明：</strong><br>只能参与主节点的投票选举环节，但是自己不能被选举为master。</p>
<p>高可用性 (HA) 集群需要至少三个符合主节点的节点，其中至少两个不是仅投票节点。这样即使其中一个节点发生故障，集群也能够选举出一个主节点。<br>所有符合主节点的节点，包括仅投票节点，都需要相当快的持久存储以及与集群其余部分的可靠且低延迟的网络连接，因为它们处于发布集群状态更新的关键路径上 。</p>
<p><strong>角色配置：</strong><br>要创建仅投票节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ master, voting_only ]</span><br></pre></td></tr></table></figure>

<p>即是数据节点，也是仅投票节点。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data, master, voting_only ]</span><br></pre></td></tr></table></figure>

<p><strong>注意⚠️：</strong><br>只有具有master角色的节点才能被标记为具有 voting_only角色。</p>
<h3 id="3、data-数据节点"><a href="#3、data-数据节点" class="headerlink" title="3、data 数据节点"></a>3、data 数据节点</h3><p><strong>功能说明：</strong><br>数据节点保存包含已编入索引的文档的分片。数据节点处理数据相关操作，如 CRUD、搜索和聚合。<br>这些操作是 I&#x2F;O 密集型、内存密集型和 CPU 密集型的。监控这些资源并在它们过载时添加更多数据节点非常重要。<br>拥有专用数据节点的主要好处是主角色和数据角色的分离。</p>
<p>在多层部署架构，您可以使用专门的数据角色分配数据节点到指定等级：<br><strong>data_content，data_hot，data_warm， data_cold，或data_frozen。</strong><br>一个节点可以属于多个层，但具有其中一个专用数据角色的节点不能具有通用data角色。</p>
<p>作用：<br>1、保存索引数据<br>2、处理数据相关操作，如 CRUD、搜索和聚合。</p>
<p><strong>角色配置：</strong><br>要创建专用数据节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data ]</span><br></pre></td></tr></table></figure>

<h3 id="4、data-content-内容数据节点"><a href="#4、data-content-内容数据节点" class="headerlink" title="4、data_content 内容数据节点"></a>4、data_content 内容数据节点</h3><p>内容数据节点容纳用户创建的内容。它们支持 CRUD、搜索和聚合等操作。<br>要创建专用内容节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data_content ]</span><br></pre></td></tr></table></figure>

<h3 id="5、data-hot-热点数据节点"><a href="#5、data-hot-热点数据节点" class="headerlink" title="5、data_hot 热点数据节点"></a>5、data_hot 热点数据节点</h3><p>热数据节点在进入 Elasticsearch 时存储时间序列数据。热层必须快速读取和写入，并且需要更多的硬件资源（例如 SSD 驱动器）。<br>要创建专用热节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data_hot ]</span><br></pre></td></tr></table></figure>

<h3 id="6、data-warm-暖数据节点"><a href="#6、data-warm-暖数据节点" class="headerlink" title="6、data_warm 暖数据节点"></a>6、data_warm 暖数据节点</h3><p>暖数据节点存储不再定期更新但仍在查询的索引。查询量的频率通常低于索引处于热层时的频率。性能较低的硬件通常可用于此层中的节点。</p>
<p>要创建专用的暖节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data_warm]</span><br></pre></td></tr></table></figure>

<h3 id="7、data-cold-冷数据节点"><a href="#7、data-cold-冷数据节点" class="headerlink" title="7、data_cold 冷数据节点"></a>7、data_cold 冷数据节点</h3><p>冷数据节点存储访问频率较低的只读索引。此层使用性能较低的硬件，并且可以利用可搜索的快照索引来最小化所需的资源。</p>
<p>要创建专用冷节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data_cold]</span><br></pre></td></tr></table></figure>

<h3 id="8、data-frozen-冻结数据节点"><a href="#8、data-frozen-冻结数据节点" class="headerlink" title="8、data_frozen 冻结数据节点"></a>8、data_frozen 冻结数据节点</h3><p>冻结层 专门存储部分安装的索引。我们建议您在冻结层中使用专用节点。<br>要创建专用的冻结节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ data_frozen]</span><br></pre></td></tr></table></figure>

<h3 id="9、ingest-摄取节点"><a href="#9、ingest-摄取节点" class="headerlink" title="9、ingest 摄取节点"></a>9、ingest 摄取节点</h3><p>摄取节点可以执行由一个或多个摄取处理器组成的预处理管道。根据摄取处理器执行的操作类型和所需资源，拥有仅执行此特定任务的专用摄取节点可能是有意义的。</p>
<p>要创建专用摄取节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ingest]</span><br></pre></td></tr></table></figure>

<h3 id="10、coordinating-仅协调节点"><a href="#10、coordinating-仅协调节点" class="headerlink" title="10、coordinating 仅协调节点"></a>10、coordinating 仅协调节点</h3><p>如果您取消了处理主职责、保存数据和预处理文档的能力，那么您就剩下一个只能路由请求、处理搜索减少阶段和分发批量索引的协调节点。<br>本质上，<strong>仅协调节点的行为就像智能负载均衡器。</strong><br>通过从数据和符合主节点的节点卸载协调节点角色，仅协调节点可以使大型集群受益。他们加入集群并接收完整的集群状态，就像其他每个节点一样，他们使用集群状态将请求直接路由到适当的地方。</p>
<p>要创建专用协调节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles:[ ]</span><br></pre></td></tr></table></figure>

<h3 id="11、remote-远程集群客户端节点"><a href="#11、remote-远程集群客户端节点" class="headerlink" title="11、remote 远程集群客户端节点"></a>11、remote 远程集群客户端节点</h3><p>远程集群客户端节点充当跨集群客户端并连接到 远程集群。连接后，您可以使用跨集群搜索来搜索远程集群。您还可以使用跨集群复制在集群之间同步数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles:[ remote_cluster_client ]</span><br></pre></td></tr></table></figure>

<h3 id="12、ml-机器学习节点"><a href="#12、ml-机器学习节点" class="headerlink" title="12、ml 机器学习节点"></a>12、ml 机器学习节点</h3><p>机器学习节点运行作业并处理机器学习 API 请求。</p>
<p>要创建专用机器学习节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles:[ml，remote_cluster_client]</span><br></pre></td></tr></table></figure>

<p><strong>注意⚠️：</strong><br>一般开启ml角色的节点，推荐同时开启remote_cluster_client角色。</p>
<h3 id="13、transform-转换节点"><a href="#13、transform-转换节点" class="headerlink" title="13、transform 转换节点"></a>13、transform 转换节点</h3><p>转换节点运行转换并处理转换 API 请求。</p>
<p>要创建专用变换节点，请设置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node.roles: [ transform, remote_cluster_client ]</span><br></pre></td></tr></table></figure>

<p><strong>注意⚠️：</strong><br>一般开启transform角色的节点，推荐同时开启remote_cluster_client角色。</p>
<p><strong>小结：</strong><br>重点理解master节点和data节点即可。<br>master节点负责轻量级集群范围的操作，比如创建或删除索引，跟踪集群中节点位置以及分片分配。<br>data节点负责存储数据，并处理数据相关操作，如 CRUD、搜索和聚合。</p>
<h2 id="四、改变节点角色"><a href="#四、改变节点角色" class="headerlink" title="四、改变节点角色"></a>四、改变节点角色</h2><h3 id="存储数据说明"><a href="#存储数据说明" class="headerlink" title="存储数据说明"></a>存储数据说明</h3><p>1、data数据节点</p>
<ul>
<li>分配给该节点的每个分片的分片数据</li>
<li>分配给该节点的每个分片对应的索引元数据</li>
<li>集群范围的元数据，例如设置和索引模板</li>
</ul>
<p>2、master主节点</p>
<ul>
<li>集群中每个索引的索引元数据</li>
<li>集群范围的元数据，例如设置和索引模板</li>
</ul>
<h3 id="数据检查机制"><a href="#数据检查机制" class="headerlink" title="数据检查机制"></a>数据检查机制</h3><p>每个节点在启动时会检查其数据路径的内容。如果它发现意外数据，它将拒绝启动。这是为了避免导入可能导致红色集群运行状况的不需要的悬空索引。更准确地说，没有data角色的节点在启动时如果在磁盘上找到任何分片数据将拒绝启动，而没有角色master和data角色的节点如果在启动时在磁盘上有任何索引元数据将拒绝启动。</p>
<h3 id="更改节点角色"><a href="#更改节点角色" class="headerlink" title="更改节点角色"></a>更改节点角色</h3><p>可以通过调整其elasticsearch.yml文件并重新启动它来更改节点的角色 。这称为重新调整节点的用途。为了满足上述对意外数据的检查，您必须执行一些额外的步骤来准备节点，以便在没有data或master角色的情况下启动节点时重新调整用途。<br>如果您想通过删除data角色来重新调整数据节点的用途，那么您应该首先使用分配过滤器将所有分片数据安全地迁移到集群中的其他节点上。<br>如果您想重新调整节点的用途，使其既没有data也没有master角色，那么最简单的方法是启动一个带有空数据路径和所需角色的全新节点。您可能会发现<strong>首先使用分配过滤器将分片数据迁移到集群中的其他位置是最安全的 。</strong><br>如果无法执行这些额外步骤，那么您可以使用该elasticsearch-node repurpose工具删除任何阻止节点启动的多余数据。</p>
<h2 id="五、节点数据路径设置"><a href="#五、节点数据路径设置" class="headerlink" title="五、节点数据路径设置"></a>五、节点数据路径设置</h2><p>每个数据和主节点都需要配置数据存储目录，其中存储分片、索引和集群元数据的path.data默认为​<code>​$ES_HOME/data​</code>​​，用户可以在elasticsearch.yml中自己配置。<br>配置文件中指定：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">path.data:  /var/elasticsearch/data</span><br></pre></td></tr></table></figure>

<p>启动命令中指定：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./bin/elasticsearch -Epath.data=/var/elasticsearch/data</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong><br>更推荐在配置文件中指定的方式。</p>
<hr>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本节主要是对ES集群中的节点角色进行了说明。<br>1、一个可用的ES集群中，必须具备master节点和data节点。<br>2、详细说明了各个节点角色的作用以及配置方法<br>3、介绍了master节点和data节点负责的功能：</p>
<ul>
<li>master节点负责轻量级集群范围的操作，比如创建或删除索引，跟踪集群中节点位置以及分片分配。</li>
<li>data节点负责存储数据，并处理数据相关操作，如 CRUD、搜索和聚合。</li>
</ul>
]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在VictoriaMetrics中删除或修改指标</title>
    <url>/2024/01/04/%E5%A6%82%E4%BD%95%E5%9C%A8VictoriaMetrics%E4%B8%AD%E5%88%A0%E9%99%A4%E6%88%96%E4%BF%AE%E6%94%B9%E6%8C%87%E6%A0%87/</url>
    <content><![CDATA[<p>作为 VictoriaMetrics 用户，我们希望其具备数据删除能力。VictoriaMetrics 也确实支持删除操作，但是程度有限。由于实现上的问题，VictoriaMetrics 保持为一个 append-only 数据库，非常适合存储时序数据。这样的架构的缺点，就是修改、删除数据会变得非常昂贵。所以 VictoriaMetrics 对修改、删除操作的支持非常有限。在这篇指南中，我们就来看一下如何实现 VictoriaMetrics 中的数据的删除和修改。</p>
<h2 id="如何删除指标"><a href="#如何删除指标" class="headerlink" title="如何删除指标"></a>如何删除指标</h2><p>💡 警告：数据删除操作不建议作为一个周期性行为来执行。每次调用删除 API 都会对性能产生影响。提供删除 API 主要用于一次性需求，用于删除格式错误的数据或满足 GDPR 合规性。</p>
<p>删除 API 需要指定时序数据选择器。所以删除之前，首先要做的，应该是验证选择器是否匹配了期望的数据。可以使用如下命令来检查：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Warning: response can <span class="built_in">return</span> many metrics, so be careful with series selector.</span></span><br><span class="line">curl -s &#x27;http://vmselect:8481/select/0/prometheus/api/v1/series?match[]=process_cpu_cores_available&#x27; | jq</span><br></pre></td></tr></table></figure>

<p>预期输出：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;isPartial&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process_cpu_cores_available&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmagent&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmagent:8429&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process_cpu_cores_available&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmalert&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmalert:8880&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process_cpu_cores_available&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vminsert&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vminsert:8480&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process_cpu_cores_available&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmselect&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmselect:8481&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process_cpu_cores_available&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmstorage&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmstorage-1:8482&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;process_cpu_cores_available&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmstorage&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vmstorage-2:8482&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>如果你确认时间序列选择器是符合预期的，接下来就可以发个POST请求执行删除，举例：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -s &#x27;http://vmselect:8481/delete/0/prometheus/api/v1/admin/tsdb/delete_series?match[]=process_cpu_cores_available&#x27;</span><br></pre></td></tr></table></figure>

<p>如果删除成功，删掉的数据就查不到了。不过存储空间不会立马释放，而是在后续数据文件后台合并的时候删除。前几个月的数据可能永远不会发生后台合并，因此不会为历史数据释放存储空间。这种情况下，可以尝试强制合并：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -v -X POST http://vmstorage:8482/internal/force_merge</span><br></pre></td></tr></table></figure>

<p>merge 完成之后，数据就会从硬盘永久删除了。</p>
<h2 id="如何更新指标"><a href="#如何更新指标" class="headerlink" title="如何更新指标"></a>如何更新指标</h2><p>VictoriaMetrics 默认不提供更新数据的机制。不过你可以通过如下方式曲线折中实现：</p>
<ul>
<li>导出指标数据到文件中</li>
<li>修改文件中的 value</li>
<li>从 VictoriaMetrics 中删除相关指标</li>
<li>把刚才保存的文件中的数据重新导入</li>
</ul>
<h3 id="导出指标"><a href="#导出指标" class="headerlink" title="导出指标"></a>导出指标</h3><p>举个例子，导出<code>node-exporter:9100</code>这个实例和<code>hostname.com</code>这个job的<code>node_memory_MemTotal_bytes</code>指标：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X POST -g http://vmselect:8481/select/0/prometheus/api/v1/export -d &#x27;match[]=node_memory_MemTotal_bytes&#123;instance=&quot;node-exporter:9100&quot;, job=&quot;hostname.com&quot;&#125;&#x27; &gt; data.jsonl</span><br></pre></td></tr></table></figure>

<p>检查一下导出的数据：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat data.jsonl | jq</span><br></pre></td></tr></table></figure>

<p>预期输出如下所示：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node_memory_MemTotal_bytes&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hostname.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node-exporter:9100&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="number">33604390912</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">33604390912</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">33604390912</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">33604390912</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="number">1656669031378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669032378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669033378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669034378</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>在这个例子中，我们使用 sed 命令替换 <code>node_memory_MemTotal_bytes</code> 的值，从 <code>33604390912</code> 改成 <code>17179869184</code>。当然，你可以使用自己习惯的方式来做修改：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sed -i &#x27;s/33604390912/17179869184/g&#x27; data.jsonl</span><br></pre></td></tr></table></figure>

<p>检查一下修改是否成功：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat data.jsonl | jq</span><br></pre></td></tr></table></figure>

<p>期望的输出如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node_memory_MemTotal_bytes&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hostname.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node-exporter:9100&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="number">17179869184</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">17179869184</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">17179869184</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">17179869184</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="number">1656669031378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669032378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669033378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669034378</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="删除指标"><a href="#删除指标" class="headerlink" title="删除指标"></a>删除指标</h3><p>前文介绍了，这里不再赘述。</p>
<h3 id="导入指标"><a href="#导入指标" class="headerlink" title="导入指标"></a>导入指标</h3><p>VictoriaMetrics 支持多种数据导入方式，下面我们使用从 json 文件导入的方式来导入数据：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -v -X POST http://vminsert:8480/insert/0/prometheus/api/v1/import -T data.jsonl</span><br></pre></td></tr></table></figure>

<h3 id="检查导入的指标"><a href="#检查导入的指标" class="headerlink" title="检查导入的指标"></a>检查导入的指标</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -X POST -g http://vmselect:8481/select/0/prometheus/api/v1/export -d match[]=node_memory_MemTotal_bytes</span><br></pre></td></tr></table></figure>

<p>期望的输出如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node_memory_MemTotal_bytes&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hostname.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node-exporter:9100&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="number">17179869184</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">17179869184</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">17179869184</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">17179869184</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timestamps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="number">1656669031378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669032378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669033378</span><span class="punctuation">,</span></span><br><span class="line">    <span class="number">1656669034378</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>可观测性与传统监控的区别和联系</title>
    <url>/2024/01/04/%E5%8F%AF%E8%A7%82%E6%B5%8B%E6%80%A7%E4%B8%8E%E4%BC%A0%E7%BB%9F%E7%9B%91%E6%8E%A7%E7%9A%84%E5%8C%BA%E5%88%AB%E5%92%8C%E8%81%94%E7%B3%BB/</url>
    <content><![CDATA[<h2 id="什么是可观测性？"><a href="#什么是可观测性？" class="headerlink" title="什么是可观测性？"></a>什么是可观测性？</h2><p>可观测性（Observability）是一种软件开发和系统构建的哲学，是对系统内部状态及行为的度量和推断能力，通常包括日志、指标、链路追踪等多个度量维度。也就是说，在软件开发和运维领域中，可观测性是指对于一个复杂的系统，能够通过监控、日志、指标、追踪等手段，快速地发现、诊断、解决问题的能力。</p>
<p>Observability 最早是起源于控制论的一个概念：</p>
<blockquote>
<p>In 1960, Kálmán introduced a characterization he called observability to describe mathematical control systems in his paper. In control theory, observability is defined as a measure of how well internal states of a system can be inferred from knowledge of its external outputs.</p>
</blockquote>
<h2 id="传统监控的局限"><a href="#传统监控的局限" class="headerlink" title="传统监控的局限"></a>传统监控的局限</h2><p>从核心出发点来讲，传统的监控和可观测性，背后解决的是同样的问题，就是及时、准确的掌握系统的运行状况，提升对系统运行的控制能力。因此常有人讲可观测性之于监控是“<strong>新瓶装旧酒</strong>”，换汤不换药。实则不然，随着技术架构的演进，传统监控的局限愈发突出：</p>
<blockquote>
<p><strong>侧重于依赖“经验主义”，应对“已知问题”</strong></p>
</blockquote>
<p>传统监控，要预先知晓采集哪些指标，添加什么样的告警策略，定制什么样的仪表盘，以便发现某种类型的故障后，采用什么样的 Runbook 来应对。比如技术团队根据过往经验，知道一台服务器上打开的文件句柄数量不能太多，超过某个上限就会影响到网络通信以及文件读写，因此我们会采集一个 <code>node_filefd_allocated</code> 的指标，然后配置一个告警策略：当 <code>node_filefd_allocated &gt; 1000k</code> 则触发告警，同时我们会提前制作一个 Linux 主机 Dashboard，其中包含有 <code>node_filefd_allocated</code> 的趋势图。准备好这些工作之后，接下来就是守株待兔，等待告警的触发，值班的技术团队就可以按照 Runbook 中载明的排查步骤，检查是否有进程泄露文件句柄，或者是否有大量的网络链接建立等等。</p>
<p><strong>经验主义，总是有限的，无法预知可能发生的各种未知的故障</strong>。因此在实际情况中，告警策略的完善往往靠“故障复盘”来驱动，每次故障复盘后，必定会有的一个改进项：继续完善监控、加更多的告警。技术团队总会处于一种对未知故障缺乏掌控的不安全的状态中，产生焦虑感，反过来又会促使技术团队添加更多的监控，久而久之，告警会越加越多，却又永远不够，告警风暴就这样产生了。</p>
<blockquote>
<p><strong>告警驱动的传统监控，缺乏对故障的全局感知</strong></p>
</blockquote>
<p>在传统监控中，告警充当着举足轻重的作用。当使用传统监控方式，发出某个告警之后，值班的技术团队看到的只是一个孤立的”技术问题“，这个技术问题的影响面有多大，重要程度如何，是否需要立即处理，是否需要上升和协同，很难快速的做出判断。某个”技术问题“是否重要，是否紧急，不取决于该技术问题本身的难易程度，也不取决于所涉及的服务器规模多寡，唯一的衡量标准是”对用户体验产生的影响有多大“。<strong>使用传统监控无法快速的评估某个告警事件和用户体验之间的必然联系</strong>，导致无法投入准确的应急处置资源，无法确定合理的应急响应时效，也无法和其他资源产生有效的联动协同，最终使得稳定性保障工作效率低下。</p>
<blockquote>
<p><strong>传统监控认为，系统的开发者和系统的维护者，职责是相对分割的，导致监控以外挂形式为主</strong></p>
</blockquote>
<p>系统在设计之初，开发者的重心在于完成必备的业务逻辑，对于自身运行状态的暴露，并没有考虑的很完善甚至有时候都没有考虑。大家可能会经常遇到，做的好的开发者可能还会打印较为详细的日志，做的不好的，连日志也打的不全，更不必说提供主动暴露系统状态的 Metrics 接口或者为实现 Tracing 进行埋点了。一旦系统到了上线运行阶段，维护人员接手后，往往只能开启“外挂”模式，通过写各种各样的脚本，去探测进程是否存在、去分析匹配日志中是否有关键的错误字段。如果要进一步统计系统的访问量、访问延迟、资源消耗等等，就会更加被动。<strong>“外挂”往往是传统监控数据采集的特征</strong>。</p>
<blockquote>
<p><strong>传统监控面向的通常是基础设施，Metrics是传统监控的基础</strong></p>
</blockquote>
<p>传统监控面向基础设施，基础设施的变化较慢，且变化带来的结果相对可预测。Metrics 类型的监控指标，具有采集存储成本低、简单直观、易于聚合计算的特点，因此在过去的二三十年里，基于 Metrics 为基础，出现了各种各样的采集器、时序数据库、可视化工具、告警工具等，基于前面提到的”经验主义“，尚能应付面向基础设施的稳定性保障工作。</p>
<h2 id="传统监控工具发展的三个阶段"><a href="#传统监控工具发展的三个阶段" class="headerlink" title="传统监控工具发展的三个阶段"></a>传统监控工具发展的三个阶段</h2><h3 id="阶段1：Metrics监控之-互联网大流行前"><a href="#阶段1：Metrics监控之-互联网大流行前" class="headerlink" title="阶段1：Metrics监控之_互联网大流行前_"></a>阶段1：Metrics监控之_互联网大流行前_</h3><blockquote>
<p><strong>互联网大流行前，擅长于局部场景，部分工具到现在仍然被广泛使用</strong></p>
</blockquote>
<p><img src="/images/1704347653-ce45a2c9d3b21fea8a7687dcf8681b68.png"></p>
<blockquote>
<ul>
<li>Cacti：最悠久的监控系统之一，2001年9月，一个名叫Lan Berry的高中生，当时他还在为一家小的ISP厂商工作，为了更好地监控网络质量，开发了Cacti的第一个版本，基于RRDtool，提供更友好的使用体验。</li>
<li>Nagios：Nagios可谓是早期告警方向事实上的工业标准，可以用来监控主机和网络基础设施，以及各种应用服务。在监控对象出现问题时，及时发送邮件或者短信通知相关人员；当问题解决后，发送恢复信息。一段时间的主流，后来以难用闻名。</li>
<li>Ganglia： UC Berkeley发起的一个开源集群监视项目，设计用于测量数以千计的节点。主要是用来监控系统性能，如：cpu 、mem、硬盘利用率， I&#x2F;O负载、网络流量情况等，至今仍然在Hadoop监控领域流行。</li>
<li>RRDtool：在时间序列数据（time-series data）的存储、展示方面，其独创的round-robin database数据存储格式，曾经是事实上的时序数据存储工业标准。包括Cacti、MRTG、Collectd、Ganglia、Zenoss等系统，都是采用RRDtool的格式来存储数据，以及使用RRDtool的Graph工具来绘图。</li>
<li>Collectd：定位是收集和传输数据。在告警方面不是Collectd的设计初衷，不过它也支持一些简单的阈值判定，并发送告警信息。要支持更高级的一些告警需求，Collectd可以和Nagios配合使用。</li>
<li>StatsD：最早是 2008 年 Flickr 公司用 Perl 写的，StatsD 其实就是一个监听UDP（默认）或者TCP的守护程序，根据简单的协议收集statsd客户端发送来的数据，聚合之后，定时推送给后端，如graphite和influxdb等，再通过grafana等展示。</li>
<li>Graphite：一个开源实时的、显示时间序列度量数据的图形系统。Graphite并不收集度量数据本身，而是像一个数据库，通过其后端接收度量数据，然后以实时方式查询、转换、组合这些度量数据。Graphite支持内建的Web界面，它允许用户浏览度量数据和图。</li>
</ul>
</blockquote>
<h3 id="阶段2：Metrics监控之-互联网快速发展期"><a href="#阶段2：Metrics监控之-互联网快速发展期" class="headerlink" title="阶段2：Metrics监控之_互联网快速发展期_"></a>阶段2：Metrics监控之_互联网快速发展期_</h3><blockquote>
<p><strong>互联网快速发展的时代，监控往一体化方向发展，注重体验的提升</strong></p>
</blockquote>
<h4 id="Zabbix"><a href="#Zabbix" class="headerlink" title="Zabbix"></a>Zabbix</h4><p>作为一款企业级分布式监控系统，功能齐全，用户体验良好，文档完善，API强大，存储可以对接主要的SQL接口数据库，适合于中小规模的公司或者团队使用。Zabbix 由 Alexei Vladishev (阿列克谢.弗拉迪谢夫、拉脱维亚人）创建，目前由其成立的公司 —— Zabbix SIA（一家总部位于拉脱维亚里加的软件公司） 积极的持续开发更新维护， 并为用户提供技术支持服务。</p>
<h4 id="Open-Falcon"><a href="#Open-Falcon" class="headerlink" title="Open-Falcon"></a>Open-Falcon</h4><p>小米技术团队于2015年开源的一款互联网企业级监控系统，重在解决日益增长的监控数据量和监控系统的容量限制之间的矛盾。Open-Falcon在架构设计上，一个最关键的考量点就是“_如何做到水平扩展_”，底层存储采用的是RRDtool标准。</p>
<p>在Zabbix被广泛使用的时期，Open-Falcon为何能够在中国获得重要影响力：</p>
<ul>
<li>Open-Falcon的初衷就是解决zabbix在大数据量情况下无法扩展伸缩的问题；</li>
<li>Open-Falcon引入了标签概念，该特性让监控数据的分析变得非常灵活而强大，是下一代监控主要特点之一；</li>
<li>Zabbix的用户体验在当时不太符合中国工程师的习惯；</li>
<li>Open-Falcon借助小米在互联网公司的影响获得快速推广；</li>
<li>Zabbix基于C语言开发，而Open-Falcon基于Go语言开发，在二开上更为友好；</li>
<li>Open-Falcon的中文文档和支持能力；</li>
</ul>
<h3 id="阶段3：Metrics监控之-云原生时代"><a href="#阶段3：Metrics监控之-云原生时代" class="headerlink" title="阶段3：Metrics监控之_云原生时代_"></a>阶段3：Metrics监控之_云原生时代_</h3><blockquote>
<p><strong>Prometheus 成为时代的王者</strong></p>
</blockquote>
<h4 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h4><p>由前 Google 工程师从 2012 年开始在 Soundcloud 以开源软件的形式进行研发的系统监控和告警工具包，产品设计源于Google的Borgmon。Prometheus 的开发者和用户社区非常活跃，Prometheus 于 2016 年 5 月加入 CNCF 基金会，成为继 Kubernetes 之后的第二个 CNCF 托管项目。</p>
<h4 id="Nightingale"><a href="#Nightingale" class="headerlink" title="Nightingale"></a>Nightingale</h4><p>夜莺 (Nightingale) 是一款开源云原生监控工具，是中国计算机学会接受捐赠并托管的第一个开源项目，在GitHub上有8000颗星，有数千家企业用户使用。夜莺集合了 Prometheus 和 Grafana 的优点，你可以在 UI 上管理和配置告警策略，也可以对分布在多个 Region 的指标、日志、链路追踪数据进行统一的可视化和分析。</p>
<h4 id="高性能时序数据库代表"><a href="#高性能时序数据库代表" class="headerlink" title="高性能时序数据库代表"></a>高性能时序数据库代表</h4><ul>
<li>Prometheus：Prometheus自带的高性能单机存储数据库；</li>
<li>InfluxDB：支持按标签存储查询，该领域最著名的时序数据库之一；</li>
<li>TDengine：国内最著名的开源时序数据存储之一，面向IoT领域，表结构存储，支持SQL查询；</li>
<li>TimescaleDB：表结构存储的代表，支持SQL查询；</li>
<li>VictoriaMetrics：被广泛应用的标签存储时序数据库，和prometheus做了无缝兼容；</li>
<li>M3DB：Uber开发开源，高性能可扩展时序数据库，支持按标签存储查询，兼容prometheus，扩展性比VictoriaMetrics好，但运维更复杂；</li>
<li>Mimir：Grafana于2022年3月30日发布的时序数据存储，完全兼容prometheus生态；</li>
</ul>
<h2 id="可观测性的特点"><a href="#可观测性的特点" class="headerlink" title="可观测性的特点"></a>可观测性的特点</h2><p>可观测性认为，你的应用是如何运行的以及是否在正确的运行，应该主动地、默认地通过 Metrics、Logging、Tracing、Events 等多种数据维度实时的暴露出来，然后通过工具进行可视化、告警、分析和数据洞察。对应用内部状态和行为的暴露，是系统设计之初就要考虑的重要组成，是系统功能不可分割的一部分。在可观测体系下，“埋点”是一种文化，应用的开发者承担着主体责任，系统的维护者反而作为数据的使用方存在。</p>
<p><img src="/images/1704347653-f5390651506ea86f28a1586c32981ee0.png"></p>
<p>以终端用户发起对服务端的一次请求为例，在该请求的整个生命周期内，尽可能多的细节都应该被记录下来，以便在未来的某个时刻用于 troubleshooting，这些细节数据可能包括：请求ID（request_id）、请求头（headers）、请求参数（parameters）、请求执行的时间（duration_time）、对下游的rpc调用（rpc_calls)、执行rpc调用的耗时、rpc调用的结果、环境变量、元信息（metadata）等等。在可观测体系下，这些数据都应该被实时的记录下来，并以结构化的形式存储。</p>
<p>相较于传统监控关注基础设施，可观测性强调面向”Application“。随着云原生架构和微服务模型的普及，现代化的应用出现了一些新的特点：</p>
<blockquote>
<ol>
<li>相比单体应用，技术团队面临着更多的服务需要管理；</li>
<li>很多服务之间都是松耦合，而且像云数据库、云存储、第三方API等服务，都不处于你的掌控之下；</li>
<li>代码的发布和变更，频率越来越高，持续集成、持续发布成为主流；</li>
<li>基础设施动态化，容量也在动态的弹性伸缩；</li>
<li>现代化的系统架构下，可能出现故障的点位越来越多，”长尾问题“出现的频率也越来越高，难以定位和分析；</li>
<li>研发工程师更多的参与到系统的运行维护工作中来；</li>
</ol>
</blockquote>
<h3 id="OpenTelemetry"><a href="#OpenTelemetry" class="headerlink" title="OpenTelemetry"></a>OpenTelemetry</h3><p>也被称为 OTel。是一个供应商无关的开源可观测性框架，用于测量、生产、收集、导出可观测数据。可观测数据主要包含traces 链路、metrics 度量和 logs 日志。使用OpenTelemetry后，可观测的三要素日志、链路追踪、指标，将从过去的相互独立，变的关联性更强，方便我们进行更快速的问题定位：</p>
<p><img src="/images/1704347653-8b0c339b39c596e793d3865799c24b78.png" alt="OTel"></p>
<h2 id="最易被忽视的-OnCall"><a href="#最易被忽视的-OnCall" class="headerlink" title="最易被忽视的_OnCall_"></a>最易被忽视的_OnCall_</h2><p><strong>在传统监控领域，OnCall是最容易被技术团队忽视的一个概念，运维和研发人员往往面临以下典型的困扰：</strong></p>
<blockquote>
<ul>
<li>技术团队每天接收到大量的告警。</li>
<li>很多告警长时间无响应，长期无人问津。</li>
<li>告警与告警之间缺乏关联性，处理效率低下。</li>
<li>告警处理缺乏协同，处理过程不透明，信息难以共享，知识难以沉淀。</li>
<li>很多告警并未准确反应实际情况，无谓的消耗技术团队精力。</li>
<li>客户&#x2F;用户往往先于技术团队发现故障，客户满意度持续走低。</li>
<li>无法量化的衡量应急响应的现状和效率，无法制定出改进和优化路线。</li>
</ul>
</blockquote>
<p><img src="/images/1704347653-2d8fe47957e22a06422c78bc438e22c3.png" alt="OnCall"></p>
<p><strong>一个好的 OnCall 工具，能够大幅提升运维和研发人员的效率和幸福感：</strong></p>
<blockquote>
<ol>
<li><strong>告警聚合收敛</strong>：解决告警风暴问题，按照业界的实践，压缩率为70%~80%。</li>
<li><strong>告警全生命周期管理</strong>：告警认领、转派、升级，解决告警不能及时处理、告警漏处理、告警散落在各个监控系统的问题。</li>
<li><strong>告警排班</strong>：引入值班表，以排班的形式高效的OnCall，减少疏忽和失误，减少告警对非值班team的打扰，让团队可持续发展。</li>
<li><strong>故障管理</strong>：相关的告警聚合为故障，基于故障的告警处理协作模式，解决跨团队协同不畅的问题。</li>
<li><strong>ChatOps交互</strong>：在电话、短信之外，通过各种IM触达通知技术团队，在IM中交互式的响应和处理告警。</li>
</ol>
</blockquote>
<p><strong>没有度量就没有改进</strong>，在实际工作中，运维负责人表面看到的是告警太多、团队成员疲于奔命，但苦于看不清告警处理的工作量，没法规划协调补充人力，更严重的是看不清优化告警的方向，导致情况持续恶化，最终团队散了，故障频发。所以在告警处理的领域，尤其需要“可观测”，推荐关注下面 5 个关键的OnCall度量指标：</p>
<blockquote>
<ol>
<li><strong>降噪比</strong>：即告警的压缩比，通过算法、规则将众多相关的告警聚合后，再通知到值班人员。告警聚合能有效降低告警风暴，减少值班人员的工作量，提高信息处理的效率（<code>该指标越高越好</code>）。</li>
<li><strong>响应比</strong>：被认领的告警占所有告警的比例。在告警管理领域，需要响应或者认领的告警，才是有用的告警，因此通过统计和观察“响应比“，能整体的评估告警是否足够有效和有用，并持续的推动提升告警”响应比“（<code>该指标越高越好</code>）。</li>
<li><strong>告警总量</strong>：一段时间窗口内产生的告警数量。过高的告警总量，意味着值班的压力越大，对技术团队注意力的干扰越多，潜在的意味着告警的噪音可能也过大，因此过多的告警，会让整个系统处于不可运维的状态，应该该尽力的降低告警总量，譬如采用基于SLO的告警，就可以答复降低该指标（<code>该指标越低越好</code>）。</li>
<li><strong>MTTA（平均响应或认领用时）</strong>：从告警发生到值班人员响应或者认领的时间间隔。越快的 MTTA，标志着越高的告警处理效率，潜在的代表着越高的服务稳定性。通过MTTA我们可以有效的度量团队的工作压力，以便决策合适的资源投入，确保团队始终处于可持续发展的状态（<code>该指标合适就好</code>）。</li>
<li><strong>MTTR（平均恢复或解决用时）</strong>：从告警发生到问题解决的时间间隔。越快的 MTTR，往往意味着团队拥有更先进的观测技术、更强大的基础设施平台、更熟练的工作技能、以及对业务系统有更深入的理解（<code>该指标越快越好</code>）。</li>
</ol>
</blockquote>
<h2 id="可观测性的技术趋势"><a href="#可观测性的技术趋势" class="headerlink" title="可观测性的技术趋势"></a>可观测性的技术趋势</h2><p>在可观测性三大支柱在外，Continuous Profiling作为一种持续性能分析技术，应用也越来越广泛。Continuous Profiling 用于实时监测和分析应用程序的性能特征。它通过不间断地采集应用程序的性能数据，例如函数调用、内存使用情况、CPU利用率等，以实现对应用程序性能的全面了解。</p>
<p>eBPF（Extended Berkeley Packet Filter）是Linux内核的扩展功能，用于在内核层面执行安全、性能和观测等任务。eBPF技术允许用户在不修改内核代码的情况下，通过安全的、可编程的虚拟机在内核中注入代码。它能够捕获和处理系统的事件，例如网络数据包、系统调用、文件访问等，并进行实时分析或转发，从而实现更高级的网络分析、安全监控和性能优化等功能。</p>
<p>在可观测性领域，Continuous Profiling和eBPF技术都为开发人员和运维团队提供了更加全面、实时和深入的监控能力。</p>
]]></content>
      <categories>
        <category>技术咖</category>
      </categories>
      <tags>
        <tag>技术咖</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus实践经验分享[转]</title>
    <url>/2024/01/04/Prometheus%E5%AE%9E%E8%B7%B5%E7%BB%8F%E9%AA%8C%E5%88%86%E4%BA%AB-%E8%BD%AC/</url>
    <content><![CDATA[<p>这是 2017 年的 promcon 的分享，原文地址在<a href="https://promcon.io/2017-munich/slides/best-practices-and-beastly-pitfalls.pdf">这里</a>，作者 Julius Volz。</p>
<h2 id="埋点方面"><a href="#埋点方面" class="headerlink" title="埋点方面"></a>埋点方面</h2><h4 id="1-所有模块都要埋点"><a href="#1-所有模块都要埋点" class="headerlink" title="1. 所有模块都要埋点"></a>1. 所有模块都要埋点</h4><p>我印象中 Google 有个规范，所有的服务模块，都需要通过 HTTP <code>/varz</code> 接口暴露监控指标，即便是一个纯后端的 RPC 服务，也要暴露一个这样的 HTTP 接口。当然，实操的话，应该是通过框架来统一埋点，但是统一埋点只能埋入一些通用的指标，如果涉及一些自身业务逻辑相关的，还是需要自行埋点。</p>
<h4 id="2-借鉴-USE-方法论"><a href="#2-借鉴-USE-方法论" class="headerlink" title="2. 借鉴 USE 方法论"></a>2. 借鉴 USE 方法论</h4><p>USE 方法论，即 Utilization、Saturation、Errors 三个维度，即资源的使用率、饱和度、错误。这三个维度，可以用来衡量一个资源是否健康，如果有一个维度不健康，就需要考虑扩容或者优化。USE 方法论提出者是著名大神 <a href="https://www.brendangregg.com/usemethod.html">Brendan Gregg</a>，他的博客里有很多关于性能优化的文章，非常值得一读。</p>
<h4 id="3-借鉴-RED-方法论"><a href="#3-借鉴-RED-方法论" class="headerlink" title="3. 借鉴 RED 方法论"></a>3. 借鉴 RED 方法论</h4><p>RED 方法论，即 Request rate、Error rate、Duration，托生自 Google 的四个黄金指标，主要用来衡量微服务的健康度，RED 方法论的原文在 <a href="https://www.slideshare.net/weaveworks/monitoring-microservices">这里</a>。</p>
<h4 id="4-指标命名要有规范"><a href="#4-指标命名要有规范" class="headerlink" title="4. 指标命名要有规范"></a>4. 指标命名要有规范</h4><p>Prometheus 的指标命名，其实是没有约束的，也没有单位的概念，但通常会有一些约定，要尽量遵守，比如：</p>
<ul>
<li><code>_seconds</code> <code>_milliseconds</code> 等作为时间指标的后缀</li>
<li><code>_total</code> 作为 counter 类型指标的后缀</li>
<li>更多的约定可以参考 <a href="https://prometheus.io/docs/practices/naming/">https://prometheus.io/docs/practices/naming/</a></li>
</ul>
<h4 id="5-注意标签基数爆炸"><a href="#5-注意标签基数爆炸" class="headerlink" title="5. 注意标签基数爆炸"></a>5. 注意标签基数爆炸</h4><p>在 Prometheus 生态里，一个时间线的唯一标识是一个 labelset，即多个标签的组合（指标名称其实也是一个特殊标签，标签 Key 是 <code>__name__</code>）。比如 <code>disk_free&#123;host=&quot;10.1.2.3&quot;, fstype=&quot;ext4&quot;, path=&quot;/data&quot;&#125;</code> 唯一标识了一个时间线。其中 <code>disk_free</code> 是指标名称，实际底层处理的时候，会处理成：<code>&#123;__name__=&quot;disk_free&quot;, host=&quot;10.1.2.3&quot;, fstype=&quot;ext4&quot;, path=&quot;/data&quot;&#125;</code>，所以说标签集合是唯一标识一个时间线的。如果任一标签变化，就会当成一个新的时间线。一些高基数的信息，就不适合作为标签，比如：</p>
<ul>
<li>用户访问的来源 IP</li>
<li>用户的 ID</li>
<li>用户请求的 TraceID</li>
</ul>
<h4 id="6-统计失败-总量而不要统计失败-成功量"><a href="#6-统计失败-总量而不要统计失败-成功量" class="headerlink" title="6. 统计失败+总量而不要统计失败+成功量"></a>6. 统计失败+总量而不要统计失败+成功量</h4><p>考虑下面两个 counter 指标：</p>
<ul>
<li>failures_total</li>
<li>successes_total</li>
</ul>
<p>如果要计算失败率，可以这么写：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rate(failures_total[5m])</span><br><span class="line">/</span><br><span class="line">(rate(successes_total[5m]) + rate(failures_total[5m]))</span><br></pre></td></tr></table></figure>

<p>写起来相对复杂一些，如果我们统计失败+总量：</p>
<ul>
<li>failures_total</li>
<li>requests_total</li>
</ul>
<p>失败率的计算就会变简单：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rate(failures_total[5m]) / rate(requests_total[5m])</span><br></pre></td></tr></table></figure>

<h4 id="7-使用默认值提前初始化指标"><a href="#7-使用默认值提前初始化指标" class="headerlink" title="7. 使用默认值提前初始化指标"></a>7. 使用默认值提前初始化指标</h4><p>假设有这么一个指标：<code>ops_total&#123;optype=&quot;&lt;type&gt;&quot;&#125;</code>，显然，这是想统计不同类型的操作的次数，但是如果某个类型的操作一次都没有发生，那么这个指标就不会出现在 Prometheus 的时间序列里，但你可能在 Grafana 图表和相关告警规则中用到了这样的语句：<code>sum(rate(ops_total&#123;optype=&quot;create&quot;&#125;[5m]))</code>，如果 create 一次都没有发生，那就没法工作了。一般我们建议，代码埋点的时候要做初始化，比如下面的 Go 语言例子，把已知的操作类型都初始化一下：</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> _, val := <span class="keyword">range</span> opLabelValues &#123;</span><br><span class="line"> <span class="comment">// Note: No &quot;.Inc()&quot; at the end.</span></span><br><span class="line"> ops.WithLabelValues(val)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>当然，填充默认值的这种方式并非总能奏效。比如 <code>http_requests_total&#123;status=&quot;&lt;status&gt;&quot;&#125;</code> 这样的指标，<code>status=~&quot;5..&quot;</code> 过滤器查不到数据时会破坏整个 promql，此时有个比较 tricky 的方法是使用 or 语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;expression&gt; or up&#123;job=&quot;myjob&quot;&#125; * 0</span><br></pre></td></tr></table></figure>

<p>更多信息可参考<a href="https://www.robustperception.io/existential-issues-with-metrics/">这个文章</a>。</p>
<h4 id="8-避免使用无法识别的额外信息标签"><a href="#8-避免使用无法识别的额外信息标签" class="headerlink" title="8. 避免使用无法识别的额外信息标签"></a>8. 避免使用无法识别的额外信息标签</h4><p>比如机器的指标，<code>disk_usage_bytes</code>，如果某个机器部署了服务A，你可能会想这么打标签：<code>disk_usage_bytes&#123;service=&quot;a&quot;&#125;</code>，但是如果后面这个机器改变了用途，不再部署服务A，而是部署服务B，这个磁盘使用的指标就会变成 <code>disk_usage_bytes&#123;service=&quot;b&quot;&#125;</code>，而这，由于标签变化，就会导致 Prometheus 会认为这是一个新的时间线，而不是原来的时间线，导致时间线数据不连续。</p>
<p>那怎么办？可以使用 group_left 附加额外标签的方式，具体可以参考这个<a href="https://www.robustperception.io/how-to-have-labels-for-machine-roles/">文章</a>。</p>
<h2 id="关于告警"><a href="#关于告警" class="headerlink" title="关于告警"></a>关于告警</h2><p>Rob Ewaschuk 有一篇广为流传的文章：<a href="https://docs.google.com/document/d/199PqyG3UsyXlwieHaqbGiWVa8eMWi8zzAn0YfcApr8Q/edit">My Philosophy on Alerting</a>，推荐大家 Google 一下阅读一下。</p>
<h4 id="9-告警症状而非原因"><a href="#9-告警症状而非原因" class="headerlink" title="9. 告警症状而非原因"></a>9. 告警症状而非原因</h4><p>原因类指标可以放到仪表盘上用于后续问题根因排查，症状类指标，通常反映的是上层用户的感受，啥是症状类指标？比如：</p>
<ul>
<li>某个关键服务延迟高，或错误率高</li>
<li>某个磁盘即将在未来 4h 内写满</li>
</ul>
<h4 id="10-注意-target-缺失告警"><a href="#10-注意-target-缺失告警" class="headerlink" title="10. 注意 target 缺失告警"></a>10. 注意 target 缺失告警</h4><p>比如下面这个告警规则：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALERT HighErrorRate</span><br><span class="line"> IF rate(errors_total&#123;job=&quot;myjob&quot;&#125;[5m]) &gt; 10</span><br><span class="line"> FOR 5m</span><br></pre></td></tr></table></figure>

<p>看起来挺好的，但是如果你的 target down 掉了或者压根没有被 Prometheus 发现，上面的表达式查不到数据，自然就不会告警。建议，对于关键指标，要一并配置 up 和 absent：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALERT MyJobInstanceDown</span><br><span class="line"> IF up&#123;job=&quot;myjob&quot;&#125; == 0</span><br><span class="line"> FOR 5m</span><br><span class="line"></span><br><span class="line">ALERT MyJobAbsent</span><br><span class="line"> IF absent(up&#123;job=&quot;myjob&quot;&#125;)</span><br><span class="line"> FOR 5m</span><br></pre></td></tr></table></figure>

<h4 id="11-告警规则通常要配置持续时长"><a href="#11-告警规则通常要配置持续时长" class="headerlink" title="11. 告警规则通常要配置持续时长"></a>11. 告警规则通常要配置持续时长</h4><p>比如下面的告警规则，没有配置持续时长：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALERT InstanceDown</span><br><span class="line"> IF up == 0</span><br></pre></td></tr></table></figure>

<p>如果有一次抓取失败，就会告警，但实际上可能是网络抖动，实际的 target 是健康的，所以建议配置持续时长：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ALERT InstanceDown</span><br><span class="line"> IF up == 0</span><br><span class="line"> FOR 5m</span><br></pre></td></tr></table></figure>

<h4 id="12-注意保留关键标签"><a href="#12-注意保留关键标签" class="headerlink" title="12. 注意保留关键标签"></a>12. 注意保留关键标签</h4><p>举例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Don&#x27;t:</span><br><span class="line"></span><br><span class="line">ALERT HighErrorRate</span><br><span class="line"> IF sum(rate(...)) &gt; x</span><br><span class="line"></span><br><span class="line">Do (at least):</span><br><span class="line"></span><br><span class="line">ALERT HighErrorRate</span><br><span class="line"> IF sum by(job) (rate(...)) &gt; x</span><br></pre></td></tr></table></figure>

<p>读者可以在即时查询里体验一下，sum 之后，如果不加 by 的逻辑，所有便签就都没了，告警事件发出来信息太少，所以一般建议把关键标签放到 by 后面分组统计。</p>
<h2 id="关于查询"><a href="#关于查询" class="headerlink" title="关于查询"></a>关于查询</h2><h4 id="13-查询表达式通常要过滤到job颗粒度"><a href="#13-查询表达式通常要过滤到job颗粒度" class="headerlink" title="13. 查询表达式通常要过滤到job颗粒度"></a>13. 查询表达式通常要过滤到job颗粒度</h4><p>不同的 job 可能有相同的指标名字，为了避免冲突，尽量把 job 作为过滤条件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Don&#x27;t: rate(http_request_errors_total[5m])</span><br><span class="line">Do: rate(http_request_errors_total&#123;job=&quot;api&quot;&#125;[5m])</span><br></pre></td></tr></table></figure>

<h4 id="14-注意-rate-和-sum-的顺序"><a href="#14-注意-rate-和-sum-的顺序" class="headerlink" title="14. 注意 rate() 和 sum() 的顺序"></a>14. 注意 <code>rate()</code> 和 <code>sum()</code> 的顺序</h4><p>对于 counter 类型的指标，如果服务重启，指标会被重置，从 0 开始重新上报，<code>rate()</code> 函数可以修正这种情况，比如：</p>
<p><img src="/images/1704348321-01b5a034b08499b637f76dbf5c65b918.png" alt="20231115190514"></p>
<p>正常来讲，应该先求 <code>rate()</code>，再求 <code>sum()</code>，如果弄反了，就麻烦了，比如下面的例子：</p>
<p><img src="/images/1704348321-d1282e362c3ebef50979a7314b82fa5f.png" alt="20231115190738"></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>ClickHouse + ClickVisual 构建日志平台</title>
    <url>/2024/01/04/ClickHouse-ClickVisual-%E6%9E%84%E5%BB%BA%E6%97%A5%E5%BF%97%E5%B9%B3%E5%8F%B0/</url>
    <content><![CDATA[<p>越来越多的互联网公司开始尝试 ClickHouse 存储日志，比如映客、快手、携程、唯品会、石墨文档，但是 ClickHouse 存储日志缺少对应的可视化方案，石墨文档开源了 ClickVisual 用于解决这个问题。笔者初步尝试了一下 ClickVisual，一点小小的实践经验，与各位分享。</p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>ClickVisual 官方宣扬的核心功能是：轻量级日志查询、分析、报警可视化平台。报警这块有更好的方案，我这里主要尝试一下接入日志、存储、查询日志的整个流程。ClickVisual 的相关资料地址：</p>
<blockquote>
<ul>
<li>文档：<a href="https://clickvisual.net/">https://clickvisual.net/</a></li>
<li>代码：<a href="https://github.com/clickvisual/clickvisual">https://github.com/clickvisual/clickvisual</a></li>
</ul>
</blockquote>
<h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p>ClickVisual 只是一个 web 端，查询日志并展示，并不参与日志流的处理，日志流主要是通过 LogAgent、Kafka、ClickHouse 来协同处理，ClickVisual 主要是对 ClickHouse 的表结构做一些调整，来控制 ClickHouse 对日志的处理过程。整个数据流如下：</p>
<p><img src="/images/1704349603-f45e710800a867c25bac657001bf9980.png" alt="20240104160133"></p>
<p>ClickVisual 不关心采集，用什么 agent 都行，只是对进入 Kafka 中的日志格式有要求，要求日志中包括时间字段和日志原文字段。ClickVisual 官网有 fluentbit、ilogtail、loggie 的相关文档，fluentbit 的文档最为详细，看来石墨的朋友内部主要是使用 fluentbit 做采集器。后面我会使用 categraf 做数据采集，categraf 中的日志采集逻辑是 fork 自 datadog-agent，比较稳定可靠。不过 categraf 没有日志清洗能力，如果想对日志格式做清洗，需要引入 logstash 或者 vector。我这里重点想尝试 ClickVisual，所以采集侧就简单搞，使用 categraf 采集 json 格式的日志，然后直接进入 Kafka。</p>
<blockquote>
<ul>
<li>ilogtail: <a href="https://ilogtail.gitbook.io/ilogtail-docs/about/readme">https://ilogtail.gitbook.io/ilogtail-docs/about/readme</a></li>
<li>loggie: <a href="https://loggie-io.github.io/docs/">https://loggie-io.github.io/docs/</a></li>
<li>categraf: <a href="https://github.com/flashcatcloud/categraf">https://github.com/flashcatcloud/categraf</a></li>
</ul>
</blockquote>
<p>通常，不同的 log stream 进入不同的 Kafka topic，每个 Kafka topic 对应 ClickVisual 里的一个日志库，日志库通常包含两个 ClickHouse Table + 一个物化视图，一个 Table 是 Kafka 引擎类型的 Table，用于消费 Kafka 中的原始日志，然后通过物化视图流式处理原始日志，做一些数据 ETL 之后写入日志结果 Table。比如日志原文可能是 json 格式，通过物化视图把 json 日志原文里的某个字段提取出来，作为日志结果 Table 的一个一等公民字段，可以提升查询筛选性能。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>日志的处理流比指标要复杂，涉及的组件比较多，这里我会安装 Kafka 用于日志传输，Kafka 依赖 Zookeeper，Kafka 的可视化使用 Kowl，日志采集使用 Categraf，日志存储使用 ClickHouse，日志可视化使用 ClickVisual，ClickVisual 依赖 MySQL 和 Redis，所以，总共需要安装 8 个组件，我会尽可能使用二进制安装，方便摸清个中原理。</p>
<h3 id="Kafka"><a href="#Kafka" class="headerlink" title="Kafka"></a>Kafka</h3><p>Kafka 最新的版本是 3.6.0，直接下载最新版本安装，下载的包里包含 Zookeeper，所以 Zookeeper 不需要单独下载包。当然，Kafka、Zookeeper 都是依赖 JDK，JDK 请列位自行安装和配置。</p>
<blockquote>
<ul>
<li>Kafka 下载地址：<a href="https://downloads.apache.org/kafka/3.6.0/kafka/_2.13-3.6.0.tgz">https://downloads.apache.org/kafka/3.6.0/kafka\_2.13-3.6.0.tgz</a></li>
</ul>
</blockquote>
<p>下载之后解压缩，修改一下 <code>config/zookeeper.properties</code>，调整 dataDir 配置，不要放 <code>/tmp</code> 目录。然后启动 Zookeeper：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./bin/zookeeper-server-start.sh -daemon config/zookeeper.properties</span><br></pre></td></tr></table></figure>

<p>然后修改 Kafka 的配置：<code>config/server.properties</code>，修改 log.dirs，也是更换一下目录，不要使用 <code>/tmp</code>。然后启动 Kafka：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup bin/kafka-server-start.sh config/server.properties &amp;&gt; kafka.stdout &amp;</span><br></pre></td></tr></table></figure>

<p>请自行检查 Zookeeper 和 Kafka 是否启动成功，可以使用 <code>jps</code> 命令查看进程，也可以使用 <code>netstat -tunlp</code> 查看端口。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@VM-0-33-debian:~/tarball/kafka_2.13-3.6.0# jps</span><br><span class="line">1148293 Jps</span><br><span class="line">606735 QuorumPeerMain</span><br><span class="line">608066 Kafka</span><br></pre></td></tr></table></figure>

<p>Kafka 数据查看使用 Kowl，不过 Kowl 没有找到二进制，官网建议使用容器，但是我的 Kafka 和 Zookeeper 都没有用容器，所以 Kowl 使用容器安装，但是要使用 host network，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run --network=host -d -e KAFKA_BROKERS=localhost:9092 quay.io/cloudhut/kowl:master</span><br></pre></td></tr></table></figure>

<p>kowl 如果启动成功，会监听在 8080 端口，页面长这样：</p>
<p><img src="/images/1704349603-e90424c9aa9f45b77d8eb83c09bfd1f6.png" alt="20240104163744"></p>
<h3 id="ClickHouse"><a href="#ClickHouse" class="headerlink" title="ClickHouse"></a>ClickHouse</h3><p>ClickHouse 的安装比较简单，官方提供安装脚本，直接下载执行即可，curl 命令结束之后会拿到一个 clickhouse 二进制，然后执行 <code>./clickhouse install</code> 就可以安装了，安装的时候会提示设置密码，我这里测试，设置为 1234。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl https://clickhouse.com/ | sh</span><br><span class="line">./clickhouse install</span><br><span class="line">clickhouse start</span><br></pre></td></tr></table></figure>

<h3 id="ClickVisual"><a href="#ClickVisual" class="headerlink" title="ClickVisual"></a>ClickVisual</h3><p>ClickVisual 的安装依赖 MySQL 和 Redis，这俩太常见了大家自行搞定。ClickVisual 我也直接体验最新版本，v1.0.0-rc9，下载之后解压缩，看一下 help 信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir clickvisual &amp;&amp; cd clickvisual</span><br><span class="line">wget https://github.com/clickvisual/clickvisual/releases/download/v1.0.0-rc9/clickvisual-v1.0.0-rc9-linux-amd64.tar.gz</span><br><span class="line">tar zxvf clickvisual-v1.0.0-rc9-linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">[root@VM-0-33-debian:~/tarball/clickvisual# ./clickvisual --help</span><br><span class="line">Usage:</span><br><span class="line">  clickvisual [command]</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  agent       启动 clickvisual agent 服务端</span><br><span class="line">  command     启动 clickvisual 命令行</span><br><span class="line">  completion  Generate the autocompletion script for the specified shell</span><br><span class="line">  help        Help about any command</span><br><span class="line">  server      启动 clickvisual server 服务端</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">  -c, --config string   指定配置文件，默认 config/default.toml (default &quot;config/default.toml&quot;)</span><br><span class="line">  -h, --help            help for clickvisual</span><br><span class="line"></span><br><span class="line">Use &quot;clickvisual [command] --help&quot; for more information about a command.</span><br></pre></td></tr></table></figure>

<p>从命令中可以看出，启动 ClickVisual 应该是使用 server 参数，通过 <code>-c</code> 传入配置文件，默认配置文件是 <code>config/default.toml</code>，我们要调整这个配置文件中的 MySQL 和 Redis 的认证信息，我的环境配置如下：</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[redis]</span></span><br><span class="line"><span class="attr">debug</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">addr</span> = <span class="string">&quot;127.0.0.1:6379&quot;</span></span><br><span class="line"><span class="attr">writeTimeout</span> = <span class="string">&quot;3s&quot;</span></span><br><span class="line"><span class="attr">password</span> = <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">[mysql]</span></span><br><span class="line"><span class="attr">debug</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># database DSN</span></span><br><span class="line"><span class="attr">dsn</span> = <span class="string">&quot;root:1234@tcp(127.0.0.1:3307)/clickvisual?charset=utf8mb4&amp;collation=utf8mb4_general_ci&amp;parseTime=True&amp;loc=Local&amp;readTimeout=1s&amp;timeout=1s&amp;writeTimeout=3s&quot;</span></span><br><span class="line"><span class="comment"># log level</span></span><br><span class="line"><span class="attr">level</span> = <span class="string">&quot;debug&quot;</span></span><br><span class="line"><span class="comment"># maximum number of connections in the idle connection pool for database</span></span><br><span class="line"><span class="attr">maxIdleConns</span> = <span class="number">5</span></span><br><span class="line"><span class="comment"># maximum number of open connections for database</span></span><br><span class="line"><span class="attr">maxOpenConns</span> = <span class="number">10</span></span><br><span class="line"><span class="comment"># maximum amount of time a connection</span></span><br><span class="line"><span class="attr">connMaxLifetime</span> = <span class="string">&quot;300s&quot;</span></span><br></pre></td></tr></table></figure>

<p>OK，启动 ClickVisual：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup ./clickvisual server &amp;&gt;stdout.log &amp;</span><br></pre></td></tr></table></figure>

<p>ClickVisual 启动之后监听在 19011 端口，可以检查这个端口是否存活：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ss -tlnp|grep 19011</span><br></pre></td></tr></table></figure>

<p>ClickVisual 解压缩之后，里边有个 sql 脚本，位于 scripts&#x2F;migration&#x2F;database.sql，需要把这个 sql 导入 MySQL：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mysql -uroot -p &lt; scripts/migration/database.sql</span><br></pre></td></tr></table></figure>

<p>之后就可以浏览器访问 19011 了，ClickVisual 会提示你进行表结构初始化，初始账号密码是 <code>clickvisual/clickvisual</code>。</p>
<h3 id="Categraf"><a href="#Categraf" class="headerlink" title="Categraf"></a>Categraf</h3><p>最后一个要安装的组件是日志采集器，我这里使用 categraf，下载地址如下：</p>
<blockquote>
<ul>
<li>下载：<a href="https://flashcat.cloud/download/categraf/">https://flashcat.cloud/download/categraf/</a></li>
<li>代码：<a href="https://github.com/flashcatcloud/categraf">https://github.com/flashcatcloud/categraf</a></li>
</ul>
</blockquote>
<p>这里选择 <code>v0.3.38</code> 版本，下载解压缩，重点需要 categraf 二进制以及 conf 目录下的 logs.toml，其他所有 <code>input.</code> 打头的配置都是指标采集插件，全部删除，另外也删除 conf 目录下的 traces.yaml，搞的干净点。然后修改两个配置文件。</p>
<p>1、修改 config.toml，关闭 heartbeat：</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[heartbeat]</span></span><br><span class="line"><span class="attr">enable</span> = <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>Categraf 和 Nightingale 配合工作，主要处理指标场景，我们现在不测试指标，只是测试日志采集，所以不需要 Nightingale，关闭 Heartbeat。</p>
<p>2、修改 logs.toml，要给出要采集的日志路径以及要发往的 Kafka 地址。</p>
<figure class="highlight toml"><table><tr><td class="code"><pre><span class="line"><span class="section">[logs]</span></span><br><span class="line"><span class="attr">api_key</span> = <span class="string">&quot;x&quot;</span></span><br><span class="line"><span class="attr">enable</span> = <span class="literal">true</span></span><br><span class="line"><span class="attr">send_to</span> = <span class="string">&quot;127.0.0.1:9092&quot;</span></span><br><span class="line"><span class="attr">send_type</span> = <span class="string">&quot;kafka&quot;</span></span><br><span class="line"><span class="attr">topic</span> = <span class="string">&quot;categraf&quot;</span></span><br><span class="line"><span class="attr">use_compress</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">send_with_tls</span> = <span class="literal">false</span></span><br><span class="line"><span class="attr">batch_wait</span> = <span class="number">5</span></span><br><span class="line"><span class="attr">run_path</span> = <span class="string">&quot;/opt/categraf/run&quot;</span></span><br><span class="line"><span class="attr">open_files_limit</span> = <span class="number">100</span></span><br><span class="line"><span class="attr">scan_period</span> = <span class="number">10</span></span><br><span class="line"><span class="attr">frame_size</span> = <span class="number">9000</span></span><br><span class="line"><span class="attr">collect_container_all</span> = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="section">[[logs.items]]</span></span><br><span class="line"><span class="attr">type</span> = <span class="string">&quot;file&quot;</span></span><br><span class="line"><span class="attr">path</span> = <span class="string">&quot;/root/works/catpaw/stdout.log&quot;</span></span><br><span class="line"><span class="attr">source</span> = <span class="string">&quot;app&quot;</span></span><br><span class="line"><span class="attr">service</span> = <span class="string">&quot;catpaw&quot;</span></span><br><span class="line"><span class="attr">topic</span> = <span class="string">&quot;catpaw&quot;</span></span><br><span class="line"><span class="attr">accuracy</span> = <span class="string">&quot;s&quot;</span></span><br></pre></td></tr></table></figure>

<p>其中 send_to 字段是配置了 Kafka 的地址，send_type 配置为 kafka，collect_container_all 设置为 false 避免一些非 K8s 环境下的报错日志，<code>[[logs.items]]</code> 是双中括号，在 toml 里表示数组，即可以配置多个 <code>[[logs.items]]</code> 段，这里我采集了 catpaw 的 stdout.log，source、service 都是标签，topic 是日志发往 Kafka 的 Topic。</p>
<p>stdout.log 的日志内容，给大家看一行例子：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;level&quot;:&quot;error&quot;,&quot;ts&quot;:&quot;2023-11-01T16:57:15+08:00&quot;,&quot;caller&quot;:&quot;http/http.go:236&quot;,&quot;msg&quot;:&quot;failed to send http request&quot;,&quot;error&quot;:&quot;Get \&quot;http://a.cn\&quot;: dial tcp: lookup a.cn on 183.60.83.19:53: no such host&quot;,&quot;plugin&quot;:&quot;http&quot;,&quot;target&quot;:&quot;http://a.cn&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>这是一个 json 格式的日志，不需要额外的数据清洗了，直接采集即可。推荐大家写的程序都打印 json 格式的日志，对于日志采集非常方便。</p>
<p>启动 categraf：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup ./categraf &amp;&gt; categraf.log &amp;</span><br></pre></td></tr></table></figure>

<p>通过 ps 查看 categraf 进程是否启动成功，查看 categraf.log 是否有异常日志，如果一切正常，咱们就可以去 Kowl 查看日志了。</p>
<h2 id="查看-Kafka-中的日志"><a href="#查看-Kafka-中的日志" class="headerlink" title="查看 Kafka 中的日志"></a>查看 Kafka 中的日志</h2><p><img src="/images/1704349603-6a405ecd3a92f6644978b89b2b79e7dc.png" alt="20240104170554"></p>
<p>其中 message 字段是日志原文，timestamp 是采集日志时的时间戳，有这俩字段，ClickVisual 就可以处理了。其他字段是 categraf 自动添加的，比如 source、service、topic，即便没有这些额外的字段，也不影响 ClickVisual 的使用。</p>
<h2 id="在-ClickVisual-配置日志库"><a href="#在-ClickVisual-配置日志库" class="headerlink" title="在 ClickVisual 配置日志库"></a>在 ClickVisual 配置日志库</h2><p>终于到了最后一步了，到 ClickVisual 配置日志库。首先去系统管理里新增 ClickHouse 实例：</p>
<p><img src="/images/1704349603-8cd67a45b1278fab534822c7cb563917.png" alt="20240104170836"></p>
<p>我之前创建过，现在点击编辑给大家看一下内容：</p>
<p><img src="/images/1704349603-298960a7c6343b253890ee90b1cddbe0.png" alt="20240104170922"></p>
<p>进入日志菜单，可以看到刚才添加的 ClickHouse 实例，右键添加数据库（一个 ClickHouse 实例里可以创建多个数据库，跟 MySQL 一样，我这里直接取名 db01，你随意 ）：</p>
<p><img src="/images/1704349603-6bda1ef9fca28ea2c4164a91cbbc2dbe.png" alt="20240104171048"></p>
<p>之后在 db01 上右键，新增日志库。数据表通常填成 topic 名字就行，其实就是 log stream 的名字。source 字段很关键，ClickVisual 会根据 source 来提取日志，Kowl 的截图中大家看到了，我的日志里有好几个字段：message、status、timestamp、agent_hostname、fcservice、fcsource 等，但是我在 source 里故意少填几个字段，填入如下内容：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;x&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;timestamp&quot;</span><span class="punctuation">:</span> <span class="number">1698829486</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;y&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>source 里填 json 结构，不用填真实内容，只要填一个假数据结构，ClickVisual 能推断出各个字段的类型就行，我呢，就填了上面三个字段。点击转换，选择时间字段和日志详情字段：</p>
<p><img src="/images/1704349603-e81da84c0514c80349aaa35a1ed36608.png" alt="20240104171738"></p>
<p>确定之后，ClickVisual 自动填充了相关字段，然后，我们补齐剩下的 Kafka 信息即可：</p>
<p><img src="/images/1704349603-49f9b45bac1936fcfe756e83ed5a2616.png" alt="20240104171837"></p>
<p>确定之后，稍等几秒钟，就可以看到数据了，我的截图如下：</p>
<p><img src="/images/1704349603-76dc11043e1eebeb54132d0a24946e70.png" alt="20240104171934"></p>
<p>其实，刚开始日志字段下面是空的，右侧日志详情里的 level 字段也没有背景色。基础字段里有 status，显然，因为配置日志库的时候，source 样例只给了 message、timestamp、status 三个字段，所以，ClickHouse 只拿到一个基本字段 status，如果当时要是把 fcservice、fcsource 也作为 source 样例写上，基础字段里大概率就会有了。</p>
<h2 id="查看-ClickHouse-中的库表"><a href="#查看-ClickHouse-中的库表" class="headerlink" title="查看 ClickHouse 中的库表"></a>查看 ClickHouse 中的库表</h2><p><code>clickhouse client</code> 进入 ClickHouse 客户端，可以看到相关库表：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">localhost.localdomain :) use db01</span><br><span class="line"></span><br><span class="line">USE db01</span><br><span class="line"></span><br><span class="line">Query id: a96ccd16-990c-4c8a-9d07-7bba0d0c4425</span><br><span class="line"></span><br><span class="line">Ok.</span><br><span class="line"></span><br><span class="line">0 rows in set. Elapsed: 0.001 sec.</span><br><span class="line"></span><br><span class="line">localhost.localdomain :) show tables;</span><br><span class="line"></span><br><span class="line">SHOW TABLES</span><br><span class="line"></span><br><span class="line">Query id: 3b0849f7-cd05-481e-b786-5c8c1870caaf</span><br><span class="line"></span><br><span class="line">┌─name────────────────────┐</span><br><span class="line">│ catpaw                  │</span><br><span class="line">│ catpaw_stream           │</span><br><span class="line">│ catpaw_view             │</span><br><span class="line">│ qinxiaohuisyslog        │</span><br><span class="line">│ qinxiaohuisyslog_stream │</span><br><span class="line">│ qinxiaohuisyslog_view   │</span><br><span class="line">└─────────────────────────┘</span><br><span class="line"></span><br><span class="line">6 rows in set. Elapsed: 0.001 sec.</span><br></pre></td></tr></table></figure>

<p>catpaw 相关的三个表就是我刚才一通操作产生的，qinxiaohuisyslog 相关的三个表不用关注，那是之前测试的时候生成的。看一下 stream 表的表结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localhost.localdomain :) show create table catpaw_stream\G</span><br><span class="line"></span><br><span class="line">SHOW CREATE TABLE catpaw_stream</span><br><span class="line"></span><br><span class="line">Query id: 1c75d947-d122-48cf-ad0e-e4f4049795b5</span><br><span class="line"></span><br><span class="line">Row 1:</span><br><span class="line">──────</span><br><span class="line">statement: CREATE TABLE db01.catpaw_stream</span><br><span class="line">(</span><br><span class="line">    `status` String,</span><br><span class="line">    `timestamp` Float64,</span><br><span class="line">    `message` String CODEC(ZSTD(1))</span><br><span class="line">)</span><br><span class="line">ENGINE = Kafka</span><br><span class="line">SETTINGS kafka_broker_list = &#x27;127.0.0.1:9092&#x27;, kafka_topic_list = &#x27;catpaw&#x27;, kafka_group_name = &#x27;db01_catpaw&#x27;, kafka_format = &#x27;JSONEachRow&#x27;, kafka_num_consumers = 1, kafka_skip_broken_messages = 0</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br></pre></td></tr></table></figure>

<p>这是一个引擎类型为 Kafka 的 Table，再看一下 catpaw_view：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localhost.localdomain :) show create table catpaw_view\G</span><br><span class="line"></span><br><span class="line">SHOW CREATE TABLE catpaw_view</span><br><span class="line"></span><br><span class="line">Query id: 99c22d6a-a617-43fc-9963-3575778b0623</span><br><span class="line"></span><br><span class="line">Row 1:</span><br><span class="line">──────</span><br><span class="line">statement: CREATE MATERIALIZED VIEW db01.catpaw_view TO db01.catpaw</span><br><span class="line">(</span><br><span class="line">    `status` String,</span><br><span class="line">    `_time_second_` DateTime,</span><br><span class="line">    `_time_nanosecond_` DateTime64(9),</span><br><span class="line">    `_raw_log_` String</span><br><span class="line">) AS</span><br><span class="line">SELECT</span><br><span class="line">    status,</span><br><span class="line">    toDateTime(toInt64(timestamp)) AS _time_second_,</span><br><span class="line">    fromUnixTimestamp64Nano(toInt64(timestamp * 1000000000)) AS _time_nanosecond_,</span><br><span class="line">    message AS _raw_log_</span><br><span class="line">FROM db01.catpaw_stream</span><br><span class="line">WHERE 1 = 1</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br></pre></td></tr></table></figure>

<p>这是一个 ClickHouse 物化视图，查询 stream 表的数据，塞入日志结果表 catpaw，我们看一下日志结果表 catpaw 的表结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localhost.localdomain :) show create table catpaw\G</span><br><span class="line"></span><br><span class="line">SHOW CREATE TABLE catpaw</span><br><span class="line"></span><br><span class="line">Query id: d06e11b9-4b5a-4594-97af-877435b93238</span><br><span class="line"></span><br><span class="line">Row 1:</span><br><span class="line">──────</span><br><span class="line">statement: CREATE TABLE db01.catpaw</span><br><span class="line">(</span><br><span class="line">    `status` String,</span><br><span class="line">    `_time_second_` DateTime,</span><br><span class="line">    `_time_nanosecond_` DateTime64(9),</span><br><span class="line">    `_raw_log_` String CODEC(ZSTD(1))</span><br><span class="line">    INDEX idx_raw_log _raw_log_ TYPE tokenbf_v1(30720, 2, 0) GRANULARITY 1</span><br><span class="line">)</span><br><span class="line">ENGINE = MergeTree</span><br><span class="line">PARTITION BY toYYYYMMDD(_time_second_)</span><br><span class="line">ORDER BY _time_second_</span><br><span class="line">TTL toDateTime(_time_second_) + toIntervalDay(1)</span><br><span class="line">SETTINGS index_granularity = 8192</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br></pre></td></tr></table></figure>

<p>如果根据 status 字段来筛选，速度是比较快的，但是如果想根据 <code>_raw_log_</code> 里的信息来筛选，比如根据 level 字段来筛选，level 是日志原文 json 里的一个字段，不是一等公民字段，速度就慢了，ClickVisual 官方建议，这种情况，应该把日志原文里的过滤字段单独出来作为一个字段，点击日志字段右侧的小齿轮：</p>
<p><img src="/images/1704349603-d6de7004c2269333a29361134cab0e15.png" alt="20240104174054"></p>
<p>可以把日志原文那个 json 里的 level 字段单独提取出来，配置如下</p>
<p><img src="/images/1704349603-feca7f8397d7e9bfee10aa30bf0c2d6d.png" alt="20240104173246"></p>
<p>如上操作之后，重新查看 catpaw 和 catpaw_view 的表结构：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">localhost.localdomain :) show create table catpaw\G</span><br><span class="line"></span><br><span class="line">SHOW CREATE TABLE catpaw</span><br><span class="line"></span><br><span class="line">Query id: d06e11b9-4b5a-4594-97af-877435b93238</span><br><span class="line"></span><br><span class="line">Row 1:</span><br><span class="line">──────</span><br><span class="line">statement: CREATE TABLE db01.catpaw</span><br><span class="line">(</span><br><span class="line">    `status` String,</span><br><span class="line">    `_time_second_` DateTime,</span><br><span class="line">    `_time_nanosecond_` DateTime64(9),</span><br><span class="line">    `_raw_log_` String CODEC(ZSTD(1)),</span><br><span class="line">    `level` Nullable(String),</span><br><span class="line">    INDEX idx_raw_log _raw_log_ TYPE tokenbf_v1(30720, 2, 0) GRANULARITY 1</span><br><span class="line">)</span><br><span class="line">ENGINE = MergeTree</span><br><span class="line">PARTITION BY toYYYYMMDD(_time_second_)</span><br><span class="line">ORDER BY _time_second_</span><br><span class="line">TTL toDateTime(_time_second_) + toIntervalDay(1)</span><br><span class="line">SETTINGS index_granularity = 8192</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br><span class="line"></span><br><span class="line">localhost.localdomain :) show create table catpaw_view\G</span><br><span class="line"></span><br><span class="line">SHOW CREATE TABLE catpaw_view</span><br><span class="line"></span><br><span class="line">Query id: ebfebeb7-d8f5-4427-b3ba-33c0d07d24b1</span><br><span class="line"></span><br><span class="line">Row 1:</span><br><span class="line">──────</span><br><span class="line">statement: CREATE MATERIALIZED VIEW db01.catpaw_view TO db01.catpaw</span><br><span class="line">(</span><br><span class="line">    `status` String,</span><br><span class="line">    `_time_second_` DateTime,</span><br><span class="line">    `_time_nanosecond_` DateTime64(9),</span><br><span class="line">    `_raw_log_` String,</span><br><span class="line">    `level` Nullable(String)</span><br><span class="line">) AS</span><br><span class="line">SELECT</span><br><span class="line">    status,</span><br><span class="line">    toDateTime(toInt64(timestamp)) AS _time_second_,</span><br><span class="line">    fromUnixTimestamp64Nano(toInt64(timestamp * 1000000000)) AS _time_nanosecond_,</span><br><span class="line">    message AS _raw_log_,</span><br><span class="line">    toNullable(toString(replaceAll(JSONExtractRaw(message, &#x27;level&#x27;), &#x27;&quot;&#x27;, &#x27;&#x27;))) AS level</span><br><span class="line">FROM db01.catpaw_stream</span><br><span class="line">WHERE 1 = 1</span><br><span class="line"></span><br><span class="line">1 row in set. Elapsed: 0.001 sec.</span><br></pre></td></tr></table></figure>

<p>雾化视图 catpaw_view 里，增加了对 level 字段的提取，日志结果表 catpaw 里也新增了一个 level 字段。看来 ClickVisual 是执行了一些 alter table 的语句。之后就可以这么查了（不用像之前使用 like 语句）：</p>
<p><img src="/images/1704349603-1fe6827bc79e6f2d8269eb5624be2779.png" alt="20240104173612"></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>ClickVisual 的整体思路设计挺巧妙的，不过业界使用 ClickHouse 存储日志，大都是使用的双 array 存储动态字段。。</p>
]]></content>
      <categories>
        <category>ClickHouse</category>
      </categories>
      <tags>
        <tag>ClickHouse</tag>
        <tag>Log</tag>
      </tags>
  </entry>
  <entry>
    <title>MySQL双主切换主从</title>
    <url>/2024/01/05/MySQL%E5%8F%8C%E4%B8%BB%E5%88%87%E6%8D%A2%E4%B8%BB%E4%BB%8E/</url>
    <content><![CDATA[<h1 id="一、遇到的坑"><a href="#一、遇到的坑" class="headerlink" title="一、遇到的坑"></a>一、遇到的坑</h1><p>一个月前，我们在测试环境部署了一套 MySQL 高可用架构，也就是 MySQL 双主 + Keepalived 的模式。</p>
<p><strong>在这一个月遇到了很多坑</strong>：</p>
<ul>
<li>因为两个 MySQL 节点都可以写入，极其容易造成主键重复，进而导致主从同步失败。</li>
<li>同步失败后，Slave_SQL_Thread 线程就停了，除非解决了同步的错误，才能继续进行同步。</li>
<li>同步失败的错误，不会只有一条记录有问题，往往是一大片的同步问题。</li>
<li>两个节点互相缺少对方的数据。</li>
<li>主从的同步延迟，切换到新主库后，数据不是最新。</li>
<li>当出现不一致时，无法确定以哪个库为准。</li>
</ul>
<p>造成上面问题的主要原因就是因为两个节点都支持写入 + 双主可以随时切换。</p>
<p>解决这种问题的方案有 改进自增主键的步长（影响未评估），使用 GTID 方案（未验证）。即使这样，双主同步的风险还是有，而且不同步后，如何处理是个大难题。</p>
<p>那么回到我们最初的想法：为什么会选择双主？</p>
<p>最开始的目的就是为了高可用。双主就是说有一台 MySQL 节点挂了，另外一台能够顶上，对于用户来说是无感的，给运维人员一定的缓冲时间来排查 MySQL 故障。另外老的主节点恢复后，不用改配置就能立即成为从节点。</p>
<p>经过这一个月的 MySQL 双主模式的试运行，最后我们还是决定切换到 MySQL 主 - 从模式。</p>
<p>双主模式就是两个节点即是主节点也是从节点，那我们现在切换到一主一从模式，就可以认为是降级。接下来我们聊聊双主换成主从的思路和步骤。</p>
<h1 id="二、双主降为主从"><a href="#二、双主降为主从" class="headerlink" title="二、双主降为主从"></a>二、双主降为主从</h1><h1 id="双主模式"><a href="#双主模式" class="headerlink" title="双主模式"></a>双主模式</h1><p>双主模式的原理图如下：</p>
<p><img src="/images/1704442029-ac448651386bf39c48dd014fb7d7aeef.webp"></p>
<p>两个主节点，都安装了 KeepAlived 高可用组件，对外提供了一个 VIP，只有一个节点接管 VIP，客户端访问的请求都是到这个 VIP，另外一个节点处于待机状态。</p>
<h1 id="主从模式"><a href="#主从模式" class="headerlink" title="主从模式"></a>主从模式</h1><p>和双主不一样的地方如下，从节点是只读的。</p>
<p><img src="/images/1704442029-d57cb187479aecd68c6c6ee966a15cdf.webp"></p>
<p>一主一从是主从模式中的一种，具有以下特点：</p>
<ul>
<li>一个主节点，一个从节点，主节点提供给客户端访问，从节点只通过主节点的 binlog 进行数据同步。</li>
<li>从节点是只读的。从节点可以作为只读节点提供类似报表查询等耗时读操作。</li>
<li>主节点宕机后，从节点成为主节点，也是高可用的一种方案。</li>
</ul>
<p>相对于双主的高可用方案，不同之处如下：</p>
<ul>
<li>主从切换需要用脚本将从库设置为可读可写。</li>
<li>主从切换后，需要将从库设置为不同步老主库。</li>
<li>主从切换后，老的主库恢复后，需要人工设置为只读，且开启同步新主库的功能。</li>
</ul>
<p>这样来看，主从模式在异常情况下，多了些人工操作。</p>
<p>在异常情况下，主从切换一般是这样处理的：通过脚本监测主节点是否宕机，如果主库宕机了，则从库自动切换为新的主库，待老主库恢复后，就作为从库同步新主库数据，新主库上的 Keepalived 接管 VIP。</p>
<p>目前改为主从模式有两种方式：</p>
<ul>
<li>简单方式：人工切换模式，主节点故障后需要人工切换主从。</li>
<li>复杂方式：高可用方式，主节点故障后，主从自动切换，读写分离自动切换。</li>
</ul>
<p>本篇只涉及简单方式，复杂方式的原理和配置步骤放到下篇专门讲解。</p>
<h1 id="三、改为主从的简单方式"><a href="#三、改为主从的简单方式" class="headerlink" title="三、改为主从的简单方式"></a>三、改为主从的简单方式</h1><p>简单方式的主从切换流程如下：</p>
<p><img src="/images/1704442029-29b59aabe4677a8712e685d8047b4a54.webp"></p>
<p>和双主模式的主从切换的区别是，从节点是只读的，Keepalived 没有启动，需要人工操作主从切换和启动 Keepalived。</p>
<p><strong>修改配置的步骤如下</strong>：</p>
<p>① 为了避免从节点上的 Keepalived 自动接管 VIP 的情况出现，将从节点的 Keepalived 停止，如果遇到主节点故障，则需要人工干预来进行主从切换。从节点切换为主节点后，重新启动从节点 Keepalived。</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">status</span> keepalived</span><br></pre></td></tr></table></figure>

<p>② 保留主节点的 Keepalived，保证 MySQL 的连接信息都不需要变。</p>
<p>③ 主节点 node1 停用 MySQL 的同步线程。</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="keyword">STOP</span> SLAVE</span><br></pre></td></tr></table></figure>

<p>④ 从节点 node2 设置 MySQL 为只读模式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 修改 my.cnf 文件read_only = 1</span></span><br></pre></td></tr></table></figure>

<p>⑤ 移除主节点 node1 同步 node2 MySQL 的权限。</p>
<p>⑥ 从节点 node1 的开机启动项中移除 keepalived 服务自启动。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">修改启动项配置sudo vim /etc/rc.local<span class="comment"># 移除以下脚本systemctl start keepalived</span></span></span><br></pre></td></tr></table></figure>

<h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>双主高可用的坑确实比较多，没有 MySQL 的硬核知识真的很难搞定。在这一个月的实践中，深刻体会到了双主同步的难点所在，最后还是选择了一主一从的模式。</p>
<p>另外因为最开始的配置都是双主模式下的，所以要修改一些配置，来改为主从模式。因项目时间比较紧，目前采取的是非高可用的主从模式。</p>
]]></content>
      <categories>
        <category>Mysql</category>
      </categories>
      <tags>
        <tag>Mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus监控sqlserver</title>
    <url>/2024/01/09/Prometheus%E7%9B%91%E6%8E%A7sqlserver/</url>
    <content><![CDATA[<h2 id="【0】核心参考"><a href="#【0】核心参考" class="headerlink" title="【0】核心参考"></a>【0】核心参考</h2><p>sql_exporter使用、采集器源码： <a href="https://github.com/free/sql_exporter">https://github.com/free/sql_exporter</a> </p>
<p>MSSQL简略仪表盘：<a href="https://grafana.com/grafana/dashboards/9336">https://grafana.com/grafana/dashboards/9336</a></p>
<p>更多、更高级的sql server采集指标：<a href="https://github.com/influxdata/telegraf/tree/master/plugins/inputs/sqlserver?tdsourcetag=s_pctim_aiomsg">https://github.com/influxdata/telegraf/tree/master/plugins/inputs/sqlserver?tdsourcetag=s_pctim_aiomsg</a></p>
<p>sql server 对象监控 参考：<a href="https://docs.microsoft.com/zh-cn/sql/relational-databases/performance-monitor/use-sql-server-objects?view=sql-server-ver15">https://docs.microsoft.com/zh-cn/sql/relational-databases/performance-monitor/use-sql-server-objects?view=sql-server-ver15</a></p>
<h3 id="【简述】"><a href="#【简述】" class="headerlink" title="【简述】"></a>【简述】</h3><p>MSSQL的监控，官网没有提供采集器，所以只能用其他程序来监控，本文就用了 sql-exporter。</p>
<p>它可以理解成一个远程连接数据库的工具，可以用它来连接sql server&#x2F;mysql 等等数据库，并以SQL查询方式采集SQL查询结果。</p>
<p>SQL_Exporter 是中心化的，可以把对不同实例的agent链接，都放在一台linux服务器上，以便管理、修改。你想想看，如果你更新了采集指标，只需要在该台中心化服务器重启sql_exporter agent采集客户端即可生效。</p>
<p>不像其他 mysql&#x2F;linux&#x2F;windows采集器，他们是部署在实际被采集的服务器上的，如果你想要更新采集器（虽然它做的很好了，不需要更新。除此之外就是无法加入自定义的采集指标或者采集项），那么需要到那么多台被采集的客户端机器上去覆盖更新，很痛苦的。</p>
<h2 id="【1】安装配置-sql-exporter"><a href="#【1】安装配置-sql-exporter" class="headerlink" title="【1】安装配置 sql_exporter"></a>【1】安装配置 sql_exporter</h2><h3 id="【1-1】下载解压-sql-exporter"><a href="#【1-1】下载解压-sql-exporter" class="headerlink" title="【1.1】下载解压 sql_exporter"></a>【1.1】下载解压 sql_exporter</h3><p>下载：<a href="https://github.com/free/sql_exporter/releases">https://github.com/free/sql_exporter&#x2F;releases</a></p>
<p>#wget <a href="https://github.com/free/sql/_exporter/releases/download/0.5/sql/_exporter-0.5.linux-amd64.tar.gz">https://github.com/free/sql\_exporter/releases/download/0.5/sql\_exporter-0.5.linux-amd64.tar.gz</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir  /soft</span><br><span class="line">cd /soft</span><br><span class="line">wget https://github.com/free/sql_exporter/releases/download/0.5/sql_exporter-0.5.linux-amd64.tar.gz</span><br><span class="line">tar -zxf sql_exporter-0.5.linux-amd64.tar.gz </span><br><span class="line">ln -s sql_exporter-0.5.linux-amd64 sql_exporter</span><br><span class="line">cd sql_exporter</span><br></pre></td></tr></table></figure>

<h3 id="【1-2】修改配置文件"><a href="#【1-2】修改配置文件" class="headerlink" title="【1.2】修改配置文件"></a>【1.2】修改配置文件</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Global defaults.</span><br><span class="line">global:</span><br><span class="line">  # Subtracted from Prometheus&#x27; scrape_timeout to give us some headroom and prevent Prometheus from timing out first.</span><br><span class="line">  scrape_timeout_offset: 500ms</span><br><span class="line">  # Minimum interval between collector runs: by default (0s) collectors are executed on every scrape.</span><br><span class="line">  min_interval: 0s</span><br><span class="line">  # Maximum number of open connections to any one target. Metric queries will run concurrently on multiple connections,</span><br><span class="line">  # as will concurrent scrapes.</span><br><span class="line">  max_connections: 10</span><br><span class="line">  # Maximum number of idle connections to any one target. Unless you use very long collection intervals, this should</span><br><span class="line">  # always be the same as max_connections.</span><br><span class="line">  max_idle_connections: 5</span><br><span class="line"></span><br><span class="line"># The target to monitor and the collectors to execute on it.</span><br><span class="line">target:</span><br><span class="line">  # Data source name always has a URI schema that matches the driver name. In some cases (e.g. MySQL)</span><br><span class="line">  # the schema gets dropped or replaced to match the driver expected DSN format.</span><br><span class="line">  # data_source_name: &#x27;sqlserver://sql_exporter:a123456!@192.168.191.81:1433/?encrypt=disable&#x27;</span><br><span class="line">  data_source_name: &#x27;sqlserver://sa:a123456!@192.168.191.81:1433&#x27;</span><br><span class="line">   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  # Collectors (referenced by name) to execute on the target.</span><br><span class="line">  collectors: [mssql_standard]</span><br><span class="line"></span><br><span class="line"># Collector files specifies a list of globs. One collector definition is read from each matching file.</span><br><span class="line">collector_files:</span><br><span class="line">  - &quot;*.collector.yml&quot;</span><br></pre></td></tr></table></figure>

<p>解析：</p>
<p>（1）global</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">收集器中允许最慢的SQL执行超时时间，注意该超时时间应小于prometheus中的 scrape_time</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrape_timeout_offset: 500ms #用于从 prometheus的 scrape_timeout 中减去一个偏移时间，防止 prometheus 先超时，如果设置了 scrape_timeout,scrapemin_interval: 0s  #收集器每隔0运行一次（默认情况下）收集器每隔0运行一次。max_connections:</span><br><span class="line">10 #到任何一个目标的最大打开连接数。采集器信息查询将在多个连接上并发运行，</span><br><span class="line">max_idle_connections:</span><br><span class="line">5 #到任何一个目标的最大空闲连接数。除非使用很长的收集间隔，否则应该</span><br></pre></td></tr></table></figure>

<p>（2）target</p>
<p>#数据源</p>
<p>data_source_name: ‘sqlserver:&#x2F;&#x2F;sa:a123456!@192.168.191.81:1433’</p>
<p>（3）collector</p>
<p>#引用收集器文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">collector_files:</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- &quot;*.collector.yml&quot;</span><br></pre></td></tr></table></figure>

<h3 id="【1-3】自带的sql-server监控采集器"><a href="#【1-3】自带的sql-server监控采集器" class="headerlink" title="【1.3】自带的sql server监控采集器"></a>【1.3】自带的sql server监控采集器</h3><p>　　<img src="/images/1704769981-b40ce2a4ec2f49df9c16ba90e41f86cb.png"></p>
<p> 这里我们配置文件中 已经引用了 配置文件相同目录下的 “*.collector.yml”，所以该文件也被包含进来了。</p>
<h2 id="【2】整合-prometheus-sql-exporter"><a href="#【2】整合-prometheus-sql-exporter" class="headerlink" title="【2】整合 prometheus + sql_exporter"></a>【2】整合 prometheus + sql_exporter</h2><p>那么这个东西其实是一个采集器啊，但是为什么不能放到windows上呢…….好吧，不管了好像没什么很好的windows采集器，自己也不会做，先用着吧</p>
<h3 id="【2-1】修改prometheus-yml配置文件"><a href="#【2-1】修改prometheus-yml配置文件" class="headerlink" title="【2.1】修改prometheus.yml配置文件"></a>【2.1】修改prometheus.yml配置文件</h3><p>　　<img src="/images/1704769981-e039e3161168236874b311463edf607c.png"></p>
<h3 id="【2-2】启动-sql-exporter"><a href="#【2-2】启动-sql-exporter" class="headerlink" title="【2.2】启动 sql_exporter"></a>【2.2】启动 sql_exporter</h3><p>（1）封装成系统服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=sql_exporter</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/soft/sql_exporter/sql_exporter -config.file /soft/sql_exporter/sql_exporter.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>（2）启动、查看</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start sql_exporter</span><br><span class="line">systemctl status sql_exporter -l</span><br></pre></td></tr></table></figure>

<p>启动成功，并且 默认端口是 9399</p>
<p>　　<img src="/images/1704769981-38dd3674d016f4320df0950bc3333d51.png"></p>
<h3 id="【2-3】核验"><a href="#【2-3】核验" class="headerlink" title="【2.3】核验"></a>【2.3】核验</h3><p><a href="http://192.168.175.131:9399/metrics">http://192.168.175.131:9399/metrics</a></p>
<p>如下图，这就成功了啊</p>
<p>　　<img src="/images/1704769981-a92b03332a9df677ee301e2db612edab.png"></p>
<h2 id="【3】结合-grafana-显示"><a href="#【3】结合-grafana-显示" class="headerlink" title="【3】结合 grafana 显示"></a>【3】结合 grafana 显示</h2><h3 id="【3-1】导入MSSQL模板"><a href="#【3-1】导入MSSQL模板" class="headerlink" title="【3.1】导入MSSQL模板"></a>【3.1】导入MSSQL模板</h3><p><a href="https://grafana.com/grafana/dashboards?dataSource=prometheus&search=mssql">https://grafana.com/grafana/dashboards?dataSource=prometheus&search=mssql</a></p>
<p> 　　<img src="/images/1704769981-a1720f0d4e75d4b255bb7da21a64c076.png"></p>
<p>　　<img src="/images/1704769981-0ffdcb285622237c50f58660bba5f127.png"></p>
<p> 导入这个 9336 模板</p>
<p>　　<img src="/images/1704769981-687b9788e1f63c10a568256c1f7c3c15.png"></p>
<h3 id="【3-2】查看仪表盘"><a href="#【3-2】查看仪表盘" class="headerlink" title="【3.2】查看仪表盘"></a>【3.2】查看仪表盘</h3><p>最后结果：好像还行，但很多图表no data ，这个模板和采集器不是很配，有空可以自己配置修改一下</p>
<p>　　<img src="/images/1704769981-cc91182082aebc4998812c91c6f9041d.png"></p>
<h2 id="【4】自定义MSSQL"><a href="#【4】自定义MSSQL" class="headerlink" title="【4】自定义MSSQL"></a>【4】自定义MSSQL</h2><h3 id="【4-0】MSSQL权限与监控账户"><a href="#【4-0】MSSQL权限与监控账户" class="headerlink" title="【4.0】MSSQL权限与监控账户"></a>【4.0】MSSQL权限与监控账户</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">DECLARE @sql VARCHAR(max)</span><br><span class="line">SET @sql=CAST(&#x27;use master;CREATE LOGIN [sql_exporter] WITH PASSWORD=N&#x27;&#x27;qICJEasdqwDiOSrdT96&#x27;&#x27;, DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF; GRANT VIEW SERVER STATE TO [sql_exporter];</span><br><span class="line">GRANT VIEW ANY DEFINITION TO [sql_exporter];&#x27; AS VARCHAR(max))</span><br><span class="line"></span><br><span class="line">select @sql=@sql+CAST(&#x27;use &#x27;+name+&#x27;;CREATE USER [sql_exporter] FOR LOGIN [sql_exporter];</span><br><span class="line">EXEC sp_addrolemember N&#x27;&#x27;db_datareader&#x27;&#x27;, N&#x27;&#x27;sql_exporter&#x27;&#x27;;&#x27;+CHAR(10) AS VARCHAR(max)) </span><br><span class="line">from master.sys.databases  and state=0</span><br><span class="line">EXEC(@sql)</span><br></pre></td></tr></table></figure>

<p>防火墙什么的就不用我说了吧？</p>
<h3 id="【4-1】自定义采集器"><a href="#【4-1】自定义采集器" class="headerlink" title="【4.1】自定义采集器"></a>【4.1】自定义采集器</h3><h3 id="【4-2】采集器启动"><a href="#【4-2】采集器启动" class="headerlink" title="【4.2】采集器启动"></a>【4.2】采集器启动</h3><p>布置在linux 中间节点，也可以直接布置在prometheus节点上</p>
<p><strong>如果密码有特殊字符，在URL上使用报错，则参见附录，用特殊字符替换</strong></p>
<p><strong>比如密码： !@#$%^qwe123   转移成 %21%40%23%24%25%5Eqwe123</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup /data/mssql/sql_exporter -config.data-source-name=sqlserver://sql_exporter:qICJEasdqwDiOSrdT96@10.112.5.106:1433/?encrypt=disable -config.file=/data/mssql/sql_exporter.yml -web.listen-address=127.0.0.1:9400 -log_dir=/data/mssql_log &amp;</span><br><span class="line"></span><br><span class="line">nohup /data/mssql/sql_exporter -config.data-source-name=sqlserver://sql_exporter:qICJEasdqwDiOSrdT96@10.112.5.105:1433/?encrypt=disable -config.file=/data/mssql/sql_exporter.yml -web.listen-address=127.0.0.1:9401 -log_dir=/data/mssql_log &amp;</span><br></pre></td></tr></table></figure>

<h3 id="【4-3】prometheus配置"><a href="#【4-3】prometheus配置" class="headerlink" title="【4.3】prometheus配置"></a>【4.3】prometheus配置</h3><p>因为是自定义，所以在job name中特地加了 mssql 关键字，以便【4.4】中的变量好获取到所有mssql 的job，以供筛选</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: &#x27;大连娱网_mssql&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: [&#x27;127.0.0.1:9400&#x27;]</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;我是第一台机器DB[10.112.5.106]&#x27; </span><br><span class="line">　　- targets: [&#x27;127.0.0.1:9401&#x27;] </span><br><span class="line">　　　　labels: </span><br><span class="line">　　　　name: &#x27;我是第二台机器DB[10.112.5.10]&#x27;</span><br></pre></td></tr></table></figure>

<p>这里的配置，要和【4.2】的相互对应，否则会采集出问题。</p>
<p>这里的name 为什么会写上IP呢，这是因为为了辨识是哪台机器，也是为了【4.4】中的大盘 仪表盘上可以显示出机器IP来，因为我们这个是自定义的，无法像官网提供的一样。其实我们这个有点类似于pushgateway</p>
<h3 id="【4-4】自定义仪表盘"><a href="#【4-4】自定义仪表盘" class="headerlink" title="【4.4】自定义仪表盘"></a>【4.4】自定义仪表盘</h3><p> 核心变量</p>
<p>　　<img src="/images/1704769981-a26f4e1d7ba75d1a22d4e81b478ff42f.png"></p>
<p> 骚气界面预览</p>
<p>　　<img src="/images/1704769981-2725dd9870241032ce6aec78b3544e5a.png"></p>
<h3 id="【4-5】报警规则"><a href="#【4-5】报警规则" class="headerlink" title="【4.5】报警规则"></a>【4.5】报警规则</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groups:</span><br><span class="line">- name: MSSQL告警规则</span><br><span class="line">  rules:</span><br><span class="line"></span><br><span class="line">  - alert: mssql引擎服务宕机</span><br><span class="line">    expr:  windows_service_state&#123;state=&quot;running&quot;,exported_name=&quot;mssqlserver&quot;&#125;!=1</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">  - alert: mssql代理服务宕机</span><br><span class="line">    expr:  windows_service_state&#123;exported_name=&quot;sqlserveragent&quot;,state=&quot;running&quot;&#125;!=1                                                     </span><br><span class="line">    for: 1m         </span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line"></span><br><span class="line">  - alert: mssql引擎服务重启</span><br><span class="line">    expr: mssql_db_uptime &lt; 3600</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;mssql引擎服务1小时内有过重启，现已重启&#123;&#123; $value &#125;&#125; 秒&quot;</span><br><span class="line"></span><br><span class="line">  - alert: mssql数据库不可用/不可访问</span><br><span class="line">    expr: mssql_current_state_dbState !=0</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;db:&#123;&#123; $labels.db &#125;&#125;\n value:&#123;&#123; $labels.value &#125;&#125;=&#123;&#123; $value &#125;&#125; &quot;</span><br><span class="line"></span><br><span class="line">  - alert: mssql阻塞</span><br><span class="line">    expr: sum(mssql_current_state_blocking)&gt;5</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;mssql请求阻塞数&gt;5，当前：&#123;&#123; $value &#125;&#125; &quot;</span><br><span class="line"></span><br><span class="line">  - alert: mssql请求过多</span><br><span class="line">    expr: sum(mssql_current_state_requests)&gt;100</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;mssql请求数&gt;100，当前：&#123;&#123; $value &#125;&#125; &quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - alert: mssql死锁产生</span><br><span class="line">    expr: increase(mssql_counter&#123;type_object=&quot;SQLServer:Locks&quot;,type_counter=&quot;Number of Deadlocks/sec&quot;,type_instance=&quot;_Total&quot;&#125;[5m])&gt;0</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;mssql 5分钟内死锁产生次数：&#123;&#123; $value &#125;&#125; &quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - alert: mssql作业执行错误</span><br><span class="line">    expr: increase(mssql_job_state_today[5m])&gt;0</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;mssql 今天作业运行错误次数：&#123;&#123; $value &#125;&#125; &quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  - alert: mssql镜像状态变化</span><br><span class="line">    expr: increase(mssql_mirror_sync&#123;value=&quot;status&quot;&#125; [5m])!=0</span><br><span class="line">    for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      severity: warning</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &quot;详细: &#123;&#123; $labels &#125;&#125;&quot;</span><br><span class="line">      description: &quot;db:&#123;&#123; $labels.db &#125;&#125;\n value:&#123;&#123; $labels.value &#125;&#125;=&#123;&#123; $value &#125;&#125; &quot;</span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<h3 id="【4-6】报警模板"><a href="#【4-6】报警模板" class="headerlink" title="【4.6】报警模板"></a>【4.6】报警模板</h3><p>email</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123; define &quot;email.html&quot; &#125;&#125;</span><br><span class="line">&#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;&#123;&#123; range.Alerts &#125;&#125;</span><br><span class="line">告警项: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;</span><br><span class="line">项目组:&#123;&#123; .Labels.job &#125;&#125; &lt;br&gt;</span><br><span class="line">实例名:&#123;&#123; .Labels.name &#125;&#125;-&#123;&#123; .Labels.instance &#125;&#125;  &lt;br&gt;</span><br><span class="line">详情:  &#123;&#123; .Annotations.description &#125;&#125; &lt;br&gt;</span><br><span class="line">级别:  &#123;&#123; .Labels.severity &#125;&#125;  &lt;br&gt;</span><br><span class="line">开始时间:  &#123;&#123; (.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;&lt;br&gt;</span><br><span class="line">++++++++++++++++++++++++++++++++++++&lt;br&gt;</span><br><span class="line">+++++++++++++++++++++++++++++++++++++&lt;br&gt;</span><br><span class="line">&#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;</span><br><span class="line">&#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;&#123;&#123; range.Alerts &#125;&#125;</span><br><span class="line">Resolved&lt;br&gt;</span><br><span class="line">告警项: &#123;&#123; .Labels.alertname &#125;&#125; &lt;br&gt;</span><br><span class="line">项目组:&#123;&#123; .Labels.job &#125;&#125; &lt;br&gt;</span><br><span class="line">实例名:&#123;&#123; .Labels.name &#125;&#125;-&#123;&#123; .Labels.instance &#125;&#125;  &lt;br&gt;</span><br><span class="line">详情:  &#123;&#123; .Annotations.description &#125;&#125; &lt;br&gt;</span><br><span class="line">级别:  &#123;&#123; .Labels.severity &#125;&#125;  &lt;br&gt;</span><br><span class="line">开始时间:  &#123;&#123; (.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;&lt;br&gt;</span><br><span class="line">恢复时间:  &#123;&#123; (.EndsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;&lt;br&gt;</span><br><span class="line">++++++++++++++++++++++++++++++++++++&lt;br&gt;</span><br><span class="line">+++++++++++++++++++++++++++++++++++++&lt;br&gt;</span><br><span class="line">&#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br></pre></td></tr></table></figure>

<p>企业微信</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123; define &quot;wechat.default.message&quot; &#125;&#125;</span><br><span class="line">&#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;&#123;&#123; range.Alerts &#125;&#125;</span><br><span class="line">告警项: &#123;&#123; .Labels.alertname &#125;&#125;</span><br><span class="line">项目组:&#123;&#123; .Labels.job &#125;&#125;</span><br><span class="line">实例名:&#123;&#123; .Labels.name &#125;&#125;-&#123;&#123; .Labels.instance &#125;&#125;</span><br><span class="line">详情:  &#123;&#123; .Annotations.description &#125;&#125;</span><br><span class="line">级别:  &#123;&#123; .Labels.severity &#125;&#125;</span><br><span class="line">开始时间:  &#123;&#123; (.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class="line">------------------------------------</span><br><span class="line">------------------------------------</span><br><span class="line">&#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;</span><br><span class="line">&#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;&#123;&#123; range.Alerts &#125;&#125;</span><br><span class="line">Resolved</span><br><span class="line">告警项: &#123;&#123; .Labels.alertname &#125;&#125;</span><br><span class="line">项目组:&#123;&#123; .Labels.job &#125;&#125;</span><br><span class="line">实例名:&#123;&#123; .Labels.name &#125;&#125;-&#123;&#123; .Labels.instance &#125;&#125;</span><br><span class="line">详情:  &#123;&#123; .Annotations.description &#125;&#125;</span><br><span class="line">级别:  &#123;&#123; .Labels.severity &#125;&#125;</span><br><span class="line">开始时间:  &#123;&#123; (.StartsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class="line">恢复时间:  &#123;&#123; (.EndsAt.Add 28800e9).Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;</span><br><span class="line">------------------------------------</span><br><span class="line">------------------------------------</span><br><span class="line">&#123;&#123; end &#125;&#125;&#123;&#123; end -&#125;&#125;</span><br><span class="line">&#123;&#123;- end &#125;&#125;</span><br></pre></td></tr></table></figure>


<h2 id="【最佳实践】安装采集器、配置sql-server权限"><a href="#【最佳实践】安装采集器、配置sql-server权限" class="headerlink" title="【最佳实践】安装采集器、配置sql server权限"></a>【最佳实践】安装采集器、配置sql server权限</h2><h3 id="（1）-windows采集器文件"><a href="#（1）-windows采集器文件" class="headerlink" title="（1） windows采集器文件"></a>（1） windows采集器文件</h3><p>【1.1】上传文件 windows_exporter 采集器文件</p>
<p>【1.2】双击运行</p>
<p>可能有东西出来，也可能一闪而过，也可能一点反应都没有。</p>
<p>【1.3】核验</p>
<p>Win+R 运行  &#x3D;》Services.msc</p>
<p>查看服务， windows_exporter，这就表示部署好了。</p>
<h3 id="（2）mssql-访问配置"><a href="#（2）mssql-访问配置" class="headerlink" title="（2）mssql 访问配置"></a>（2）mssql 访问配置</h3><h4 id="【2-1】防火墙配置-MSSQL权限配置（打开cmd，在dos命令窗口下执行）"><a href="#【2-1】防火墙配置-MSSQL权限配置（打开cmd，在dos命令窗口下执行）" class="headerlink" title="【2.1】防火墙配置&#x2F;MSSQL权限配置（打开cmd，在dos命令窗口下执行）"></a>【2.1】防火墙配置&#x2F;MSSQL权限配置（打开cmd，在dos命令窗口下执行）</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netsh advfirewall firewall add rule name=&quot;prometheus_monitor&quot; dir=in action=allow remoteip=&quot;192.168.1.1,192.168.1.2&quot; protocol=TCP localport=&quot;1433,9182&quot;</span><br><span class="line"> </span><br><span class="line">net stop wuauserv</span><br><span class="line">sc config wuauserv start= disabled</span><br><span class="line">sc config TrustedInstaller start= disabled</span><br><span class="line">sc config windows_exporter start= delayed-auto</span><br><span class="line">sc config MSSQLSERVER start= delayed-auto</span><br><span class="line">sc config SQLSERVERAGENT start= delayed-auto</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sqlcmd -E</span><br><span class="line">USE [master]</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line">CREATE LOGIN [sql_exporter] WITH PASSWORD=N&#x27;qwer1234qwer&#x27;, DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF</span><br><span class="line">GO</span><br><span class="line"></span><br><span class="line">ALTER SERVER ROLE [sysadmin] ADD MEMBER [sql_exporter]</span><br><span class="line">GO</span><br></pre></td></tr></table></figure>

<p>-————下面的不要运行，只是参考！——–</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">参考：</span><br><span class="line"></span><br><span class="line">DECLARE @sql VARCHAR(max)</span><br><span class="line">SET @sql=CAST(&#x27;use master;CREATE LOGIN [sql_exporter] WITH PASSWORD=N&#x27;&#x27;qwer1234qwer&#x27;&#x27;, DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF; GRANT VIEW SERVER STATE TO [sql_exporter];</span><br><span class="line">GRANT VIEW ANY DEFINITION TO [sql_exporter];&#x27; AS VARCHAR(max))</span><br><span class="line">select @sql=@sql+CAST(&#x27;use &#x27;+name+&#x27;;CREATE USER [sql_exporter] FOR LOGIN [sql_exporter];</span><br><span class="line"></span><br><span class="line">EXEC sp_addrolemember N&#x27;&#x27;db_datareader&#x27;&#x27;, N&#x27;&#x27;sql_exporter&#x27;&#x27;;&#x27;+CHAR(10) AS VARCHAR(max))</span><br><span class="line">from master.sys.databases where state=0 and is_read_only=0</span><br><span class="line">EXEC(@sql)</span><br><span class="line"></span><br><span class="line">Go</span><br><span class="line"></span><br><span class="line">ALTER SERVER ROLE [sysadmin] ADD MEMBER [sql_exporter]</span><br><span class="line"></span><br><span class="line">GO</span><br></pre></td></tr></table></figure>

<p>参考：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Declare @login varchar(200),@role varchar(200), @login_pwd varchar(200)</span><br><span class="line"></span><br><span class="line">Set @login=&#x27;business_query&#x27;</span><br><span class="line">Set @login_pwd=&#x27;qwer1234qwer&#x27;</span><br><span class="line">SET @role=&#x27;db_datareader&#x27;</span><br><span class="line"></span><br><span class="line">DECLARE @sql VARCHAR(max)</span><br><span class="line"></span><br><span class="line">SET @sql=CAST(&#x27;use master;CREATE LOGIN &#x27;+@login+&#x27; WITH PASSWORD=N&#x27;&#x27;&#x27;+@login_pwd +&#x27;&#x27;&#x27;, DEFAULT_DATABASE=[master], CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF; GRANT VIEW SERVER STATE TO &#x27;+@login+&#x27;;</span><br><span class="line">GRANT VIEW ANY DEFINITION TO &#x27;+@login+&#x27;;&#x27; AS VARCHAR(max))</span><br><span class="line">select @sql=@sql+CAST(&#x27;use &#x27;+name+&#x27;;CREATE USER &#x27;+@login+&#x27; FOR LOGIN &#x27;+@login+&#x27;;</span><br><span class="line">EXEC sp_addrolemember N&#x27;&#x27;&#x27;+@role+&#x27;&#x27;&#x27;, N&#x27;&#x27;business_query&#x27;&#x27;;&#x27;+CHAR(10) AS VARCHAR(max))</span><br><span class="line">from master.sys.databases where state=0 and is_read_only=0</span><br><span class="line">EXEC(@sql)</span><br><span class="line"></span><br><span class="line">Go</span><br></pre></td></tr></table></figure>

<h3 id="（3）采集器服务器配置参考"><a href="#（3）采集器服务器配置参考" class="headerlink" title="（3）采集器服务器配置参考"></a>（3）采集器服务器配置参考</h3><p>进入 115.230.30.138——10.20.53.12</p>
<p>cd &#x2F;data&#x2F;mssql&#x2F;</p>
<p>修改 mssql_agent.sh</p>
<p>也要修改prometheus的配置文件；参考： 每一个建议空一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nohup /data/mssql/sql_exporter -config.data-source-name=sqlserver://sql_exporter:qwer1234qwer@10.20.54.59:1433/?encrypt=disable \</span><br><span class="line">-config.file=/data/mssql/sql_exporter.yml -web.listen-address=127.0.0.1:9402  -log_dir=/data/mssql_log &amp;</span><br></pre></td></tr></table></figure>

<h3 id="（4）守护进程"><a href="#（4）守护进程" class="headerlink" title="（4）守护进程"></a>（4）守护进程</h3><p>autostart_sqlexporter.sh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">dir=`dirname $0`</span><br><span class="line">filename=&#x27;mssql_agent.sh&#x27;</span><br><span class="line"></span><br><span class="line">usage()&#123;</span><br><span class="line">    filename=$0</span><br><span class="line">    echo &quot;Usage:sh $&#123;filename&#125; [start|stop|status|restart]&quot;</span><br><span class="line">        exit 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">is_ok()&#123;</span><br><span class="line">    config_count=`cat $&#123;dir&#125;/mssql_agent.sh |grep -v &#x27;^#&#x27;|grep -v &quot;^$&quot;|wc -l`</span><br><span class="line">    running_count=`ps -ef|grep sql_exporter|grep -v &quot;grep&quot;|wc -l`</span><br><span class="line">    if [ &quot;$&#123;config_count&#125;&quot; -eq &quot;$&#123;running_count&#125;&quot;  ];then</span><br><span class="line">         return 0</span><br><span class="line">        else</span><br><span class="line">         return 1</span><br><span class="line">        fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start()&#123;</span><br><span class="line">    is_ok</span><br><span class="line">        if [ $? -eq &quot;1&quot; ];then</span><br><span class="line">          echo &quot;sh $&#123;dir&#125;/$&#123;filename&#125;&quot;</span><br><span class="line">      sh $&#123;dir&#125;/$&#123;filename&#125;</span><br><span class="line">        fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop()&#123;</span><br><span class="line">    is_ok</span><br><span class="line">        if [ $running_count -eq &quot;0&quot; ];then</span><br><span class="line">          echo &#x27;all config sql_exporter already is closed!&#x27;</span><br><span class="line">        else</span><br><span class="line">           pkill sql_exporter</span><br><span class="line">        fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">restart()&#123;</span><br><span class="line">    stop</span><br><span class="line">    start</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">status()&#123;</span><br><span class="line">        is_ok</span><br><span class="line">         if [ $? -eq &quot;0&quot; ];then</span><br><span class="line">          echo &#x27;sql_exporter ok!&#x27;</span><br><span class="line">        else</span><br><span class="line">          echo &quot;sql_exporter error!config_count=$&#123;config_count&#125;,running_count=$&#123;running_count&#125;&#x27;&quot;</span><br><span class="line">        fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case &quot;$1&quot; in </span><br><span class="line">&quot;start&quot;)</span><br><span class="line">start</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">stop</span><br><span class="line">;;</span><br><span class="line">&quot;status&quot;)</span><br><span class="line">status</span><br><span class="line">;;</span><br><span class="line">&quot;restart&quot;)</span><br><span class="line">restart;;</span><br><span class="line">*)</span><br><span class="line">usage</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>

<p> crontab</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">* * * * * /bin/bash /data/mssql/autostart_sqlexporter.sh start &gt;&gt;/data/mssql/log_autostart_sqlexporter.log 2&gt;&amp;1</span><br></pre></td></tr></table></figure>


<h2 id="【参考文档】"><a href="#【参考文档】" class="headerlink" title="【参考文档】"></a>【参考文档】</h2><p>参考：<a href="https://www.bilibili.com/read/cv7134580/">https://www.bilibili.com/read/cv7134580/</a></p>
<p>官网：<a href="https://github.com/free/sql_exporter">https://github.com/free/sql_exporter</a></p>
<h3 id="【附录】"><a href="#【附录】" class="headerlink" title="【附录】"></a>【附录】</h3><p>由于在url中特殊符号都有特殊意义或者被认为是不安全的字符，所以在拼接url时应当替换出url中的特殊字符</p>
<p>例如 </p>
<p>var x &#x3D; “2# 前缘肋”</p>
<p>var rp&#x3D; x.replace(‘#’,’%23’); &#x2F;&#x2F; %23是#的URL编码 要用他来替换原有的#</p>
<p>w3schools网站上列出了此类编码参考</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>Character</td>
<td>From Windows-1252</td>
<td>From UTF-8</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>space</td>
<td>%20</td>
<td>%20</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>!</td>
<td>%21</td>
<td>%21</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>“</td>
<td>%22</td>
<td>%22</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>#</td>
<td>%23</td>
<td>%23</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>$</td>
<td>%24</td>
<td>%24</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>%</td>
<td>%25</td>
<td>%25</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&amp;</td>
<td>%26</td>
<td>%26</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘</td>
<td>%27</td>
<td>%27</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>(</td>
<td>%28</td>
<td>%28</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>)</td>
<td>%29</td>
<td>%29</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>*</td>
<td>%2A</td>
<td>%2A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>+</td>
<td>%2B</td>
<td>%2B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>,</td>
<td>%2C</td>
<td>%2C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>-</td>
<td>%2D</td>
<td>%2D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>.</td>
<td>%2E</td>
<td>%2E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&#x2F;</td>
<td>%2F</td>
<td>%2F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>0</td>
<td>%30</td>
<td>%30</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>1</td>
<td>%31</td>
<td>%31</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>%32</td>
<td>%32</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>%33</td>
<td>%33</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>%34</td>
<td>%34</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>5</td>
<td>%35</td>
<td>%35</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>6</td>
<td>%36</td>
<td>%36</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>7</td>
<td>%37</td>
<td>%37</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>8</td>
<td>%38</td>
<td>%38</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>9</td>
<td>%39</td>
<td>%39</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>:</td>
<td>%3A</td>
<td>%3A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>;</td>
<td>%3B</td>
<td>%3B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&lt;</td>
<td>%3C</td>
<td>%3C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>=</td>
<td>%3D</td>
<td>%3D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&gt;</td>
<td>%3E</td>
<td>%3E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>?</td>
<td>%3F</td>
<td>%3F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>@</td>
<td>%40</td>
<td>%40</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>A</td>
<td>%41</td>
<td>%41</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>B</td>
<td>%42</td>
<td>%42</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>C</td>
<td>%43</td>
<td>%43</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>D</td>
<td>%44</td>
<td>%44</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>E</td>
<td>%45</td>
<td>%45</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>F</td>
<td>%46</td>
<td>%46</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>G</td>
<td>%47</td>
<td>%47</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>H</td>
<td>%48</td>
<td>%48</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>I</td>
<td>%49</td>
<td>%49</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>J</td>
<td>%4A</td>
<td>%4A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>K</td>
<td>%4B</td>
<td>%4B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>L</td>
<td>%4C</td>
<td>%4C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>M</td>
<td>%4D</td>
<td>%4D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>N</td>
<td>%4E</td>
<td>%4E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>O</td>
<td>%4F</td>
<td>%4F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>P</td>
<td>%50</td>
<td>%50</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Q</td>
<td>%51</td>
<td>%51</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>R</td>
<td>%52</td>
<td>%52</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>S</td>
<td>%53</td>
<td>%53</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>T</td>
<td>%54</td>
<td>%54</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>U</td>
<td>%55</td>
<td>%55</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>V</td>
<td>%56</td>
<td>%56</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>W</td>
<td>%57</td>
<td>%57</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>X</td>
<td>%58</td>
<td>%58</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Y</td>
<td>%59</td>
<td>%59</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Z</td>
<td>%5A</td>
<td>%5A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>[</td>
<td>%5B</td>
<td>%5B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>\</td>
<td>%5C</td>
<td>%5C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>]</td>
<td>%5D</td>
<td>%5D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>^</td>
<td>%5E</td>
<td>%5E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>_</td>
<td>%5F</td>
<td>%5F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>`</td>
<td>%60</td>
<td>%60</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>a</td>
<td>%61</td>
<td>%61</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>b</td>
<td>%62</td>
<td>%62</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>c</td>
<td>%63</td>
<td>%63</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>d</td>
<td>%64</td>
<td>%64</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>e</td>
<td>%65</td>
<td>%65</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>f</td>
<td>%66</td>
<td>%66</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>g</td>
<td>%67</td>
<td>%67</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>h</td>
<td>%68</td>
<td>%68</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>i</td>
<td>%69</td>
<td>%69</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>j</td>
<td>%6A</td>
<td>%6A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>k</td>
<td>%6B</td>
<td>%6B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>l</td>
<td>%6C</td>
<td>%6C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>m</td>
<td>%6D</td>
<td>%6D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>n</td>
<td>%6E</td>
<td>%6E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>o</td>
<td>%6F</td>
<td>%6F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>p</td>
<td>%70</td>
<td>%70</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>q</td>
<td>%71</td>
<td>%71</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>r</td>
<td>%72</td>
<td>%72</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>s</td>
<td>%73</td>
<td>%73</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>t</td>
<td>%74</td>
<td>%74</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>u</td>
<td>%75</td>
<td>%75</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>v</td>
<td>%76</td>
<td>%76</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>w</td>
<td>%77</td>
<td>%77</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>x</td>
<td>%78</td>
<td>%78</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>y</td>
<td>%79</td>
<td>%79</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>z</td>
<td>%7A</td>
<td>%7A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>{</td>
<td>%7B</td>
<td>%7B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>|</td>
<td>%7C</td>
<td>%7C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>}</td>
<td>%7D</td>
<td>%7D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>~</td>
<td>%7E</td>
<td>%7E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%7F</td>
<td>%7F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>`</td>
<td>%80</td>
<td>%E2%82%AC</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%81</td>
<td>%81</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>‚</td>
<td>%82</td>
<td>%E2%80%9A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ƒ</td>
<td>%83</td>
<td>%C6%92</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>„</td>
<td>%84</td>
<td>%E2%80%9E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>…</td>
<td>%85</td>
<td>%E2%80%A6</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>†</td>
<td>%86</td>
<td>%E2%80%A0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>‡</td>
<td>%87</td>
<td>%E2%80%A1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ˆ</td>
<td>%88</td>
<td>%CB%86</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>‰</td>
<td>%89</td>
<td>%E2%80%B0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Š</td>
<td>%8A</td>
<td>%C5%A0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>‹</td>
<td>%8B</td>
<td>%E2%80%B9</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Œ</td>
<td>%8C</td>
<td>%C5%92</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%8D</td>
<td>%C5%8D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ž</td>
<td>%8E</td>
<td>%C5%BD</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%8F</td>
<td>%8F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%90</td>
<td>%C2%90</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>‘</td>
<td>%91</td>
<td>%E2%80%98</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>’</td>
<td>%92</td>
<td>%E2%80%99</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>“</td>
<td>%93</td>
<td>%E2%80%9C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>”</td>
<td>%94</td>
<td>%E2%80%9D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>•</td>
<td>%95</td>
<td>%E2%80%A2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>–</td>
<td>%96</td>
<td>%E2%80%93</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>—</td>
<td>%97</td>
<td>%E2%80%94</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>˜</td>
<td>%98</td>
<td>%CB%9C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>™</td>
<td>%99</td>
<td>%E2%84</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>š</td>
<td>%9A</td>
<td>%C5%A1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>›</td>
<td>%9B</td>
<td>%E2%80</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>œ</td>
<td>%9C</td>
<td>%C5%93</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%9D</td>
<td>%9D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ž</td>
<td>%9E</td>
<td>%C5%BE</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ÿ</td>
<td>%9F</td>
<td>%C5%B8</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%A0</td>
<td>%C2%A0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¡</td>
<td>%A1</td>
<td>%C2%A1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¢</td>
<td>%A2</td>
<td>%C2%A2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>£</td>
<td>%A3</td>
<td>%C2%A3</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¤</td>
<td>%A4</td>
<td>%C2%A4</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¥</td>
<td>%A5</td>
<td>%C2%A5</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¦</td>
<td>%A6</td>
<td>%C2%A6</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>§</td>
<td>%A7</td>
<td>%C2%A7</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¨</td>
<td>%A8</td>
<td>%C2%A8</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>©</td>
<td>%A9</td>
<td>%C2%A9</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ª</td>
<td>%AA</td>
<td>%C2%AA</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>«</td>
<td>%AB</td>
<td>%C2%AB</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¬</td>
<td>%AC</td>
<td>%C2%AC</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td></td>
<td>%AD</td>
<td>%C2%AD</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>®</td>
<td>%AE</td>
<td>%C2%AE</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¯</td>
<td>%AF</td>
<td>%C2%AF</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>°</td>
<td>%B0</td>
<td>%C2%B0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>±</td>
<td>%B1</td>
<td>%C2%B1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>²</td>
<td>%B2</td>
<td>%C2%B2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>³</td>
<td>%B3</td>
<td>%C2%B3</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>´</td>
<td>%B4</td>
<td>%C2%B4</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>µ</td>
<td>%B5</td>
<td>%C2%B5</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¶</td>
<td>%B6</td>
<td>%C2%B6</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>·</td>
<td>%B7</td>
<td>%C2%B7</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¸</td>
<td>%B8</td>
<td>%C2%B8</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¹</td>
<td>%B9</td>
<td>%C2%B9</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>º</td>
<td>%BA</td>
<td>%C2%BA</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>»</td>
<td>%BB</td>
<td>%C2%BB</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¼</td>
<td>%BC</td>
<td>%C2%BC</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>½</td>
<td>%BD</td>
<td>%C2%BD</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¾</td>
<td>%BE</td>
<td>%C2%BE</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>¿</td>
<td>%BF</td>
<td>%C2%BF</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>À</td>
<td>%C0</td>
<td>%C3%80</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Á</td>
<td>%C1</td>
<td>%C3%81</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Â</td>
<td>%C2</td>
<td>%C3%82</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ã</td>
<td>%C3</td>
<td>%C3%83</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ä</td>
<td>%C4</td>
<td>%C3%84</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Å</td>
<td>%C5</td>
<td>%C3%85</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Æ</td>
<td>%C6</td>
<td>%C3%86</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ç</td>
<td>%C7</td>
<td>%C3%87</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>È</td>
<td>%C8</td>
<td>%C3%88</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>É</td>
<td>%C9</td>
<td>%C3%89</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ê</td>
<td>%CA</td>
<td>%C3%8A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ë</td>
<td>%CB</td>
<td>%C3%8B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ì</td>
<td>%CC</td>
<td>%C3%8C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Í</td>
<td>%CD</td>
<td>%C3%8D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Î</td>
<td>%CE</td>
<td>%C3%8E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ï</td>
<td>%CF</td>
<td>%C3%8F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ð</td>
<td>%D0</td>
<td>%C3%90</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ñ</td>
<td>%D1</td>
<td>%C3%91</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ò</td>
<td>%D2</td>
<td>%C3%92</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ó</td>
<td>%D3</td>
<td>%C3%93</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ô</td>
<td>%D4</td>
<td>%C3%94</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Õ</td>
<td>%D5</td>
<td>%C3%95</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ö</td>
<td>%D6</td>
<td>%C3%96</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>×</td>
<td>%D7</td>
<td>%C3%97</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ø</td>
<td>%D8</td>
<td>%C3%98</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ù</td>
<td>%D9</td>
<td>%C3%99</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ú</td>
<td>%DA</td>
<td>%C3%9A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Û</td>
<td>%DB</td>
<td>%C3%9B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ü</td>
<td>%DC</td>
<td>%C3%9C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Ý</td>
<td>%DD</td>
<td>%C3%9D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Þ</td>
<td>%DE</td>
<td>%C3%9E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ß</td>
<td>%DF</td>
<td>%C3%9F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>à</td>
<td>%E0</td>
<td>%C3%A0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>á</td>
<td>%E1</td>
<td>%C3%A1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>â</td>
<td>%E2</td>
<td>%C3%A2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ã</td>
<td>%E3</td>
<td>%C3%A3</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ä</td>
<td>%E4</td>
<td>%C3%A4</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>å</td>
<td>%E5</td>
<td>%C3%A5</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>æ</td>
<td>%E6</td>
<td>%C3%A6</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ç</td>
<td>%E7</td>
<td>%C3%A7</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>è</td>
<td>%E8</td>
<td>%C3%A8</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>é</td>
<td>%E9</td>
<td>%C3%A9</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ê</td>
<td>%EA</td>
<td>%C3%AA</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ë</td>
<td>%EB</td>
<td>%C3%AB</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ì</td>
<td>%EC</td>
<td>%C3%AC</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>í</td>
<td>%ED</td>
<td>%C3%AD</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>î</td>
<td>%EE</td>
<td>%C3%AE</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ï</td>
<td>%EF</td>
<td>%C3%AF</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ð</td>
<td>%F0</td>
<td>%C3%B0</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ñ</td>
<td>%F1</td>
<td>%C3%B1</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ò</td>
<td>%F2</td>
<td>%C3%B2</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ó</td>
<td>%F3</td>
<td>%C3%B3</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ô</td>
<td>%F4</td>
<td>%C3%B4</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>õ</td>
<td>%F5</td>
<td>%C3%B5</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ö</td>
<td>%F6</td>
<td>%C3%B6</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>÷</td>
<td>%F7</td>
<td>%C3%B7</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ø</td>
<td>%F8</td>
<td>%C3%B8</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ù</td>
<td>%F9</td>
<td>%C3%B9</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ú</td>
<td>%FA</td>
<td>%C3%BA</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>û</td>
<td>%FB</td>
<td>%C3%BB</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ü</td>
<td>%FC</td>
<td>%C3%BC</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ý</td>
<td>%FD</td>
<td>%C3%BD</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>þ</td>
<td>%FE</td>
<td>%C3%BE</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ÿ</td>
<td>%FF</td>
<td>%C3%BF</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<hr>
<h2 id="URL-Encoding-Reference"><a href="#URL-Encoding-Reference" class="headerlink" title="URL Encoding Reference"></a>URL Encoding Reference</h2><p>The ASCII control characters %00-%1F were originally designed to control hardware devices.</p>
<p>Control characters have nothing to do inside a URL.</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>ASCII Character</td>
<td>Description</td>
<td>URL-encoding</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
<td>—</td>
</tr>
<tr>
<td>NUL</td>
<td>null character</td>
<td>%00</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SOH</td>
<td>start of header</td>
<td>%01</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>STX</td>
<td>start of text</td>
<td>%02</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ETX</td>
<td>end of text</td>
<td>%03</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>EOT</td>
<td>end of transmission</td>
<td>%04</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ENQ</td>
<td>enquiry</td>
<td>%05</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ACK</td>
<td>acknowledge</td>
<td>%06</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BEL</td>
<td>bell (ring)</td>
<td>%07</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>BS</td>
<td>backspace</td>
<td>%08</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>HT</td>
<td>horizontal tab</td>
<td>%09</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>LF</td>
<td>line feed</td>
<td>%0A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>VT</td>
<td>vertical tab</td>
<td>%0B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>FF</td>
<td>form feed</td>
<td>%0C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CR</td>
<td>carriage return</td>
<td>%0D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SO</td>
<td>shift out</td>
<td>%0E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SI</td>
<td>shift in</td>
<td>%0F</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DLE</td>
<td>data link escape</td>
<td>%10</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DC1</td>
<td>device control 1</td>
<td>%11</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DC2</td>
<td>device control 2</td>
<td>%12</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DC3</td>
<td>device control 3</td>
<td>%13</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>DC4</td>
<td>device control 4</td>
<td>%14</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>NAK</td>
<td>negative acknowledge</td>
<td>%15</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SYN</td>
<td>synchronize</td>
<td>%16</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ETB</td>
<td>end transmission block</td>
<td>%17</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>CAN</td>
<td>cancel</td>
<td>%18</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>EM</td>
<td>end of medium</td>
<td>%19</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>SUB</td>
<td>substitute</td>
<td>%1A</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>ESC</td>
<td>escape</td>
<td>%1B</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>FS</td>
<td>file separator</td>
<td>%1C</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>GS</td>
<td>group separator</td>
<td>%1D</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>RS</td>
<td>record separator</td>
<td>%1E</td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>US</td>
<td>unit separator</td>
<td></td>
<td></td>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>sql对时间的查询</title>
    <url>/2024/01/09/sql%E5%AF%B9%E6%97%B6%E9%97%B4%E7%9A%84%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<ul>
<li>某个时间范围</li>
</ul>
<p><code>sql select * from 表名 where 时间字段 BETWEEN &#39;开始时间&#39; AND &#39;结束时间&#39;;</code></p>
<ul>
<li>今天</li>
</ul>
<p><code>sql select * from 表名 where to_days(时间字段名) = to_days(now());</code></p>
<ul>
<li>昨天</li>
</ul>
<p><code>sql SELECT * FROM 表名 WHERE TO_DAYS( NOW( ) ) - TO_DAYS( 时间字段名) = 1;</code></p>
<ul>
<li>一周（7天）</li>
</ul>
<p><code>sql SELECT * FROM 表名 where DATE_SUB(CURDATE(), INTERVAL 7 DAY) &lt;= date(时间字段名);</code></p>
<ul>
<li>一月（30天）</li>
</ul>
<p><code>sql SELECT * FROM 表名 where DATE_SUB(CURDATE(), INTERVAL 30 DAY) &lt;= date(时间字段名);</code></p>
<ul>
<li>本月</li>
</ul>
<p><code>sql SELECT * FROM 表名 WHERE DATE_FORMAT( 时间字段名, &#39;%Y%m&#39; ) = DATE_FORMAT( CURDATE( ) , &#39;%Y%m&#39; );</code></p>
<ul>
<li>上个月</li>
</ul>
<p><code>sql SELECT * FROM 表名 WHERE PERIOD_DIFF( date_format( now( ) , &#39;%Y%m&#39; ) , date_format( 时间字段名, &#39;%Y%m&#39; ) ) =1;</code></p>
<ul>
<li>查询本季度数据</li>
</ul>
<p><code>sql select * from 表名 where QUARTER(create_date)=QUARTER(now());</code></p>
<ul>
<li>查询上季度数据</li>
</ul>
<p><code>sql select * from 表名 where QUARTER(create_date)=QUARTER(DATE_SUB(now(),interval 1 QUARTER));</code></p>
<ul>
<li>查询本年数据</li>
</ul>
<p><code>sql select * from 表名 where YEAR(create_date)=YEAR(NOW());</code></p>
<ul>
<li>查询上年数据</li>
</ul>
<p><code>sql select * from 表名 where year(create_date)=year(date_sub(now(),interval 1 year));</code></p>
<ul>
<li>查询当前这周的数据</li>
</ul>
<p><code>SELECT name,submittime FROM 表名 WHERE YEARWEEK(date_format(submittime,&#39;%Y-%m-%d&#39;)) = YEARWEEK(now());</code></p>
<ul>
<li>查询上周数据</li>
</ul>
<p><code>sql SELECT name,submittime FROM 表名 WHERE YEARWEEK(date_format(submittime,&#39;%Y-%m-%d&#39;)) = YEARWEEK(now())-1;</code></p>
<ul>
<li>查询上个月数据</li>
</ul>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">-</span>     <span class="keyword">select</span> name,submittime <span class="keyword">from</span> 表名 <span class="keyword">where</span> date_format(submittime,<span class="string">&#x27;%Y-%m&#x27;</span>)<span class="operator">=</span>date_format(DATE_SUB(curdate(), <span class="type">INTERVAL</span> <span class="number">1</span> <span class="keyword">MONTH</span>),<span class="string">&#x27;%Y-%m&#x27;</span>);</span><br><span class="line"><span class="operator">-</span>     <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> DATE_FORMAT(pudate,<span class="string">&#x27;%Y%m&#x27;</span>) <span class="operator">=</span> DATE_FORMAT(CURDATE(),<span class="string">&#x27;%Y%m&#x27;</span>) ; </span><br><span class="line"><span class="operator">-</span>     <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> WEEKOFYEAR(FROM_UNIXTIME(pudate,<span class="string">&#x27;%y-%m-%d&#x27;</span>)) <span class="operator">=</span> WEEKOFYEAR(now());</span><br><span class="line"><span class="operator">-</span>     <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> <span class="keyword">MONTH</span>(FROM_UNIXTIME(pudate,<span class="string">&#x27;%y-%m-%d&#x27;</span>)) <span class="operator">=</span> <span class="keyword">MONTH</span>(now()); </span><br><span class="line"><span class="operator">-</span>     <span class="keyword">MONTH</span>(FROM_UNIXTIME(pudate,<span class="string">&#x27;%y-%m-%d&#x27;</span>)) <span class="operator">=</span> <span class="keyword">MONTH</span>(now()); </span><br><span class="line"><span class="operator">-</span>     <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> 表名 <span class="keyword">where</span> pudate <span class="keyword">between</span>  上月最后一天  <span class="keyword">and</span> 下月第一天; </span><br></pre></td></tr></table></figure>

<ul>
<li>查询当前月份的数据</li>
</ul>
<p><code>sql select name,submittime from 表名 where date_format(submittime,&#39;%Y-%m&#39;)=date_format(now(),&#39;%Y-%m&#39;);</code></p>
<ul>
<li>查询距离当前现在6个月的数据</li>
</ul>
<p><code>sql select name,submittime from 表名 where submittime between date_sub(now(),interval 6 month) and now()</code></p>
<p><strong>ORACLE:</strong></p>
<p><strong>ORACLE没有提供直接获取年、周的函数，提供了一些函数，需要进行计算</strong></p>
<p><strong>to_char()和to_date基本等价于JAVA中的SimpleDateFormat函数</strong></p>
<p><strong>trunc()函数为指定元素而截去的日期值。</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">trunc（sysdate,&#x27;yyyy&#x27;） --返回当年第一天。</span><br><span class="line">trunc（sysdate,&#x27;mm&#x27;） --返回当月第一天。</span><br><span class="line">trunc（sysdate,&#x27;d&#x27;） --返回当前星期的第一天。</span><br><span class="line">trunc（sysdate,&#x27;dd&#x27;）--返回当前年月日</span><br></pre></td></tr></table></figure>

<p>trunc()也可以对数字精度进行操作，trunc(number,length),number用于完整取精度的数字，length代表精度长度，默认为0；trunc()取精度时不进行四舍五入</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">select trunc(123.458,0) from dual --123</span><br><span class="line">select trunc(123.458,1) from dual --123.4</span><br><span class="line">select trunc(123.458,-1) from dual --120</span><br><span class="line">select trunc(123.458,-4) from dual --0</span><br><span class="line">select trunc(123.458,4) from dual --123.4580</span><br></pre></td></tr></table></figure>

<p><code>add_months(times,months)</code>表示在time时间之上进行月份操作，months为正整数表示之后，正负数表示之前</p>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>victoriametrics集群部署【拆分三台服务器进行部署】</title>
    <url>/2024/01/10/victoriametrics%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E3%80%90%E6%8B%86%E5%88%86%E4%B8%89%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%BF%9B%E8%A1%8C%E9%83%A8%E7%BD%B2%E3%80%91/</url>
    <content><![CDATA[<p><strong>#安装docker</strong><br>yum install -y yum-utils<br>yum-config-manager –add-repo <a href="https://download.docker.com/linux/centos/docker-ce.repo">https://download.docker.com/linux/centos/docker-ce.repo</a><br>yum install -y docker-ce docker-ce-cli containerd.io<br>yum install -y docker-compose lrzsz</p>
<p><strong>#配置docker加速器</strong><br>mkdir -p &#x2F;etc&#x2F;docker<br>cat &gt;&#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;EOF<br>{<br>“live-restore”: true,<br>“data-root”: “&#x2F;data&#x2F;docker”,<br>“registry-mirrors”: [<br>    “<a href="https://s8t67zyu.mirror.aliyuncs.com/">https://s8t67zyu.mirror.aliyuncs.com</a>“<br>]<br>}<br>EOF</p>
<p><strong>#启动docker</strong><br>systemctl enable docker<br>systemctl start docker</p>
<p><strong>#集群IP地址如下</strong><br>10.10.10.11<br>10.10.10.12<br>10.10.10.13</p>
<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>【一】节点1部署安装</p>
<p><strong>1，#创建存储目录</strong><br>mkdir -p &#x2F;data&#x2F;vmstorage&#x2F;vmstorage360d60s1</p>
<p><strong>2，#创建docker-compose.yml文件</strong></p>
<p>version:  “3”<br>services:</p>
<p>  vmstorage360d60s1:<br>    image: victoriametrics&#x2F;vmstorage:v1.86.1-cluster<br>    restart: always<br>    ports:<br>      - 8501:8501<br>      - 8601:8601<br>      - 8701:8701<br>    volumes:<br>      - &#x2F;data&#x2F;vmstorage&#x2F;vmstorage360d60s1:&#x2F;storage<br>    command:<br>      - ‘–storageDataPath&#x3D;&#x2F;storage’<br>      - ‘–retentionPeriod&#x3D;360d’<br>    #  - ‘–dedup.minScrapeInterval&#x3D;60s’ # 如果时序数据之间的时间差比该配置小，则剔除。当多个Prometheus同时写入一个VictoriaMetric时，这对减少开销很有帮助。当设置为0时，不生效。默认为1ms，建议不设置<br>      - ‘–search.maxUniqueTimeseries&#x3D;3000000’<br>      - ‘–vminsertAddr&#x3D;0.0.0.0:8601’<br>      - ‘–vmselectAddr&#x3D;0.0.0.0:8701’<br>      - ‘–httpListenAddr&#x3D;0.0.0.0:8501’</p>
<p>  vminsert360d60s1:<br>    image: victoriametrics&#x2F;vminsert:v1.86.1-cluster<br>    restart: always<br>    command:<br>      - ‘–storageNode&#x3D;10.10.10.11:8601’<br>      - ‘–storageNode&#x3D;10.10.10.12:8602’<br>      - ‘–storageNode&#x3D;10.10.10.13:8603’<br>    ports:<br>      - 8801:8480</p>
<p>  vmselect360d60s1:<br>    image: victoriametrics&#x2F;vmselect:v1.86.1-cluster<br>    restart: always<br>    command:<br>      - ‘–search.maxUniqueTimeseries&#x3D;3000000’<br>      - ‘–storageNode&#x3D;10.10.10.11:8701’<br>      - ‘–storageNode&#x3D;10.10.10.12:8702’<br>      - ‘–storageNode&#x3D;10.10.10.13:8703’<br>    ports:<br>      - 8901:8481</p>
<h3 id="-1"><a href="#-1" class="headerlink" title=""></a></h3><p>【二】节点2部署安装</p>
<p><strong>1，#创建存储目录</strong><br>mkdir -p &#x2F;data&#x2F;vmstorage&#x2F;vmstorage360d60s2</p>
<p><strong>2，#创建docker-compose.yml文件</strong></p>
<p>version:  “3”<br>services:</p>
<p>  vmstorage360d60s2:<br>    image: victoriametrics&#x2F;vmstorage:v1.86.1-cluster<br>    restart: always<br>    ports:<br>      - 8502:8502<br>      - 8602:8602<br>      - 8702:8702<br>    volumes:<br>      - &#x2F;data&#x2F;vmstorage&#x2F;vmstorage360d60s2:&#x2F;storage<br>    command:<br>      - ‘–storageDataPath&#x3D;&#x2F;storage’<br>      - ‘–retentionPeriod&#x3D;360d’<br>     # - ‘–dedup.minScrapeInterval&#x3D;60s’   # 如果时序数据之间的时间差比该配置小，则剔除。当多个Prometheus同时写入一个VictoriaMetric时，这对减少开销很有帮助。当设置为0时，不生效。默认为1ms，建议不设置<br>      - ‘–search.maxUniqueTimeseries&#x3D;3000000’<br>      - ‘–vminsertAddr&#x3D;0.0.0.0:8602’<br>      - ‘–vmselectAddr&#x3D;0.0.0.0:8702’<br>      - ‘–httpListenAddr&#x3D;0.0.0.0:8502’</p>
<p>  vminsert360d60s2:<br>    image: victoriametrics&#x2F;vminsert:v1.86.1-cluster<br>    restart: always<br>    command:<br>      - ‘–storageNode&#x3D;10.10.10.11:8601’<br>      - ‘–storageNode&#x3D;10.10.10.12:8602’<br>      - ‘–storageNode&#x3D;10.10.10.13:8603’<br>    ports:<br>      - 8802:8480</p>
<p>  vmselect360d60s2:<br>    image: victoriametrics&#x2F;vmselect:v1.86.1-cluster<br>    restart: always<br>    command:<br>      - ‘–search.maxUniqueTimeseries&#x3D;3000000’<br>      - ‘–storageNode&#x3D;10.10.10.11:8701’<br>      - ‘–storageNode&#x3D;10.10.10.12:8702’<br>      - ‘–storageNode&#x3D;10.10.10.13:8703’<br>    ports:<br>      - 8902:8481</p>
<h3 id="-2"><a href="#-2" class="headerlink" title=""></a></h3><p>【三】节点3部署安装</p>
<p><strong>1，#创建存储目录</strong><br>mkdir -p &#x2F;data&#x2F;vmstorage&#x2F;vmstorage360d60s3</p>
<p><strong>2，#创建docker-compose.yml文件</strong></p>
<p>version:  “3”<br>services:</p>
<p>  vmstorage360d60s3:<br>    image: victoriametrics&#x2F;vmstorage:v1.86.1-cluster<br>    restart: always<br>    ports:<br>      - 8503:8503<br>      - 8603:8603<br>      - 8703:8703<br>    volumes:<br>      - &#x2F;data&#x2F;vmstorage&#x2F;vmstorage360d60s3:&#x2F;storage<br>    command:<br>      - ‘–storageDataPath&#x3D;&#x2F;storage’<br>      - ‘–retentionPeriod&#x3D;360d’<br>    #  - ‘–dedup.minScrapeInterval&#x3D;60s’ # 如果时序数据之间的时间差比该配置小，则剔除。当多个Prometheus同时写入一个VictoriaMetric时，这对减少开销很有帮助。当设置为0时，不生效。默认为1ms，建议不设置<br>      - ‘–search.maxUniqueTimeseries&#x3D;3000000’<br>      - ‘–vminsertAddr&#x3D;0.0.0.0:8603’<br>      - ‘–vmselectAddr&#x3D;0.0.0.0:8703’<br>      - ‘–httpListenAddr&#x3D;0.0.0.0:8503’</p>
<p>  vminsert360d60s3:<br>    image: victoriametrics&#x2F;vminsert:v1.86.1-cluster<br>    restart: always<br>    command:<br>      - ‘–storageNode&#x3D;10.10.10.11:8601’<br>      - ‘–storageNode&#x3D;10.10.10.12:8602’<br>      - ‘–storageNode&#x3D;10.10.10.13:8603’<br>    ports:<br>      - 8803:8480</p>
<p>  vmselect360d60s3:<br>    image: victoriametrics&#x2F;vmselect:v1.86.1-cluster<br>    restart: always<br>    command:<br>      - ‘–search.maxUniqueTimeseries&#x3D;3000000’<br>      - ‘–storageNode&#x3D;10.10.10.11:8701’<br>      - ‘–storageNode&#x3D;10.10.10.12:8702’<br>      - ‘–storageNode&#x3D;10.10.10.13:8703’<br>    ports:<br>      - 8903:8481</p>
<p><strong>#创建容器并启动</strong><br>docker-compose -f docker-compose.yml up -d</p>
<p><strong>#安装成功后VMUI如下</strong></p>
<p><a href="http://10.10.10.11:8901/select/0/vmui">http://10.10.10.11:8901/select/0/vmui</a><br><a href="http://10.10.10.12:8902/select/0/vmui">http://10.10.10.12:8902/select/0/vmui</a><br><a href="http://10.10.10.13:8903/select/0/vmui">http://10.10.10.13:8903/select/0/vmui</a></p>
<p><img src="/images/1704848026-b613c0cb2581e17cc2aa83030b13d600.png"></p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx代理victoriametrics集群配置</title>
    <url>/2024/01/10/Nginx%E4%BB%A3%E7%90%86victoriametrics%E9%9B%86%E7%BE%A4%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h6 id="1，首先安装nginx"><a href="#1，首先安装nginx" class="headerlink" title="1，首先安装nginx"></a>1，首先安装nginx</h6><p>        yum install -y nginx</p>
<h6 id="2，生成密钥文件"><a href="#2，生成密钥文件" class="headerlink" title="2，生成密钥文件"></a>2，生成密钥文件</h6><p>        安装htpasswd工具</p>
<p>        yum install -y httpd-tools</p>
<p>        生成密钥文件，prometheus为用户名</p>
<p>        htpasswd -c &#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;passwd prometheus</p>
<p><img src="/images/1704848852-66c8edda17d852a3731d091c61dad6e0.png"></p>
<h6 id="3，修改nginx配置文件nginx-conf，增加如下内容"><a href="#3，修改nginx配置文件nginx-conf，增加如下内容" class="headerlink" title="3，修改nginx配置文件nginx.conf，增加如下内容"></a>3，修改nginx配置文件nginx.conf，增加如下内容</h6><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">upstream  vmselect &#123;</span><br><span class="line">    server  10.250.5.74:8901 weight=5 ;</span><br><span class="line">    server  10.250.5.75:8902 weight=5 ;</span><br><span class="line">    server  10.250.5.76:8903 weight=5 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8900;</span><br><span class="line">    server_name _;</span><br><span class="line">    auth_basic <span class="string">&quot;authentication&quot;</span>;                <span class="comment"># 开启基本认证</span></span><br><span class="line">    auth_basic_user_file /etc/nginx/conf.d/passwd;      <span class="comment"># 密码文件</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://vmselect/select/0/prometheus/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">upstream vminsert &#123;</span><br><span class="line">    server  10.250.5.74:8801 weight=5 ;</span><br><span class="line">    server  10.250.5.75:8802 weight=5 ;</span><br><span class="line">    server  10.250.5.76:8803 weight=5 ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 8800;</span><br><span class="line">    server_name _;</span><br><span class="line">    auth_basic <span class="string">&quot;authentication&quot;</span>;                <span class="comment"># 开启基本认证</span></span><br><span class="line">    auth_basic_user_file /etc/nginx/conf.d/passwd;      <span class="comment"># 密码文件</span></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://vminsert/insert/0/prometheus/;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h6 id="4，重启nginx"><a href="#4，重启nginx" class="headerlink" title="4，重启nginx"></a>4，重启nginx</h6><p>        systemctl restart nginx</p>
<h6 id="5，查询"><a href="#5，查询" class="headerlink" title="5，查询"></a>5，查询</h6><p>         <a href="http://ngip:8900/api/v1/query?query=%E6%9F%A5%E8%AF%A2%E8%A1%A8%E8%BE%BE%E5%BC%8F" title="http://ngip:8900/api/v1/query?query=查询表达式">http://ngip:8900/api/v1/query?query=查询表达式</a></p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus集成consul[被监控对象开启basic认证]</title>
    <url>/2024/01/10/Prometheus%E9%9B%86%E6%88%90consul-%E8%A2%AB%E7%9B%91%E6%8E%A7%E5%AF%B9%E8%B1%A1%E5%BC%80%E5%90%AFbasic%E8%AE%A4%E8%AF%81/</url>
    <content><![CDATA[<h4 id="1，被监控对象开启basic认证"><a href="#1，被监控对象开启basic认证" class="headerlink" title="1，被监控对象开启basic认证"></a>1，被监控对象开启basic认证</h4><p>        具体操作这里不再详细细讲。</p>
<h4 id="2，将被监控对象注册到consul"><a href="#2，将被监控对象注册到consul" class="headerlink" title="2，将被监控对象注册到consul"></a>2，将被监控对象注册到consul</h4><p>        由于被监控对象开启了basic认证，注册到consul后显示：401 Unauthorized Output: Unauthorized，不能够正常健康检查。</p>
<p><img src="/images/1704849243-36efee9e231aa904e87a1af7f7433046.png"></p>
<h4 id="3，配置prometheus，发现consul上的目标"><a href="#3，配置prometheus，发现consul上的目标" class="headerlink" title="3，配置prometheus，发现consul上的目标"></a>3，配置prometheus，发现consul上的目标</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">- job_name: <span class="string">&#x27;testnet&#x27;</span></span><br><span class="line">  basic_auth:</span><br><span class="line">    username: hrintercli      <span class="comment">#认证账号</span></span><br><span class="line">    password: xnFBOl6Jlku5    <span class="comment">#认证密码</span></span><br><span class="line">  consul_sd_configs:</span><br><span class="line">    - server: <span class="string">&#x27;10.10.10.30:8500&#x27;</span>    <span class="comment">#consul地址</span></span><br><span class="line">      token: 848b1dc9-aab0-40a7-8e3e-7e8b869a97ac   <span class="comment">#登录consul的token</span></span><br><span class="line">      services: []</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [__meta_consul_tags]</span><br><span class="line">      regex: .*wl.*    <span class="comment">#正则匹配目标</span></span><br><span class="line">      action: keep</span><br><span class="line">    - regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">      action: labelmap</span><br><span class="line">  metric_relabel_configs:   <span class="comment">#配置添加额外的label</span></span><br><span class="line">  - target_label: cmdb_id</span><br><span class="line">    replacement: PS-11527</span><br></pre></td></tr></table></figure>

<h4 id="4，热加载prometheus，发现被监控对象数据收集上来"><a href="#4，热加载prometheus，发现被监控对象数据收集上来" class="headerlink" title="4，热加载prometheus，发现被监控对象数据收集上来"></a>4，热加载prometheus，发现被监控对象数据收集上来</h4><p><img src="/images/1704849243-73ba4f26d20f0222f5cb83959cbf000e.png"></p>
<p><img src="/images/1704849243-adfcf63a882f600540dd5fd55b619dde.png"></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>blackbox_exporter监控组件</title>
    <url>/2024/01/12/blackbox-exporter%E7%9B%91%E6%8E%A7%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="【1】Blackbox-exporter-简介"><a href="#【1】Blackbox-exporter-简介" class="headerlink" title="【1】Blackbox_exporter 简介"></a>【1】Blackbox_exporter 简介</h2><h3 id="（1-1）实现功能"><a href="#（1-1）实现功能" class="headerlink" title="（1.1）实现功能"></a>（1.1）实现功能</h3><p>blackbox-exporter项目地址：<a href="https://github.com/prometheus/blackbox_exporter">https://github.com/prometheus/blackbox_exporter</a></p>
<p>  blackbox_exporter 是 Prometheus 官方提供的一个 exporter，可以监控 HTTP、 HTTPS,、DNS、 TCP 、ICMP 等目标实例，从而实现对被监控节点进行监控 和数据采集。promethes调用blackbox_exporter去访问目标监控服务器，实现指标的采集</p>
<p>  prometheus blackbox_exporter下载地址：<a href="https://prometheus.io/download/#blackbox_exporter">Download | Prometheus</a></p>
<p>  HTTP&#x2F;HTPPS：URL&#x2F;API 可用性检测</p>
<p>  TCP：端口监听检测</p>
<p>  ICMP：主机存活检测</p>
<p>  DNS：域名解析</p>
<p>黑盒监控和白盒监控：</p>
<p>　　黑盒监控，关注的是实时状态，一般都是正在发生的事件，比如网站访问不了、磁盘无法写入数据等。即黑盒监控的重点是能对正在发生的故障进行告警。常见的黑盒监控包括HTTP探针、TCP探针等用于检测站点或者服务的可访问性，以及访问效率等。</p>
<p>　　白盒监控，关注的是原因，也就是系统内部的一些运行指标数据，例如nginx响应时长、存储I&#x2F;O负载等</p>
<p>　　监控系统要能够有效的支持百盒监控和黑盒监控，通过白盒能够了解系统内部的实际运行状态，以及对监控指标的观察能够预判出可能出现的潜在问题，从而对潜在的不确定因素进行提前处理避免问题发生；</p>
<p>　　而通过黑盒监控，可以在系统或服务发生故障时快速通知相关人员进行处理。</p>
<h3 id="（1-2）下载和部署blackbox-exporter"><a href="#（1-2）下载和部署blackbox-exporter" class="headerlink" title="（1.2）下载和部署blackbox_exporter"></a>（1.2）<strong>下载和部署blackbox_exporter</strong></h3><p>  <a href="https://github.com/prometheus/blackbox_exporter">https://github.com/prometheus/blackbox_exporter</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.23.0/blackbox_exporter-0.23.0.linux-amd64.tar.gz</span><br><span class="line">tar xf blackbox_exporter-0.23.0.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line">ln -sv /usr/local/blackbox_exporter-0.23.0.linux-amd64 /usr/local/blackbox_exporter</span><br><span class="line"> /usr/local/blackbox_exporter/blackbox_exporter -h    #查看帮助信息</span><br></pre></td></tr></table></figure>

<h3 id=""><a href="#" class="headerlink" title=""></a></h3><p>（1.3）blackbox_exporter 配置文件解析</p>
<p> 官方解释: <a href="https://github.com/prometheus/blackbox/_exporter/blob/master/CONFIGURATION.md">https://github.com/prometheus/blackbox\_exporter/blob/master/CONFIGURATION.md</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">modules:</span><br><span class="line">  http_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">  http_post_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    http:</span><br><span class="line">      method: POST</span><br><span class="line">  tcp_connect:</span><br><span class="line">    prober: tcp</span><br><span class="line">  pop3s_banner:</span><br><span class="line">    prober: tcp</span><br><span class="line">    tcp:</span><br><span class="line">      query_response:</span><br><span class="line">      - expect: &quot;^+OK&quot;</span><br><span class="line">      tls: true</span><br><span class="line">      tls_config:</span><br><span class="line">        insecure_skip_verify: false</span><br><span class="line">  ssh_banner:</span><br><span class="line">    prober: tcp</span><br><span class="line">    tcp:</span><br><span class="line">      query_response:</span><br><span class="line">      - expect: &quot;^SSH-2.0-&quot;</span><br><span class="line">  irc_banner:</span><br><span class="line">    prober: tcp</span><br><span class="line">    tcp:</span><br><span class="line">      query_response:</span><br><span class="line">      - send: &quot;NICK prober&quot;</span><br><span class="line">      - send: &quot;USER prober prober prober :prober&quot;</span><br><span class="line">      - expect: &quot;PING :([^ ]+)&quot;</span><br><span class="line">        send: &quot;PONG $&#123;1&#125;&quot;</span><br><span class="line">      - expect: &quot;^:[^ ]+ 001&quot;</span><br><span class="line">  icmp:</span><br><span class="line">    prober: icmp</span><br></pre></td></tr></table></figure>

<p>　　运行 blackbox exporter 时,需要用户提供探针的配置信息,这些配置信息可能是一些自定义的 HTTP 头信息,也可能是探测时需要的一些 TSL(秘钥证书) 配置。</p>
<p>　　也可能是探针本身的验证行为.在 blackbox exporter 每一个探针配置称为一个 module,并且以 YAML 配置文件的形式提供给 blackbox exporter。</p>
<p>　　每一个 module 主要包含以下配置内容,探针类型**(prober**),验证访问超时时间(<strong>timeout)</strong>,以及当前探针的具体配置项:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 探针类型: http https tcp dns icmp</span><br><span class="line">prober: &lt;prober_string&gt; #必选</span><br><span class="line"></span><br><span class="line"># 超时时间:</span><br><span class="line">[timeout: &lt;duration&gt;] #默认单位秒</span><br><span class="line"></span><br><span class="line"># 探针的详细配置,最多只能配置其中一个</span><br><span class="line">[ http: &lt;http_probe&gt; ]</span><br><span class="line">[ tcp: &lt;tcp_probe&gt; ]</span><br><span class="line">[ dns: &lt;dns_probe&gt; ]</span><br><span class="line">[ icmp: &lt;icmp_probe&gt; ]</span><br><span class="line"></span><br><span class="line">&lt;http_probe&gt;可配置参数</span><br><span class="line"># 此探针接受的状态代码。 默认为2xx。</span><br><span class="line">[ valid_status_codes: &lt;int&gt;, ... | default = 2xx ]</span><br><span class="line"></span><br><span class="line"># 此探针接受的 HTTP 版本.</span><br><span class="line">[ valid_http_versions: &lt;string&gt;, ... ]</span><br><span class="line"></span><br><span class="line">#探针将使用的HTTP方法。</span><br><span class="line">[ method: &lt;string&gt; | default = &quot;GET&quot; ]</span><br><span class="line"></span><br><span class="line"># 为探针设置的HTTP标头。</span><br><span class="line">headers:</span><br><span class="line">[ &lt;string&gt;: &lt;string&gt; ... ]</span><br><span class="line"></span><br><span class="line"># 探针是否将遵循任何重定向</span><br><span class="line">[ no_follow_redirects: &lt;boolean&gt; | default = false ]</span><br><span class="line"></span><br><span class="line"># 如果存在SSL，则探测失败。</span><br><span class="line">[ fail_if_ssl: &lt;boolean&gt; | default = false ]</span><br><span class="line"></span><br><span class="line"># 如果不存在SSL，则探测失败。</span><br><span class="line">[ fail_if_not_ssl: &lt;boolean&gt; | default = false ]</span><br><span class="line"></span><br><span class="line"># 如果响应主体与正则表达式匹配，则探测失败。</span><br><span class="line">fail_if_body_matches_regexp:</span><br><span class="line">[ - &lt;regex&gt;, ... ]</span><br><span class="line"></span><br><span class="line"># 如果响应主体与正则表达式不匹配，则探测失败。</span><br><span class="line">fail_if_body_not_matches_regexp:</span><br><span class="line">[ - &lt;regex&gt;, ... ]</span><br><span class="line"></span><br><span class="line"># 如果响应头与正则表达式匹配，则探测失败。 对于具有多个值的标头，如果*至少一个*匹配，则失败。</span><br><span class="line">fail_if_header_matches:</span><br><span class="line">[ - &lt;http_header_match_spec&gt;, ... ]</span><br><span class="line"></span><br><span class="line"># 如果响应头与正则表达式不匹配，则探测失败。 对于具有多个值的标头，如果* none *不匹配，则失败。</span><br><span class="line">fail_if_header_not_matches:</span><br><span class="line">[ - &lt;http_header_match_spec&gt;, ... ]</span><br><span class="line"></span><br><span class="line"># HTTP探针的TLS协议的配置。</span><br><span class="line">tls_config:</span><br><span class="line">[ &lt;tls_config&gt; ]</span><br><span class="line"></span><br><span class="line"># 目标的HTTP基本身份验证凭据。</span><br><span class="line">basic_auth:</span><br><span class="line">[ username: &lt;string&gt; ]</span><br><span class="line">[ password: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"># 目标的承载令牌。</span><br><span class="line">[ bearer_token: &lt;secret&gt; ]</span><br><span class="line"></span><br><span class="line"># 目标的承载令牌文件</span><br><span class="line">[ bearer_token_file: &lt;filename&gt; ]</span><br><span class="line"></span><br><span class="line"># 用于连接到目标的HTTP代理服务器。</span><br><span class="line">[ proxy_url: &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"># HTTP探针的IP协议（ip4，ip6）</span><br><span class="line">[ preferred_ip_protocol: &lt;string&gt; | default = &quot;ip6&quot; ]</span><br><span class="line">[ ip_protocol_fallback: &lt;boolean&gt; | default = true ]</span><br><span class="line"></span><br><span class="line"># 探针中使用的HTTP请求的主体。</span><br><span class="line">body: [ &lt;string&gt; ]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###################################################################</span><br><span class="line">&lt;http_header_match_spec&gt;</span><br><span class="line">header: &lt;string&gt;,</span><br><span class="line">regexp: &lt;regex&gt;,</span><br><span class="line">[ allow_missing: &lt;boolean&gt; | default = false ]</span><br></pre></td></tr></table></figure>

<h3 id="（1-4）结合-prometheus（ping）"><a href="#（1-4）结合-prometheus（ping）" class="headerlink" title="（1.4）结合 prometheus（ping）"></a>（1.4）结合 prometheus（ping）</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: &#x27;blackbox-ping&#x27;</span><br><span class="line">  metrics_path: /probe</span><br><span class="line">  params:</span><br><span class="line">    modelus: [icmp]</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - 223.5.5.5</span><br><span class="line">    lables:</span><br><span class="line">      instance: aliyun</span><br><span class="line">  - targets:</span><br><span class="line">    - 47.92.229.67</span><br><span class="line">    lables:</span><br><span class="line">      instance: zsf</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 192.168.111.65:9115</span><br></pre></td></tr></table></figure>

<h3 id="（1-5）http"><a href="#（1-5）http" class="headerlink" title="（1.5）http"></a>（1.5）http</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">modules:</span><br><span class="line">  http_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    http:</span><br><span class="line">      method: GET</span><br><span class="line">  http_post_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    http:</span><br><span class="line">      method: POST</span><br></pre></td></tr></table></figure>

<p>配置好之后运行如指令 <strong>curl url:9115&#x2F;metrics</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#DNS解析时间,单位 s</span><br><span class="line">probe_dns_lookup_time_seconds 0.039431355</span><br><span class="line">#探测从开始到结束的时间,单位 s,请求这个页面响应时间</span><br><span class="line">probe_duration_seconds 0.651619323</span><br><span class="line"></span><br><span class="line">probe_failed_due_to_regex 0</span><br><span class="line"></span><br><span class="line">#HTTP 内容响应的长度</span><br><span class="line">probe_http_content_length -1</span><br><span class="line">#按照阶段统计每阶段的时间</span><br><span class="line">probe_http_duration_seconds&#123;phase=&quot;connect&quot;&#125; 0.050388884 #连接时间</span><br><span class="line">probe_http_duration_seconds&#123;phase=&quot;processing&quot;&#125; 0.45868667 #处理请求的时间</span><br><span class="line">probe_http_duration_seconds&#123;phase=&quot;resolve&quot;&#125; 0.040037612 #响应时间</span><br><span class="line">probe_http_duration_seconds&#123;phase=&quot;tls&quot;&#125; 0.145433254 #校验证书的时间</span><br><span class="line">probe_http_duration_seconds&#123;phase=&quot;transfer&quot;&#125; 0.000566269</span><br><span class="line">#重定向的次数</span><br><span class="line">probe_http_redirects 1</span><br><span class="line">#ssl 指示是否将 SSL 用于最终重定向</span><br><span class="line">probe_http_ssl 1</span><br><span class="line">#返回的状态码</span><br><span class="line">probe_http_status_code 200</span><br><span class="line">#未压缩的响应主体长度</span><br><span class="line">probe_http_uncompressed_body_length 40339</span><br><span class="line">#http 协议的版本</span><br><span class="line">probe_http_version 1.1</span><br><span class="line">#使用的 ip 协议的版本号</span><br><span class="line">probe_ip_protocol 4</span><br><span class="line"></span><br><span class="line">probe_ssl_earliest_cert_expiry 1.59732e+09</span><br><span class="line">#是否探测成功</span><br><span class="line">probe_success 1</span><br><span class="line">#TLS 的版本号</span><br><span class="line">probe_tls_version_info&#123;version=&quot;TLS 1.2&quot;&#125; 1</span><br></pre></td></tr></table></figure>

<p>与 prometheus 集成,采用prometheus 的 Relabelinng 能力(服务发现)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: &#x27;blackbox-http&#x27;</span><br><span class="line">  metrics_path: /probe</span><br><span class="line">  params:</span><br><span class="line">    modelue: [http_2xx]</span><br><span class="line">  static_configs:</span><br><span class="line">  - targets:</span><br><span class="line">    - http://www.zhangshoufu.com</span><br><span class="line">    - http://www.xuliangwei.com</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 192.168.111.65:9115  #blackbox-exporter 所在的机器和端口</span><br></pre></td></tr></table></figure>

<p>这里针对每一个探针服务（如http_2xx）定义一个采集任务，并且直接将任务的采集目标定义为我们需要探测的站点。在采集样本数据之前通过relabel_configs对采集任务进行动态设置。</p>
<p>1, 根据 Target 实例的地址,写入__param_target 标签中,__param_<name>形式的标签表示,在采集任务时会在请求目标地址中添加<name>参数,等同于 params 的设置</p>
<p>2, 获取__param_target的值，并覆写到instance标签中；</p>
<p>3, 覆写Target实例的__address__标签值为BlockBox Exporter实例的访问地址。  </p>
<h3 id="（1-6）-自定义-HTTP-请求（通过-POST），HTTPS"><a href="#（1-6）-自定义-HTTP-请求（通过-POST），HTTPS" class="headerlink" title="（1.6） 自定义 HTTP 请求（通过 POST），HTTPS"></a>（1.6） 自定义 HTTP 请求（通过 POST），HTTPS</h3><p>自定义 HTTP 请求</p>
<p>　　HTTP服务通常会以不同的形式对外展现，有些可能就是一些简单的网页，而有些则可能是一些基于REST的API服务。</p>
<p>　　对于不同类型的HTTP的探测需要管理员能够对HTTP探针的行为进行更多的自定义设置，包括：HTTP请求方法、HTTP头信息、请求参数等。对于某些启用了安全认证的服务还需要能够对HTTP探测设置相应的Auth支持。</p>
<p>　　对于HTTPS类型的服务还需要能够对证书进行自定义设置。</p>
<p>如下所示，这里通过method定义了探测时使用的请求方法，对于一些需要请求参数的服务，还可以通过headers定义相关的请求头信息，使用body定义请求内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_post_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    timeout: 5s</span><br><span class="line">    http:</span><br><span class="line">      method: POST</span><br><span class="line">      headers:</span><br><span class="line">        Content-Type: application/json</span><br><span class="line">      body: &#x27;&#123;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<p><strong>自定义探针行为</strong><br>在默认情况下HTTP探针只会对HTTP返回状态码进行校验，如果状态码为2XX（200 &lt;&#x3D; StatusCode &lt; 300）则表示探测成功，并且探针返回的指标probe_success值为1。<br>如果用户需要指定HTTP返回状态码，或者对HTTP版本有特殊要求，如下所示，可以使用valid_http_versions和valid_status_codes进行定义：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_2xx_example:</span><br><span class="line">    prober: http</span><br><span class="line">    timeout: 5s</span><br><span class="line">    http:</span><br><span class="line">      valid_http_versions: [&quot;HTTP/1.1&quot;, &quot;HTTP/2&quot;]</span><br><span class="line">      valid_status_codes: [200,301,302]</span><br></pre></td></tr></table></figure>

<p>默认情况下，Blockbox返回的样本数据中也会包含指标probe_http_ssl，用于表明当前探针是否使用了SSL：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  http_2xx_example:    prober: http    timeout: 5s    http:      valid_status_codes: []      method: GET      no_follow_redirects:</span><br><span class="line">false</span><br><span class="line">      fail_if_ssl:</span><br><span class="line">false</span><br><span class="line">      fail_if_not_ssl:</span><br><span class="line">false</span><br></pre></td></tr></table></figure>


<p>而如果用户对于HTTP服务是否启用SSL有强制的标准。则可以使用fail_if_ssl和fail_if_not_ssl进行配置。fail_if_ssl为true时，表示如果站点启用了SSL则探针失败，反之成功。fail_if_not_ssl刚好相反。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_2xx_example:</span><br><span class="line">  prober: http</span><br><span class="line">  timeout: 5s</span><br><span class="line">  http:</span><br><span class="line">    method: GET</span><br><span class="line">    fail_if_matches_regexp:</span><br><span class="line">      - &quot;Could not connect to database&quot;</span><br><span class="line">    fail_if_not_matches_regexp:</span><br><span class="line">      - &quot;Download the latest version here&quot;</span><br></pre></td></tr></table></figure>

<p>除了基于HTTP状态码，HTTP协议版本以及是否启用SSL作为控制探针探测行为成功与否的标准以外，还可以匹配HTTP服务的响应内容。</p>
<p>使用 <strong>fail_if_matches_regexp 和 fail_if_not_matches_regexp</strong> 用户可以定义一组正则表达式，用于验证HTTP返回内容是否符合或者不符合正则表达式的内容。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_2xx_example:</span><br><span class="line">prober: http</span><br><span class="line">timeout: 5s</span><br><span class="line">http:</span><br><span class="line">method: GET</span><br><span class="line">fail_if_matches_regexp:</span><br><span class="line">- &quot;Could not connect to database&quot;</span><br><span class="line">fail_if_not_matches_regexp:</span><br><span class="line">- &quot;Download the latest version here&quot;</span><br></pre></td></tr></table></figure>

<p>具体可以看我上面的配置详解</p>
<h3 id="（1-7）https-与-tls，证书与秘钥安全认证"><a href="#（1-7）https-与-tls，证书与秘钥安全认证" class="headerlink" title="（1.7）https 与 tls，证书与秘钥安全认证"></a>（1.7）https 与 tls，证书与秘钥安全认证</h3><p>如果HTTP服务启用了<strong>安全认证</strong>，Blockbox Exporter内置了对basic_auth的支持，可以直接设置相关的认证信息即可：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_basic_auth_example:</span><br><span class="line">    prober: http</span><br><span class="line">    timeout: 5s</span><br><span class="line">    http:</span><br><span class="line">      method: POST</span><br><span class="line">      headers:</span><br><span class="line">        Host: &quot;login.example.com&quot;</span><br><span class="line">      basic_auth:</span><br><span class="line">        username: &quot;username&quot;</span><br><span class="line">        password: &quot;mysecret&quot;</span><br></pre></td></tr></table></figure>

<p>对于使用了Bear Token的服务也可以通过bearer_token配置项直接指定令牌字符串，或者通过bearer_token_file指定令牌文件。</p>
<p>　　对于一些启用了 HTTPS的服务，但是需要<strong>自定义证书的服务</strong>，可以通过tls_config指定相关的证书信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_custom_ca_example:</span><br><span class="line">    prober: http</span><br><span class="line">    http:</span><br><span class="line">      method: GET</span><br><span class="line">      tls_config:</span><br><span class="line">        ca_file: &quot;/certs/my_cert.crt&quot;</span><br></pre></td></tr></table></figure>

<h3 id="http-忽略过期证书-跳过过期证书最佳实践"><a href="#http-忽略过期证书-跳过过期证书最佳实践" class="headerlink" title="http 忽略过期证书,跳过过期证书最佳实践"></a><strong>http 忽略过期证书,跳过过期证书最佳实践</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http_2xx:</span><br><span class="line">  prober: http</span><br><span class="line">  http:</span><br><span class="line">    method: GET</span><br><span class="line">    tls_config:</span><br><span class="line">      insecure_skip_verify: true</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">modules:</span><br><span class="line">  http_2xx:</span><br><span class="line">    prober: http</span><br><span class="line">    timeout: 5s</span><br><span class="line">    http:</span><br><span class="line">      valid_http_versions: [&quot;HTTP/1.1&quot;, &quot;HTTP/2.0&quot;]</span><br><span class="line">      method: GET</span><br><span class="line">      preferred_ip_protocol: &quot;ip4&quot;</span><br><span class="line">      ip_protocol_fallback: false</span><br><span class="line">      no_follow_redirects: false</span><br><span class="line">      fail_if_ssl: false</span><br><span class="line">      fail_if_not_ssl: false</span><br><span class="line">      tls_config:</span><br><span class="line">        insecure_skip_verify: true</span><br></pre></td></tr></table></figure>

<p>　　　　<img src="/images/1705025026-9501eb78805ce1382788d246287b7bd4.png"></p>
<p>要使用 blackbox_exporter 监控 HTTPS 网址，您需要在 <code>probe_http_modules</code> 部分中指定 <code>tls_config</code>。</p>
<p><strong>首先，您需要创建一个包含证书和密钥的 PEM 文件</strong>。然后，您可以将该文件路径指定为 <code>tls_config</code> 内的 <code>cert_file</code> 和 <code>key_file</code> 字段。</p>
<p>此外，您需要将 <code>http</code> 模块更改为 <code>https</code> 模块，以便 blackbox_exporter 使用 HTTPS 进行连接。以下是一个示例配置文件片段：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">modules:</span><br><span class="line">  http_2xx:</span><br><span class="line">    prober: https</span><br><span class="line">    timeout: 5s</span><br><span class="line">    http:</span><br><span class="line">      preferred_ip_protocol: &quot;ip4&quot;</span><br><span class="line">      tls_config:</span><br><span class="line">        cert_file: /path/to/cert.pem</span><br><span class="line">        key_file: /path/to/key.pem</span><br></pre></td></tr></table></figure>

<p>请注意，在使用 HTTPS 进行连接时，黑盒探针将验证服务器的证书。如果您使用自签名证书或无效证书，则需要设置 <code>tls_config</code> 中的 <code>insecure_skip_verify</code> 选项为 <code>true</code>。</p>
<h3 id="（1-X）启动与验证"><a href="#（1-X）启动与验证" class="headerlink" title="（1.X）启动与验证"></a>（1.X）启动与验证</h3><p><strong>启动：.&#x2F;blackbox_exporter –config.file&#x3D;blackbox.yml</strong></p>
<p><strong>验证：</strong></p>
<p>　　方法1：curl <a href="http://172.16.10.65:9115/probe?target=prometheus.io&module=http%5C_2xx&debug=true">http://172.16.10.65:9115/probe?target=prometheus.io&amp;module=http\_2xx&amp;debug=true</a></p>
<p>　　方法2：blackbox_exporter访问验证</p>
<p><img src="/images/1705025026-225f577fa40457a8f5762cc95b7d994b.png"></p>
<p>  prometheus-server服务验证</p>
<p>　　<img src="/images/1705025026-52628c092d13d8e750525b72814b72bb.png"></p>
<h2 id="【2】rules-基本告警"><a href="#【2】rules-基本告警" class="headerlink" title="【2】rules 基本告警"></a>【2】rules 基本告警</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groups:</span><br><span class="line">- name: example</span><br><span class="line">  rules:</span><br><span class="line">  - alert: curlHttpStatus</span><br><span class="line">    expr:  probe_http_status_code&#123;job=&quot;blackbox-http&quot;&#125;&gt;=400 and probe_success&#123;job=&quot;blackbox-http&quot;&#125;==0</span><br><span class="line">    #for: 1m</span><br><span class="line">    labels:</span><br><span class="line">      docker: number</span><br><span class="line">    annotations:</span><br><span class="line">      summary: &#x27;业务报警: 网站不可访问&#x27;</span><br><span class="line">      description: &#x27;&#123;&#123;$labels.instance&#125;&#125; 不可访问,请及时查看,当前状态码为&#123;&#123;$value&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure>


<h2 id="【3】grafana导入模板"><a href="#【3】grafana导入模板" class="headerlink" title="【3】grafana导入模板"></a>【3】<strong>grafana导入模板</strong></h2><p>  模板：ID-13587、ID-9965</p>
<p>　　<img src="/images/1705025026-80e6662ce004d41239bea3ef49c89897.png"></p>
<p>　　<img src="/images/1705025026-b4dfe0fdedb6706ec3a03417eae9e0c9.png"></p>
<h2 id="【最佳实践】"><a href="#【最佳实践】" class="headerlink" title="【最佳实践】"></a>【最佳实践】</h2><h3 id="（1）prometheus-整合-blackbox-exporter-（HTTP-Ping）"><a href="#（1）prometheus-整合-blackbox-exporter-（HTTP-Ping）" class="headerlink" title="（1）prometheus 整合 blackbox_exporter （HTTP&#x2F;Ping）"></a>（1）prometheus 整合 blackbox_exporter （HTTP&#x2F;Ping）</h3><p>ping</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: &#x27;blackbox-ping-IT设备&#x27;</span><br><span class="line">  params:</span><br><span class="line">    module: [icmp]</span><br><span class="line">  metrics_path: /probe</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">      - 192.168.1.1</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;桌面云服务器-linx7（F12-17U）&#x27;</span><br><span class="line">        source_type: B机房</span><br><span class="line">    - targets:</span><br><span class="line">      - 192.168.1.2</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;桌面云服务器-linx7（F12-20U）&#x27;</span><br><span class="line">        source_type: B机房</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 127.0.0.1:9115</span><br></pre></td></tr></table></figure>

<p>Http：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: &#x27;blackbox-http-业务模块&#x27;</span><br><span class="line">  params:</span><br><span class="line">    modelue: [http_2xx]</span><br><span class="line">  metrics_path: /probe</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">      - http://www.baidu.com</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;a系统&#x27;</span><br><span class="line">        source_type: 信息科技部</span><br><span class="line">    - targets:</span><br><span class="line">      - https://www.abc.com</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;abc官网&#x27;</span><br><span class="line">        source_type: 信息科技部</span><br><span class="line">    - targets:</span><br><span class="line">      - http://192.168.1.1:7180</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;CDH-cm&#x27;</span><br><span class="line">        source_type: 大数据风控部</span><br><span class="line">    - targets:</span><br><span class="line">      - http://192.168.1.2:8088/</span><br><span class="line">      labels:</span><br><span class="line">        name: &#x27;a&#x27;</span><br><span class="line">        source_type: 大数据风控部</span><br><span class="line">  relabel_configs:</span><br><span class="line">    - source_labels: [__address__]</span><br><span class="line">      target_label: __param_target</span><br><span class="line">    - source_labels: [__param_target]</span><br><span class="line">      target_label: instance</span><br><span class="line">    - target_label: __address__</span><br><span class="line">      replacement: 127.0.0.1:9115</span><br></pre></td></tr></table></figure>

<h3 id="（2）服务发现"><a href="#（2）服务发现" class="headerlink" title="（2）服务发现"></a>（2）服务发现</h3><p>prometheus</p>
<p><img src="/images/1705025026-0165bd681c9a08a1d2a2612202bd332c.png"></p>
<p>url.json</p>
<p><img src="/images/1705025026-5fe3966982d397ec6268d8d770ecc2d3.jpg"></p>
<h3 id="（3）SSL证书监控"><a href="#（3）SSL证书监控" class="headerlink" title="（3）SSL证书监控"></a>（3）SSL证书监控</h3><p> http里面就有，如下表达式，就是检测证书到期时间是否&lt;90天</p>
<p>(probe_ssl_earliest_cert_expiry{} - time()   )&#x2F;3600&#x2F;24 &lt;90</p>
]]></content>
      <categories>
        <category>exporter</category>
      </categories>
      <tags>
        <tag>exporter</tag>
      </tags>
  </entry>
  <entry>
    <title>部署自签证书报错：curl: (60) Peer‘s certificate issuer is not recognized</title>
    <url>/2024/01/12/%E9%83%A8%E7%BD%B2%E8%87%AA%E7%AD%BE%E8%AF%81%E4%B9%A6%E6%8A%A5%E9%94%99%EF%BC%9Acurl-60-Peer%E2%80%98s-certificate-issuer-is-not-recognized/</url>
    <content><![CDATA[<h1 id="部署自签证书报错：curl-60-Peer‘s-certificate-issuer-is-not-recognized"><a href="#部署自签证书报错：curl-60-Peer‘s-certificate-issuer-is-not-recognized" class="headerlink" title="部署自签证书报错：curl: (60) Peer‘s certificate issuer is not recognized"></a>部署自签证书报错：curl: (60) Peer‘s certificate issuer is not recognized</h1><h2 id="一、事件背景"><a href="#一、事件背景" class="headerlink" title="一、事件背景"></a>一、事件背景</h2><p>        公司是有一个OA系统，因国家等保要求，现在需要对安全进行整改，于是我就将OA网站部署上了https，实现网站传输加密。</p>
<h2 id="二、事件错误"><a href="#二、事件错误" class="headerlink" title="二、事件错误"></a>二、事件错误</h2><p>        部署完成后，浏览器一切访问正常。但是我的接口调用修改成https后，发现用不了，于是用curl查看发现了以下错误。</p>
<p>        报错信息：curl: (60) Peer’s certificate issuer is not recognized</p>
<p><img src="/images/1705026966-095dbd164468e01e2fbadea9b59f88fb.png"></p>
<h2 id="三、事件解决"><a href="#三、事件解决" class="headerlink" title="三、事件解决"></a>三、事件解决</h2><p>        经过资料查找，确定了是SSL证书不信任的问题。网上说更新CA证书库、安装CA库等都不适用，这种一般只适用知名网站，自己部署的只能自己导入证书。</p>
<p>        以下是导入过程：</p>
<h3 id="1、获取网站的pem证书"><a href="#1、获取网站的pem证书" class="headerlink" title="1、获取网站的pem证书"></a>1、获取网站的pem证书</h3><p>（1） 首先打开网站，链接左边有一个小锁。依次点击安全连接—&gt;更多信息。</p>
<p><img src="/images/1705026966-90baa8c5a48795089fa6244a8a167b89.png"></p>
<p>（2） 点击查看证书。</p>
<p><img src="/images/1705026966-4341bb9b1d8907e9e67f3dd8361fa845.png"></p>
<p>（3） 在第一个标签处往下翻，找到“PEM（证书链）”，点击下载后传到Linux。</p>
<p><img src="/images/1705026966-58303edf243cad6a2a61be77c6ad1794.png"></p>
<p><img src="/images/1705026966-22aad5f68548ba2454e7405a35d769e5.png"> </p>
<p>（4） 随后网站所在的Linux服务器上面，执行以下命令即可。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#将pem文件放到对应文件夹，并更新后缀为crt</span></span><br><span class="line"><span class="built_in">mv</span> jd-com-chain.pem /etc/pki/ca-trust/source/anchors/jd-com-chain.crt</span><br><span class="line"></span><br><span class="line"><span class="comment">#更新本地CA库</span></span><br><span class="line">update-ca-trust extract</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>证书</category>
      </categories>
      <tags>
        <tag>证书</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS域名详细解析过程</title>
    <url>/2024/01/15/DNS%E5%9F%9F%E5%90%8D%E8%AF%A6%E7%BB%86%E8%A7%A3%E6%9E%90%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="什么是DNS-域名解析"><a href="#什么是DNS-域名解析" class="headerlink" title="什么是DNS****域名解析"></a><strong>什么是DNS****域名解析</strong></h2><p>       我们首先要了解域名和IP地址的区别。IP地址是互联网上计算机唯一的逻辑地址，通过IP地址实现不同计算机之间的相互通信，每台联网计算机都需要通过IP地址来互相联系和分别。</p>
<p>      但由于IP地址是由一串容易混淆的数字串构成，人们很难记忆所有计算机的IP地址，这样对于我们日常工作生活访问不同网站是很困难的。基于这种背景，人们在IP地址的基础上又发展出了一种更易识别的符号化标识，这种标识由人们自行选择的字母和数字构成，相比IP地址更易被识别和记忆，逐渐代替IP地址成为互联网用户进行访问互联的主要入口。这种符号化标识就是域名。</p>
<p>       域名虽然更易被用户所接受和使用，但计算机只能识别纯数字构成的IP地址，不能直接读取域名。因此要想达到访问效果，就需要将域名翻译成IP地址。而DNS域名解析承担的就是这种翻译效果。</p>
<h2 id="DNS-域名解析过程"><a href="#DNS-域名解析过程" class="headerlink" title="DNS****域名解析过程"></a><strong>DNS****域名解析过程</strong></h2><p>       当我们在浏览器地址栏中输入<a href="http://www.baidu.com时，DNS解析将会有将近10个步骤，这个过程大体大体由一张图可以表示：">www.baidu.com时，DNS解析将会有将近10个步骤，这个过程大体大体由一张图可以表示：</a></p>
<p><img src="/images/1705296943-5abeecf86e12344267a23f63ec83e9bc.png"></p>
<p>       整个过程大体描述如下，其中前两个步骤是在本地电脑内完成的，后8个步骤涉及到真正的域名解析服务器：</p>
<p><strong>第一步</strong>、</p>
<p>      本地电脑会检查浏览器缓存中有没有这个域名对应的解析过的IP地址，如果缓存中有，这个解析过程就结束。浏览器缓存域名也是有限制的，不仅浏览器缓存大小有限制，而且缓存的时间也有限制，通常情况下为几分钟到几小时不等，域名被缓存的时间限制可以通过TTL属性来设置。这个缓存时间太长和太短都不太好，如果时间太长，一旦域名被解析到的IP有变化，会导致被客户端缓存的域名无法解析到变化后的IP地址，以致该域名不能正常解析，这段时间内有一部分用户无法访问网站。如果设置时间太短，会导致用户每次访问网站都要重新解析一次域名。</p>
<p><strong>第二步</strong>、</p>
<p>        如果浏览器缓存中没有数据，浏览器会查找操作系统缓存中是否有这个域名对应的DNS解析结果。其实操作系统也有一个域名解析的过程，在Linux中可以通过&#x2F;etc&#x2F;hosts文件来设置，而在windows中可以通过配置C:\Windows\System32\drivers\etc\hosts文件来设置，用户可以将任何域名解析到任何能够访问的IP地址。例如，我们在测试时可以将一个域名解析到一台测试服务器上，这样不用修改任何代码就能测试到单独服务器上的代码的业务逻辑是否正确。正是因为有这种本地DNS解析的规程，所以有黑客就可能通过修改用户的域名来把特定的域名解析到他指定的IP地址上，导致这些域名被劫持。</p>
<p><strong>第三步</strong>、</p>
<p>        前两个过程无法解析时，就要用到我们网络配置中的”DNS服务器地址”了。操作系统会把这个域名发送给这个本地DNS服务器。每个完整的内网通常都会配置本地DNS服务器，例如用户是在学校或工作单位接入互联网，那么用户的本地DNS服务器肯定在学校或工作单位里面。它们一般都会缓存域名解析结果，当然缓存时间是受到域名的失效时间控制的。大约80%的域名解析到这里就结束了，后续的DNS迭代和递归也是由本地DNS服务器负责。</p>
<p>windows在这配置：控制面板-》网络和共享中心-》更改适配器设置-》选中目标适配器右键选择属性-》Internet协议版本4(TCP&#x2F;IPv4)-》配置DNS地址。</p>
<p><img src="/images/1705296943-0a03676aca44e0f568c7c9ee24d2e2b8.png"></p>
<p><img src="/images/1705296943-4cc1ba0c7603880951114640760d49fe.png"></p>
<p> Linux在这设置：&#x2F;etc&#x2F;resolv.conf</p>
<p><img src="/images/1705296943-40cb65279c6d39308535ed9ae4aace95.png"></p>
<p> <img src="/images/1705296943-0d204e03af5dc9802391db59a22c636b.png"></p>
<p><strong>第四步</strong>、</p>
<p>       如果本地DNS服务器仍然没有命中，就直接到根DNS服务器请求解析。</p>
<p><strong>第五步</strong>、</p>
<p>       根DNS服务器返回给本地DNS域名服务器一个顶级DNS服务器地址，它是国际顶级域名服务器，如.com、.cn、.org等，全球只有13台左右。</p>
<p><strong>第六步</strong>、</p>
<p>       本地DNS服务器再向上一步获得的顶级DNS服务器发送解析请求。</p>
<p><strong>第七步</strong>、</p>
<p>        接受请求的顶级DNS服务器查找并返回此域名对应的Name Server域名服务器的地址，这个Name Server服务器就是我要访问的网站域名提供商的服务器，其实该域名的解析任务就是由域名提供商的服务器来完成。   比如我要访问<a href="http://www.baidu.com,而这个域名是从a公司注册获得的,那么a公司上的服务器就会有www.baidu.com的相关信息./">www.baidu.com，而这个域名是从A公司注册获得的，那么A公司上的服务器就会有www.baidu.com的相关信息。</a></p>
<p><strong>第八步</strong>、</p>
<p>       Name Server服务器会查询存储的域名和IP的映射关系表，再把查询出来的域名和IP地址等等信息，连同一个TTL值返回给本地DNS服务器。</p>
<p><strong>第九步</strong>、</p>
<p>       返回该域名对应的IP和TTL值，本地DNS服务器会缓存这个域名和IP的对应关系，缓存时间由TTL值控制。</p>
<p><strong>第十步</strong>、</p>
<p>       把解析的结果返回给本地电脑，本地电脑根据TTL值缓存在本地系统缓存中，域名解析过程结束在实际的DNS解析过程中，可能还不止这10步，如Name Server可能有很多级，或者有一个GTM来负载均衡控制，这都有可能会影响域名解析过程。</p>
<h2 id="递归查询和迭代查询的区别"><a href="#递归查询和迭代查询的区别" class="headerlink" title="递归查询和迭代查询的区别"></a>递归查询和迭代查询的区别</h2><p>DNS客户端和本地名称服务器是递归，而本地名称服务器和其他名称服务器之间是迭代。<br><strong>DNS递归名称解析</strong>： 在DNS递归名称解析中，当所配置的本地名称服务器解析不了时，后面的查询工作是由本地名称服务器替代DNS客户端进行的（以“本地名称服务器”为中心），只需要本地名称服务器向DNS客户端返回最终的查询结果即可。</p>
<p><strong>DNS迭代名称解析</strong>：（或者叫“迭代查询”）的所有查询工作全部是DNS客户端自己进行（以“DNS客户端”自己为中心）。在条件之一满足时就会采用迭代名称解析方式：</p>
<ul>
<li><p>在查询本地名称服务器时，如果客户端的请求报文中没有申请使用递归查询，即在DNS请求报头部的RD字段没有置1。相当于说“你都没有主动要求我为你进行递归查询，我当然不会为你工作了”。</p>
</li>
<li><p>客户端在DNS请求报文中申请使用的是递归查询（也就是RD字段置1了），但在所配置的本地名称服务器上是禁用递归查询（DNS服务器一般默认支持递归查询的），即在应答DNS报文头部的RA字段置0。</p>
</li>
</ul>
<h2 id="域名解析记录"><a href="#域名解析记录" class="headerlink" title="域名解析记录"></a>域名解析记录</h2><p>       主要分为A记录、MX记录、CNAME记录、NS记录和TXT记录：</p>
<p>1、A记录</p>
<p>A代表Address，用来指定域名对应的IP地址，如将item.taobao.com指定到115.238.23.xxx，将switch.taobao.com指定到121.14.24.xxx。<strong>A****记录可以将多个域名解析到一个IP地址，但是不能将一个域名解析到多个IP地址</strong></p>
<p>2、MX记录</p>
<p>Mail Exchange，就是可以将某个域名下的邮件服务器指向自己的Mail Server，如taobao.com域名的A记录IP地址是115.238.25.xxx，如果将MX记录设置为115.238.25.xxx，即<a href="mailto:&#x78;&#x78;&#x78;&#64;&#116;&#97;&#x6f;&#x62;&#97;&#x6f;&#46;&#99;&#111;&#x6d;">&#x78;&#x78;&#x78;&#64;&#116;&#97;&#x6f;&#x62;&#97;&#x6f;&#46;&#99;&#111;&#x6d;</a>的邮件路由，DNS会将邮件发送到115.238.25.xxx所在的服务器，而正常通过Web请求的话仍然解析到A记录的IP地址</p>
<p>3、CNAME记录</p>
<p>Canonical Name，即别名解析。所谓别名解析就是可以为一个域名设置一个或者多个别名，如将aaa.com解析到bbb.net、将ccc.com也解析到bbb.net，其中bbb.net分别是aaa.com和ccc.com的别名</p>
<p>4、NS记录</p>
<p>为某个域名指定DNS解析服务器，也就是这个域名由指定的IP地址的DNS服务器取解析</p>
<p>5、TXT记录</p>
<p>为某个主机名或域名设置说明，如可以为ddd.net设置TXT记录为”这是XXX的博客”这样的说明</p>
]]></content>
      <categories>
        <category>DNS</category>
      </categories>
      <tags>
        <tag>DNS</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus标签的管理</title>
    <url>/2024/01/15/Prometheus%E6%A0%87%E7%AD%BE%E7%9A%84%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>Prometheus 在处理数据指标的过程中，包括【抓取的生命周期】和【标签的生命周期】。<br>默认情况下，当 Prometheus加载 Target 实例完成后，这些Target时候都会包含一些默认的标签：这些标签将会告诉Prometheus如何从该Target实例中获取监控数据。</p>
<p>1、Prometheus的标签配置</p>
<p>Prometheus通过标签可以实现查询过滤，并且还支持重新标签实现动态生成标签、过滤、删除无用标签等灵活配置。在采集数据之前可以使用relabel_configs进行重新标记，存储数据之前可以使用metric_relabel_configs重新标记。两种重新打标签的方式都支持以下动作：</p>
<p>· replace：默认动作，将匹配到的标签内容做替换<br>• keep：通过正则匹配，仅保留正则匹配到的标签<br>• drop：通过正则匹配，删除正则匹配到的标签<br>• labeldrop：删除指定标签，比如一些默认标签并不需要，可以用该动作删除<br>• labelkeep：仅保留指定标签</p>
<p>2、为了删除标签，我们指定一个正则表达式，然后指定删除标签的操作labeldrop。这将删除与正则表达式匹配的所有标签。此操作还有一个对应的反向操作labelkeep，它将保留与正则表达式匹配的标签，并删除所有其他标签。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># my global config</span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     5s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 5s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line">  # scrape_timeout is set to the global default (10s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">       - 127.0.0.1:9093</span><br><span class="line"></span><br><span class="line"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span><br><span class="line">rule_files:</span><br><span class="line">  - &quot;simulator_alert_rules.yml&quot;</span><br><span class="line">  # - &quot;second_rules.yml&quot;</span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line"># Here it&#x27;s Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line"># 任意写，建议英文，不要包含特殊字符</span><br><span class="line">- job_name: &#x27;http-simulator&#x27;</span><br><span class="line">  # 多久采集一次数据</span><br><span class="line">  scrape_interval: 15s</span><br><span class="line">  # 采集时的超时时间</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  # 采集的路径是啥</span><br><span class="line">  metrics_path: &#x27;/prometheus&#x27;</span><br><span class="line">  # 采集服务的地址，设置成上面Spring Boot应用所在服务器的具体地址。</span><br><span class="line"># 静态配置</span><br><span class="line">  static_configs:</span><br><span class="line">  # 指定要抓取的目标地址</span><br><span class="line">  - targets: [&#x27;localhost:8080&#x27;]</span><br><span class="line">    # 给抓取出来的所有指标添加指定的标签</span><br><span class="line">    labels:</span><br><span class="line">      my: label</span><br><span class="line">      your: label</span><br></pre></td></tr></table></figure>

<p>上面使用labels标签标记了两个标签：</p>
<p>在收集的指标中就可以看到对应的两个标签的值</p>
<p><img src="/images/1705308060-008f0583a12f37283c6210ca8b4c0314.png"></p>
<p>第二种方式使用metric_relabel_configs添加标签：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># my global config</span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     5s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 5s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line">  # scrape_timeout is set to the global default (10s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">       - 127.0.0.1:9093</span><br><span class="line"></span><br><span class="line"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span><br><span class="line">rule_files:</span><br><span class="line">  - &quot;simulator_alert_rules.yml&quot;</span><br><span class="line">  # - &quot;second_rules.yml&quot;</span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line"># Here it&#x27;s Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line"># 任意写，建议英文，不要包含特殊字符</span><br><span class="line">- job_name: &#x27;http-simulator&#x27;</span><br><span class="line">  # 多久采集一次数据</span><br><span class="line">  scrape_interval: 15s</span><br><span class="line">  # 采集时的超时时间</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  # 采集的路径是啥</span><br><span class="line">  metrics_path: &#x27;/prometheus&#x27;</span><br><span class="line">  # 采集服务的地址，设置成上面Spring Boot应用所在服务器的具体地址。</span><br><span class="line"># 静态配置</span><br><span class="line">  static_configs:</span><br><span class="line">  # 指定要抓取的目标地址</span><br><span class="line">  - targets: [&#x27;localhost:8080&#x27;]</span><br><span class="line">    # 给抓取出来的所有指标添加指定的标签</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - target_label: test_key</span><br><span class="line">    replacement: 中国</span><br></pre></td></tr></table></figure>

<p>我们可以看到在添加的指标中，已经携带了对应的标签纸test_key对于的标签的值为中国</p>
<p><img src="/images/1705308060-70dd6ff25b99f7dc0e42ea3275bbeb39.png"></p>
<p> 我们可以通过这种方式metrics添加自己想要的标签，更灵活的使用Prometheus的标签处理自己的监控项。</p>
<p>针对中间件的拉取需要配置下面的信息：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: redis_exporter</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets: [&#x27;10.100.11.53:9121&#x27;,&#x27;10.100.11.54:9121&#x27;,&#x27;10.100.11.55:9121&#x27;]</span><br><span class="line">      labels:</span><br><span class="line">        instance: redis</span><br><span class="line">- job_name: &#x27;linux&#x27;</span><br><span class="line">  static_configs:</span><br><span class="line">    - targets: [&#x27;10.100.11.53:9100&#x27;,&#x27;10.100.11.54:9100&#x27;,&#x27;10.100.11.55:9100&#x27;]</span><br><span class="line">      labels:</span><br><span class="line">        instance: linux</span><br></pre></td></tr></table></figure>

<p>3、prometheus配置文件动态管理</p>
<p>每次新加监控节点的时候，只需要添加一个新的targets即可,“instance”是一个label标签，方便区分。那么这里就产生一个问题，当targets的数量达到几百上千之后，配置文件看起来就会特别冗余。所以有经验的运维人就会想到用include的方式，把其他的配置文件包含进来，这样就把一个大而冗余的主配置文件，切分成一个个小的配置文件。Prometheus这里用的方法就是基于文件的服务发现–“file_sd_config”。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: &#x27;file_ds&#x27;</span><br><span class="line">  file_sd_configs:</span><br><span class="line">  - refresh_interval: 1m</span><br><span class="line">    files:</span><br><span class="line">    - ./conf.d/*.json</span><br></pre></td></tr></table></figure>

<p>prometheus 实时更新.&#x2F;conf.d&#x2F;下以.json结尾的文件。有变化自动更新到prometheus的监控页面上展示。</p>
<p>我们来看下我们的一个案例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># my global config</span><br><span class="line">global:</span><br><span class="line">  scrape_interval:     5s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 5s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line">  # scrape_timeout is set to the global default (10s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">       - 127.0.0.1:9093</span><br><span class="line"></span><br><span class="line"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span><br><span class="line">rule_files:</span><br><span class="line">  - &quot;simulator_alert_rules.yml&quot;</span><br><span class="line">  # - &quot;second_rules.yml&quot;</span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line"># Here it&#x27;s Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line"># 任意写，建议英文，不要包含特殊字符</span><br><span class="line">- job_name: &#x27;http-simulator&#x27;</span><br><span class="line">  # 多久采集一次数据</span><br><span class="line">  scrape_interval: 15s</span><br><span class="line">  # 采集时的超时时间</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  # 采集的路径是啥</span><br><span class="line">  metrics_path: &#x27;/prometheus&#x27;</span><br><span class="line">  # 采集服务的地址，设置成上面Spring Boot应用所在服务器的具体地址。</span><br><span class="line"># 静态配置</span><br><span class="line">  static_configs:</span><br><span class="line">  # 指定要抓取的目标地址</span><br><span class="line">  - targets: [&#x27;localhost:8080&#x27;]</span><br><span class="line">    # 给抓取出来的所有指标添加指定的标签</span><br><span class="line">  params:</span><br><span class="line">    collect[]:</span><br><span class="line">      - go_memstats_heap_inuse_bytes</span><br><span class="line">      - tomcat    </span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - target_label: test_key</span><br><span class="line">    replacement: 中国</span><br><span class="line">- job_name: &#x27;file_ds&#x27;</span><br><span class="line"> # 多久采集一次数据</span><br><span class="line">  scrape_interval: 15s</span><br><span class="line">  # 采集时的超时时间</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  # 采集的路径是啥</span><br><span class="line">  metrics_path: &#x27;/prometheus&#x27;</span><br><span class="line">  file_sd_configs:</span><br><span class="line">  - refresh_interval: 1m</span><br><span class="line">    files:</span><br><span class="line">    - C:\1.json</span><br></pre></td></tr></table></figure>

<p>我们对应的1.json文件如下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;targets&quot;: [ &quot;127.0.0.1:8080&quot; ],</span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line">      &quot;env&quot;: &quot;product&quot;,</span><br><span class="line">      &quot;job&quot;: &quot;prometheus&quot;,</span><br><span class="line">      &quot;instance&quot;: &quot;100.100.110.71_prometheus_server&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;targets&quot;: [ &quot;100.100.110.53:9121&quot; ],</span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line">      &quot;env&quot;: &quot;product&quot;,</span><br><span class="line">      &quot;job&quot;: &quot;redis&quot;,</span><br><span class="line">      &quot;instance&quot;: &quot;redis53&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>我们在普罗米修斯下面能够看到对应的文件</p>
<p>一个job对应下面的一条记录</p>
<p><img src="/images/1705308060-96cbc2096c44e63c22d17a3ca219311d.png"></p>
<p> 我们来看监控的指标记录中就已经添加了下面的信息和记录</p>
<p><img src="/images/1705308060-076bf1b2351723ce57c9d9197445ad47.png"></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>PMM数据库监控工具部署过程</title>
    <url>/2024/01/18/PMM%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%E9%83%A8%E7%BD%B2%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="PMM数据库监控工具"><a href="#PMM数据库监控工具" class="headerlink" title="PMM数据库监控工具"></a>PMM数据库监控工具</h1><p>今天给大家介绍一款非常好用的监控工具,percona出品的pmm2。该工具主要是封装了VictoriaMetrics(Promethuse的替代品，和Promethuse API兼容)、Grafana、ClickHouse)等优秀产品，可以实现MySQL、MongoDB、PostgreSQL数据库的监控(其他库也可以自定义实现)，有丰富的默认监控指标与看板。除此之外，集成的慢查询分析功能也非常香。开箱即用！</p>
<h3 id="架构图"><a href="#架构图" class="headerlink" title="架构图"></a><strong>架构图</strong></h3><p><img src="/images/1705549137-2c84f18e7ff6e0cc565631fff8a28a9b.png"></p>
<p><img src="/images/1705549137-0a6d13665df997fcf3f7d7ba0461f44c.png"></p>
<p><img src="/images/1705549137-41de4d55308eba68271e9ba9167ad0da.png"></p>
<h3 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a><strong>安装步骤</strong></h3><h5 id="第一步-安装-docker"><a href="#第一步-安装-docker" class="headerlink" title="第一步 安装 docker"></a><strong>第一步 安装 docker</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#centos8</span><br><span class="line">#1. 下载docker-ce的repo</span><br><span class="line">curl https://download.docker.com/linux/centos/docker-ce.repo -o /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">#2. 安装依赖（这是相比centos7的关键步骤）</span><br><span class="line">yum install https://download.docker.com/linux/fedora/30/x86_64/stable/Packages/containerd.io-1.2.6-3.3.fc30.x86_64.rpm</span><br><span class="line">#3. 安装docker-ce</span><br><span class="line">yum install docker-ce -y</span><br><span class="line">#4. 启动docker</span><br><span class="line">systemctl start docker</span><br></pre></td></tr></table></figure>

<h5 id="第二步-安装pmm-server"><a href="#第二步-安装pmm-server" class="headerlink" title="第二步 安装pmm-server"></a><strong>第二步 安装pmm-server</strong></h5><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#拉取镜像</span></span><br><span class="line">docker pull percona/pmm-server:2</span><br><span class="line"><span class="comment">#创建数据卷</span></span><br><span class="line">docker volume create pmm-data</span><br><span class="line"><span class="comment">#启动容器</span></span><br><span class="line">docker run --detach --restart always --publish 443:443 -v pmm-data:/srv --name pmm-server percona/pmm-server:2</span><br><span class="line"><span class="comment">#修改admin密码</span></span><br><span class="line">docker <span class="built_in">exec</span> -t pmm-server change-admin-password passwordxxx</span><br><span class="line"><span class="comment">#查看日志</span></span><br><span class="line">docker logs  pmm-server</span><br><span class="line"><span class="comment">#查看网页 （非本地环境localhost换成机器ip 注意防火墙要开通）</span></span><br><span class="line"><span class="comment">#账户:admin 密码:passwordxxx (参考修改admin密码步骤的密码）</span></span><br><span class="line">https://localhost:443</span><br></pre></td></tr></table></figure>

<h5 id="第三步-被监控节点安装-pmm-client"><a href="#第三步-被监控节点安装-pmm-client" class="headerlink" title="第三步 被监控节点安装 pmm-client"></a><strong>第三步 被监控节点安装 pmm-client</strong></h5><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#1 配置yum源</span><br><span class="line">yum install -y https://repo.percona.com/yum/percona-release-latest.noarch.rpm</span><br><span class="line">#2 安装pmm2-client</span><br><span class="line">yum install -y pmm2-client</span><br><span class="line">#3  查看版本</span><br><span class="line">pmm-admin --version</span><br><span class="line">#4 注册节点 注意admin账户密码和ip不要填错</span><br><span class="line">pmm-admin config --server-insecure-tls --server-url=https://admin:passwordxxx@X.X.X.X:443</span><br><span class="line"></span><br><span class="line"># 说明：</span><br><span class="line"># X.X.X.X is the address of your PMM Server.</span><br><span class="line"># 443 is the default port number.</span><br><span class="line"># admin/admin is the default PMM username and password. This is the same account you use to log into the PMM user interface, which you had the option to change when first logging in.</span><br></pre></td></tr></table></figure>

<p>安装完登录界面长这样，更多内容大家自行探索。</p>
<p><img src="/images/1705549137-057068c9e100bed329233009ccfd2c22.png"></p>
<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a><strong>参考文档</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://docs.percona.com/percona-monitoring-and-management/index.html</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>PMM</category>
      </categories>
      <tags>
        <tag>PMM</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus监控业务指标</title>
    <url>/2024/01/18/Prometheus%E7%9B%91%E6%8E%A7%E4%B8%9A%E5%8A%A1%E6%8C%87%E6%A0%87/</url>
    <content><![CDATA[<p>在 Kubernetes 已经成了事实上的容器编排标准之下，微服务的部署变得非常容易。但随着微服务规模的扩大，服务治理带来的挑战也会越来越大。在这样的背景下出现了服务可观测性（observability）的概念。</p>
<p>在分布式系统里，系统的故障可能出现在任何节点，怎么能在出了故障的时候快速定位问题和解决问题，甚至是在故障出现之前就能感知到服务系统的异常，把故障扼杀在摇篮里。这就是可观测性的意义所在。</p>
<h2 id="可观测性"><a href="#可观测性" class="headerlink" title="可观测性"></a>可观测性</h2><p>可观测性是由 logging, metrics, tracing 构建的, 简称为可观测性三支柱。</p>
<p><img src="/images/1705556580-3233006632b26182e4fb61395342bd0a.png" alt="图片"></p>
<ul>
<li><p><strong>Lgging</strong>，展现的是应用运行而产生的事件或者程序在执行的过程中间产生的一些日志，可以详细解释系统的运行状态，但是存储和查询需要消耗大量的资源。所以往往使用过滤器减少数据量。</p>
</li>
<li><p><strong>Metrics</strong>，是一种聚合数值，存储空间很小，可以观察系统的状态和趋势，但对于问题定位缺乏细节展示。这个时候使用等高线指标等多维数据结构来增强对于细节的表现力。例如统计一个服务的 TBS 的正确率、成功率、流量等，这是常见的针对单个指标或者某一个数据库的。</p>
</li>
<li><p><strong>Tracing</strong>，面向的是请求，可以轻松分析出请求中异常点，但与 logging 有相同的问题就是资源消耗较大。通常也需要通过采样的方式减少数据量。比如一次请求的范围，也就是从浏览器或者手机端发起的任何一次调用，一个流程化的东西，我们需要轨迹去追踪。</p>
</li>
</ul>
<p>这篇文章讨论的主题就是可观测性中的 metrics。在 k8s 作为基础设施的背景下，我们知道 K8s 本身是个复杂的容器编排系统，它本身的稳定运行至关重要。与之相伴的指标监控系统 Promethues 也已经成为了云原生服务下监控体系的事实标准。</p>
<p>相信大家对资源层面比如 CPU，Memory，Network；应用层面比如 Http 请求数，请求耗时等指标的监控都有所了解。那么业务层面的指标又怎么利用 Prometheus 去监控和告警呢？这就是这篇文章的核心内容。</p>
<p>以我们一个业务场景为例，在系统中有多种类型的 task 在运行，并且 task 的运行时间各异，task 本身有各种状态包括待执行、执行中、执行成功、执行失败等。如果想确保系统的稳定运行，我们必须对各个类型的 task 的运行状况了如指掌。比如当前是否有任务挤压，失败任务是否过多，并且当超过阈值是否告警。</p>
<p>为了解决上述的监控告警问题，我们先得了解一下 Prometheus 的指标类型</p>
<h2 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h2><h3 id="指标定义"><a href="#指标定义" class="headerlink" title="指标定义"></a>指标定义</h3><p>在形式上，所有的指标（Metric）都通过如下格式标示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;metric name&gt;&#123;&lt;label name&gt;=&lt;label value&gt;, ...&#125;</span><br></pre></td></tr></table></figure>

<p>指标的名称（metric name）可以反映被监控样本的含义（比如，<code>http_request_total</code> - 表示当前系统接收到的HTTP请求总量）。指标名称只能由ASCII字符、数字、下划线以及冒号组成并必须符合正则表达式 <code>[a-zA-Z_:][a-zA-Z0-9_:]*</code>。</p>
<p>标签（label）反映了当前样本的特征维度，通过这些维度Prometheus可以对样本数据进行过滤，聚合等。标签的名称只能由ASCII字符、数字以及下划线组成并满足正则表达式<code>[a-zA-Z_][a-zA-Z0-9_]*</code>。</p>
<h3 id="指标类型"><a href="#指标类型" class="headerlink" title="指标类型"></a>指标类型</h3><p>Prometheus定义了4种不同的指标类型（metric type）：Counter（计数器）、Gauge（仪表盘）、Histogram（直方图）、Summary（摘要）。</p>
<h4 id="Counter"><a href="#Counter" class="headerlink" title="Counter"></a>Counter</h4><p>Counter类型的指标其工作方式和计数器一样，只增不减（除非系统发生重置）。常见的监控指标，如<code>http_requests_total</code>，<code>node_cpu</code>都是 Counter 类型的监控指标。一般在定义Counter类型指标的名称时推荐使用<code>_total</code>作为后缀。</p>
<p>通过 counter 指标我们可以和容易的了解某个事件产生的速率变化。</p>
<p>例如，通过<code>rate()</code>函数获取HTTP请求量的增长率：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rate(http_requests_total[5m])</span><br></pre></td></tr></table></figure>

<h4 id="Gauge"><a href="#Gauge" class="headerlink" title="Gauge"></a>Gauge</h4><p>Gauge类型的指标侧重于反应系统的当前状态。因此这类指标的样本数据可增可减。常见指标如：<code>node_memory_MemFree</code>（主机当前空闲的内容大小）、<code>node_memory_MemAvailable</code>（可用内存大小）都是Gauge类型的监控指标。</p>
<p>通过Gauge指标，我们可以直接查看系统的当前状态</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_memory_MemFree</span><br></pre></td></tr></table></figure>

<h4 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h4><p>Summary 主用用于统计和分析样本的分布情况。比如某 Http 请求的响应时间大多数都在 100 ms 内，而个别请求的响应时间需要 5s，那么这中情况下统计指标的平均值就不能反映出真实情况。而如果通过 Summary 指标我们能立马看响应时间的9分位数，这样的指标才是有意义的。</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP go_gc_duration_seconds A summary of the pause duration of garbage collection cycles.</span><br><span class="line"># TYPE go_gc_duration_seconds summary</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0&quot;&#125; 3.98e-05</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0.25&quot;&#125; 5.31e-05</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0.5&quot;&#125; 6.77e-05</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;0.75&quot;&#125; 0.0001428</span><br><span class="line">go_gc_duration_seconds&#123;quantile=&quot;1&quot;&#125; 0.0008099</span><br><span class="line">go_gc_duration_seconds_sum 0.0114183</span><br><span class="line">go_gc_duration_seconds_count 85</span><br></pre></td></tr></table></figure>

<h4 id="Histogram"><a href="#Histogram" class="headerlink" title="Histogram"></a>Histogram</h4><p>Histogram 类型的指标同样用于统计和样本分析。与 Summary 类型的指标相似之处在于 Histogram 类型的样本同样会反应当前指标的记录的总数(以<code>_count</code>作为后缀)以及其值的总量（以<code>_sum</code>作为后缀）。不同在于 Histogram 指标直接反应了在不同区间内样本的个数，区间通过标签len进行定义。同时对于Histogram的指标，可以通过 <code>histogram_quantile()</code> 函数计算出其值的分位数。</p>
<p>例如</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># HELP prometheus_http_response_size_bytes Histogram of response size for HTTP requests.</span><br><span class="line"># TYPE prometheus_http_response_size_bytes histogram</span><br><span class="line">prometheus_http_response_size_bytes_bucket&#123;handler=&quot;/&quot;,le=&quot;100&quot;&#125; 1</span><br><span class="line">prometheus_http_response_size_bytes_bucket&#123;handler=&quot;/&quot;,le=&quot;1000&quot;&#125; 1</span><br><span class="line">prometheus_http_response_size_bytes_bucket&#123;handler=&quot;/&quot;,le=&quot;10000&quot;&#125; 1</span><br><span class="line">prometheus_http_response_size_bytes_bucket&#123;handler=&quot;/&quot;,le=&quot;100000&quot;&#125; 1</span><br><span class="line">prometheus_http_response_size_bytes_bucket&#123;handler=&quot;/&quot;,le=&quot;1e+06&quot;&#125; 1</span><br><span class="line">prometheus_http_response_size_bytes_bucket&#123;handler=&quot;/&quot;,le=&quot;+Inf&quot;&#125; 1</span><br><span class="line">prometheus_http_response_size_bytes_sum&#123;handler=&quot;/&quot;&#125; 29</span><br><span class="line">prometheus_http_response_size_bytes_count&#123;handler=&quot;/&quot;&#125; 1</span><br></pre></td></tr></table></figure>

<h2 id="应用指标监控"><a href="#应用指标监控" class="headerlink" title="应用指标监控"></a>应用指标监控</h2><h4 id="暴露指标"><a href="#暴露指标" class="headerlink" title="暴露指标"></a>暴露指标</h4><p>Prometheus 最常用的方式是通过 pull 去抓取 metrics。所以我们首先在服务通过 <code>/metrics</code> 接口暴露指标，这样 Promethues server 就能通过 http 请求抓取到我们的业务指标。</p>
<p>接口示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">server := gin.New()</span><br><span class="line">server.Use(middlewares.AccessLogger(), middlewares.Metric(), gin.Recovery())</span><br><span class="line"></span><br><span class="line">server.GET(&quot;/health&quot;, func(c *gin.Context) &#123;</span><br><span class="line">    c.JSON(http.StatusOK, gin.H&#123;        &quot;message&quot;: &quot;ok&quot;,</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">server.GET(&quot;/metrics&quot;, Monitor)func Monitor(c *gin.Context) &#123;</span><br><span class="line">    h := promhttp.Handler()</span><br><span class="line">    h.ServeHTTP(c.Writer, c.Request)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="定义指标"><a href="#定义指标" class="headerlink" title="定义指标"></a>定义指标</h4><p>为了方便理解，这里选取了三种类型和两种业务场景的指标<br>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var (</span><br><span class="line">    //HTTPReqDuration metric:http_request_duration_seconds</span><br><span class="line">    HTTPReqDuration *prometheus.HistogramVec</span><br><span class="line">    //HTTPReqTotal metric:http_request_total</span><br><span class="line">    HTTPReqTotal *prometheus.CounterVec</span><br><span class="line">    // TaskRunning metric:task_running</span><br><span class="line">    TaskRunning *prometheus.GaugeVec</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">func init() &#123;</span><br><span class="line">    // 监控接口请求耗时</span><br><span class="line">    // 指标类型是 Histogram</span><br><span class="line">    HTTPReqDuration = prometheus.NewHistogramVec(prometheus.HistogramOpts&#123;</span><br><span class="line">        Name:    &quot;http_request_duration_seconds&quot;,</span><br><span class="line">        Help:    &quot;http request latencies in seconds&quot;,</span><br><span class="line">        Buckets: nil,</span><br><span class="line">    &#125;, []string&#123;&quot;method&quot;, &quot;path&quot;&#125;)</span><br><span class="line">    // &quot;method&quot;、&quot;path&quot; 是 label</span><br><span class="line"></span><br><span class="line">    // 监控接口请求次数</span><br><span class="line">    // 指标类型是 Counter</span><br><span class="line">    HTTPReqTotal = prometheus.NewCounterVec(prometheus.CounterOpts&#123;</span><br><span class="line">        Name: &quot;http_requests_total&quot;,</span><br><span class="line">        Help: &quot;total number of http requests&quot;,</span><br><span class="line">    &#125;, []string&#123;&quot;method&quot;, &quot;path&quot;, &quot;status&quot;&#125;)    // &quot;method&quot;、&quot;path&quot;、&quot;status&quot; 是 label</span><br><span class="line"></span><br><span class="line">    // 监控当前在执行的 task 数量</span><br><span class="line">    // 监控类型是 Gauge</span><br><span class="line">    TaskRunning = prometheus.NewGaugeVec(prometheus.GaugeOpts&#123;</span><br><span class="line">        Name: &quot;task_running&quot;,</span><br><span class="line">        Help: &quot;current count  of running task&quot;,</span><br><span class="line">    &#125;, []string&#123;&quot;type&quot;, &quot;state&quot;&#125;)</span><br><span class="line">    // &quot;type&quot;、&quot;state&quot; 是 label</span><br><span class="line"></span><br><span class="line">    prometheus.MustRegister(</span><br><span class="line">        HTTPReqDuration,</span><br><span class="line">        HTTPReqTotal,</span><br><span class="line">        TaskRunning,</span><br><span class="line">    )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>通过上述的代码我们就定义并且注册了我们的想要监控的指标。</p>
<h4 id="生成指标"><a href="#生成指标" class="headerlink" title="生成指标"></a>生成指标</h4><p>示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">start := time.Now()</span><br><span class="line">c.Next()</span><br><span class="line"></span><br><span class="line">duration := float64(time.Since(start)) / float64(time.Second)</span><br><span class="line"></span><br><span class="line">path := c.Request.URL.Path</span><br><span class="line"></span><br><span class="line">// 请求数加1</span><br><span class="line">controllers.HTTPReqTotal.With(prometheus.Labels&#123;</span><br><span class="line">    &quot;method&quot;: c.Request.Method,</span><br><span class="line">    &quot;path&quot;:   path,</span><br><span class="line">    &quot;status&quot;: strconv.Itoa(c.Writer.Status()),</span><br><span class="line">&#125;).Inc()</span><br><span class="line"></span><br><span class="line">//  记录本次请求处理时间</span><br><span class="line">controllers.HTTPReqDuration.With(prometheus.Labels&#123;</span><br><span class="line">    &quot;method&quot;: c.Request.Method,</span><br><span class="line">    &quot;path&quot;:   path,</span><br><span class="line">&#125;).Observe(duration)</span><br><span class="line"></span><br><span class="line">// 模拟新建任务</span><br><span class="line">controllers.TaskRunning.With(prometheus.Labels&#123;</span><br><span class="line">    &quot;type&quot;:  shuffle([]string&#123;&quot;video&quot;, &quot;audio&quot;&#125;),</span><br><span class="line">    &quot;state&quot;: shuffle([]string&#123;&quot;process&quot;, &quot;queue&quot;&#125;),</span><br><span class="line">&#125;).Inc()</span><br><span class="line"></span><br><span class="line">// 模拟任务完成</span><br><span class="line">controllers.TaskRunning.With(prometheus.Labels&#123;</span><br><span class="line">    &quot;type&quot;:  shuffle([]string&#123;&quot;video&quot;, &quot;audio&quot;&#125;),</span><br><span class="line">    &quot;state&quot;: shuffle([]string&#123;&quot;process&quot;, &quot;queue&quot;&#125;),</span><br><span class="line">&#125;).Dec()</span><br></pre></td></tr></table></figure>

<h4 id="抓取指标"><a href="#抓取指标" class="headerlink" title="抓取指标"></a>抓取指标</h4><p>Promethues 抓取 target 配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 抓取间隔</span><br><span class="line">scrape_interval: 5s</span><br><span class="line"></span><br><span class="line"># 目标</span><br><span class="line">scrape_configs:</span><br><span class="line">  - job_name: &#x27;prometheus&#x27;</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;prometheus:9090&#x27;]</span><br><span class="line">  - job_name: &#x27;local-service&#x27;</span><br><span class="line">    metrics_path: /metrics</span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [&#x27;host.docker.internal:8000&#x27;]</span><br></pre></td></tr></table></figure>

<p>在实际应用中静态配置 target 地址不太适用，在 k8s 下 Promethues通过与 Kubernetes API 集成目前主要支持5种服务发现模式，分别是：Node、Service、Pod、Endpoints、Ingress。</p>
<p>指标展示如下图：</p>
<p><img src="/images/1705557075-b9fd200bd217af02c2d3e560fe590886.png" alt="http_duration" title="http_duration"><br><img src="/images/1705557075-c1890467f3c6ea0814d11ba5d22c623e.png" alt="task_running" title="task_running"></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh: connect to host github.com port 22: Connection refused</title>
    <url>/2024/01/18/ssh-connect-to-host-github-com-port-22-Connection-refused/</url>
    <content><![CDATA[<h2 id="问题现象"><a href="#问题现象" class="headerlink" title="问题现象"></a><strong>问题现象</strong></h2><p>本文以Windows系统为例进行说明，在个人电脑上使用Git命令来操作GitHub上的项目，本来都很正常，突然某一天开始，会提示如下错误<code>ssh: connect to host github.com port 22: Connection refused</code>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git pull</span><br><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br><span class="line">fatal: Could not <span class="built_in">read</span> from remote repository.</span><br><span class="line">​</span><br><span class="line">Please make sure you have the correct access rights</span><br><span class="line">and the repository exists.</span><br></pre></td></tr></table></figure>

<h2 id="排查思路"><a href="#排查思路" class="headerlink" title="排查思路"></a><strong>排查思路</strong></h2><p><code>ssh: connect to host github.com port 22: Connection refused</code>这个错误提示的是连接<code>github.com</code>的22端口被拒绝了。</p>
<p>原本以为 <a href="http://github.com/">http://github.com</a> 挂了，但是浏览器访问 <a href="http://github.com/">http://github.com</a> 一切正常。</p>
<p>网上搜索这个报错，发现很多人遇到这个问题，大概有2个原因和对应解决方案：</p>
<h3 id="使用GitHub的443端口"><a href="#使用GitHub的443端口" class="headerlink" title="使用GitHub的443端口"></a><strong>使用GitHub的443端口</strong></h3><p>22端口可能被防火墙屏蔽了，可以尝试连接GitHub的443端口。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ vim ~/.ssh/config</span><br><span class="line">```</span><br><span class="line"><span class="comment"># Add section below to it</span></span><br><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br><span class="line">```</span><br><span class="line">$ ssh -T git@github.com</span><br><span class="line">Hi xxxxx! You<span class="string">&#x27;ve successfully authenticated, but GitHub does not</span></span><br><span class="line"><span class="string">provide shell access.</span></span><br></pre></td></tr></table></figure>

<p>这个解决方案的思路是：给<code>~/.ssh/config</code>文件里添加如下内容，这样ssh连接GitHub的时候就会使用443端口。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">  Hostname ssh.github.com</span><br><span class="line">  Port 443</span><br></pre></td></tr></table></figure>

<p>如果<code>~/.ssh</code>目录下没有config文件，新建一个即可。</p>
<p>修改完<code>~/.ssh/config</code>文件后，使用<code>ssh -T git@github.com</code>来测试和GitHub的网络通信是否正常，如果提示<code>Hi xxxxx! You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code> 就表示一切正常了。</p>
<p>但是，这个方案在我这里行不通，修改后还是提示<code>ssh: connect to host github.com port 443: Connection refused</code>。</p>
<p><strong>这个方案有效的前提是</strong>：执行命令<code>ssh -T -p 443 git@ssh.github.com</code>后不再提示<code>connection refused</code>，所以要尝试这个方案的小伙伴先执行这条命令测试下。</p>
<h3 id="使用https协议，不要使用ssh协议"><a href="#使用https协议，不要使用ssh协议" class="headerlink" title="使用https协议，不要使用ssh协议"></a><strong>使用https协议，不要使用ssh协议</strong></h3><p>在你的GitHub的本地repo目录，执行如下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ git config --<span class="built_in">local</span> -e</span><br></pre></td></tr></table></figure>

<p>然后把里面的url配置项从git格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">url = git@github.com:username/repo.git</span><br></pre></td></tr></table></figure>

<p>修改为https格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">url = https://github.com/username/repo.git</span><br></pre></td></tr></table></figure>

<p>这个其实修改的是repo根目录下的<code>./git/config</code>文件。</p>
<p><strong>但是这个方法在我这里同样不生效</strong>。</p>
<h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a><strong>解决方案</strong></h2><p>网上的招都没用，只能自力更生了。既然和GitHub建立ssh连接的时候提示<code>connection refused</code>，那我们就详细看看建立ssh连接的过程中发生了什么，可以使用<code>ssh -v</code>命令，<code>-v</code>表示verbose，会打出详细日志。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ ssh -vT git@github.com</span><br><span class="line">OpenSSH_9.0p1, OpenSSL 1.1.1o  3 May 2022</span><br><span class="line">debug1: Reading configuration data /etc/ssh/ssh_config</span><br><span class="line">debug1: Connecting to github.com [::1] port 22.</span><br><span class="line">debug1: connect to address ::1 port 22: Connection refused</span><br><span class="line">debug1: Connecting to github.com [127.0.0.1] port 22.</span><br><span class="line">debug1: connect to address 127.0.0.1 port 22: Connection refused</span><br><span class="line">ssh: connect to host github.com port 22: Connection refused</span><br></pre></td></tr></table></figure>

<p>从上面的信息马上就发现了诡异的地方，连接 <a href="http://github.com/">http://github.com</a> 的地址居然是<code>::1</code>和<code>127.0.0.1</code>。前者是IPV6的localhost地址，后者是IPV4的localhost地址。</p>
<p>到这里问题就很明确了，是DNS解析出问题了，导致 <a href="http://github.com/">http://github.com</a> 域名被解析成了localhost的ip地址，就自然连不上GitHub了。</p>
<p>Windows下执行<code>ipconfig /flushdns</code> 清楚DNS缓存后也没用，最后修改hosts文件，增加一条github.com的域名映射搞定。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">140.82.113.4 github.com</span><br></pre></td></tr></table></figure>

<p>查找 <a href="http://github.com/">http://github.com</a> 的ip地址可以使用 <a href="https://www.ipaddress.com/">https://www.ipaddress.com/</a> 来查询，也可以使用<code>nslookup</code>命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup github.com 8.8.8.8</span><br></pre></td></tr></table></figure>

<p><code>nslookup</code>是域名解析工具，<code>8.8.8.8</code>是Google的DNS服务器地址。直接使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nslookup github.com</span><br></pre></td></tr></table></figure>

<p>就会使用本机已经设置好的DNS服务器进行域名解析，<code>ipconfig /all</code>可以查看本机DNS服务器地址。</p>
<p>这个问题其实就是DNS解析被污染了，有2种可能：</p>
<ul>
<li>DNS解析被运营商劫持了</li>
<li>使用了科学上网工具</li>
</ul>
<p>按照我上面写的解决方案操作即可解决。</p>
<h2 id="References"><a href="#References" class="headerlink" title="References"></a><strong>References</strong></h2><ul>
<li><a href="https://link.zhihu.com/?target=https://chaxuri.com/archives/43.html">https://chaxuri.com/archives/43.html</a></li>
<li><a href="https://link.zhihu.com/?target=https://stackoverflow.com/questions/15589682/ssh-connect-to-host-github-com-port-22-connection-timed-out">https://stackoverflow.com/questions/15589682/ssh-connect-to-host-github-com-port-22-connection-timed-out</a></li>
<li><a href="https://link.zhihu.com/?target=https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey">https://docs.github.com/en/authentication/troubleshooting-ssh/error-permission-denied-publickey</a></li>
<li><a href="https://link.zhihu.com/?target=https://gist.github.com/Tamal/1cc77f88ef3e900aeae65f0e5e504794">https://gist.github.com/Tamal/1cc77f88ef3e900aeae65f0e5e504794</a></li>
</ul>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>清理Docker垃圾占用的磁盘空间</title>
    <url>/2024/01/19/%E6%B8%85%E7%90%86Docker%E5%9E%83%E5%9C%BE%E5%8D%A0%E7%94%A8%E7%9A%84%E7%A3%81%E7%9B%98%E7%A9%BA%E9%97%B4/</url>
    <content><![CDATA[<h3 id="一、Docker容器镜像删除"><a href="#一、Docker容器镜像删除" class="headerlink" title="一、Docker容器镜像删除"></a>一、Docker容器镜像删除</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker stop $(docker ps -a -q)<span class="comment"># 停止所有的container$ docker rm $(docker ps -a -q)# 删除所有停止的容器$ docker images# 查看当前有哪些image$ docker rmi &lt;image id&gt;# 删除images，通过image的id来指定删除谁$ docker rmi $(docker images | grep &quot;^&lt;none&gt;&quot; | awk &quot;&#123;print $3&#125;&quot;)# 想要删除untagged images，也就是那些id为的image的话可以用$ docker rmi $(docker images -q)# 要删除全部image</span></span></span><br></pre></td></tr></table></figure>

<p><strong>清理所有已停止的docker小脚本</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">所有的all_list=`docker ps -a -q`<span class="comment"># 运行中的alive_list=`docker ps -q` for i in $all_list;do   echo $i      result=$(echo $alive_list | grep &quot;$i&quot;)    if [[ &quot;$result&quot; != &quot;&quot; ]]   then      echo &quot;运行中....&quot;   else     echo &quot;已停止,开始删除....清除时间:$(date +%Y%m%d%H%M%S)&quot;     docker rm -v $i   fidone</span></span></span><br></pre></td></tr></table></figure>

<h3 id="二、Docker磁盘空间清理"><a href="#二、Docker磁盘空间清理" class="headerlink" title="二、Docker磁盘空间清理"></a>二、Docker磁盘空间清理</h3><h4 id="2-1-使用docker-system命令清除"><a href="#2-1-使用docker-system命令清除" class="headerlink" title="2.1 使用docker system命令清除"></a>2.1 使用docker system命令清除</h4><p><code>docker system df</code>命令，类似于Linux上的df命令，用于查看Docker的磁盘使用情况：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker system dfTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLEImages              147                 36                  7.204GB             3.887GB (53%)Containers          37                  10                  104.8MB             102.6MB (97%)Local Volumes       3                   3                   1.421GB             0B (0%)Build Cache                                                 0B                  0B</span></span><br></pre></td></tr></table></figure>

<p>可以看到，Docker镜像占用了<code>7.2GB</code>磁盘，Docker容器占用了<code>104.8MB</code>磁盘，Docker数据卷占用了<code>1.4GB</code>磁盘。</p>
<ul>
<li><code>docker system prune</code>命令可以用于清理磁盘，删除关闭的容器、无用的数据卷和网络，以及dangling镜像(即无tag的镜像)。</li>
<li><code>docker system prune -a</code>命令清理得更加彻底，可以将没有容器使用<code>Docker镜像</code>都删掉。注意，这两个命令会把你暂时关闭的容器，以及暂时没有用到的Docker镜像都删掉了…所以使用之前一定要想清楚额。</li>
</ul>
<p>执行<code>docker system prune -a</code>命令之后，Docker占用的磁盘空间减少了很多：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker system dfTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLEImages              10                  10                  2.271GB             630.7MB (27%)Containers          10                  10                  2.211MB             0B (0%)Local Volumes       3                   3                   1.421GB             0B (0%)Build Cache                                                 0B                  0B</span></span><br></pre></td></tr></table></figure>

<h4 id="2-2-手动清理Docker镜像-容器-数据卷"><a href="#2-2-手动清理Docker镜像-容器-数据卷" class="headerlink" title="2.2 手动清理Docker镜像&#x2F;容器&#x2F;数据卷"></a>2.2 手动清理Docker镜像&#x2F;容器&#x2F;数据卷</h4><p>对于旧版的Docker(版本1.13之前)，是没有<code>docker system</code>命令的，因此需要进行手动清理。这里给出几个常用的命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除所有关闭的容器$ docker ps -a | grep Exit | <span class="built_in">cut</span> -d ’ ’ -f 1 | xargs docker <span class="built_in">rm</span><span class="comment"># 删除所有dangling镜像(即无tag的镜像)：$ docker rmi (docker images | grep &quot;^&lt;none&gt;&quot; | awk &quot;&#123;print(docker images | grep &quot;^&lt;none&gt;&quot; | awk &quot;&#123;print3&#125;”) # 删除所有dangling数据卷(即无用的volume)：$ docker volume rm $(docker volume ls -qf dangling=true)</span></span></span><br></pre></td></tr></table></figure>

<h4 id="2-3-限制容器的日志大小"><a href="#2-3-限制容器的日志大小" class="headerlink" title="2.3 限制容器的日志大小"></a>2.3 限制容器的日志大小</h4><p>有一次，当我使用1与2提到的方法清理磁盘之后，发现并没有什么作用，于是，我进行了一系列分析。</p>
<p>在Ubuntu上，Docker的所有相关文件，包括镜像、容器等都保存在<code>/var/lib/docker/</code>目录中：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">du</span> -hs /var/lib/docker/ 97G /var/lib/docker/</span></span><br></pre></td></tr></table></figure>

<p>Docker竟然使用了将近100GB磁盘。使用<code>du</code>命令继续查看，可以定位到真正占用这么多磁盘的目录：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">92G /var/lib/docker/containers/a376aa694b22ee497f6fc9f7d15d943de91c853284f8f105ff5ad6c7ddae7a53</span><br></pre></td></tr></table></figure>

<p>由docker ps可知，nginx容器的ID恰好为<code>a376aa694b22</code>，与上面的目录<code>/var/lib/docker/containers/a376aa694b22</code>的前缀一致：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker psCONTAINER ID        IMAGE                                       COMMAND                  CREATED             STATUS              PORTS               NAMESa376aa694b22        192.168.59.224:5000/nginx:1.12.1            <span class="string">&quot;nginx -g &#x27;daemon off&quot;</span>   9 weeks ago         Up 10 minutes                           nginx</span></span><br></pre></td></tr></table></figure>

<p>因此，nginx容器竟然占用了92GB的磁盘。进一步分析可知，真正占用磁盘空间的是nginx的日志文件。那么这就不难理解了。我们Fundebug每天的数据请求为百万级别，那么日志数据自然非常大。</p>
<p>使用<code>truncate</code>命令，可以将nginx容器的日志文件“清零”：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">truncate</span> -s 0 /var/lib/docker/containers/a376aa694b22ee497f6fc9f7d15d943de91c853284f8f105ff5ad6c7ddae7a53/*-json.log</span></span><br></pre></td></tr></table></figure>

<p>当然，这个命令只是临时有作用，日志文件迟早又会涨回来。要从根本上解决问题，需要限制nginx容器的日志文件大小。这个可以通过配置日志的max-size来实现，下面是nginx容器的docker-compose配置文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">nginx:   image: nginx:1.12.1   restart: always   logging:     driver:</span> <span class="string">“json-file”</span>     <span class="attr">options:       max-size:</span> <span class="string">“5g”</span></span><br></pre></td></tr></table></figure>

<p>重启nginx容器之后，其日志文件的大小就被限制在5GB，再也不用担心了！</p>
<h4 id="2-4-重启Docker"><a href="#2-4-重启Docker" class="headerlink" title="2.4 重启Docker"></a>2.4 重启Docker</h4><p>还有一次，当我清理了镜像、容器以及数据卷之后，发现磁盘空间并没有减少。根据<code>Docker disk usage</code>提到过的建议，我重启了Docker，发现磁盘使用率从83%降到了19%。根据高手指点，这应该是与内核3.13相关的BUG，导致Docker无法清理一些无用目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">it’s quite likely that <span class="keyword">for</span> some reason when those container shutdown, docker couldn’t remove the directory because the shm device was busy. This tends to happen often on 3.13 kernel. You may want to update it to the 4.4 version supported on trusty 14.04.5 LTS. The reason it disappeared after a restart, is that daemon probably tried and succeeded to clean up left over data from stopped containers.</span><br></pre></td></tr></table></figure>

<h3 id="三、Docker目录-var-lib-docker-containers文件太大"><a href="#三、Docker目录-var-lib-docker-containers文件太大" class="headerlink" title="三、Docker目录&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers文件太大"></a>三、Docker目录&#x2F;var&#x2F;lib&#x2F;docker&#x2F;containers文件太大</h3><p><code>Docker</code>在不重建容器的情况下，日志文件默认会一直追加，时间一长会逐渐占满服务器的硬盘的空间，内存消耗也会一直增加，本篇来了解一些控制日志文件的方法。</p>
<h4 id="3-1-查出占用磁盘较大的文件"><a href="#3-1-查出占用磁盘较大的文件" class="headerlink" title="3.1 查出占用磁盘较大的文件"></a>3.1 查出占用磁盘较大的文件</h4><p>Docker 的日志文件存在 <code>/var/lib/docker/containers</code> 目录中，通过下面的命令可以将日志文件夹根据升序的方式罗列出来。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">du</span> -d1 -h /var/lib/docker/containers | <span class="built_in">sort</span> -h40K     /var/lib/docker/containers/7bbec35275e8f63784107d486c9c40cb62902afd6815c569b36947f0b0ed640540K     /var/lib/docker/containers/7df78d67728173c13b4a238518b79d4b4a384d38026102a61aef290e53f2f1a640K     /var/lib/docker/containers/8d59b4f970a1b5cb20fc281d73f5c643bd0514b25cac3e0fae13bcec99c45e0540K     /var/lib/docker/containers/965375d69bca2e43a4f7d3306508cc1db40fa0b783b1d7fe4b6fa7e333926b8c40K     /var/lib/docker/containers/e04e90f0d466ab5b969fd72894b23444d495a84591b1e93d5bef03da30b1fc2d40K     /var/lib/docker/containers/f31069b69d329fcac0939bbb6310afa66535ff4573591414fbfabecdb0eeeb7944K     /var/lib/docker/containers/1995f5cf52e09b3d6d2ec6760e3e29c51b645d1629a7f65415abb984a370bea444K     /var/lib/docker/containers/44fdc73c0e48797faffdfd4abe17ccdc3e617542d68f6f5a073bbfc343fdc0dd44K     /var/lib/docker/containers/c3cb05fd745cfa1d527717ef63d7f9cc0dd81530d4f432538ce4fb89c0b1655f164K    /var/lib/docker/containers/c742626988ae6237b0fc591b0604313b5ca29ebec4d91173cab3ef838d2a8967448K    /var/lib/docker/containers/8d4ea3635d5cf9cb09b3f3652df29727288ef01adfc9963291ef53a7ed1f8a91536K    /var/lib/docker/containers/16b599deca2f0e80024e1a342aec281c5578909c564a4a1127c92985396b91e41.4M    /var/lib/docker/containers/426d63b3423eaded89f4ecf1b35493f79f654903d8655af321b24307cc763e8e5.5M    /var/lib/docker/containers/5206c2f48bd01de60a5c6576e7607ffcc6be3def17ee5dbc2be393311c2638c29.3M    /var/lib/docker/containers</span></span><br></pre></td></tr></table></figure>

<h4 id="3-2-清理单个文件"><a href="#3-2-清理单个文件" class="headerlink" title="3.2 清理单个文件"></a>3.2 清理单个文件</h4><p>感觉哪个容器的日志太大就清理哪个</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo sh -c <span class="string">&quot;cat /dev/null &gt; <span class="variable">$&#123;log_file&#125;</span>&quot;</span></span></span><br></pre></td></tr></table></figure>

<ul>
<li><code>$&#123;log_file&#125;</code> 就是日志文件</li>
</ul>
<p>可以通过<code>find</code>命令查找全部日志</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo find /var/lib/docker/containers -name *.<span class="built_in">log</span>/var/lib/docker/containers/a823b8ee2df7c89dcfcbc125ac835b167a4f3c4d0fc1a6ec08d359e5aefa23f0/a823b8ee2df7c89dcfcbc125ac835b167a4f3c4d0fc1a6ec08d359e5aefa23f0-json.log/var/lib/docker/containers/99435d5cc9016af41a7f8b2761f93b4374d9774b77b1f463b429e63de7addb2a/99435d5cc9016af41a7f8b2761f93b4374d9774b77b1f463b429e63de7addb2a-json.log/var/lib/docker/containers/8206ee47b251e97204437f6a5528b94faa2eabb385f93386f32d89efedfdb8ed/8206ee47b251e97204437f6a5528b94faa2eabb385f93386f32d89efedfdb8ed-json.log/var/lib/docker/containers/7b3fd134954c459695092e4b79e840e7d864f6dd19b468af92ea3f83663b12b2/7b3fd134954c459695092e4b79e840e7d864f6dd19b468af92ea3f83663b12b2-json.log/var/lib/docker/containers/dd88e4755c5bcacdbd540d21f0392c8d04a5317123a1b99ba2926ae59a72b7d0/dd88e4755c5bcacdbd540d21f0392c8d04a5317123a1b99ba2926ae59a72b7d0-json.log/var/lib/docker/containers/7a854e0a7ca1e5029a1ac4aa689d48103d7240bded3c17f414a63368b4534da1/7a854e0a7ca1e5029a1ac4aa689d48103d7240bded3c17f414a63368b4534da1-json.log/var/lib/docker/containers/965375d69bca2e43a4f7d3306508cc1db40fa0b783b1d7fe4b6fa7e333926b8c/965375d69bca2e43a4f7d3306508cc1db40fa0b783b1d7fe4b6fa7e333926b8c-json.log/var/lib/docker/containers/54ef85ae58acd8fdfd028efa4e393512f4741ec3c5b0c3d690698c89c29256ac/54ef85ae58acd8fdfd028efa4e393512f4741ec3c5b0c3d690698c89c29256ac-json.log/var/lib/docker/containers/af5b8850de8ff7d6ac3f747d263553211df3d514f5e896e624aee9a477e2db69/af5b8850de8ff7d6ac3f747d263553211df3d514f5e896e624aee9a477e2db69-json.log/var/lib/docker/containers/16b599deca2f0e80024e1a342aec281c5578909c564a4a1127c92985396b91e4/16b599deca2f0e80024e1a342aec281c5578909c564a4a1127c92985396b91e4-json.log/var/lib/docker/containers/ff3261b882c99365b702863ee0bda2527c21d50fee82f08583f22eec54c4534f/ff3261b882c99365b702863ee0bda2527c21d50fee82f08583f22eec54c4534f-json.log/var/lib/docker/containers/426d63b3423eaded89f4ecf1b35493f79f654903d8655af321b24307cc763e8e/426d63b3423eaded89f4ecf1b35493f79f654903d8655af321b24307cc763e8e-json.log/var/lib/docker/containers/90a9707a0edb5f38acff7e4bd225b4bea0e2f5aa12e56ed436af0ef6a88d1e28/90a9707a0edb5f38acff7e4bd225b4bea0e2f5aa12e56ed436af0ef6a88d1e28-json.log/var/lib/docker/containers/c00c03b592b00931d7885aa4e9081f749ce844a9bdc2995e9d6bb46ed1277666/c00c03b592b00931d7885aa4e9081f749ce844a9bdc2995e9d6bb46ed1277666-json.log/var/lib/docker/containers/ac6bc5a3db5be1f5c5a400d3b4d34427e55373aa50498594451bc48d73784248/ac6bc5a3db5be1f5c5a400d3b4d34427e55373aa50498594451bc48d73784248-json.log/var/lib/docker/containers/e0136d5b180b7f85175e6a9db027a29bbcbc99ce077b96fda35987951dd5bae7/e0136d5b180b7f85175e6a9db027a29bbcbc99ce077b96fda35987951dd5bae7-json.log/var/lib/docker/containers/8d4ea3635d5cf9cb09b3f3652df29727288ef01adfc9963291ef53a7ed1f8a91/8d4ea3635d5cf9cb09b3f3652df29727288ef01adfc9963291ef53a7ed1f8a91-json.log...</span></span><br></pre></td></tr></table></figure>

<p>或者查看具体容器名称的日志位置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">docker inspect --format=<span class="string">&#x27;&#123;&#123;.LogPath&#125;&#125;&#x27;</span> redis/var/lib/docker/containers/c742626988ae6237b0fc591b0604313b5ca29ebec4d91173cab3ef838d2a8967/c742626988ae6237b0fc591b0604313b5ca29ebec4d91173cab3ef838d2a8967-json.log</span></span><br></pre></td></tr></table></figure>

<h4 id="3-3-控制容器日志大小"><a href="#3-3-控制容器日志大小" class="headerlink" title="3.3 控制容器日志大小"></a>3.3 控制容器日志大小</h4><p>以上只是临时解决的方式，最好是创建容器时就控制日志的大小.</p>
<h4 id="3-4-运行时控制"><a href="#3-4-运行时控制" class="headerlink" title="3.4 运行时控制"></a>3.4 运行时控制</h4><p>启动容器时，我们可以通过参数来控制日志的文件个数和单个文件的大小</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">max-size 最大数值<span class="comment"># max-file 最大日志数$ docker run -it --log-opt max-size=10m --log-opt max-file=3 redis</span></span></span><br></pre></td></tr></table></figure>

<p>一两个容器还好，但是如果有很多容器需要管理，这样就很不方便了，最好还是可以统一管理。</p>
<h4 id="3-5-全局配置"><a href="#3-5-全局配置" class="headerlink" title="3.5 全局配置"></a>3.5 全局配置</h4><p>创建或修改文件 <code>/etc/docker/daemon.json</code>，并增加以下配置</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>    <span class="attr">&quot;log-driver&quot;</span><span class="punctuation">:</span><span class="string">&quot;json-file&quot;</span><span class="punctuation">,</span>    <span class="attr">&quot;log-opts&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span>        <span class="attr">&quot;max-size&quot;</span> <span class="punctuation">:</span><span class="string">&quot;50m&quot;</span><span class="punctuation">,</span><span class="attr">&quot;max-file&quot;</span><span class="punctuation">:</span><span class="string">&quot;1&quot;</span>    <span class="punctuation">&#125;</span><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>随后重启 Docker 服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo systemctl daemon-reload$ sudo systemctl restart docker</span></span><br></pre></td></tr></table></figure>

<p>不过已存在的容器不会生效，需要重建才可以！</p>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>详解nginx配置location带不带/</title>
    <url>/2024/01/19/%E8%AF%A6%E8%A7%A3nginx%E9%85%8D%E7%BD%AElocation%E5%B8%A6%E4%B8%8D%E5%B8%A6/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>nginx的知识点有很多</p>
<ul>
<li>server : 用于定义服务，http中可以有多个server块</li>
<li>listen : 指定服务器侦听请求的IP地址和端口</li>
<li>server_name : 服务名称，用于配置域名</li>
<li><strong>location</strong> : <strong>用于配置映射路径uri对应的配置</strong></li>
<li>root : 根路径</li>
<li>index : 设置首页</li>
<li>return：返回http状态码 和 可选的第二个参数可以是重定向的URL</li>
<li>rewrite：重写URI请求 rewrite，通过使用rewrite指令在请求处理期间多次修改请求URI</li>
<li>error_page：缺省页</li>
<li>deny：禁止访问某个目录</li>
<li>内置变量：nginx的配置文件中可以使用的内置变量以美元符$开始，也有人叫全局变量</li>
<li>当然远远不止以上几点…</li>
</ul>
<p>我们今天着重讨论<code>location</code></p>
<h1 id="nginx-conf配置：location不带"><a href="#nginx-conf配置：location不带" class="headerlink" title="nginx.conf配置：location不带&#x2F;"></a>nginx.conf配置：location不带&#x2F;</h1><p>首先，通过<code>nginx.conf</code>的设置，我们在8080端口开启了一个服务，以下的一些配置项我简单介绍一下</p>
<ol>
<li><code>location</code>：<code>映射路径</code>，一个server中可以有多个location, location后面跟一个uri,可以是一个正则表达式, &#x2F; 表示匹配任意路径, 当客户端访问的路径满足这个uri时就会执行location块里面的代码</li>
<li><code>alias</code>：<code>虚拟目录</code>，alias指定的目录是准确的，即location匹配访问的path目录下的文件直接是在alias目录下查找的，我设置成我电脑目录的一个文件夹</li>
<li><code>index</code>：<code>首页</code>，我设置成这个alias里的index.html</li>
</ol>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">8080</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  localhost;</span><br><span class="line">        <span class="attribute">add_header</span> Cache-Control: <span class="literal">no</span>-cache;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> /homepage &#123;</span><br><span class="line">            <span class="attribute">alias</span> <span class="string">&quot;/usr/local/Cellar/nginx/1.19.7/html/html/&quot;</span>;</span><br><span class="line">            <span class="attribute">index</span> index.html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span>  <span class="number">404</span>              /<span class="number">404</span>.html;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /<span class="number">404</span>.html;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> = /<span class="number">404</span>.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h1 id="静态资源目录配置"><a href="#静态资源目录配置" class="headerlink" title="静态资源目录配置"></a>静态资源目录配置</h1><p>以下是上述<code>alias</code>指定的<code>/usr/local/Cellar/nginx/1.19.7/html/html</code>目录结构</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.</span><br><span class="line">├── html      <span class="comment"># 放置html文件的文件夹</span></span><br><span class="line">├── scripts   <span class="comment"># 放置js文件的文件夹</span></span><br><span class="line">├── styles    <span class="comment"># 放置css文件的文件夹</span></span><br><span class="line">├── 404.html  <span class="comment"># 404专用html文件</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/1705649112-28b8c14bcde296ced2fec4678539138e.webp" alt="image.png"></p>
<p>在终端中开启nginx</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx</span><br></pre></td></tr></table></figure>

<p>可以看到8080端口正常开启了服务</p>
<p><img src="/images/1705649112-45d51095204ffdb4eebaecbc770e929e.webp" alt="image.png"></p>
<h1 id="访问URL"><a href="#访问URL" class="headerlink" title="访问URL"></a>访问URL</h1><p>首先，我们访问的URL为<code>http://localhost:8080/homepage/</code></p>
<p>从下图可以看到，我们的请求为200，说明nginx成功找到了该文件并返回给客户端</p>
<p><img src="/images/1705649112-24b9d6bd579596b57255a35d3ffcee44.webp" alt="image.png"></p>
<p>接着，我们访问的URL为<code>http://localhost:8080/homepage</code></p>
<p>从下图中可以看到，我们的请求被<code>301</code>了，<code>301</code>的地址可以从响应头的<code>Location</code>里得知，被<code>301</code>到了<code>http://localhost:8080/homepage/</code>，然后该请求则跟上文一致200并返回html</p>
<p><img src="/images/1705649112-55b9f4c9a5dd6f5aea4f91d331459710.webp" alt="image.png"></p>
<h1 id="nginx-conf配置：location带"><a href="#nginx-conf配置：location带" class="headerlink" title="nginx.conf配置：location带&#x2F;"></a>nginx.conf配置：location带&#x2F;</h1><p>我们现在修改location</p>
<figure class="highlight diff"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen       8080;</span><br><span class="line">        server_name  localhost;</span><br><span class="line">        add_header Cache-Control: no-cache;</span><br><span class="line"></span><br><span class="line"><span class="deletion">-       location /homepage &#123;</span></span><br><span class="line"><span class="addition">+       location /homepage/ &#123;</span></span><br><span class="line">            alias &quot;/usr/local/Cellar/nginx/1.19.7/html/html/&quot;;</span><br><span class="line">            index index.html;</span><br><span class="line">            expires off;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line"></span><br><span class="line">        error_page   500 502 503 504  /404.html;</span><br><span class="line"></span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">            root   html;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>修改完成后，让nginx重启，应用新的配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nginx -s reload</span><br></pre></td></tr></table></figure>

<h1 id="接着访问URL"><a href="#接着访问URL" class="headerlink" title="接着访问URL"></a>接着访问URL</h1><p>首先，我们访问的URL为<code>http://localhost:8080/homepage</code></p>
<p>在下图中，我们可以看到请求404了</p>
<p><img src="/images/1705649112-958bfd8025713cf348c8501b365f96b6.webp" alt="image.png"></p>
<p>接着，我们访问的URL为<code>http://localhost:8080/homepage/</code></p>
<p>在下图中，我们可以看到，<strong>与未加&#x2F;对比，并没有什么不同</strong></p>
<p><img src="/images/1705649112-687c00bbd1442d867481e8e93b3f81d3.webp" alt="image.png"></p>
<h1 id="location-URI结尾带不带"><a href="#location-URI结尾带不带" class="headerlink" title="location URI结尾带不带 &#x2F;"></a>location URI结尾带不带 &#x2F;</h1><p>关于 URI 尾部的 <code>/</code> 有三点也需要说明一下。第一点与 location 配置有关，其他两点无关。</p>
<ol>
<li>location 中的字符有没有 <code>/</code> 都没有影响。也就是说 <code>/homepage/</code> 和 <code>/homepage</code> 是一样的。</li>
<li>如果 URI 结构是 <code>https://domain.com/</code> 的形式，尾部有没有 <code>/</code> 都不会造成重定向。因为浏览器在发起请求的时候，默认加上了 <code>/</code> 。虽然很多浏览器在地址栏里也不会显示 <code>/</code> 。</li>
<li>如果 URI 的结构是 <code>https://domain.com/homepage/</code> 。尾部如果缺少 <code>/</code> 将导致重定向。因为根据约定，URL 尾部的 <code>/</code> 表示目录，没有 <code>/</code> 表示文件。所以访问 <code>/homepage/</code> 时，服务器会自动去该目录下找对应的默认文件。如果访问 <code>/homepage</code> 的话，服务器会先去找 <code>homepage</code> 文件，找不到的话会将 <code>homepage</code> 当成目录，重定向到 <code>/homepage/</code> ，去该目录下找默认文件。</li>
</ol>
<h1 id="location优先级"><a href="#location优先级" class="headerlink" title="location优先级"></a>location优先级</h1><p><code>location</code>的优先级与<code>location</code>配置的位置无关</p>
<ol>
<li>正则匹配 location ~ &#x2F;index { }</li>
<li>不区分大小写的正则匹配 location ~* &#x2F;index { }</li>
<li>匹配路径的前缀，如果找到停止搜索 location ^~ &#x2F;index { }</li>
<li>精确匹配 location &#x3D; &#x2F;index { }</li>
<li>普通路径前缀匹配 location &#x2F;index { }</li>
<li>优先级: 4 &gt; 3 &gt; 2 &gt; 1 &gt; 5</li>
</ol>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="section">location</span> = / &#123;</span><br><span class="line">    <span class="comment"># 精确匹配/，主机名后面不能带任何字符串 /</span></span><br><span class="line">    [ <span class="attribute">configuration</span> A ]</span><br><span class="line">&#125;</span><br><span class="line">location / &#123;</span><br><span class="line">    <span class="comment"># 匹配所有以 / 开头的请求。</span></span><br><span class="line">    <span class="comment"># 但是如果有更长的同类型的表达式，则选择更长的表达式。</span></span><br><span class="line">    <span class="comment"># 如果有正则表达式可以匹配，则优先匹配正则表达式。</span></span><br><span class="line">    [ <span class="attribute">configuration</span> B ]</span><br><span class="line">&#125;</span><br><span class="line">location /documents/ &#123;</span><br><span class="line">    <span class="comment"># 匹配所有以 /documents/ 开头的请求，匹配符合以后，还要继续往下搜索。</span></span><br><span class="line">    <span class="comment"># 但是如果有更长的同类型的表达式，则选择更长的表达式。</span></span><br><span class="line">    <span class="comment"># 如果有正则表达式可以匹配，则优先匹配正则表达式。</span></span><br><span class="line">    [ <span class="attribute">configuration</span> C ]</span><br><span class="line">&#125;</span><br><span class="line">location<span class="regexp"> ^~</span> /images/ &#123;</span><br><span class="line">    <span class="comment"># 匹配所有以 /images/ 开头的表达式，如果匹配成功，则停止匹配查找，停止搜索。</span></span><br><span class="line">    <span class="comment"># 所以，即便有符合的正则表达式location，也不会被使用</span></span><br><span class="line">    [ <span class="attribute">configuration</span> D ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location <span class="regexp">~* \.(gif|jpg|jpeg)$</span> &#123;</span><br><span class="line">    <span class="comment"># 匹配所有以 gif jpg jpeg结尾的请求。</span></span><br><span class="line">    <span class="comment"># 但是 以 /images/开头的请求，将使用 Configuration D，D具有更高的优先级</span></span><br><span class="line">    [ <span class="attribute">configuration</span> E ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location /images/ &#123;</span><br><span class="line">    <span class="comment"># 字符匹配到 /images/，还会继续往下搜索</span></span><br><span class="line">    [ <span class="attribute">configuration</span> F ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location = /test.htm &#123;</span><br><span class="line">    <span class="attribute">root</span>   /usr/local/var/www/htm;</span><br><span class="line">    <span class="attribute">index</span>  index.htm;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>VictoriaMetrics之基础篇</title>
    <url>/2024/01/19/VictoriaMetrics%E4%B9%8B%E5%9F%BA%E7%A1%80%E7%AF%87/</url>
    <content><![CDATA[<p>说到云原生监控方案，第一时间基本上都会想到 Prometheus+AlertManager+Grafana 的一套成熟解决方案。Prometheus 作为监控核心，具备强大的数据模型、高效率运作、丰富的监控能力、强大的查询语言 PromQL、简单易用、管理方便等特点。但是 Prometheus 目前在高可用层面上做得还并不完美。为此，在开源社区中，孕育出了许多替代、增强方案，<strong>VictoriaMetrics</strong> 属于其中较为优异的一个，<strong>是一个快速、经济高效且可扩展的监控解决方案和时间序列数据库。</strong>  </p>
<h3 id="01-七大特点"><a href="#01-七大特点" class="headerlink" title="01 七大特点"></a>01 七大特点</h3><p>1. 它可以作为 Prometheus 的长期储存，且支持 Prometheus 查询 API，可以在 Grafana 中用作 Prometheus 的代替品；</p>
<p>2. 部署简单，无论是单节点版本还是集群版本，都只需要运行所需的组件可执行文件（每个组件都是一个可执行文件），运行前不需要安装任何依赖，易于设置和操作；</p>
<p>3. 使用 vmbackup&#x2F;vmrestore 工具可以轻松快速地将即时快照备份到 S3 或 GCS；</p>
<p>4. 基于 PromQL 的查询语言实现 MetricsQL，对 PromSQL 进行改造；</p>
<p>5. 读写性能比 InfluxDB 和 TimescaleDB 高达 20 倍；百万时间序列数据下，内存使用比 InfluxDB 少 10 倍，比 Prometheus、Thanos 或 Cortex 少 7 倍；数据高压缩，与 Prometheus、Thanos 或 Cortex 相比，所需的存储空间最多可减少 7 倍；</p>
<p>6. 具有高延迟 IO 和低 IOPS；</p>
<p>7. 支持从第三方时序数据库获取数据源。</p>
<h3 id="1-1-快速接入-Prometheus-获取数据源"><a href="#1-1-快速接入-Prometheus-获取数据源" class="headerlink" title="1.1. 快速接入 Prometheus 获取数据源"></a>1.1. 快速接入 Prometheus 获取数据源</h3><p>数据源接入层面，VictoriaMetrics 支持通过 Prometheus 的远程写入方式直接兼容 Prometheus 的数据写入，同时也支持搜集多个 Prometheus 数据汇总。</p>
<p>remote_write:<br>- url: http:<em>&#x2F;&#x2F;<victoriametrics-addr>:8428&#x2F;api&#x2F;v1&#x2F;write</em>  </p>
<p># 多个proemtheus的话，需要配置每个Prometheus的标识符<br>global:<br>external_labels:<br>datacenter: dc-123</p>
<p>VictoriaMetrics 还支持直接取代 Prometheus 进行 exporter 搜集。</p>
<p>使用-promscrape.config配置Prometheus的prometheus.yml</p>
<p>针对 Prometheus，VictoriaMetrics 进行了一些优化：</p>
<p>1. 增加了 “extra_label&#x3D;&lt;label_name&gt;&#x3D;&lt;label_value&gt;” 可选的查询支持，可用于基于额外标签进行查询过滤。例如“&#x2F;api&#x2F;v1&#x2F;query_range?extra_label&#x3D;user_id&#x3D;123&amp;extra_label&#x3D;group_id&#x3D;456&amp;query&#x3D;<query>”，会返回额外标签中包含“{user_id&#x3D;”123”,group_id&#x3D;”456”}”的结果；</p>
<p>2. 增加了 “extra_filters[]&#x3D;series_selector“ 可选的查询支持，可用于基于拓展标签进行规则匹配的查询过滤。例如 “&#x2F;api&#x2F;v1&#x2F;query_range?extra_filters[]&#x3D;{env&#x3D;<del>“prod|staging”,user&#x3D;”xyz”}&amp;query&#x3D;<query>“，会返回额外标签中包含“{env&#x3D;</del>“prod|staging”,user&#x3D;”xyz”}“ 的结果；</p>
<p>3. 支持 “start“ 和 “end“，使用多种时间格式，如 1562529662.678、2022-03-29T01:02:03Z、2022-03、1h5m 等；</p>
<p>4. 在 “&#x2F;api&#x2F;v1&#x2F;query“和“&#x2F;api&#x2F;v1&#x2F;query_range“ 中增加了 round_digits 参数，它可用于将响应值四舍五入到小数点后给定的位数；</p>
<p>5. 在 “&#x2F;api&#x2F;v1&#x2F;labels and &#x2F;api&#x2F;v1&#x2F;label&#x2F;<labelName>&#x2F;values“ 中增加了 limit 参数，用于限制返回条目的数量；</p>
<p>6. 在 “&#x2F;api&#x2F;v1&#x2F;series“ 中增加了 limit 参数，用于限制返回条目的数量；</p>
<p>7. 新增 “&#x2F;api&#x2F;v1&#x2F;series&#x2F;count“，返回数据库中时间序列的总数；</p>
<p>8. 新增 “&#x2F;api&#x2F;v1&#x2F;status&#x2F;active_queries“，返回当前正在运行的查询列表；</p>
<p>9. 新增 “&#x2F;api&#x2F;v1&#x2F;status&#x2F;top_queries“，返回“topByCount“最常执行的查询；返回“topByAvgDuration“平均执行持续时间最长的查询；返回“topBySumDuration“执行时间最长的查询。</p>
<p>除了支持 Prometheus 作为数据源外，VictoriaMetrics 还<strong>支持其他数据源：</strong></p>
<p>1. DataDog agent</p>
<p>2. InfluxDB-compatible agents such as Telegraf</p>
<p>3. Graphite-compatible agents such as StatsD</p>
<p>4. OpenTSDB-compatible agents</p>
<h3 id="02-架构"><a href="#02-架构" class="headerlink" title="02 架构"></a>02 架构</h3><p>面对获取速率低于每秒一百万个数据点的场景下，官方建议使用单节点版本而不是群集版本。单节点版本可以根据 CPU 内核、RAM 和可用存储空间的数量完美扩展。与群集版本相比，单节点版本更易于配置和操作，因此在选择群集版本之前要三思。</p>
<p><img src="/images/1705651427-395d7c612be4e902e72e43f2597757a6.jpeg"></p>
<p>图源：<a href="https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html">https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html</a></p>
<p>VictoriaMetrics 集群由以下服务组成：</p>
<p>1. <strong>vmstorage</strong>，存储原始数据并返回给定标签过滤器的给定时间范围内的查询数据；</p>
<p>2. <strong>vminsert</strong>，接受接收的数据，并根据 “度量名称及其所有标签” 计算出的哈希值，在 vmstorage 节点之间传播数据；</p>
<p>3. <strong>vmselect</strong>，通过从所有配置的 vmstorage 节点获取所需数据来执行传入查询。</p>
<p>每个服务可以独立扩展，并且可以在最合适的硬件上运行。Vmstorage 节点不了解彼此，不相互通信，也不共享任何数据。这是一个无共享架构，它提高了群集可用性，简化了群集维护和群集扩展。</p>
<p>VictoriaMetrics 在开源层面，提供以下组件：</p>
<p><strong>1. vmui：负责 vm 页面展示</strong>，提供数据查询、指标与基数查询、查询分析、链路分析、job 分析面板等功能；</p>
<p><strong>2. vmagent：负责数据采集、重新标记和过滤收集</strong>，并通过 Prometheus 协议将数据存储到 VictoriaMetrics 或其他支持 Prometheus 协议的存储系统中。支持按时间和标签聚合样本后同时复制多个远程存储系统，且能在传输故障时缓存数据，等待恢复后继续传输；支持抓取暴露数百万时间序列的目标与写入多个租户中；支持 kafka 读写；</p>
<p><strong>3. vminsert：负责数据插入</strong>，支持不同格式、不同租户的数据；</p>
<p><strong>4. vmstorage：负责数据存储</strong>，具有高压缩率、低资源消耗、高性能的特点；</p>
<p><strong>5. vmselect：负责数据查询</strong>，支持数据统一查询与多租户数据隔离查询；</p>
<p><strong>6. vmalert：负责告警</strong>，和 Prometheus 一样支持纪录、告警两种规则配置与发送告警通知，允许在注解中使用 Go 模板来格式化数据、迭代或执行表达式，支持跨租户发送警报和记录规则</p>
<p><strong>7. vmbackup：负责数据备份</strong>，支持增量备份和全量备份，可以做到每小时、每天、每周和每月备份，支持本地存储、GCS、Azure Blob 存储、S3 存储、任何与 S3 兼容的存储；</p>
<p><strong>8. vmrestore：负责数据还原</strong>，支持随时中断与自动从断点恢复。</p>
<h3 id="03-能力"><a href="#03-能力" class="headerlink" title="03 能力"></a>03 能力</h3><h3 id="3-1-保存"><a href="#3-1-保存" class="headerlink" title="3.1. 保存"></a>3.1. 保存</h3><p>VictoriaMetrics 使用 “-retentionPeriod”命令行标志进行配置，该标志采用一个数字，后跟一个时间单位字符 “-h（ours）、d（ays）、w（eeks）、y（ears）”。如果未指定时间单位，则假定为月。例如，“-retentionPeriod&#x3D;3” 表示数据将存储 3 个月，然后删除。默认保留期为一个月。</p>
<h3 id="3-2-数据删除"><a href="#3-2-数据删除" class="headerlink" title="3.2. 数据删除"></a>3.2. 数据删除</h3><p>VictoriaMetrics 除了支持配置定时过期外，还支持手动进行数据删除操作，使用 “http:&#x2F;&#x2F;<victoriametrics-addr>:8428&#x2F;api&#x2F;v1&#x2F;admin&#x2F;tsdb&#x2F;delete_series?match[]&#x3D;&lt;timeseries_selector_for_delete&gt;”。删除的时间序列的存储空间不会立即释放，而是在随后的数据文件后台合并过程中释放。请注意，对于前几个月的数据，后台合并可能永远不会发生，因此不会为历史数据释放存储空间。在这种情况下，强制合并可能有助于释放存储空间。</p>
<h3 id="3-3-强制合并"><a href="#3-3-强制合并" class="headerlink" title="3.3. 强制合并"></a>3.3. 强制合并</h3><p>VictoriaMetrics 会在后台以每个月为一个分区的形式进行数据压缩，以保持良好的性能。可以使用 “<a href="http://victoriametrics:8428/internal/force/_merge?partition%5C_prefix=YYYY%5C_MM%E2%80%9D">http://victoriametrics:8428/internal/force\_merge?partition\_prefix=YYYY\_MM”</a> 进行强制数据压缩，会以异步的形式，立马返回请求结果，并在后台执行数据压缩任务。当需要立即删除数据的时候，可以使用强制合并触发数据删除。</p>
<h3 id="3-4-数据导入、导出"><a href="#3-4-数据导入、导出" class="headerlink" title="3.4. 数据导入、导出"></a>3.4. 数据导入、导出</h3><p>VictoriaMetrics <strong>支持使用专属 Agent 接口导入数据：</strong></p>
<p>1.Prometheus remote_write API</p>
<p>2.DataDog submit metrics API</p>
<p>3.Graphite plaintext protocol</p>
<p>4.OpenTSDB telnet put protocol</p>
<p>5.OpenTSDB http api&#x2F;put protocol</p>
<p><strong>支持使用 VictoriaMetrics 统一接口导入数据：</strong></p>
<p>1.&#x2F;api&#x2F;v1&#x2F;import，导出 json 格式；</p>
<p>2.&#x2F;api&#x2F;v1&#x2F;import&#x2F;csv，导出 csv 格式；</p>
<p>3.&#x2F;api&#x2F;v1&#x2F;import&#x2F;native，导出二进制格式。</p>
<p>相对的，也<strong>可以使用导出接口导出数据：</strong></p>
<p>1.&#x2F;api&#x2F;v1&#x2F;export，导出 json 格式；</p>
<p>2.&#x2F;api&#x2F;v1&#x2F;export&#x2F;csv，导出 csv 格式；</p>
<p>3.&#x2F;api&#x2F;v1&#x2F;export&#x2F;native，导出二进制格式。</p>
<p>VictoriaMetrics 接口侧，在导入、导出接口中，数据格式保持一致，可以直接使用导出的数据进行数据导入。</p>
<h3 id="3-5-消除重复数据"><a href="#3-5-消除重复数据" class="headerlink" title="3.5. 消除重复数据"></a>3.5. 消除重复数据</h3><p>VictoriaMetrics 会根据 “-dedup.minScrapeInterval” 配置的值进行去重，只留下一个原始样本，保留配置周期中时间戳最大的数据。比如 “-dedup.minScrapeInterval&#x3D;60s”，将会保留 60s 间隔中最大时间戳的单个原始样本。如果时间戳一致的情况下，随机保留数据。</p>
<p>多个相同配置的 vmagent 或 Prometheus 实例将数据写入同一 VictoriaMetrics 实例，则消除重复数据可减少磁盘空间的使用。</p>
<h3 id="3-6-存储"><a href="#3-6-存储" class="headerlink" title="3.6. 存储"></a>3.6. 存储</h3><p>VictoriaMetrics 将以类似 MergeTree 的数据结构存储时间序列数据。插入时，VictoriaMetrics 累积最多 1s 的数据，并将其转储到磁盘上的 “←storageDataPath&gt;&#x2F;data&#x2F;small&#x2F;YYYY_MM&#x2F;” 子目录，形成具有以下名称模式的 part：“rowsCount_blocksCount_minTimestamp_maxTimestamp”。每个 part 由两个 “列” 组成：值和时间戳。这些是经过排序和压缩的原始时间序列值。此外，part 包含索引文件，用于在值和时间戳文件中搜索特定 series。</p>
<p>part 会定期合并为较大的 part，生成的部分在 “&lt;-storageDataPath&gt;&#x2F;data&#x2F;{small，big}&#x2F;YYYY_MM&#x2F;tmp” 子目录下构造。当生成的 part 完成后，它将自动从 tmp 移动到自己的子目录，而源部分将自动删除。最终结果是，源部分被 ”&lt;-storageDataPath&gt;&#x2F;data&#x2F;{small，big}&#x2F;YYYY_MM&#x2F;“ 目录中的单个较大部分替换。</p>
<p>如果 part 的摘要大小超过可用磁盘空间，VictoriaMetrics 不会合并部件。这可以防止合并过程中出现潜在的磁盘空间不足错误。在可用磁盘空间不足的情况下，part 的数量可能会随着时间的推移而显著增加。这增加了数据查询期间的开销，因为 VictoriaMetrics 每次请求都需要从更多的部分读取数据。这就是为什么建议在 “-storageDataPath” 命令行标志指示的目录下至少有 20% 的可用磁盘空间。</p>
<p>有关合并过程的信息支持在 Grafana 仪表板中查看。</p>
<p>合并过程提高了压缩率，并使磁盘上的部件数量保持相对较低。<strong>执行合并过程的好处如下：</strong></p>
<p>1. 它提高了查询性能，因为每次查询都会检查较少的部分；</p>
<p>2. 它减少了数据文件的数量，因为每个部分都包含固定数量的文件。</p>
<p>存储或是合并，都不会只保存部分 part，part 会以数据整体的形式，要么被全部保存成功，要么全部失败。part 是不可变的。</p>
<h3 id="3-7-监控"><a href="#3-7-监控" class="headerlink" title="3.7. 监控"></a>3.7. 监控</h3><p>VictoriaMetrics 在 “&#x2F;metrics” 页面以 Prometheus exposion 格式导出内部度量。这些指标可以通过 vmagent 或 Prometheus 获取。或者，当 “-selfScrapeInterval” 命令行标志设置为持续时间大于 0 时，单节点 VictoriaMetrics 可以自抓取度量。</p>
<p>VictoriaMetrics 在 “&#x2F;api&#x2F;v1&#x2F;status&#x2F;active_queries“ 页面上公开当前正在运行的查询及其执行时间。</p>
<p>VictoriaMetrics 在 ”&#x2F;api&#x2F;v1&#x2F;status&#x2F;top_queries” 页面上公开了执行时间最长的查询。</p>
<h3 id="3-8-TSDB-状态"><a href="#3-8-TSDB-状态" class="headerlink" title="3.8. TSDB 状态"></a>3.8. TSDB 状态</h3><p>VictoriaMetrics 以类似于 Prometheus 的方式在 “&#x2F;api&#x2F;v1&#x2F;status&#x2F;TSDB“ 页面返回 TSDB 统计信息：</p>
<p>1. topN&#x3D;N，其中 N 是响应数量。默认情况下，返回前 10 个；</p>
<p>2. date&#x3D;YYYY-MM-DD，其中 YYYY-MM-DD 是收集统计数据的日期。默认情况下，收集当天的统计数据；</p>
<p>3. focusLabel&#x3D;LABEL_NAME，返回 seriesCountByFocusLabelValue 列表中给定 LABEL_NAME 的时间序列数最多的标签值；</p>
<p>4. match[]&#x3D;SELECTOR，其中 SELECTOR 是一个任意时间序列选择器，用于在统计计算期间考虑序列。默认情况下，将考虑所有系列；</p>
<p>5. extra_label&#x3D;LABEL&#x3D;VALUE，拓展标签筛选。</p>
<h3 id="3-9-推指标"><a href="#3-9-推指标" class="headerlink" title="3.9. 推指标"></a>3.9. 推指标</h3><p>当出现无法拉取指标的场景下，VictoriaMetrics 支持以 Prometheus 数据格式的方式，通过 push 模式进行指标推送：</p>
<p>1. -pushmetrics.url，推送地址，比如”-pushmetrics.url&#x3D;<a href="http://victoria-metrics:8428/api/v1/import/prometheus%E2%80%9C%EF%BC%9B">http://victoria-metrics:8428/api/v1/import/prometheus“；</a></p>
<p>2. -pushmetrics.extraLabel，拓展标签，支持以 label&#x3D;”value” 的形式给 push 数据增加标签；</p>
<p>3. -pushmetrics.interval，push 周期，默认 10s。</p>
<h3 id="3-10-缓存"><a href="#3-10-缓存" class="headerlink" title="3.10. 缓存"></a>3.10. 缓存</h3><p>VictoriaMetrics 使用各种内部缓存。在正常关机期间（例如，当 VictoriaMetrics 通过发送 SIGINT 信号停止时），这些缓存存储到 “&lt;-storageDataPath&gt;&#x2F;cache” 目录中。缓存将在下次 VictoriaMetrics 启动时读取。有时需要在下次启动时删除这些缓存。这可以通过在重启 VictoriaMetrics 之前将 reset_cache_on_startup 文件放置在“&lt;-storageDataPath&gt;&#x2F;cache” 目录中来执行。</p>
<p>VictoriaMetrics 使用各种内存缓存来加快数据摄取和查询性能。每种类型缓存指标可以在 “&#x2F;metrics” 页面导出：</p>
<p>1. vm_cache_size_bytes，实际缓存大小；</p>
<p>2. vm_cache_size_max_bytes，缓存大小限制；</p>
<p>3. vm_cache_requests_total，对缓存的请求数；</p>
<p>4. vm_cache_misses_total，缓存未命中数；</p>
<p>5. vm_cache_entries，缓存中的条目数。</p>
<p>支持在 Grafana 仪表板上查看缓存指标，面板显示了每种类型缓存的当前内存使用情况，以及缓存命中率。如果命中率接近 100%，则缓存效率已经很高，不需要任何调整。</p>
<h3 id="3-11-其他"><a href="#3-11-其他" class="headerlink" title="3.11. 其他"></a>3.11. 其他</h3><p>支持众多 Prometheus 具备的功能，比如 Prometheus 的标签重写、联邦等功能。</p>
<h3 id="04-与-Prometheus-对比"><a href="#04-与-Prometheus-对比" class="headerlink" title="04 与 Prometheus 对比"></a>04 与 Prometheus 对比</h3><p>优势：</p>
<p><strong>1. 性能优势。</strong>在相同配置、采集压力的情况下，相比使用 Prometheus，存储空间最多可减少 7 倍，磁盘读写峰值最多可减少 3-4 倍，内存使用最多减少 7 倍；</p>
<p><strong>2. 更优秀的横向拓展、高可用方案。</strong>VictoriaMetrics 集群模式，通过组件化各个能力，进行功能层面的架构解耦。由于负责读写的 vmselect、vminsert 组件都是无状态组件，可以灵活根据读写压力，进行组件的横向扩缩容；负责存储的 vmstorage 组件虽然是有状态组件，但是当存储压力增加时，同样支持横向扩容，扩容后只需要更新上下游的 vmselect、vminsert 组件配置并重启，即可提升 VictoriaMetrics 集群存储能力；采集压力的时候，可以利用扩容 vmagent 与 vmagent 的采集分组能力，进行分散压力采集；</p>
<p><strong>3. 数据多租户能力。</strong>VictoriaMetrics 支持把不同类型的数据分别放到不同的租户里，每个租户通过 accountID 或 accountID:projectID 的形式，在请求的 url 里做区分。租户的数量不影响性能，主要取决于所有租户的活跃总时间序列，每个租户的数据都均匀分布在后端 vmstorage 存储，但是不支持跨租户进行数据查询。</p>
<p>缺点：</p>
<p><strong>1. 没有类似 Prometheus 的 WAL 日志，突然故障可能会丢失部分数据。</strong>Prometheus 在接收到数据的时候，会先把数据写入内存，定期再写入磁盘。为了防止写入磁盘前数据丢失，还会再写入内存的同时简单的写入 WAL 文件里，当出现故障时，就可以通过 WAL 快速恢复当前状态。而 VictoriaMetrics 则在写入过程中，使用 Go 的 chan 作为数据缓存队列，多协程实现数据处理、压缩、存储等操作，故障下存在缓存数据丢失的情况；</p>
<p><strong>2. 为了更大程度优化存储，会选择丢失部分数据精度。</strong>Vmstorage 组件支持配置精度保存范围（1-64，64 表示不丢失），以此在数据读写过程中，提升速度。</p>
<h3 id="05-安装"><a href="#05-安装" class="headerlink" title="05 安装"></a>05 安装</h3><p>使用 helm 进行 VictoriaMetrics 集群模式的部署。</p>
<p>安装 helm，添加 chart helm 仓库：</p>
<p>helm repo add vm https:<em>&#x2F;&#x2F;victoriametrics.github.io&#x2F;helm-charts&#x2F;</em><br>helm repo update</p>
<p>导出配置文件，并进行部署配置：</p>
<p>helm show values vm&#x2F;victoria-metrics-cluster &gt; values.yaml</p>
<p>可以使用以下命令进行配置检查：</p>
<p>helm install victoria-metrics vm&#x2F;victoria-metrics-cluster -f values.yaml -n victoria-metrics –debug –dry-run</p>
<p>根据配置文件部署 victoria-metrics-cluster：</p>
<p>helm install victoria-metrics vm&#x2F;victoria-metrics-cluster -f values.yaml -n victoria-metrics</p>
<p>稍等片刻 Helm 则会机提示安装成功，查询资源可以看到都已经部署起来了。</p>
<p><img src="/images/1705651427-8fd2395155c54409dc00a3ec1de4cdcc.jpeg"></p>
<h3 id="06-使用"><a href="#06-使用" class="headerlink" title="06 使用"></a>06 使用</h3><p>调整 victoria-metrics-victoria-metrics-cluster-vminsert 的 service 与 victoria-metrics-victoria-metrics-cluster-vmselect 的 service，从 ClusterIP 模式改成 NodePort 模式，提供对外访问能力。修改现有 Prometheus 的配置，增加：</p>
<p>remote_write:<br>- url: http:<em>&#x2F;&#x2F;IP:NodePort&#x2F;insert&#x2F;0&#x2F;prometheus</em></p>
<p>把 Prometheus 的数据，写入 VictoriaMetrics，通过 VictoriaMetrics 的 UI 地址 ”<a href="http://IP:NodePort/select/0/vmui“，即可查看">http://IP:NodePort/select/0/vmui“，即可查看</a> Prometheus 采集到的数据了。</p>
<p><img src="/images/1705651427-cb3d24cfda15a54d8dccddbd2cfe6b61.jpeg"></p>
<p><img src="/images/1705651427-73def214dd6c1e81e2514245deb2378f.jpeg"></p>
<p>可以看出，两者数据基本一致。</p>
<p><strong>参考资料：</strong><a href="https://docs.victoriametrics.com/">https://docs.victoriametrics.com/</a></p>
]]></content>
      <categories>
        <category>VictoriaMetrics</category>
      </categories>
      <tags>
        <tag>VictoriaMetrics</tag>
      </tags>
  </entry>
  <entry>
    <title>网站由http协议更改为https协议的方法</title>
    <url>/2024/01/22/%E7%BD%91%E7%AB%99%E7%94%B1http%E5%8D%8F%E8%AE%AE%E6%9B%B4%E6%94%B9%E4%B8%BAhttps%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="http-协议和-https-协议的区别"><a href="#http-协议和-https-协议的区别" class="headerlink" title="http 协议和 https 协议的区别"></a>http 协议和 https 协议的区别</h2><ul>
<li><ol>
<li>https 协议需要到 ca 申请证书，一般免费证书较少，因而需要一定费用。</li>
</ol>
</li>
<li><ol start="2">
<li>http 是超文本传输协议，信息是明文传输，https 则是具有安全性的 ssl 加密传输协议。</li>
</ol>
</li>
<li><ol start="3">
<li>http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</li>
</ol>
</li>
<li><ol start="4">
<li>http 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 http 协议安全。</li>
</ol>
</li>
</ul>
<h2 id="1-域名购买"><a href="#1-域名购买" class="headerlink" title="1.域名购买"></a>1.域名购买</h2><p>域名可以在腾讯云上购买，根据自己的需要选择代理商购买域名即可。</p>
<p>腾讯云域名购买地址：<a href="https://dnspod.qcloud.com/?from=console">https://dnspod.qcloud.com/?from=console</a></p>
<p>其他代理商的域名购买地址请自行查询。</p>
<h2 id="2-域名解析"><a href="#2-域名解析" class="headerlink" title="2.域名解析"></a>2.域名解析</h2><p>在购买好域名的基础上，我们需要进行域名的解析，不然通过该域名无法得知实际的公网 IP 地址</p>
<p>腾讯云域名解析地址：<a href="https://console.cloud.tencent.com/cns">https://console.cloud.tencent.com/cns</a></p>
<p>进入此页面点击<code>解析</code>，然后添加一条 A 记录(记录类型为 A，记录值为腾讯云服务器的公网 IP 地址，主机记录根据自己的需要进行选择即可，线路类型选择默认即可，TTL 默认设置 600 秒即可)，此时我们已经完成了域名的解析工作。</p>
<p>然后我们可以通过 ping 服务来测试解析是否成功，通过 ping 域名,查看返回的 IP 是否为自己的公网 IP 地址，如果返回的是自己的公网 IP 地址，即证明解析成功，可以执行后续操作了。此时在浏览器的地址栏中输入自己的域名即可打开自己通过公网 IP 才能打开的网站。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">例如：</span><br><span class="line">ping sweetheartjq.cn</span><br></pre></td></tr></table></figure>

<p>若出现如下页面即表示解析成功</p>
<p><img src="/images/1705886768-5a7513f9112b12fa0b29e2d3d6d2fcb4.webp" alt="域名解析成功页面"></p>
<h2 id="3-申请并下载-SSL-证书"><a href="#3-申请并下载-SSL-证书" class="headerlink" title="3.申请并下载 SSL 证书"></a>3.申请并下载 SSL 证书</h2><p>SSL 证书申请地址：<a href="https://console.cloud.tencent.com/ssl">https://console.cloud.tencent.com/ssl</a></p>
<p>进入此页面点击<code>申请免费证书</code>或者<code>购买证书</code>均可，根据自己的需要进行选择即可，一般情况下若没有特殊作用的建议选择申请免费证书。</p>
<p>点击申请免费证书后，在出现下图所示页面后点击<code>确定</code>即可。</p>
<p><img src="/images/1705886768-4f3fe85062c5e6c71992afbee147899e.webp"></p>
<p>然后在新的页面中根据提示信息进行操作即可，（私钥密码根据自己的情况选择是否设置）</p>
<p><img src="/images/1705886768-0d6a1eea22167cdf5e4a7646056008b0.webp"></p>
<p>填写完成后等待腾讯审核即可，一般这个审核较快，最长不会超过一天，审核通过后可以在我的证书页面中看到自己的已经签发的证书，然后点击下载即可。</p>
<p><img src="/images/1705886768-6124c5a21eb27e822236e76ee06b9cc2.webp"></p>
<h2 id="4-上传证书到自己的服务器"><a href="#4-上传证书到自己的服务器" class="headerlink" title="4.上传证书到自己的服务器"></a>4.上传证书到自己的服务器</h2><p>将上一步中下载的证书解压，然后根据自己的服务(apache&#x2F;nginx&#x2F;tomcat 等)选择将相应的文件上传到自己的服务器即可。此处可以通过 FileZilla 或者 xftp 将文件上传到服务器，具体如何上传可以根据自己的喜好选择即可。</p>
<p>FileZilla 官网：<a href="https://filezilla-project.org/">https://filezilla-project.org/</a></p>
<p>xftp 官网：<a href="https://filezilla-project.org/">https://filezilla-project.org/</a></p>
<p><strong>注意：若使用的是 nginx 服务，即将解压文件夹下的 nginx 目录下的两个文件上传到 nginx 的安装目录下的 conf 目录下，其他服务请查看腾讯的文档进行上传</strong></p>
<p>例如我的 nginx 目录下的这两个文件，将其上传到自己的服务器的 nginx 安装目录下的 conf 文件夹下即可。</p>
<p><img src="/images/1705886768-c0db7ead6ddc35af1fed687f2e1ee4a5.webp"></p>
<p>腾讯官方的 SSL 证书安装教程：<a href="https://cloud.tencent.com/document/product/400/35244">https://cloud.tencent.com/document/product/400/35244</a></p>
<h2 id="5-修改服务器上的-nginx-目录下的-nginx-conf-文件"><a href="#5-修改服务器上的-nginx-目录下的-nginx-conf-文件" class="headerlink" title="5.修改服务器上的 nginx 目录下的 nginx.conf 文件"></a>5.修改服务器上的 nginx 目录下的 nginx.conf 文件</h2><p>在上一步的文件上传成功后，需要修改服务器上的 nginx 目录下的<code>nginx.conf</code>文件。</p>
<ul>
<li>此操作可通过执行 vim &#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf 命令行编辑该文件。</li>
<li>由于版本问题，配置文件可能存在不同的写法。例如：Nginx 版本为 nginx&#x2F;1.15.0 以上请使用 listen 443 ssl 代替 listen 443 和 ssl on。</li>
</ul>
<p>在 nginx.conf 文件中添加如下信息：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#SSL 访问端口号为 443</span></span><br><span class="line">    listen 443 ssl<span class="comment">;</span></span><br><span class="line"> <span class="comment">#填写绑定证书的域名</span></span><br><span class="line"> <span class="comment"># cloud.tencent.com为自己的域名</span></span><br><span class="line">    server_name cloud.tencent.com<span class="comment">;</span></span><br><span class="line"> <span class="comment">#证书文件名称</span></span><br><span class="line"> <span class="comment"># 1_cloud.tencent.com_bundle.crt为你自己下载的文件中以.crt结尾的文件名</span></span><br><span class="line">    ssl_certificate 1_cloud.tencent.com_bundle.crt<span class="comment">;</span></span><br><span class="line"> <span class="comment">#私钥文件名称</span></span><br><span class="line"> <span class="comment"># 2_cloud.tencent.com.key 为你自己下载的文件中以.key结尾的文件名</span></span><br><span class="line">    ssl_certificate_key 2_cloud.tencent.com.key<span class="comment">;</span></span><br><span class="line">    ssl_session_timeout 5m<span class="comment">;</span></span><br><span class="line"> <span class="comment">#请按照以下协议配置</span></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2<span class="comment">;</span></span><br><span class="line"> <span class="comment">#请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。</span></span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE<span class="comment">;</span></span><br><span class="line">    ssl_prefer_server_ciphers on<span class="comment">;</span></span><br><span class="line">    location / &#123;</span><br><span class="line">    <span class="comment">#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。</span></span><br><span class="line">    <span class="comment"># 此时的root下的路径保持和自己的http协议下的另一个server中的root下的路径一致</span></span><br><span class="line">        root html<span class="comment">;</span></span><br><span class="line">        index  index.html index.htm<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改配置文件后，需要经 nginx 重启一下，修改才能生效</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service nginx reload</span><br></pre></td></tr></table></figure>

<p>配置完成后即可通过 https 协议访问自己的域名。</p>
<p><strong>注意，若重启 nginx 服务报如下错误（ssl parameter requires ngx_http_ssl_module），则证明 nginx 安装时缺少 http_ssl_module 模块，解决方案参考下文</strong></p>
<p>解决方案可参考：<a href="https://sweetheartjq.cn/pages/3cce56/">https://sweetheartjq.cn/pages/3cce56/</a></p>
<p>或参考此文：<a href="https://sweetheartjq.cn/pages/3cce56/">https://sweetheartjq.cn/pages/3cce56/</a> <strong>若按照此文章配置不成功的情况下，可以将 nginx 服务删除，然后重新安装，在安装时配置安装 http_ssl_module 模块，具体可参考我的文章<a href="%22https://sweetheartjq.cn/pages/3cce56/%22">sweetheartjq.cn&#x2F;pages&#x2F;3cce5…</a></strong></p>
<h2 id="6-http-重定向到-https-协议（可选）"><a href="#6-http-重定向到-https-协议（可选）" class="headerlink" title="6.http 重定向到 https 协议（可选）"></a>6.http 重定向到 https 协议（可选）</h2><p>在浏览器中直接输入域名访问的是 http 协议，若需要将 http 请求重定向到 https 请求，则可以执行下方操作，即修改 nginx 安装目录下的<code>nginx.conf</code>文件。</p>
<p>配置 SSL 证书和重定向到 https 请求</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    <span class="comment">#SSL 访问端口号为 443</span></span><br><span class="line">    listen 443 ssl<span class="comment">;</span></span><br><span class="line"> <span class="comment">#填写绑定证书的域名</span></span><br><span class="line"> <span class="comment"># cloud.tencent.com为自己的域名</span></span><br><span class="line">    server_name cloud.tencent.com<span class="comment">;</span></span><br><span class="line"> <span class="comment">#证书文件名称</span></span><br><span class="line"> <span class="comment"># 1_cloud.tencent.com_bundle.crt为你自己下载的文件中以.crt结尾的文件名</span></span><br><span class="line">    ssl_certificate 1_cloud.tencent.com_bundle.crt<span class="comment">;</span></span><br><span class="line"> <span class="comment">#私钥文件名称</span></span><br><span class="line"> <span class="comment"># 2_cloud.tencent.com.key 为你自己下载的文件中以.key结尾的文件名</span></span><br><span class="line">    ssl_certificate_key 2_cloud.tencent.com.key<span class="comment">;</span></span><br><span class="line">    ssl_session_timeout 5m<span class="comment">;</span></span><br><span class="line"> <span class="comment">#请按照以下协议配置</span></span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2<span class="comment">;</span></span><br><span class="line"> <span class="comment">#请按照以下套件配置，配置加密套件，写法遵循 openssl 标准。</span></span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE<span class="comment">;</span></span><br><span class="line">    ssl_prefer_server_ciphers on<span class="comment">;</span></span><br><span class="line">    location / &#123;</span><br><span class="line">    <span class="comment">#网站主页路径。此路径仅供参考，具体请您按照实际目录操作。</span></span><br><span class="line">    <span class="comment"># 此时的root下的路径保持和自己的http协议下的另一个server中的root下的路径一致</span></span><br><span class="line">        root html<span class="comment">;</span></span><br><span class="line">        index  index.html index.htm<span class="comment">;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80<span class="comment">;</span></span><br><span class="line">    <span class="comment">#填写绑定证书的域名</span></span><br><span class="line">    <span class="comment"># cloud.tencent.com为你自己的域名</span></span><br><span class="line">    server_name cloud.tencent.com<span class="comment">;</span></span><br><span class="line">    <span class="comment">#把http的域名请求转成https</span></span><br><span class="line">    return 301 https://$host$request_uri<span class="comment">;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>修改完成后，重启 nginx 服务即可</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service nginx reload</span><br></pre></td></tr></table></figure>

<h2 id="完成"><a href="#完成" class="headerlink" title="完成"></a>完成</h2><p>此时已经安装配置完成了，可以通过 https 协议访问自己的域名了，且使用 http 协议访问此域名时会自动重定向到 https 请求。</p>
<h3 id="参考文档："><a href="#参考文档：" class="headerlink" title="参考文档："></a>参考文档：</h3><p>腾讯官方的 SSL 证书安装教程：<a href="%22https://cloud.tencent.com/document/product/400/35244%22">cloud.tencent.com&#x2F;document&#x2F;pr…</a></p>
<p>centos7 安装配置 nginx 服务：<a href="%22https://sweetheartjq.cn/pages/3cce56/%22">sweetheartjq.cn&#x2F;pages&#x2F;3cce5…</a></p>
]]></content>
      <categories>
        <category>Http</category>
      </categories>
      <tags>
        <tag>Http</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus查询合并标签</title>
    <url>/2024/01/22/Prometheus%E6%9F%A5%E8%AF%A2%E5%90%88%E5%B9%B6%E6%A0%87%E7%AD%BE/</url>
    <content><![CDATA[<p>说明：Prometheus有时需要将两个度量值通过某个标签关联，相当于sql里面的连表查询。在实际使用场景中，我们可能会对两个指标进行关联查询判断，需要判断指标B的值，但在写告警rule时需要借助指标A的labels【指标B中并没有这些labels】，则需要把指标B的value值通过关联交集lable赋值给指标A，此后可以对指标A进行判断并在rule中引用A的lables。</p>
<p>0*指标A{交集label&#x3D;<del>“关联值”} + on (交集label) group_left(指标B) 指标B{交集label&#x3D;</del>“关联值”}</p>
<p><img src="/images/screenshot-20240122-142655.png" alt="图片"></p>
<p>举例如下：</p>
<p>有<code>查询语句1</code>（得到温度传感器的名称）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">node_hwmon_sensor_label&#123;instance<span class="operator">=</span>&quot;192.168.1.100&quot;,  label<span class="operator">=</span><span class="operator">~</span>&quot;core_.*&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>得到结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node_hwmon_sensor_label&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_0&quot;</span>, sensor=<span class="string">&quot;temp2&quot;</span>&#125;   1</span><br><span class="line">node_hwmon_sensor_label&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_1&quot;</span>, sensor=<span class="string">&quot;temp3&quot;</span>&#125;   1</span><br><span class="line">node_hwmon_sensor_label&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_2&quot;</span>, sensor=<span class="string">&quot;temp4&quot;</span>&#125;   1</span><br><span class="line">node_hwmon_sensor_label&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_3&quot;</span>, sensor=<span class="string">&quot;temp5&quot;</span>&#125;   1</span><br></pre></td></tr></table></figure>

<p>有<code>查询语句2</code>（得到温度传感器的温度值）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">node_hwmon_temp_celsius&#123;instance<span class="operator">=</span>&quot;192.168.1.100&quot;, chip<span class="operator">=</span><span class="operator">~</span>&quot;.+core.+&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>得到结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">node_hwmon_temp_celsius&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, sensor=<span class="string">&quot;temp1&quot;</span>&#125;  37</span><br><span class="line">node_hwmon_temp_celsius&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, sensor=<span class="string">&quot;temp2&quot;</span>&#125;  34</span><br><span class="line">node_hwmon_temp_celsius&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, sensor=<span class="string">&quot;temp3&quot;</span>&#125;  37</span><br><span class="line">node_hwmon_temp_celsius&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, sensor=<span class="string">&quot;temp4&quot;</span>&#125;  35</span><br><span class="line">node_hwmon_temp_celsius&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, sensor=<span class="string">&quot;temp5&quot;</span>&#125;  34</span><br></pre></td></tr></table></figure>

<p>遇到的问题是：在<code>查询语句2</code>中得到的结果没有标识此温度传感器叫什么名字，对应到哪个核心CPU上，此名字在<code>查询语句1</code>中可以得到，所以，目标就是通过一行查询语言，得到温度的同时，也可以得到此传感器对应到哪个CPU核心上。这两个结果中，可以通过<code>sensor=&quot;tempX&quot;</code>进行关联，则有如下语句：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">0</span> <span class="operator">*</span> node_hwmon_sensor_label&#123;instance<span class="operator">=</span>&quot;27.151.29.179&quot;,  label<span class="operator">=</span><span class="operator">~</span>&quot;core_.*&quot;&#125; <span class="operator">+</span> <span class="keyword">on</span> (sensor) group_left(node_hwmon_temp_celsius) node_hwmon_temp_celsius&#123;instance<span class="operator">=</span>&quot;27.151.29.179&quot;, chip<span class="operator">=</span><span class="operator">~</span>&quot;.+core.+&quot;&#125;</span><br></pre></td></tr></table></figure>

<p>得到结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_0&quot;</span>, sensor=<span class="string">&quot;temp2&quot;</span>&#125;  33</span><br><span class="line">&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_1&quot;</span>, sensor=<span class="string">&quot;temp3&quot;</span>&#125;  36</span><br><span class="line">&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_2&quot;</span>, sensor=<span class="string">&quot;temp4&quot;</span>&#125;  35</span><br><span class="line">&#123;chip=<span class="string">&quot;platform_coretemp_0&quot;</span>, instance=<span class="string">&quot;192.168.1.100&quot;</span>, job=<span class="string">&quot;node-development&quot;</span>, label=<span class="string">&quot;core_3&quot;</span>, sensor=<span class="string">&quot;temp5&quot;</span>&#125;  34</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana中table的使用技巧</title>
    <url>/2024/01/23/Grafana%E4%B8%ADtable%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
    <content><![CDATA[<p>将多个指标数据显示在同一个Table中，需要用到Transform功能，利用Transform功能可以将数据进行处理只显示想要的数据：</p>
<p><img src="/images/1705988255-d1f880e82a4e885c896baeef03cda15d.png"></p>
<p><img src="/images/1705988255-04d870c1d6ef72eb725998e478384c8a.png"> </p>
<p><img src="/images/1705988255-327ea06b154fd91c47330b68a3261595.png"></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana reporter定时报表踩坑记录</title>
    <url>/2024/01/23/Grafana-reporter%E5%AE%9A%E6%97%B6%E6%8A%A5%E8%A1%A8%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>前言：本以为测试grafana reporter功能能很顺利，但按照网上大佬分享的记录进行操作，屡屡报错，不知是因为我的grafana部署在k8s中之前由低版本升级到高版本导致的，还是其他原因，在grafana中安装Grafana Image Renderer 一直报错。</p>
<p>Github地址：<a href="https://github.com/IzakMarais/reporter">https://github.com/IzakMarais/reporter</a>  ，对中文不支持，dashboard中含有中文字符会报错。</p>
<p>　　　首先介绍一下Grafana Image Renderer，它是一个用于将Grafana仪表盘转换为静态图像的插件。它提供了在Grafana中生成PNG、JPEG和SVG格式图像的功能，这些图像可以用于导出仪表盘的快照、生成报告、在文档中嵌入等用途。通过Grafana Image Renderer插件，用户可以通过简单的HTTP请求将特定的Grafana仪表盘转换为静态图像。用户可以指定要转换的仪表盘、图像的宽度和高度等参数，并通过HTTP响应获取图像的二进制数据。该插件在处理图像时还支持渲染时过滤器的应用，例如应用时间范围、自定义变量、主题等，以确保生成的图像准确地显示所需的数据和样式。Grafana Image Renderer插件可以与其他工具和系统集成，例如将生成的图像嵌入到报告生成工具、文档管理系统或自定义的应用程序中。这样，用户就能够方便地分享、保存和展示Grafana仪表盘的快照，而无需访问Grafana本身。</p>
<p>　　　Grafana Reporter是一个基于Grafana的插件，用于生成和导出报告。它允许用户将Grafana中的监控数据和仪表盘内容导出为报告，以便与团队成员、管理层或其他人共享。Grafana Reporter支持导出为PDF、PNG、SVG和CSV等格式，可以定制报告的样式、布局和内容。用户可以设定报告的时间范围、图表和指标，并在报告中包含注释、摘要和其他信息。Grafana Reporter使用户能够以可视化和易读的方式展示和分享他们的监控数据。　</p>
<h2 id="1-安装Grafana-reporter"><a href="#1-安装Grafana-reporter" class="headerlink" title="1.安装Grafana-reporter"></a>1.安装Grafana-reporter</h2><p>①编译安装</p>
<p>#下载go，并配置相关路径<br>#git下载grafana-reporter到$GOPATH&#x2F;src&#x2F;下<br>go get github.com&#x2F;IzakMarais&#x2F;reporter&#x2F;…<br>此处插一句，由于github.com为国外网站，git下载过慢，可以通过各种加速方式，把zip包下载后放在$GOPATH&#x2F;src&#x2F;目录下，一般路径会有问题，请按照git install的时候提示放置包的位置<br>#go编译安装<br>go install -v github.com&#x2F;IzakMarais&#x2F;reporter&#x2F;cmd&#x2F;grafana-reporter<br>#在$GOPATH&#x2F;bin&#x2F;目录下生成grafana-reporter二进制文件<br>.&#x2F;grafana-reporter启动，默认监听0.0.0.0:8686，连接localhost:3000，<br>可以通过-port :18686更改监听端口，可以通过-ip 192.168.1.1:3000指定连接的grafana地址</p>
<p>②docker安装</p>
<p>#需注意时区问题，默认生成的报表为UTC时区，推荐使用修改时区后镜像或挂载时区文件</p>
<p>docker run –name grafana-reporter –rm -v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime -p 8686:8686 –net&#x3D;”host” izakmarais&#x2F;grafana-reporter</p>
<p>#docker-compose.yml文件，安装grafana和renderer插件</p>
<p>version: ‘3’<br>services:<br>  grafana:<br>    image: grafana&#x2F;grafana:latest<br>  ports:<br>    - ‘3000:3000’<br>  environment:<br>    GF_RENDERING_SERVER_URL: <a href="http://10.10.10.10:8081/render">http://10.10.10.10:8081/render</a><br>    GF_RENDERING_CALLBACK_URL: <a href="http://10.10.10.10:3000/">http://10.10.10.10:3000/</a><br>    GF_LOG_FILTERS: rendering:debug<br>  renderer:<br>   image: grafana&#x2F;grafana-image-renderer:latest<br>  ports:<br>    - ‘8081:8081’</p>
<h2 id="2-生成grafana-apitoken"><a href="#2-生成grafana-apitoken" class="headerlink" title="2.生成grafana apitoken"></a>2.生成grafana apitoken</h2><p>此处不建议修改grafana为匿名登录方式，因为这样不安全。</p>
<p><img src="/images/1705988543-b857e9da3de023e35b67b2e985eb33be.png"></p>
<p><img src="/images/1705988543-0e9357cb39a3706ae3c580b1230fd779.png"></p>
<p><img src="/images/1705988543-a4ea520a95c7567f4dd9805a6cb849d8.png"></p>
<p><img src="/images/1705988543-f8e3c0cce7dab00574eea50a6d641deb.png"></p>
<p><img src="/images/1705988543-d7c55674ac757ee834fcccec31fe4f94.png"></p>
<h2 id="3-配置dashboard-links"><a href="#3-配置dashboard-links" class="headerlink" title="3.配置dashboard links"></a>3.配置dashboard links</h2><p><img src="/images/1705988543-22b328b40a6aed344240c2a5c9d3a03c.png"></p>
<p>URL：<a href="http://10.10.10.10:8686/api/v5/report/AOixXtq4z?apitoken=glsa%5C_6q3TMrS4kdEYvTaoFva1P60I6lRUhJmE%5C_256081c9">http://10.10.10.10:8686/api/v5/report/AOixXtq4z?apitoken=glsa\_6q3TMrS4kdEYvTaoFva1P60I6lRUhJmE\_256081c9</a><br>解释：10.10.10.10:8686是grafana-reporter所在的服务所在，所以grafana-reporter可以跨服务器配置；&#x2F;api&#x2F;v5&#x2F;report&#x2F;此为固定写法，不用修改；AOixXtq4z是uid，面板id，可以查看浏览器上方连接查看</p>
<p><img src="/images/1705988543-e640ba405884667081fe90727cabc77b.png"></p>
<ul>
<li>点击即可查看pdf，也可以通过wget -O 名称.pdf Url下载</li>
<li>wget -O export.pdf <a href="http://10.10.10.10:8686/api/v5/report/AOixXtq4z?apitoken=glsa%5C_6q3TMrS4kdEYvTaoFva1P60I6lRUhJmE%5C_256081c9">http://10.10.10.10:8686/api/v5/report/AOixXtq4z?apitoken=glsa\_6q3TMrS4kdEYvTaoFva1P60I6lRUhJmE\_256081c9</a></li>
</ul>
<p><img src="/images/1705988543-a0ba0187bf2948835b6d0dde57d73ada.png"></p>
<p><img src="/images/1705988543-3a0875f8c6d2da6eb73bbf70d08bb3e3.png"></p>
<p><img src="/images/1705988543-260ad0b28ae97f7f7abb729363b09ef4.png"></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>kubesphere中部署grafana实现dashboard以PDF方式导出</title>
    <url>/2024/01/23/kubesphere%E4%B8%AD%E9%83%A8%E7%BD%B2grafana%E5%AE%9E%E7%8E%B0dashboard%E4%BB%A5PDF%E6%96%B9%E5%BC%8F%E5%AF%BC%E5%87%BA/</url>
    <content><![CDATA[<h3 id="1，部署grafana-image-renderer"><a href="#1，部署grafana-image-renderer" class="headerlink" title="1，部署grafana-image-renderer"></a>1，部署<strong>grafana-image-renderer</strong></h3><p><img src="/images/1705989070-90d53b2ce784a3addb6225090a2d49e5.png"></p>
<p><img src="/images/1705989070-de3f4220a72b00a7946f9b722da299f7.png"> </p>
<h3 id="2，部署grafana"><a href="#2，部署grafana" class="headerlink" title="2，部署grafana"></a>2，部署<strong>grafana</strong></h3><p><img src="/images/1705989070-e610d7dfc2f35571f15ec29d3323d683.png"></p>
<p><img src="/images/1705989070-501412779398b0ec57929846473a917f.png"> </p>
<p>GF_RENDERING_SERVER_URL       <a href="http://ip:30323/render">http://ip:30323/render</a>   #grafana-image-renderer地址<br>GF_RENDERING_CALLBACK_URL   <a href="http://ip:32403/">http://ip:32403/</a>   #grafana地址<br>GF_LOG_FILTERS                              rendering:debug  </p>
<h3 id="3，部署grafana-reporter"><a href="#3，部署grafana-reporter" class="headerlink" title="3，部署grafana-reporter"></a>3，部署<strong>grafana-reporter</strong></h3><p><img src="/images/1705989070-2498d83a062b5adf2effef0bac23b638.png"></p>
<p><img src="/images/1705989070-2781dad3a77cb71c9f6f6d2588e5a9e0.png"> </p>
<p><img src="/images/1705989070-5384d2074537357b186badc52da27e45.png"> </p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana内置参数</title>
    <url>/2024/01/23/Grafana%E5%86%85%E7%BD%AE%E5%8F%82%E6%95%B0/</url>
    <content><![CDATA[<p>$__dashboard<br>当前dashboard的名称</p>
<p>$__from $__to<br>时间范围的毫秒值<br>可自定义格式，比如:{$__from: date :YYYY-MM-DD HH:mm:ss} {$__from: date :seconds}</p>
<p>$__interval<br>查询的时间间隔，包含单位，比如：30s，2m</p>
<p>$__interval_ms<br>查询的时间间隔，毫秒值</p>
<p>$__range<br>查询的时间区间大小，包含单位，比如：2d</p>
<p>$__range_s $__range_ms<br>查询的时间区间大小，分别是秒数和毫秒数</p>
<p>$__timeFilter<br>返回当前选择的时间范围表达式，比如：time &gt; now() -7d，常用于数据库作为datasource的时候。</p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>grafana对指标进行组合计算</title>
    <url>/2024/01/23/grafana%E5%AF%B9%E6%8C%87%E6%A0%87%E8%BF%9B%E8%A1%8C%E7%BB%84%E5%90%88%E8%AE%A1%E7%AE%97/</url>
    <content><![CDATA[<p>在使用Grafana配置图表看板时，我们可能需要对多个查询条件筛选出来的结果进行计算，把计算结果生成最终的图表。此时需要用到transform功能【add field from calculation】：</p>
<p><img src="/images/1705989414-c3e1019a811dcf61b1723b5f61fc6953.png"></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>打造出色的Prometheus监控系统</title>
    <url>/2024/01/26/%E6%89%93%E9%80%A0%E5%87%BA%E8%89%B2%E7%9A%84Prometheus%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<h2 id="一、监控概念-误区"><a href="#一、监控概念-误区" class="headerlink" title="一、监控概念&amp;误区"></a>一、监控概念&amp;误区</h2><p>监控是管理基础设施和业务的核心工具，监控应该和应用程序一起构建和部署，没有监控，将无法了解你的系统运行环境，进行故障诊断，也无法阻止提供系统性的性能、成本和状态等信息。</p>
<ul>
<li>误区：</li>
</ul>
<p>要尽量避免进行机械式的监控、不够准确的监控、静态和监控、不频繁的监控、缺少自动化或自服务。</p>
<h2 id="二、黑盒监控-白盒监控"><a href="#二、黑盒监控-白盒监控" class="headerlink" title="二、黑盒监控&amp;白盒监控"></a>二、黑盒监控&amp;白盒监控</h2><h3 id="1、黑盒监控"><a href="#1、黑盒监控" class="headerlink" title="1、黑盒监控"></a>1、黑盒监控</h3><ul>
<li><p>应用程序或主机是从外部观察的，因此，这种方法可能相当有限。检查是为了评估被观察的系统是否以已知的方式响应探测。</p>
</li>
<li><p>例子：</p>
</li>
</ul>
<p>1）主机是否相应PING的请求<br>2）特定的TCP端口是否打开<br>3）应用程序在接受到特定的HTTP请求时，是否使用正确的数据和状态代码进行响应<br>4）特定应用程序的进程是否在其主机中运行</p>
<h3 id="2、白盒监控"><a href="#2、白盒监控" class="headerlink" title="2、白盒监控"></a>2、白盒监控</h3><p>系统在被测对象表面显示其内部状态和临界段的性能数据。这种类型的自省可能非常强大，因为它暴露了内部操作，显示不同内部组件的健康状况，否则很难甚至不可能确定。这种数据处理通常以胰腺癌方式进行处理：</p>
<p><strong>1）通过日志导出</strong>：到目前为止。这是也是在广泛引入库之前，应用程序是如何暴露其内部工作的最常见的情况，例如：可以处理 HTTP 服务器的访问日志来监视请求率、延迟和错误百分比；<br><strong>2）以结构化的事件输出</strong>：这种方法类似于日志记录，但不是将数据写入磁盘，而是直接将数据发送到处理系统进行分析和聚合。<br><strong>3）以聚合的方式保存在内存中</strong>：这种格式的数据可以驻留在端点中，也可以直接从命令行工具中读取。这种方法的例子有&#x2F;metrics with Prometheus metrics、HAProxy 的 stats 页面或 varnishstats 命令行工具</p>
<h2 id="三、度量指标"><a href="#三、度量指标" class="headerlink" title="三、度量指标"></a>三、度量指标</h2><p>度量指标有监控系统执行的过程通常可以分为两种方式：push（被监控的服务自动往监控系统进行推送）、pull（监控系统去服务进行拉取）【站在客户的角度】</p>
<ul>
<li><p>Push VS Pull</p>
</li>
<li><p>测量什么：</p>
</li>
</ul>
<p>谷歌提出应该监控的四个指标：</p>
<ul>
<li><p>延迟：服务请求所需的时间</p>
</li>
<li><p>流量：正在发出的请求的数量</p>
</li>
<li><p>错误：求失败的比率</p>
</li>
<li><p>饱和：未处理的工作量，通常在队列中</p>
</li>
</ul>
<p>Brendan 的方法更关注于及其他声明对于每个资源（CPU、磁盘、网络接口等等），应该监视以下指标：</p>
<ul>
<li><p>利用率：以资源繁忙的百分比来衡量</p>
</li>
<li><p>饱和：资源无法处理的工作量，通常会排队</p>
</li>
<li><p>错误：发生的错误数量</p>
</li>
</ul>
<p>汤姆威尔基的红色方法：更侧重于服务级别方法，而不是底层系统本身。显然，这种才领略对于见识服务很有用，对于预测外部客户的体验也很有价值。如果服务的错误率增加，那么就可以合理地假设这些错误将直接或间接地影响客户的体验。</p>
<ul>
<li><p>速率：转换成每秒请求数</p>
</li>
<li><p>错误：每秒失败请求的数量</p>
</li>
<li><p>持久性：这些请求所花费的时间</p>
</li>
</ul>
<h2 id="四、Prometheus"><a href="#四、Prometheus" class="headerlink" title="四、Prometheus"></a>四、Prometheus</h2><h3 id="1、介绍-架构"><a href="#1、介绍-架构" class="headerlink" title="1、介绍&amp;架构"></a>1、介绍&amp;架构</h3><p>Prometheus 是一个开源系统监控和警报工具包，将其监控的指标进行收集并存储为时间序列数据，即指标信息与记录时的时间戳以及称为标签的可选键值对一起存储。很多公司用来监控 K8s集群。</p>
<p><img src="/images/1706230632-37d80127b73f829661c0d17b431e0b18.svg" alt="图片"></p>
<h3 id="2-合适-不合适场景"><a href="#2-合适-不合适场景" class="headerlink" title="2. 合适&amp;不合适场景"></a>2. 合适&amp;不合适场景</h3><ul>
<li><p><strong>合适场景</strong>：Prometheus 可以很好地记录任何数字时间序列，它既适合以机器为中心的监控，也适合监控高度动态的面向服务的架构。在微服务的世界中，他对多维数据收集的查询的支持是一个特殊的优势。专为可靠性而设计，是在中断期间可以使用的系统，可让你快速诊断问题。每个Prometheus服务器都是独立的，不依赖于网络存储或其他远程服务。当你的基础设施的其他部分损坏时，你可以依赖他，并且你无需设置大量基础设施即可使用</p>
</li>
<li><p><strong>不合适场景</strong>：你需要100%准确性，例如按请求计费。这时候Prometheus就不太适合，你最好使用其他系统来收集和分析数据以进行计费。</p>
</li>
</ul>
<h3 id="3-数据模型"><a href="#3-数据模型" class="headerlink" title="3. 数据模型"></a>3. 数据模型</h3><p>因为监控数量极大，所以使用了时间序列数据存储（就是带时间戳和值的）</p>
<ul>
<li>Prometheus本地存储：</li>
</ul>
<p>Prometheus的本地存储被称为 Prometheus TSDB。TSDB的设计核心有两个：block和WAL，而block又包含chunk、index、meta.json、tombstones。</p>
<p>TSDB将存储的监控数据按照时间分隔成block，block大小并不固定，按照设定的步长倍数递增。随着数据量的不断增长，TSDB会将小的block合并成大的block，这样不仅可以减少数据存储，还可以减少内存中的block个数，便于对数据进行索引。</p>
<p>每个block都有全局唯一的名称，通过ULID（Universally Unique Lexicograpphically Sortable Indetifier，全局字典可排序ID）原理生成，可以通过block的文件名确定这个block的创建时间，从而很方便的按照时间对block排序。对时序数据库的查询通常会涉及到连续的很多块，这种通过命名便可以排序的设计非常简便。</p>
<p>WAL（Write-Ahead Logging，预写日志）是关系型数据库中利用日志来实现事务性和持久性的一种技术，即在进行某个操作之前先将这件事情记录下来，以便之后数据进行回滚、重试等操作并保证数据的可靠性。Prometheus为了防止丢失暂存在内存中还未被写入磁盘的监控数据，引入了WAL机制。</p>
<p>按照每种对象设定的采集周期，Prometheus会将周期性采集的监控数据通过Add接口添加到head block中，但这些数据没有被持久化，TSDB通过WAL将提交的数据先保存到磁盘中，在TSDB宕机重启后，会首先启动多协程读取WAL，从而恢复之前的状态。</p>
<ul>
<li><strong>Prometheus 数据模型：</strong></li>
</ul>
<p>Prometheus 将数据存储为时间序列，其中包括称为标签的键值对、时间戳和最后的值：</p>
<p>表示法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;metric_name&gt;[&#123;&lt;label_1=“value_1”&gt;,&lt;label_N=“value_N”&gt;&#125;]&lt;datapoint_numercial_value&gt;</span><br></pre></td></tr></table></figure>

<h3 id="4-指标"><a href="#4-指标" class="headerlink" title="4. 指标"></a>4. 指标</h3><ul>
<li><p>Counter：Prometheus实例接收的数据包总数<strong>（一直增）</strong></p>
</li>
<li><p>Gauge：测量是一种度量，他在收集时对给定的测量进行快照，可以增加或减少（例如温度、磁盘空间、内存使用量）</p>
</li>
<li><p>Histogram：常常用于观察，一个Histogram包含下列值的合并：【某时间段内的百分比或者请求数量有多少】</p>
</li>
</ul>
<h3 id="5-指标的摘要和聚合"><a href="#5-指标的摘要和聚合" class="headerlink" title="5. 指标的摘要和聚合"></a>5. 指标的摘要和聚合</h3><p>指标摘要：通常来说。单个指标对我们来说价值很小，往往需要联合并可视化多个指标，这其中需要一些数学变换，例如我们可能会统计函数应用于指标或指标组，常见函数有：计数、求和、平均值、中间数、百分位数、标准差、变化率等等</p>
<ul>
<li>指标聚合：就是能看到来自多个源的指标的聚合视图</li>
</ul>
<h3 id="6-NodeExporter部署"><a href="#6-NodeExporter部署" class="headerlink" title="6. NodeExporter部署"></a>6. NodeExporter部署</h3><p>Prometheus使用exporter工具来暴露主机和应用程序上的指标。有很多种类型的exporter。</p>
<h3 id="7-cAdvisor监控Docker容器"><a href="#7-cAdvisor监控Docker容器" class="headerlink" title="7. cAdvisor监控Docker容器"></a>7. cAdvisor监控Docker容器</h3><p>cAdvisor（Constainer Advisor）是由谷歌开发的一个项目，让从正在运行的容器手机、聚合、分析和导出数据。可用的数据涵盖了几乎所有你可能需要的东西，从内存限制到GPU指标</p>
<ul>
<li><p>cAdvisor 并不绑定到 Docker 容器，但它通常作为一个容器部署，从容器守护进程和 Linux cgroups 收集数据，是容器的发现透明且完全自动化。</p>
</li>
<li><p>除了以 Prometheus 格式公开指标之外，cAdvisor 还提供了一个有用的 web界面，允许即使可视化主机及其容器的状态</p>
</li>
</ul>
<h3 id="8-捕获目标生命周期"><a href="#8-捕获目标生命周期" class="headerlink" title="8. 捕获目标生命周期"></a>8. 捕获目标生命周期</h3><p>服务发现-&gt;配置-&gt;重新标记（relable_configs）-&gt; 抓取 -&gt; metrics_relable_configs</p>
<h3 id="9-PromQL查询语言"><a href="#9-PromQL查询语言" class="headerlink" title="9. PromQL查询语言"></a>9. PromQL查询语言</h3><p>选择器及标签匹配器：</p>
<p><strong>（1）选择器</strong></p>
<p>Prometheus被设计用来处理成千上万的时间序列、根据标签的组合，咩哥指标名称可以有几个不同的时间序列；当来自不同的工作的类型名称的指标混合在一起时，查询正确的数据可能看起来比较困难。所以在Prometheus中，选择器指的是一组标签匹配器、度量名称也包含在这个定义中，因为从技术上讲，他的内容表示也是一个标签，尽管是一个特殊的标签：name。</p>
<p>选择器中的每个标签名称&#x2F;值对称为标签匹配器，多个匹配器可用于进一步筛选选择器匹配的时间序列。标签匹配器用花括号括起来。如果不需要匹配器，可以省略花括号。选择器可以返回及时或范围向量</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//例如：$ prometheus_build_info&#123;version=&quot;2.17.0&quot;&#125;</span><br></pre></td></tr></table></figure>

<p><strong>（2）标签匹配器</strong></p>
<p>标签匹配器用于将查询搜索限制为特定的一组标签值。下面将使用node_cpu_secends_total metric来阐述标签匹配的操作，匹配的操作符有&#x3D;、!&#x3D;、&#x3D;和! 如果没有任何匹配的规范。仅此度量就会返回一个包含度量名称的所有可用时间序列的及时向量。以及所有的CPU核心数（cpu&#x3D;“0”，cpu&#x3D;“1”）和CPU的型号（mode&#x3D;“idle”，mode&#x3D;“iowait”，mode&#x3D;“irq”，mode&#x3D;“nice”，mode&#x3D;“softirq”，mode&#x3D;“steal”，mode&#x3D;“user”，mode&#x3D;“system”）</p>
<p><strong>（3）范围、偏移、子查询</strong></p>
<p>范围向量：如果要定义一个范围向量选择查询，你必须设置一个及时向量选择器和使用[]追加一个范围。</p>
<p>偏移量的修饰符：offset的修饰符查询过去的数据，也就是说可双选择相对于当前时间的多长时间以前</p>
<p>子查询【道理类似于 MySQL中】</p>
<p><strong>（4）PromQL操作符</strong></p>
<p>向量匹配：有one-to-one、many-to-one、one-to-many【其实就类似于mysql的左右外连接】</p>
<p><strong>（5）PromQL函数</strong></p>
<p><code>lable_join()</code>和<code>label_replace()</code>这些函数用于操作标签——他们允许您将标签连接到其他标签，提取标签值的一部分，甚至删除标签（尽管使用标准的聚合操作更容易、更符合人体工程学）。在这两个函数中，如果定义的目标标签是一个新的，它将被添加到标签集；如果他是一个现有的标签，它将被取代。【也就是说，如果该语句满足什么条件的话，机会产生相对应的结果】</p>
<p><code>predict_linear（）</code>函数可以预测时间序列v在t秒后的值，它基于简单线性回归的方式，对时间窗口内的样本数据进行统计，从而可以对时间序列的变化趋势作出预测。该函数的返回结果不带有度量指标，只有标签列表。</p>
<p>rate()和irate()函数：</p>
<p>sort()和sort_desc()</p>
<h3 id="10-计算CPU的使用率"><a href="#10-计算CPU的使用率" class="headerlink" title="10. 计算CPU的使用率"></a>10. 计算CPU的使用率</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//例子：avg(irate(node_cpu_seconds_total&#123;job=&quot;node&quot;&#125;[5m] by (instance) * 100))</span><br></pre></td></tr></table></figure>

<h3 id="11-计算CPU负载（饱和度）"><a href="#11-计算CPU负载（饱和度）" class="headerlink" title="11. 计算CPU负载（饱和度）"></a>11. 计算CPU负载（饱和度）</h3><p>在主机上获得CPU饱和的一种方法是跟踪平均负载，实际上它是将主机上的CPU数量考虑在内的一段时间内的平均运行队列长度。平均负载少于CPU的数量通常是正常的，长时间内超过该数字的平均值则表示CPU已经饱和。</p>
<p>要查看主机的平均负载，可以使用node_load*指标，他们显示1分钟、5分钟和15分钟的平均负载。比如使用1分钟的平均负载：node_load1</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//计算主机上的CPU数量，可以使用count聚合实现</span><br><span class="line">count by (instance)(node_cpu_seconds_total&#123;mode=&quot;idle&quot;&#125;)</span><br><span class="line">//接下来将此计算与node_load指标结合起来</span><br><span class="line">node_load1 &gt; on (instance) 2 * count by (instance)(node_cpu_seconds_total&#123;mode=&quot;idle&quot;&#125;)</span><br><span class="line">//这里我们查询的是1分钟的负载超过主机CPU数量的两倍的结果</span><br></pre></td></tr></table></figure>

<h3 id="12-计算内存使用率"><a href="#12-计算内存使用率" class="headerlink" title="12. 计算内存使用率"></a>12. 计算内存使用率</h3><p>Node Exporter的内存指标按内存的类型和使用率进行细分。可以在<code>node_memory</code>为前缀的指标列表找到他们。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//查看主机上的总内存</span><br><span class="line">node_memory_MemTotal_bytes</span><br><span class="line">//主机上的可用内存</span><br><span class="line">node_memory_MemFree_bytes</span><br><span class="line">//缓冲缓存中的内存</span><br><span class="line">node_memory_Buffers_bytes</span><br><span class="line">//页面缓存中的内存</span><br><span class="line">node_memory_Cached_bytes</span><br><span class="line">//通过以上的就可以计算出内存使用率</span><br><span class="line">（总内存-可用内存-缓冲缓存中的内存-页面缓冲中的内存）/总内存 * 100</span><br></pre></td></tr></table></figure>

<h3 id="13-计算内存饱和度"><a href="#13-计算内存饱和度" class="headerlink" title="13. 计算内存饱和度"></a>13. 计算内存饱和度</h3><p>还可以通过检查内存和磁盘的读写来监控内存饱和度，可以使用从&#x2F;proc&#x2F;vmstat收集的两个Node Exporter指标</p>
<ul>
<li><p>node_vmstat_pswpin：系统每秒从磁盘读到内存的字节数</p>
</li>
<li><p>node_vmstat_pswpout：系统每秒从内存写到磁盘的字节数</p>
</li>
<li><p>两者都是自上次启动以来的字节数，以KB为单位</p>
</li>
<li><p>为了获得饱和度指标，对每个指标计算每一分钟的速率，将两个速率相加，然后乘以1024获得字节数</p>
</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1024 * sum by (instance) ((rate(node_vmstat_pgpgin[1m]) + rate(node_vmstat_pgpgout[1m])))</span><br></pre></td></tr></table></figure>

<p>然后，可以对此设置图形化展示或者警报，以识别行为不当的应用程序主机。</p>
<h3 id="14-磁盘使用率"><a href="#14-磁盘使用率" class="headerlink" title="14. 磁盘使用率"></a>14. 磁盘使用率</h3><p>对于磁盘，只测量磁盘使用情况而不是使用率、饱和或错误。这是因为在大多数情况下，它是对可视化和警报最有用的数据。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//node_filesystem_size_bytes指标显示了被监控的每个文件系统挂载的大小。node_filesystem_size_bytes</span><br></pre></td></tr></table></figure>

<p>可以使用与内存指标类似的查询来生成在主机上使用的磁盘空间百分比。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(node_filesystem_size_bytes&#123;mountpoint=&quot;/&quot;&#125; - node_filesystem_free_bytes&#123;mountpoint=&quot;/&quot;&#125;) / node_filesystem_size_bytes&#123;mountpoint=&quot;/&quot;&#125; * 100</span><br></pre></td></tr></table></figure>

<p>与内存指标不同，在每个主机上的每个挂载点都有文件系统指标。所以添加了mountpoint标签，特别是跟文件系统”&#x2F;“挂载。这将在每台主机上返回该文件系统磁盘使用指标。</p>
<p>如果想要或需要监控特定挂载点，那么我们可以为其添加查询。比如要监控&#x2F;data挂载点，可以使用。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(node_filesystem_size_bytes&#123;mountpoint=&quot;/data&quot;&#125; - node_filesystem_free_bytes&#123;mountpoint=&quot;/data&quot;&#125;) / node_filesystem_size_bytes&#123;mountpoint=&quot;/data&quot;&#125; * 100</span><br></pre></td></tr></table></figure>

<p>或者可以使用正则表达式匹配多个挂载点</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(node_filesystem_size_bytes&#123;mountpoint=&quot;/|/run&quot;&#125; - node_filesystem_free_bytes&#123;mountpoint=&quot;/|/run&quot;&#125;) / node_filesystem_size_bytes&#123;mountpoint=&quot;/|/run&quot;&#125; * 100</span><br></pre></td></tr></table></figure>

<p>可以使用 predict_linear 函数来构建在未来什么时候会耗尽磁盘空间</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//预测四小时之后磁盘空间会不会爆满</span><br><span class="line">predict_linear(node_filesystem_free_bytes&#123;mountpoint=&quot;/&quot;&#125;[1h], 4* 3600) &lt; 0</span><br></pre></td></tr></table></figure>

<p>上面是指定跟文件系统，还可以通过制定作业名称或使用正则表达式来选择所有文件系统</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">predict_linear(node_filesystem_free_bytes&#123;job=&quot;node&quot;&#125;[1h], 4* 3600) &lt; 0</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>技术咖</category>
      </categories>
      <tags>
        <tag>技术咖</tag>
      </tags>
  </entry>
  <entry>
    <title>grafana启用未签名插件</title>
    <url>/2024/01/26/grafana%E5%90%AF%E7%94%A8%E6%9C%AA%E7%AD%BE%E5%90%8D%E6%8F%92%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="编辑配置文件grafana-ini"><a href="#编辑配置文件grafana-ini" class="headerlink" title="编辑配置文件grafana.ini"></a>编辑配置文件grafana.ini</h3><pre><code class="bash">[plugins]
enable_alpha = true
# 如果你想测试还没有准备好普遍使用的 alpha 插件，设置为 true。默认是假的。
allow_loading_unsigned_plugins = 插件名
# 输入一个逗号分隔的插件标识符列表，以识别要加载的插件，即使它们是无符号的。修改签名的插件永远不会被加载。
plugin_admin_enabled = true
# 只对 Grafana 管理员开放，默认情况下插件管理应用设置为 false。设置为 true 以启用应用程序。
plugin_admin_external_manage_enabled = true
# 如果您想启用外部插件管理，请设置为 true。默认是假的。这只适用于 Grafana Cloud 用户。
</code></pre>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>k8s中pod监控数据在grafana中展示</title>
    <url>/2024/01/26/k8s%E4%B8%ADpod%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE%E5%9C%A8grafana%E4%B8%AD%E5%B1%95%E7%A4%BA/</url>
    <content><![CDATA[<p><strong>实现目标</strong>：将kubesphere中运行的pod监控数据在grafana平台进行展示。</p>
<p><strong>前提说明</strong>：需要在k8s每个集群中内置的prometheus配置中将pod指标数据远程写入到victoriametrics持久化数据库中。</p>
<p><strong>实现效果如下</strong>：</p>
<p><img src="/images/1706257621-3e6f1812d1aa2841145d91c011c5d7b2.png"></p>
<p><img src="/images/1706257621-0688a6f7fcfe35e0b66da650417fdfd5.png"></p>
<p><img src="/images/1706257621-d266652532cbeb01e6d4899f19a68976.png"></p>
<p>CPU使用量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">round(<span class="built_in">sum</span> by (namespace, pod) (irate(container_cpu_usage_seconds_total&#123;job=<span class="string">&quot;kubelet&quot;</span>, pod!=<span class="string">&quot;&quot;</span>, image!=<span class="string">&quot;&quot;</span>&#125;[5m])) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~<span class="string">&quot;<span class="variable">$scode</span>&quot;</span>&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~<span class="string">&quot;<span class="variable">$pod</span>&quot;</span>&#125;, 0.001)*1000</span><br></pre></td></tr></table></figure>

<p>内存使用量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sum</span> by (namespace, pod) (container_memory_working_set_bytes&#123;job=<span class="string">&quot;kubelet&quot;</span>, pod!=<span class="string">&quot;&quot;</span>, image!=<span class="string">&quot;&quot;</span>&#125;) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~<span class="string">&quot;<span class="variable">$scode</span>&quot;</span>&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~<span class="string">&quot;<span class="variable">$pod</span>&quot;</span>&#125;</span><br></pre></td></tr></table></figure>

<p>网络流出速率：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">sum</span> by (namespace, pod) (irate(container_network_transmit_bytes_total&#123;pod!=<span class="string">&quot;&quot;</span>, interface!~<span class="string">&quot;^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)&quot;</span>, job=<span class="string">&quot;kubelet&quot;</span>&#125;[5m])) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~<span class="string">&quot;<span class="variable">$scode</span>&quot;</span>&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~<span class="string">&quot;<span class="variable">$pod</span>&quot;</span>&#125;)*8</span><br></pre></td></tr></table></figure>

<p>网络流入速率：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">(<span class="built_in">sum</span> by (namespace, pod) (irate(container_network_receive_bytes_total&#123;pod!=<span class="string">&quot;&quot;</span>, interface!~<span class="string">&quot;^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)&quot;</span>, job=<span class="string">&quot;kubelet&quot;</span>&#125;[5m])) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~<span class="string">&quot;<span class="variable">$scode</span>&quot;</span>&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~<span class="string">&quot;<span class="variable">$pod</span>&quot;</span>&#125;)*8</span><br></pre></td></tr></table></figure>

<p><strong>dashboard看板</strong>：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;builtIn&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;datasource&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;grafana&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;enable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;iconColor&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rgba(0, 211, 255, 1)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Annotations &amp; Alerts&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;target&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;limit&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;matchAny&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dashboard&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dashboard&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;editable&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;fiscalYearStartMonth&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;gnetId&quot;</span><span class="punctuation">:</span> <span class="number">9962</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;graphTooltip&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">682</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;links&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;liveNow&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;panels&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;collapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">14</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;panels&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pod【$pod】监控详情&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;row&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;scheme&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;round(sum by (namespace, pod) (irate(container_cpu_usage_seconds_total&#123;job=\&quot;kubelet\&quot;, pod!=\&quot;\&quot;, image!=\&quot;\&quot;&#125;[5m])) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~\&quot;$scode\&quot;&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~\&quot;$pod\&quot;&#125;, 0.001)*1000&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;pod&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;CPU使用量&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;scheme&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bytes&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">1</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum by (namespace, pod) (container_memory_working_set_bytes&#123;job=\&quot;kubelet\&quot;, pod!=\&quot;\&quot;, image!=\&quot;\&quot;&#125;) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~\&quot;$scode\&quot;&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~\&quot;$pod\&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;pod&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;内存使用量&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bars&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hue&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;binBps&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(sum by (namespace, pod) (irate(container_network_transmit_bytes_total&#123;pod!=\&quot;\&quot;, interface!~\&quot;^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)\&quot;, job=\&quot;kubelet\&quot;&#125;[5m])) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~\&quot;$scode\&quot;&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~\&quot;$pod\&quot;&#125;)*8&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;pod&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;网络流出速率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bars&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">100</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;hue&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;binBps&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">9</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">11</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;(sum by (namespace, pod) (irate(container_network_receive_bytes_total&#123;pod!=\&quot;\&quot;, interface!~\&quot;^(cali.+|tunl.+|dummy.+|kube.+|flannel.+|cni.+|docker.+|veth.+|lo.*)\&quot;, job=\&quot;kubelet\&quot;&#125;[5m])) * on (namespace, pod) group_left(owner_kind, owner_name) kube_pod_owner&#123;namespace=~\&quot;$scode\&quot;&#125; * on (namespace, pod) group_left(node) kube_pod_info&#123;pod=~\&quot;$pod\&quot;&#125;)*8&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;interval&quot;</span><span class="punctuation">:</span> <span class="string">&quot;60&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;pod&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;网络流入速率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;transformations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;collapsed&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">17</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;panels&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群【$clustername】监控详情&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;row&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">19</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lcd&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minVizHeight&quot;</span><span class="punctuation">:</span> <span class="number">10</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;minVizWidth&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;orientation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;horizontal&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reduceOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;lastNotNull&quot;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;showUnfilled&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;round(:node_cpu_utilisation:avg1m&#123;clusterName=~\&quot;$clustername\&quot;&#125; * sum(node:node_num_cpu:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;), 0.001)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用量&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_num_cpu:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;) - round(:node_cpu_utilisation:avg1m&#123;clusterName=~\&quot;$clustername\&quot;&#125; * sum(node:node_num_cpu:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;), 0.001)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;剩余量&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_num_cpu:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;总量&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群CPU使用量/总量&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bargauge&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;scheme&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;percentunit&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">18</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;:node_cpu_utilisation:avg1m&#123;clusterName=~\&quot;$clustername\&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;clusterName&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群CPU使用率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;short&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">21</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;colorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;graphMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;area&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;justifyMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;orientation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;reduceOptions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">            <span class="string">&quot;lastNotNull&quot;</span></span><br><span class="line">          <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;fields&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;values&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;textMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;pluginVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;9.1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_memory_bytes_total:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;) - sum(node:node_memory_bytes_available:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用量&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_memory_bytes_available:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;剩余量&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_memory_bytes_total:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;总量&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群内存剩余量/总量&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;stat&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;scheme&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;percentunit&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">9</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">15</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;:node_memory_utilisation:&#123;clusterName=~\&quot;$clustername\&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;clusterName&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群内存使用率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;binBps&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">26</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">22</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_net_bytes_transmitted:sum_irate&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;clusterName&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群网络流出速率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;binBps&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">12</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">26</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">23</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:node_net_bytes_received:sum_irate&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&#123;&#123;clusterName&#125;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群网络流入速率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;iops&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">34</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">24</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:data_volume_iops_reads:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;read_iops&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:data_volume_iops_writes:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;write_iops&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群磁盘读/写iops&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;palette-classic&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;binBps&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">34</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">25</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:data_volume_throughput_bytes_read:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;读速度&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sum(node:data_volume_throughput_bytes_written:sum&#123;clusterName=~\&quot;$clustername\&quot;&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;写速度&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群磁盘读/写速度&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fieldConfig&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;defaults&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;continuous-GrYlRd&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;custom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;axisCenteredZero&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisColorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisLabel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;axisPlacement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;barAlignment&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;drawStyle&quot;</span><span class="punctuation">:</span> <span class="string">&quot;line&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;fillOpacity&quot;</span><span class="punctuation">:</span> <span class="number">20</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;gradientMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;scheme&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;hideFrom&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;viz&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineInterpolation&quot;</span><span class="punctuation">:</span> <span class="string">&quot;smooth&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;lineWidth&quot;</span><span class="punctuation">:</span> <span class="number">3</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;pointSize&quot;</span><span class="punctuation">:</span> <span class="number">5</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scaleDistribution&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;linear&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;showPoints&quot;</span><span class="punctuation">:</span> <span class="string">&quot;auto&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;spanNulls&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stacking&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;thresholdsStyle&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">              <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;off&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;mappings&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;thresholds&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;absolute&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;steps&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;green&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">null</span></span></span><br><span class="line">              <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">              <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;color&quot;</span><span class="punctuation">:</span> <span class="string">&quot;red&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="number">80</span></span><br><span class="line">              <span class="punctuation">&#125;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;unit&quot;</span><span class="punctuation">:</span> <span class="string">&quot;percentunit&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;overrides&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;gridPos&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;h&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;w&quot;</span><span class="punctuation">:</span> <span class="number">8</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;x&quot;</span><span class="punctuation">:</span> <span class="number">16</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;y&quot;</span><span class="punctuation">:</span> <span class="number">34</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;id&quot;</span><span class="punctuation">:</span> <span class="number">26</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;legend&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;calcs&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;displayMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;list&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;placement&quot;</span><span class="punctuation">:</span> <span class="string">&quot;bottom&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;showLegend&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tooltip&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;mode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;single&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;targets&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">          <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;editorMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;expr&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cluster:disk_utilization:ratio&#123;clusterName=~\&quot;$clustername\&quot;&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;legendFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;使用率&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;range&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;A&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">      <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群磁盘空间使用率&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;timeseries&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;refresh&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;schemaVersion&quot;</span><span class="punctuation">:</span> <span class="number">37</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;dark&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;tags&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;openpaas&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;templating&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;list&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;selected&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s01129&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s01129&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;definition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label_values(container_cpu_usage_seconds_total,namespace)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;includeAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;应用S码&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;multi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;scode&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label_values(container_cpu_usage_seconds_total,namespace)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;StandardVariableQuery&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;refresh&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/^$sma/&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skipUrlSync&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagValuesQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagsQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;query&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;useTags&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;selected&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prod-jifang&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prod-jifang&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;definition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label_values(container_cpu_usage_seconds_total&#123;namespace=~\&quot;$scode\&quot;&#125;,clusterName)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;includeAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;集群名称&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;multi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clustername&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label_values(container_cpu_usage_seconds_total&#123;namespace=~\&quot;$scode\&quot;&#125;,clusterName)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;StandardVariableQuery&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;refresh&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skipUrlSync&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagValuesQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagsQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;query&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;useTags&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;selected&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;All&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$__all&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prometheus&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;LIPuegYMk&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;definition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label_values(container_cpu_usage_seconds_total&#123;namespace=~\&quot;$scode\&quot;,clusterName=~\&quot;$clustername\&quot;&#125;,pod)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;includeAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pod&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;multi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;pod&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;label_values(container_cpu_usage_seconds_total&#123;namespace=~\&quot;$scode\&quot;,clusterName=~\&quot;$clustername\&quot;&#125;,pod)&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;refId&quot;</span><span class="punctuation">:</span> <span class="string">&quot;StandardVariableQuery&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;refresh&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skipUrlSync&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagValuesQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;tagsQuery&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;query&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;useTags&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;current&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;selected&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s01129&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;s01129&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;datasource&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;mysql&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;oxdfGDc7z&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;definition&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select LOWER(a.product_code) from alm_grafana.alm_product_info a ,alm_grafana.product_module_role b where a.id = b.product_id and (b.user_code = \&quot;$&#123;__user.login&#125;\&quot; or a.business_manager_ucode = \&quot;$&#123;__user.login&#125;\&quot; or a.product_manager_ucode = \&quot;$&#123;__user.login&#125;\&quot;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;hide&quot;</span><span class="punctuation">:</span> <span class="number">2</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;includeAll&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;multi&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sma&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;query&quot;</span><span class="punctuation">:</span> <span class="string">&quot;select LOWER(a.product_code) from alm_grafana.alm_product_info a ,alm_grafana.product_module_role b where a.id = b.product_id and (b.user_code = \&quot;$&#123;__user.login&#125;\&quot; or a.business_manager_ucode = \&quot;$&#123;__user.login&#125;\&quot; or a.product_manager_ucode = \&quot;$&#123;__user.login&#125;\&quot;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;refresh&quot;</span><span class="punctuation">:</span> <span class="number">1</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;regex&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;skipUrlSync&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;sort&quot;</span><span class="punctuation">:</span> <span class="number">0</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;query&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;time&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now-15m&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;now&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timepicker&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;refresh_intervals&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;5s&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;10s&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;30s&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;1m&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;5m&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;15m&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;30m&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;1h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;2h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;1d&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;time_options&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="string">&quot;5m&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;15m&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;1h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;6h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;12h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;24h&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;2d&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;7d&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="string">&quot;30d&quot;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;timezone&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;title&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Pod监控看板&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;uid&quot;</span><span class="punctuation">:</span> <span class="string">&quot;qtmUwG-Vz&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">99</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;weekStart&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>K8s</category>
      </categories>
      <tags>
        <tag>K8s</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix自定义飞书webhook告警媒介</title>
    <url>/2024/01/26/Zabbix%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A3%9E%E4%B9%A6webhook%E5%91%8A%E8%AD%A6%E5%AA%92%E4%BB%8B/</url>
    <content><![CDATA[<p><strong>说明：适用于6.0及以上版本，低版本可能会有问题。</strong></p>
<p><img src="/images/1706258160-db7e2cb50d98f10afab9eec8de4f83ba.png"></p>
<h5 id="参数如下："><a href="#参数如下：" class="headerlink" title="参数如下："></a>参数如下：</h5><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><strong>名称</strong></td>
<td><strong>值</strong></td>
</tr>
<tr>
<td>EVENT.DURATION</td>
<td>{EVENT.DURATION}</td>
</tr>
<tr>
<td>EVENTDATE</td>
<td>{EVENT.DATE}</td>
</tr>
<tr>
<td>EVENTNAME</td>
<td>{EVENT.NAME}</td>
</tr>
<tr>
<td>EVENTRECOVERYDATE</td>
<td>{EVENT.RECOVERY.DATE}</td>
</tr>
<tr>
<td>EVENTRECOVERYTIME</td>
<td>{EVENT.RECOVERY.TIME}</td>
</tr>
<tr>
<td>EVENTSTATUS</td>
<td>{EVENT.STATUS}</td>
</tr>
<tr>
<td>EVENTTIME</td>
<td>{EVENT.TIME}</td>
</tr>
<tr>
<td>Host</td>
<td>{HOST.NAME}</td>
</tr>
<tr>
<td>message</td>
<td>{ALERT.MESSAGE}</td>
</tr>
<tr>
<td>Operationaldata</td>
<td>{EVENT.OPDATA}</td>
</tr>
<tr>
<td>problemID</td>
<td>{EVENT.ID}</td>
</tr>
<tr>
<td>Severity</td>
<td>{EVENT.SEVERITY}</td>
</tr>
<tr>
<td>URL</td>
<td>飞书webhook地址</td>
</tr>
</tbody></table>
<h5 id="JavaScript内容如下："><a href="#JavaScript内容如下：" class="headerlink" title="JavaScript内容如下："></a>JavaScript内容如下：</h5><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">           <span class="keyword">var</span> sourceData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(value),</span><br><span class="line">               req = <span class="keyword">new</span> <span class="title class_">HttpRequest</span>(),</span><br><span class="line">               response;</span><br><span class="line">       </span><br><span class="line">           <span class="keyword">if</span> (sourceData.<span class="property">HTTPProxy</span>) &#123;</span><br><span class="line">               req.<span class="title function_">setProxy</span>(sourceData.<span class="property">HTTPProxy</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">           req.<span class="title function_">addHeader</span>(<span class="string">&#x27;Content-Type: application/json&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> ip = sourceData.<span class="property">Host</span>;</span><br><span class="line"><span class="keyword">const</span> type = <span class="string">&#x27;NET&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> level = sourceData.<span class="property">Severity</span>;</span><br><span class="line"><span class="keyword">const</span> description = sourceData.<span class="property">EVENTNAME</span>; </span><br><span class="line"><span class="keyword">const</span> startTime = sourceData.<span class="property">EVENTDATE</span> + <span class="string">&#x27; &#x27;</span> + sourceData.<span class="property">EVENTTIME</span>;</span><br><span class="line"><span class="keyword">const</span> source = sourceData.<span class="property">problemID</span>;</span><br><span class="line"><span class="keyword">const</span> endTime = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> color = <span class="string">&#x27;red&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">ESTATUS</span> = <span class="string">&#x27;告警&#x27;</span></span><br><span class="line"><span class="keyword">if</span> (sourceData.<span class="property">EVENTSTATUS</span> !== <span class="string">&#x27;PROBLEM&#x27;</span>) &#123;</span><br><span class="line">    endTime = sourceData.<span class="property">EVENTRECOVERYDATE</span> + <span class="string">&#x27; &#x27;</span> + sourceData.<span class="property">EVENTRECOVERYTIME</span>;</span><br><span class="line">    color = <span class="string">&#x27;green&#x27;</span>;</span><br><span class="line">    <span class="variable constant_">ESTATUS</span> = <span class="string">&#x27;恢复&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> template = <span class="string">&#x27;告警IP:&#x27;</span>+ip+<span class="string">&#x27;\n告警类型:&#x27;</span>+type+<span class="string">&#x27;\n告警级别:&#x27;</span>+level+<span class="string">&#x27;\n告警描述:&#x27;</span>+description+<span class="string">&#x27;\n开始时间:&#x27;</span>+startTime+<span class="string">&#x27;\n告警ID:&#x27;</span>+source+<span class="string">&#x27;\n结束时间:&#x27;</span>+endTime;</span><br><span class="line"> </span><br><span class="line">           <span class="keyword">var</span> targetData = &#123;</span><br><span class="line">               <span class="string">&quot;msg_type&quot;</span>: <span class="string">&quot;interactive&quot;</span>,</span><br><span class="line">               <span class="string">&quot;card&quot;</span>: &#123;</span><br><span class="line">                 <span class="string">&quot;config&quot;</span>: &#123;</span><br><span class="line">                   <span class="string">&quot;wide_screen_mode&quot;</span>: <span class="literal">true</span></span><br><span class="line">                 &#125;,</span><br><span class="line">                 <span class="string">&quot;elements&quot;</span>: [</span><br><span class="line">                   &#123;</span><br><span class="line">                     <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;div&quot;</span>,</span><br><span class="line">                     <span class="string">&quot;text&quot;</span>: &#123;</span><br><span class="line">                          <span class="string">&quot;content&quot;</span>: template ,</span><br><span class="line">                          <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;lark_md&quot;</span></span><br><span class="line">                             &#125;</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line">                 ],</span><br><span class="line">                 <span class="string">&quot;header&quot;</span>: &#123;</span><br><span class="line">                   <span class="string">&quot;template&quot;</span>: color ,</span><br><span class="line">                   <span class="string">&quot;title&quot;</span>: &#123;</span><br><span class="line">                     <span class="string">&quot;content&quot;</span>: <span class="string">&quot;【&quot;</span>+<span class="variable constant_">ESTATUS</span>+<span class="string">&quot;】&quot;</span>+sourceData.<span class="property">Host</span>+<span class="string">&quot;**&quot;</span>+sourceData.<span class="property">Operationaldata</span>,</span><br><span class="line">                     <span class="string">&quot;tag&quot;</span>: <span class="string">&quot;plain_text&quot;</span></span><br><span class="line">                   &#125;</span><br><span class="line">                 &#125;</span><br><span class="line">               &#125;&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           <span class="title class_">Zabbix</span>.<span class="title function_">log</span>(<span class="number">4</span>, <span class="string">&#x27;[ihaier  webhook ] Webhook request with value=&#x27;</span> + value);</span><br><span class="line">       </span><br><span class="line">           response = req.<span class="title function_">post</span>(sourceData.<span class="property">URL</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(targetData));</span><br><span class="line">           <span class="title class_">Zabbix</span>.<span class="title function_">log</span>(<span class="number">4</span>, <span class="string">&#x27;[ihaier    webhook ] Responded with code: &#x27;</span> + req.<span class="title function_">getStatus</span>() + <span class="string">&#x27;. Response: &#x27;</span> + response);</span><br><span class="line">       </span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               response = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(response);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">               <span class="keyword">if</span> (req.<span class="title function_">getStatus</span>() &lt; <span class="number">200</span> || req.<span class="title function_">getStatus</span>() &gt;= <span class="number">300</span>) &#123;</span><br><span class="line">                   <span class="keyword">throw</span> <span class="string">&#x27;Request failed with status code &#x27;</span> + req.<span class="title function_">getStatus</span>();</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> &#123;</span><br><span class="line">                   <span class="keyword">throw</span> <span class="string">&#x27;Request success, but response parsing failed.&#x27;</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       </span><br><span class="line">           <span class="keyword">if</span> (req.<span class="title function_">getStatus</span>() !== <span class="number">200</span> || response.<span class="property">code</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">               <span class="keyword">throw</span> response.<span class="property">error</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       </span><br><span class="line">           <span class="keyword">return</span> <span class="string">&#x27;OK&#x27;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">catch</span> (error) &#123;</span><br><span class="line"></span><br><span class="line">           <span class="title class_">Zabbix</span>.<span class="title function_">log</span>(<span class="number">3</span>, <span class="string">&#x27;[ Jira webhook ] Sending failed. Error: &#x27;</span> + error);</span><br><span class="line">       </span><br><span class="line">           <span class="keyword">throw</span> <span class="string">&#x27;Failed with error: &#x27;</span> + error;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>

<p>测试如下：</p>
<p><img src="/images/1706258160-784df2f9363cdc5f0f1e7c3d06f26f98.png"></p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>skywalking动态配置[集成nacos/apollo/consul]</title>
    <url>/2024/01/26/skywalking%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE-%E9%9B%86%E6%88%90nacos-apollo-consul/</url>
    <content><![CDATA[<h3 id="说明：以下配置仅关于的阈值规则的动态配置，其他参数也可以进行配置。"><a href="#说明：以下配置仅关于的阈值规则的动态配置，其他参数也可以进行配置。" class="headerlink" title="说明：以下配置仅关于的阈值规则的动态配置，其他参数也可以进行配置。"></a>说明：以下配置仅关于的阈值规则的动态配置，其他参数也可以进行配置。</h3><h3 id="1，skywalking动态配置集成nacos"><a href="#1，skywalking动态配置集成nacos" class="headerlink" title="1，skywalking动态配置集成nacos"></a>1，skywalking动态配置集成nacos</h3><p>        编辑application.yml</p>
<p><img src="/images/1706258617-6978dc1fa2c9dcb754e308cbdc3f24ac.png"></p>
<p>nacos配置参数如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nacos:</span><br><span class="line">  <span class="comment"># Nacos Server Host</span></span><br><span class="line">  serverAddr: 10.10.5.145</span><br><span class="line">  <span class="comment"># Nacos Server Port</span></span><br><span class="line">  port: 8848</span><br><span class="line">  <span class="comment"># Nacos Configuration Group</span></span><br><span class="line">  group: <span class="string">&#x27;skywalking&#x27;</span></span><br><span class="line">  <span class="comment"># Nacos Configuration namespace</span></span><br><span class="line">  namespace: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="comment"># Unit seconds, sync period. Default fetch every 60 seconds.</span></span><br><span class="line">  period: 60</span><br><span class="line">  <span class="comment"># Nacos auth username</span></span><br><span class="line">  username: nacos</span><br><span class="line">  password: nacos1@345</span><br><span class="line">  <span class="comment"># Nacos auth accessKey</span></span><br><span class="line">  accessKey: <span class="variable">$&#123;SW_CONFIG_NACOS_ACCESSKEY:&quot;&quot;&#125;</span></span><br><span class="line">  secretKey: <span class="variable">$&#123;SW_CONFIG_NACOS_SECRETKEY:&quot;&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<p>nacos配置如下：</p>
<p><img src="/images/1706258617-da9ba7f950fcc6f7e5b06d8311eba5de.png"></p>
<p><img src="/images/1706258617-792fe7f29829a0123ba7db73d207bac1.png"></p>
<h3 id="2，skywalking动态配置集成apollo"><a href="#2，skywalking动态配置集成apollo" class="headerlink" title="2，skywalking动态配置集成apollo"></a>2，skywalking动态配置集成apollo</h3><p>        编辑application.yml</p>
<p><img src="/images/1706258617-ab66fa27e228452f9a6884a9bec60fe0.png"></p>
<p>apollo配置参数如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apollo:</span><br><span class="line">  apolloMeta: <span class="variable">$&#123;SW_CONFIG_APOLLO:http://apollo-configservice.paaska-pro.kaka.net&#125;</span></span><br><span class="line">  apolloCluster: <span class="variable">$&#123;SW_CONFIG_APOLLO_CLUSTER:hosmp-sky&#125;</span></span><br><span class="line">  apolloEnv: <span class="variable">$&#123;SW_CONFIG_APOLLO_ENV:&quot;PRO&quot;&#125;</span></span><br><span class="line">  appId: <span class="variable">$&#123;SW_CONFIG_APOLLO_APP_ID:s0888&#125;</span></span><br><span class="line">  period: <span class="variable">$&#123;SW_CONFIG_APOLLO_PERIOD:60&#125;</span></span><br></pre></td></tr></table></figure>

<p>apollo配置如下：</p>
<p><img src="/images/1706258617-f9cda9a1725ad7f38e7293c2a1c57c40.png"></p>
<p>3，skywalking动态配置集成consul</p>
<p>        编辑application.yml</p>
<p><img src="/images/1706258617-dd0c8cb499752736873daafb06bedbac.png"></p>
<p>consul配置参数如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">consul:</span><br><span class="line">  <span class="comment"># Consul host and ports, separated by comma, e.g. 1.2.3.4:8500,2.3.4.5:8500</span></span><br><span class="line">  hostAndPorts: <span class="variable">$&#123;SW_CONFIG_CONSUL_HOST_AND_PORTS:10.10.37.30:8500&#125;</span></span><br><span class="line">  <span class="comment"># Sync period in seconds. Defaults to 60 seconds.</span></span><br><span class="line">  period: <span class="variable">$&#123;SW_CONFIG_CONSUL_PERIOD:60&#125;</span></span><br><span class="line">  <span class="comment"># Consul aclToken</span></span><br><span class="line">  aclToken: <span class="variable">$&#123;SW_CONFIG_CONSUL_ACL_TOKEN:&quot;848b1dc9-aab0-40a7-8e3e-7e8b869a97ac&quot;&#125;</span></span><br></pre></td></tr></table></figure>

<p>consul配置如下： </p>
<p><img src="/images/1706258617-1ef7d2f3584075af5d7de202cab51f37.png"></p>
<p><img src="/images/1706258617-6335c0ba695cf0dce5ed2f63d4ad19d8.png"> </p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>PMM深入研究：如何自定义配置和集成到外部grafana</title>
    <url>/2024/01/26/PMM%E6%B7%B1%E5%85%A5%E7%A0%94%E7%A9%B6%EF%BC%9A%E5%A6%82%E4%BD%95%E8%87%AA%E5%AE%9A%E4%B9%89%E9%85%8D%E7%BD%AE%E5%92%8C%E9%9B%86%E6%88%90%E5%88%B0%E5%A4%96%E9%83%A8grafana/</url>
    <content><![CDATA[<h3 id="一、如何自定义配置"><a href="#一、如何自定义配置" class="headerlink" title="一、如何自定义配置"></a>一、如何自定义配置</h3><p>        PMM整个部署过程是安装ansible并执行了playbook完成的，yml配置文件会根据你添加的目标重新生成。为什么想自定义配置，是因为我想把它采集的数据通过远程写入的方式传输到外部我们的持久化数据库victoriametrics里，这样就可以统一大盘进行展示。PMM对mongodb监控以及mysql执行SQL的分析做的非常棒。但我在查阅资料实施一系列操作后仍然不成功，发现了问题，以下是整个过程。</p>
<p>        查阅到参考资料：<a href="https://www.percona.com/blog/2020/03/23/extending-pmm-prometheus-configuration/" title="Extending PMM&#39;s Prometheus Configuration">Extending PMM’s Prometheus Configuration</a></p>
<p>        PMM基于ansible自动生成运行的配置文件，我们可以基于pmm 定义好的一个基础配置提供自定义配置的扩展，配置目录文件是在</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/srv/prometheus/prometheus.base.yml，这个文件默认是不存在的，需要手动创建，格式如下：</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"></span><br><span class="line">remote_write:</span><br><span class="line"></span><br><span class="line">  - url: http://1.2.3.4:8428/api/v1/write</span><br><span class="line"></span><br><span class="line">​</span><br><span class="line">scrape_configs:</span><br><span class="line"></span><br><span class="line">  - job_name: victoria-metrics</span><br><span class="line"></span><br><span class="line">    honor_timestamps: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">    scrape_interval: 5s</span><br><span class="line"></span><br><span class="line">    scrape_timeout: 4s</span><br><span class="line"></span><br><span class="line">    metrics_path: /metrics</span><br><span class="line"></span><br><span class="line">    scheme: http</span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line"></span><br><span class="line">      - targets:</span><br><span class="line"></span><br><span class="line">          - <span class="string">&quot;1.2.3.4:8428&quot;</span></span><br><span class="line"></span><br><span class="line">        labels:</span><br><span class="line"></span><br><span class="line">          instance: pmm-server</span><br></pre></td></tr></table></figure>

<p>        他链接里说global 会保留, scrape_configs 以及 rule_files 被合并, alerting, remote_write, 以及 remote_read 设置同样被保留，但我测试remote_write如何都不能成功，其他是可以的，后来我详细阅读了说明文档及一些别人提出的问题，发现PMM已经不再内置prometheus，而是用victoriametrics替代了它，看他架构也是由vmagent替代了prometheus的数据收集功能，它每次重新生成的配置文件在 &#x2F;etc&#x2F;victoriametrics-promscrape.yml，内容如下：</p>
<p><img src="/images/1706263343-39b7cfa7eb69f7043b3a97ce937b770e.png"></p>
<p>        你可以创建 &#x2F;srv&#x2F;prometheus&#x2F;prometheus.base.yml，自定义job配置或者修改global参数，但配置remote_write是不行的，是因为vmagent的配置文件不支持这个参数，我们知道vmagent的配置文件和prometheus的配置文件是有很多不一样的地方的。</p>
<h3 id="二、集成到外部grafana"><a href="#二、集成到外部grafana" class="headerlink" title="二、集成到外部grafana"></a>二、集成到外部grafana</h3><p>        要集成到外部grafana，首先你要做的是如何将内部的victoriametrics端口暴露出来，你深入了解后，会发现它内部使用了nginx，访问都会经过nginx，所以可以在nginx配置上修改，来将victoriametrics暴露出来。我的环境是在kubesphere里创建的，如下：</p>
<p><img src="/images/1706263343-4df36335e9d85a5fe4a7c05ebd693883.png"></p>
<p><img src="/images/1706263343-fc8dcf6d129637b4fbff966a9a2073cb.png"></p>
<p><img src="/images/1706263343-386f2b6a00fa874f3a372e0916b02d43.png"></p>
<p>你需要修改nginx配置来暴露victoriametrics，像图中8080端口我就是配置的nginx用来暴露victoriametrics端口</p>
<p>修改的ng配置路径：&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;pmm.conf</p>
<p><img src="/images/1706263343-647f05108f5f2d5ce278a7f8dc246957.png"></p>
<p>加了这一段如下，你可以再添加别的将其他服务端口进行暴露：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">  server &#123;</span><br><span class="line">    listen 8080;</span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://127.0.0.1:9090/prometheus/;</span><br><span class="line">        proxy_read_timeout 600;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        proxy_set_header Connection <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>你可以访问到victoriametrics了：</p>
<p><img src="/images/1706263343-3c715b108a3e37c3798b528521deda09.png"> </p>
<p>然后你在外部的grafana中配置添加数据源就可以了，这样就可以做数据展示了，可以把原生的grafana中的dashboard导出来进行导入，数据都会展示出来了。</p>
]]></content>
      <categories>
        <category>PMM</category>
      </categories>
      <tags>
        <tag>PMM</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL中substring函数的使用</title>
    <url>/2024/02/18/SQL%E4%B8%ADsubstring%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<ul>
<li>SUBSTRING函数，该函数用于返回字符串的一个子串。它的语法为 SUBSTRING(str,pos,len)，其中str为要截取的字符串，pos表示起始位置，len表示要截取的长度。例如，SUBSTRING(‘abc123’,4,3)将返回字符串’123’。这个函数常用于从字符串中提取出数字部分。</li>
</ul>
<p><code>update exporter e set e.cmdb_id = substring(cmdb_id,4,4) where e.server_type like &#39;oracle%&#39; and e.status = &#39;运行&#39; and e.cmdb_id like &#39;PS%&#39;;</code></p>
<ul>
<li>字符串截取函数substring_index</li>
</ul>
<p>substring_index(str，delim，n)</p>
<p>str：要处理的字符串<br>delim：分隔符，不能为空<br>n：第n个分隔符左边&#x2F;右边的全部内容</p>
<p>(1) 如果n是正数，那么就是从左往右数，第N个分隔符的左边的全部内容;</p>
<p>(2) 相反，如果是负数，那么就是从右往左数，第N个分隔符右边的所有内容。</p>
<p>例如，字段名为profile，字符串内容180cm,75kg,27,male ，取出第三部分的27岁这个值</p>
<p>第一步：先从左往右数到第3个’,’，取左边全部内容：</p>
<p>substring_index(profile, ‘,’ , 3), 得到180cm,75kg,27</p>
<p>第二步：从右往左数第一个分隔符，故n为-1，取分隔符右边全部内容:</p>
<p>substring_index(substring_index(profile, ‘,’ , 3), ‘,’ -1)，得到27</p>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus与VictoriaMetrics对比</title>
    <url>/2024/02/21/Prometheus%E4%B8%8EVictoriaMetrics%E5%AF%B9%E6%AF%94/</url>
    <content><![CDATA[<p>时序数据库有很多，比如Prometheus、M3DB、TimescaleDB、OpenTSDB、InfluxDB等等。Prometheus与VictoriaMetrics是开源的时间序列数据库，在复杂的环境中提供了强大的监控和告警解决方案。下面我们分析下Prometheus和VictoriaMetrics之间的差异，以为用户提供最合适的解决方案。</p>
<h2 id="Prometheus"><a href="#Prometheus" class="headerlink" title="Prometheus"></a>Prometheus</h2><p><strong>Prometheus</strong>最初是 SoundCloud 中的一个项目，是一个功能强大的监控和警报工具包，专门用于处理多维环境中的时间序列数据。由于其对多维数据收集、查询和警报生成的本机支持，它在 SRE 和 DevOps 社区中变得非常受欢迎。</p>
<p>Prometheus 是在云原生计算基金会 (CNCF) 下开发的。Prometheus 服务器、客户端库、Alertmanager 和其他相关组件可以在 Prometheus GitHub 组织中找到。主要存储库是： <a href="https://github.com/prometheus/prometheus">https://github.com/prometheus/prometheus</a></p>
<h2 id="VictoriaMetrics"><a href="#VictoriaMetrics" class="headerlink" title="VictoriaMetrics"></a>VictoriaMetrics</h2><p><strong>VictoriaMetrics</strong>则是一个高性能、高性价比、可扩展的时间序列数据库，可以作为Prometheus的长期远程存储。它拥有超强的数据压缩和高速数据摄取能力，使其成为大规模监控任务的有吸引力的替代方案。VictoriaMetrics源代码可以在以下位置找到：<a href="https://github.com/VictoriaMetrics/VictoriaMetrics">https://github.com/VictoriaMetrics/VictoriaMetrics</a></p>
<h2 id="性能比较"><a href="#性能比较" class="headerlink" title="性能比较"></a>性能比较</h2><p>VictoriaMetrics 与 Prometheus 之间的数据摄取和查询率性能基于使用指标的基准node_exporter`测试。内存和磁盘空间使用情况数据适用于单个 Prometheus 或 VictoriaMetrics 服务器。</p>
<table>
<thead>
<tr>
<th>比较</th>
<th>Prometheus</th>
<th>VictoriaMetrics</th>
</tr>
</thead>
<tbody><tr>
<td>数据采集</td>
<td>基于拉动</td>
<td>基于拉式和推式</td>
</tr>
<tr>
<td>数据摄取</td>
<td>每秒高达 240,000 个样本</td>
<td>每秒高达 360,000 个样本</td>
</tr>
<tr>
<td>数据查询</td>
<td>每秒高达 80,000 次查询</td>
<td>每秒高达 100,000 次查询</td>
</tr>
<tr>
<td>内存使用情况</td>
<td>高达 14GB RAM</td>
<td>高达 4.3GB 的 RAM</td>
</tr>
<tr>
<td>数据压缩</td>
<td>使用LZF压缩</td>
<td>使用 Snappy 压缩</td>
</tr>
<tr>
<td>磁盘写入频率</td>
<td>更频繁地将数据写入磁盘</td>
<td>减少将数据写入磁盘的频率</td>
</tr>
<tr>
<td>磁盘空间使用情况</td>
<td>需要更多磁盘空间</td>
<td>需要更少的磁盘空间</td>
</tr>
<tr>
<td>查询语言</td>
<td>PromQL</td>
<td>MetricsQL（向后兼容 PromQL）</td>
</tr>
</tbody></table>
<h2 id="可扩展性和集成性比较"><a href="#可扩展性和集成性比较" class="headerlink" title="可扩展性和集成性比较"></a>可扩展性和集成性比较</h2><p><strong>Prometheus</strong>使用基于PUll模型来收集指标，可以处理多达数百万个活动时间序列。该架构虽然简化了监控服务方的操作。但是也有一定的弊端，比如多个实例抓取的是相同的监控指标，不能保证采集的数据值为一致的，并且在实际的使用中可能遇到网络延迟问题，所以会产生数据不一致的问题，不过对于监控报警这个场景来说，一般不会要求数据的强一致性，所以从业务上来说是可以接受，因为这种数据不一致性影响基本上没什么影响。这种场景适合监控规模不大，只需要保存短周期监控数据的场景。</p>
<p><img src="/images/1708502324-4ee5a9f9dbe12a6d154e9e69a49f0d2f.png"></p>
<p><strong>而 VictoriaMetrics</strong>支持pull模型和Push模型。它能够处理大量数据和更广泛的网络场景（得益于其推送模型支持），使其具有可扩展性和灵活性。</p>
<h3 id="Prometheus架构"><a href="#Prometheus架构" class="headerlink" title="Prometheus架构"></a>Prometheus架构</h3><p><img src="/images/1708502324-2ec2d06a4792dc1d542a244ffc0b50e2.png"></p>
<p>Prometheus的架构由四个主要组件组成：</p>
<ol>
<li><p><strong>Prometheus Server</strong> ：Prometheus Server是Prometheus的核心组件，主要负责从各个目标（target）中收集指标（metrics）数据，并对这些数据进行存储、聚合和查询。</p>
</li>
<li><p><strong>Client Libraries</strong> ：Prometheus提供了多种客户端库，用于在应用程序中嵌入Prometheus的指标收集功能。</p>
</li>
<li><p><strong>Exporters</strong> ：Exporters是用于将第三方系统的监控数据导出为Prometheus格式的组件。Prometheus支持多种Exporters，例如Node Exporter、MySQL Exporter、HAProxy Exporter等。</p>
</li>
<li><p><strong>Alertmanager</strong>：Alertmanager是Prometheus的告警组件，用于根据用户定义的规则对监控数据进行告警。</p>
</li>
<li><p><strong>服务发现</strong>：Prometheus 支持各种服务发现机制，帮助它找到应该抓取的目标。</p>
</li>
<li><p><strong>PromQL</strong>：这是 Prometheus 内置的灵活查询语言，用于数据探索和仪表板，与 SQL 不同。</p>
</li>
</ol>
<h3 id="VictoriaMetrics架构"><a href="#VictoriaMetrics架构" class="headerlink" title="VictoriaMetrics架构"></a>VictoriaMetrics架构</h3><p>VictoriaMetrics 提供<a href="https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html">单机版</a>和<a href="https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html">集群版</a>。如果您的每秒写入数据点数小于100万（这个数量是个什么概念呢，如果只是做机器设备的监控，每个机器差不多采集200个指标，采集频率是10秒的话每台机器每秒采集20个指标左右，100万&#x2F;20&#x3D;5万台机器），VictoriaMetrics 官方默认推荐您使用单机版，单机版可以通过增加服务器的CPU核心数，增加内存，增加IOPS来获得线性的性能提升。且单机版易于配置和运维。</p>
<p>下面这是一个集群版的架构图</p>
<p><img src="/images/1708502324-1f67d5f37c7f4f562e38ae98213094fc.png"></p>
<p>VictoriaMetrics在保持更简单的架构的同时，还包括几个核心组件：</p>
<ul>
<li><code>vmstorage</code>：数据存储以及查询结果返回，默认端口为 8482</li>
<li><code>vminsert</code>：数据录入，可实现类似分片、副本功能，默认端口 8480</li>
<li><code>vmselect</code>：数据查询，汇总和数据去重，默认端口 8481</li>
<li><code>vmagent</code>：数据指标抓取，支持多种后端存储，会占用本地磁盘缓存，默认端口 8429</li>
<li><code>vmalert</code>：报警相关组件，不如果不需要告警功能可以不使用该组件，默认端口为 8880</li>
</ul>
<h2 id="数据压缩和存储效率"><a href="#数据压缩和存储效率" class="headerlink" title="数据压缩和存储效率"></a>数据压缩和存储效率</h2><p>Prometheus拥有高效的存储系统，但在长期数据存储后端和检索效率方面不如VictoriaMetrics。</p>
<p>VictoriaMetrics 相对于 Prometheus 的主要优势之一是其数据压缩功能。它的数据压缩算法，可显著降低存储要求。VictoriaMetrics 声称提供比 Prometheus 高出 10 倍的数据压缩，这是长期数据保留和成本优化的关键优势。</p>
<h3 id="Prometheus-1"><a href="#Prometheus-1" class="headerlink" title="Prometheus"></a>Prometheus</h3><ol>
<li>内存存储：Prometheus利用内存存储来访问最近的时间序列数据。数据库中的这个部分被称为<code>head block</code>。</li>
<li>磁盘存储：当数据达到一定的年龄或大小后，位于”head block”中的数据会被移动到磁盘中，这个过程称为<code>checkpointing</code>。这个数据库由长期存储的”persistent blocks”组成。</li>
</ol>
<h3 id="VictoriaMetrics-1"><a href="#VictoriaMetrics-1" class="headerlink" title="VictoriaMetrics"></a>VictoriaMetrics</h3><p>1.内存存储：与 Prometheus 类似，VictoriaMetrics 使用内存存储在传入数据写入磁盘之前进行缓冲。这种方法有助于优化写入性能。同事还缓存经常访问的数据以加快检索速度。</p>
<p>2.磁盘存储：VictoriaMetrics 中的大部分数据存储在磁盘上。它使用一种高效的存储格式，可以实现大幅度的进行数据压缩。</p>
<h2 id="查询语言"><a href="#查询语言" class="headerlink" title="查询语言"></a>查询语言</h2><h3 id="PromQL"><a href="#PromQL" class="headerlink" title="PromQL"></a>PromQL</h3><p><strong>Prometheus</strong>使用<strong>PromQL</strong>。PromQL 允许实时选择和聚合时间序列数据。它使我们能够高度灵活地使用指标。通过 PromQL，用户可以过滤和聚合指标，计算比率、比率、平均值和百分位数等指标。</p>
<h3 id="MetricsQL"><a href="#MetricsQL" class="headerlink" title="MetricsQL"></a>MetricsQL</h3><p>VictoriaMetrics向后兼容 PromQL。我们都可以按照理解的 PromQL 语法来进行查询。但是，它还引入了 PromQL 的扩展，称为<strong>MetricsQL</strong>。MetricsQL 增强了 PromQL 提供的查询功能。它引入了新函数、运算符和语法糖。简化并改善了用户体验，特别是对于复杂的查询和聚合。</p>
<h2 id="摄取率"><a href="#摄取率" class="headerlink" title="摄取率"></a>摄取率</h2><h4 id="Prometheus-2"><a href="#Prometheus-2" class="headerlink" title="Prometheus"></a>Prometheus</h4><ul>
<li>Prometheus定期从监控目标中获取指标。这些获取的频率的调整可以控制数据摄取速率。</li>
<li>Prometheus实际上能够摄取数据的速率取决于许多因素，包括运行的硬件性能、被获取的指标的复杂性以及存储层的效率。</li>
<li>如果Prometheus无法跟上传入数据量，可能会丢弃样本或增加延迟。</li>
</ul>
<h4 id="VictoriaMetrics-2"><a href="#VictoriaMetrics-2" class="headerlink" title="VictoriaMetrics"></a>VictoriaMetrics</h4><ul>
<li>VictoriaMetrics则比Prometheus更加高效利用资源。它声称在相同的数据量下，能够更高效地摄取数据，使用更少的CPU、内存和磁盘空间。</li>
<li>这种效率使得VictoriaMetrics在相同硬件上能够比Prometheus更快地摄取数据。</li>
<li>在架构设计方面，VictoriaMetrics可以通过拉取（与Prometheus类似）和推送模式来摄取数据。推送模式对于高基数数据和摄取速率是有帮助的。</li>
</ul>
<h2 id="高可用性和可靠性"><a href="#高可用性和可靠性" class="headerlink" title="高可用性和可靠性"></a>高可用性和可靠性</h2><p>Prometheus 本身并不支持集群，这意味着它不提供原生高可用性。高可用性可以通过运行重复实例来实现，或者thanos架构，当然也可以整合VictoriaMetrics。</p>
<p><img src="/images/1708502324-b8a0ca1114ff4500bc208f03d05860bd.jpeg"></p>
<p>而VictoriaMetrics 在设计时就考虑到了高可用性。它使用复制和集群来确保在实例发生故障时数据不会丢失，从而成为了很多大厂的选择。</p>
<h2 id="API接口"><a href="#API接口" class="headerlink" title="API接口"></a>API接口</h2><p>Prometheus和VictoriaMetrics都提供了基于 Http的 API接口，已满足客户端调用需求</p>
<h4 id="Prometheus-API"><a href="#Prometheus-API" class="headerlink" title="Prometheus API"></a>Prometheus API</h4><ul>
<li>查询：Prometheus提供了PromQL查询语言，用户可以使用该语言通过HTTP API查询指标数据。</li>
<li>元数据：API endpoint提供对 Prometheus 服务器中关系列和标签的元数据的访问。</li>
<li>管理：某些管理任务，例如删除系列、快照等，也可以通过 API 执行。</li>
</ul>
<h4 id="VictoriaMetrics-API"><a href="#VictoriaMetrics-API" class="headerlink" title="VictoriaMetrics API"></a>VictoriaMetrics API</h4><p>VictoriaMetrics提供了一个全面的HTTP API，根据功能分为几个部分：</p>
<ul>
<li><p>适用于Prometheus的指标API：此API与Prometheus的HTTP API兼容，这意味着可以将VictoriaMetrics作为Prometheus的替代品。</p>
</li>
<li><p>InfluxDB API：VictoriaMetrics还提供与InfluxDB的写入和查询API兼容的API。这使得从InfluxDB切换到VictoriaMetrics也很容易。</p>
</li>
<li><p>Graphite API：VictoriaMetrics还为Graphite的API提供了一个兼容层。</p>
</li>
<li><p>MetricsQL和PromQL API：这些API用于查询存储在VictoriaMetrics中的指标数据。MetricsQL是VictoriaMetrics特定的</p>
<p>PromQL扩展，提供了PromQL中不可用的额外功能。</p>
</li>
</ul>
<h2 id="与-Grafana-集成"><a href="#与-Grafana-集成" class="headerlink" title="与 Grafana 集成"></a>与 Grafana 集成</h2><p>由于 VictoriaMetrics兼容Prometheus，所以在 在 Grafana 进行可视化配置时，可以使用“Prometheus”数据源，并将 Url 设置为VictoriaMetrics Server 地址即可。</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以上我们总结Prometheus与VictoriaMetrics的各个方面的对比，虽然VictoriaMetrics在某些方面可能比Prometheus更强大，比如在处理大规模数据和高并发负载时的性能表现，完全可以替换Prometheus，但它相对来说是相对较新的项目，尚未达到Prometheus在用户社区和广泛采用方面的水平。此外，Prometheus的发展时间更早，是CNCF第二个毕业的项目，已经得到了大量用户的验证，并且有更多的文档、教程和案例可供参考。</p>
<p>此外，技术的流行和广泛采用并不仅仅取决于技术本身的性能，还受到多个因素的影响，包括市场宣传、社区支持、用户体验和可用性等。Prometheus在这些方面都做得相对较好，因此在监控领域更为流行和广泛采用。</p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes日常操作命令</title>
    <url>/2024/02/21/Kubernetes%E6%97%A5%E5%B8%B8%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h3 id="根据overlay2目录名找容器"><a href="#根据overlay2目录名找容器" class="headerlink" title="根据overlay2目录名找容器"></a>根据overlay2目录名找容器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps -q | xargs docker inspect --format &#x27;&#123;&#123;.State.Pid&#125;&#125;, &#123;&#123;.Id&#125;&#125;, &#123;&#123;.Name&#125;&#125;, &#123;&#123;.GraphDriver.Data.WorkDir&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="调试coredns"><a href="#调试coredns" class="headerlink" title="调试coredns"></a>调试coredns</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl run -it --rm --restart=Never --image=infoblox/dnstools:latest dnstools</span><br></pre></td></tr></table></figure>

<h3 id="查看资源使用情况"><a href="#查看资源使用情况" class="headerlink" title="查看资源使用情况"></a>查看资源使用情况</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get nodes --no-headers | awk &#x27;&#123;print $1&#125;&#x27; | xargs -I &#123;&#125; sh -c &quot;echo &#123;&#125; ; kubectl describe node &#123;&#125; | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve --;&quot;</span><br></pre></td></tr></table></figure>

<h3 id="查看资源总情况"><a href="#查看资源总情况" class="headerlink" title="查看资源总情况"></a>查看资源总情况</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get no -o=custom-columns=&quot;NODE:.metadata.name,ALLOCATABLE CPU:.status.allocatable.cpu,ALLOCATABLE MEMORY:.status.allocatable.memory&quot;</span><br></pre></td></tr></table></figure>

<h3 id="查看CPU分配情况"><a href="#查看CPU分配情况" class="headerlink" title="查看CPU分配情况"></a>查看CPU分配情况</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get nodes --no-headers | awk &#x27;&#123;print $1&#125;&#x27; | xargs -I &#123;&#125; sh -c &#x27;echo -n &quot;&#123;&#125;\t&quot; ; kubectl describe node &#123;&#125; | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- | grep cpu | awk &#x27;\&#x27;&#x27;&#123;print $2$3&#125;&#x27;\&#x27;&#x27;;&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="查看内存分配情况"><a href="#查看内存分配情况" class="headerlink" title="查看内存分配情况"></a>查看内存分配情况</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get nodes --no-headers | awk &#x27;&#123;print $1&#125;&#x27; | xargs -I &#123;&#125; sh -c &#x27;echo -n &quot;&#123;&#125;\t&quot; ; kubectl describe node &#123;&#125; | grep Allocated -A 5 | grep -ve Event -ve Allocated -ve percent -ve -- | grep memory | awk &#x27;\&#x27;&#x27;&#123;print $2$3&#125;&#x27;\&#x27;&#x27;;&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="线程数统计"><a href="#线程数统计" class="headerlink" title="线程数统计"></a>线程数统计</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">printf &quot;    NUM  PID\t\tCOMMAND\n&quot; &amp;&amp; ps -eLf | awk &#x27;&#123;$1=null;$3=null;$4=null;$5=null;$6=null;$7=null;$8=null;$9=null;print&#125;&#x27; | sort |uniq -c |sort -rn | head -10</span><br></pre></td></tr></table></figure>

<h3 id="配置默认storageclass"><a href="#配置默认storageclass" class="headerlink" title="配置默认storageclass"></a>配置默认storageclass</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl patch storageclass &lt;your-class-name&gt; -p &#x27;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="查看容器名"><a href="#查看容器名" class="headerlink" title="查看容器名"></a>查看容器名</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get po calibre-web-76b9bf4d8b-2kc5j -o json | jq -j &quot;.spec.containers[].name&quot;</span><br></pre></td></tr></table></figure>

<h3 id="进入容器namespace"><a href="#进入容器namespace" class="headerlink" title="进入容器namespace"></a>进入容器namespace</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker ps | grep APP_NAME</span><br><span class="line">docker inspect CONTAINER_ID | grep Pid</span><br><span class="line">nsenter -t PID -n</span><br></pre></td></tr></table></figure>

<h3 id="查找非-running-状态的-Pod"><a href="#查找非-running-状态的-Pod" class="headerlink" title="查找非 running 状态的 Pod"></a>查找非 running 状态的 Pod</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get pods -A --field-selector=status.phase!=Running | grep -v Complete</span><br></pre></td></tr></table></figure>

<h3 id="获取节点列表及其内存容量"><a href="#获取节点列表及其内存容量" class="headerlink" title="获取节点列表及其内存容量"></a>获取节点列表及其内存容量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get no -o json | \</span><br><span class="line">  jq -r &#x27;.items | sort_by(.status.capacity.memory)[]|[.metadata.name,.status.capacity.memory]| @tsv&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="获取每个节点的Pod数量"><a href="#获取每个节点的Pod数量" class="headerlink" title="获取每个节点的Pod数量"></a>获取每个节点的Pod数量</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get po -o json --all-namespaces | \</span><br><span class="line">  jq &#x27;.items | group_by(.spec.nodeName) | map(&#123;&quot;nodeName&quot;: .[0].spec.nodeName, &quot;count&quot;: length&#125;) | sort_by(.count)&#x27;</span><br></pre></td></tr></table></figure>

<h3 id="获取前一个容器的日志"><a href="#获取前一个容器的日志" class="headerlink" title="获取前一个容器的日志"></a>获取前一个容器的日志</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl -n my-namespace logs my-pod –previous</span><br></pre></td></tr></table></figure>

<h3 id="把Secret复制到其他namespace"><a href="#把Secret复制到其他namespace" class="headerlink" title="把Secret复制到其他namespace"></a>把Secret复制到其他namespace</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get secrets -o json --namespace namespace-old | \</span><br><span class="line">  jq &#x27;.items[].metadata.namespace = &quot;namespace-new&quot;&#x27; | \</span><br><span class="line">  kubectl create-f  -</span><br></pre></td></tr></table></figure>

<h3 id="批量删除所有命名空间下某一个状态的所有pod"><a href="#批量删除所有命名空间下某一个状态的所有pod" class="headerlink" title="批量删除所有命名空间下某一个状态的所有pod"></a>批量删除所有命名空间下某一个状态的所有pod</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl get pods --all-namespaces |grep Terminating | awk &#x27;NR&gt;1 &#123;print $1 ,$2&#125;&#x27; | xargs -l -t kubectl delete pod --force --grace-period=0  -n $1 $2</span><br><span class="line">kubectl get pods --all-namespaces |grep Evicted | awk &#x27;NR&gt;1 &#123;print $1 ,$2&#125;&#x27; | xargs -l -t kubectl delete pod --force --grace-period=0  -n $1 $2</span><br></pre></td></tr></table></figure>

<h3 id="使用kubectl-debug对某一个pod进行转包分析"><a href="#使用kubectl-debug对某一个pod进行转包分析" class="headerlink" title="使用kubectl-debug对某一个pod进行转包分析"></a>使用kubectl-debug对某一个pod进行转包分析</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl-debug pod-name-xxxx -n xxxx --agentless --port-forward</span><br><span class="line">tcpdump -n -vvv -w /tmp/xxx.pcap</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>Kubernetes集群管理</title>
    <url>/2024/02/21/Kubernetes%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/</url>
    <content><![CDATA[<p>Kubernetes作为容器的编排平台，它是以集群的形式为业务提供服务。所以在日常的工作中，作为Kubernetes平台的维护者，会经常对集群进行管理。</p>
<p>这里，我将集群管理分为以下几种：<img src="/images/1708507702-fd337dd8e46e37add85962854282d406.png" alt="图片"></p>
<h1 id="安装集群"><a href="#安装集群" class="headerlink" title="安装集群"></a>安装集群</h1><h2 id="前置说明"><a href="#前置说明" class="headerlink" title="前置说明"></a>前置说明</h2><p>Kubernetes的集群安装分为：kubeadm安装和二进制安装。在这里，只会介绍kubeadm的安装。</p>
<p>安装说明：</p>
<blockquote>
<p>集群节点：2个<br>IP信息：<br>master：192.168.205.128<br>node：192.168.205.128<br>Kubernetes版本：v1.24.2<br>运行时：containerd<br>系统：centos 7.9<br>系统内核：3.10.0-1160</p>
</blockquote>
<h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><p>这是安装的不是生产级别的集群，只是为了演示使用。</p>
<p>（1）在每个节点添加host信息</p>
<p> cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF192.168.205.128 kk-master&lt;br&gt;192.168.205.130 kk-node01&lt;br&gt;EOF&lt;br&gt;</p>
<p>（2）关闭防火墙和SELinux</p>
<p> systemctl stop firewalld<br> systemctl disable firewalld<br> setenforce 0<br> cat &#x2F;etc&#x2F;selinux&#x2F;config<br> SELINUX&#x3D;disabled</p>
<p>（3）优化内核参数</p>
<p>cat &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt; EOF<br>net.bridge.bridge-nf-call-ip6tables &#x3D; 1<br>net.bridge.bridge-nf-call-iptables &#x3D; 1<br>net.ipv4.ip_forward &#x3D; 1<br>vm.swappiness&#x3D;0<br>EOF</p>
<p>执行以下命令使其生效：</p>
<p>modprobe br_netfilter &amp;&amp; sysctl -p &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf</p>
<p>（4）关闭swap空间</p>
<p> swapoff -a</p>
<p>注释&#x2F;etc&#x2F;fstab文件中swap挂载。</p>
<p> cat &#x2F;etc&#x2F;fstab </p>
<p>（5）安装ipvs软件包</p>
<p>cat &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &lt;&lt;EOF<br>#!&#x2F;bin&#x2F;bash<br>modprobe – ip_vs<br>modprobe – ip_vs_rr<br>modprobe – ip_vs_wrr<br>modprobe – ip_vs_sh<br>modprobe – nf_conntrack_ipv4<br>EOF<br>chmod 755 &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &amp;&amp; bash &#x2F;etc&#x2F;sysconfig&#x2F;modules&#x2F;ipvs.modules &amp;&amp; lsmod | grep -e ip_vs -e nf_conntrack_ipv4 &amp;&amp; yum install ipset ipvsadm -y</p>
<p>（6）同步服务器时间</p>
<p> yum install chrony -y systemctl enable chronyd systemctl start chronyd chronyc sources</p>
<p>（7）安装containerd</p>
<p>yum install -y yum-utils device-mapper-persistent-data lvm2<br>yum-config-manager –add-repo <a href="https://download.docker.com/linux/centos/docker-ce.repo">https://download.docker.com/linux/centos/docker-ce.repo</a><br>yum list | grep containerd<br>yum install containerd -y</p>
<p>创建containerd配置文件。</p>
<p>mkdir -p &#x2F;etc&#x2F;containerd<br>containerd config default &gt; &#x2F;etc&#x2F;containerd&#x2F;config.toml<br>sed -i “s#k8s.gcr.io#registry.cn-hangzhou.aliyuncs.com&#x2F;google_containers#g” &#x2F;etc&#x2F;containerd&#x2F;config.toml<br>sed -i ‘s#SystemdCgroup &#x3D; false#SystemdCgroup &#x3D; true#g’ &#x2F;etc&#x2F;containerd&#x2F;config.toml<br>sed -i “s#<a href="https://registry-1.docker.io/#https://registry.cn-hangzhou.aliyuncs.com#g">https://registry-1.docker.io#https://registry.cn-hangzhou.aliyuncs.com#g</a>“ &#x2F;etc&#x2F;containerd&#x2F;config.toml</p>
<p>启动containerd。</p>
<p> systemctl daemon-reload systemctl enable containerd systemctl restart containerd</p>
<p>（8）安装Kubernetes组件</p>
<p>cat &lt;<EOF > &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo<br>[kubernetes]<br>name&#x3D;Kubernetes<br>baseurl&#x3D;<a href="http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64">http://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</a><br>enabled&#x3D;1<br>gpgcheck&#x3D;0<br>repo_gpgcheck&#x3D;0<br>gpgkey&#x3D;<a href="http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg">http://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg</a> <a href="http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg">http://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</a><br>EOF</p>
<p>安装指定版本的组件。</p>
<p> yum install -y kubelet-1.24.2 kubeadm-1.24.2 kubectl-1.24.2</p>
<p>设置运行时。</p>
<p> crictl config runtime-endpoint &#x2F;run&#x2F;containerd&#x2F;containerd.sock</p>
<p>设置kubelet为自启动。</p>
<p> systemctl daemon-reload systemctl enable kubelet &amp;&amp; systemctl start kubelet</p>
<h2 id="初始化集群"><a href="#初始化集群" class="headerlink" title="初始化集群"></a>初始化集群</h2><p>上面把基础环境准备好了，现在开始真正的进行集群初始化。</p>
<h3 id="初始化master节点"><a href="#初始化master节点" class="headerlink" title="初始化master节点"></a>初始化master节点</h3><p>然后接下来在 master 节点配置 kubeadm 初始化文件，可以通过如下命令导出默认的初始化配置：</p>
<p>$ kubeadm config &lt;span style&#x3D;”color: #f92672;font-weight: bold;line-height: 26px;”&gt;print init-defaults &gt; kubeadm.yaml&lt;br&gt;</p>
<p>然后根据我们自己的需求修改配置，比如修改 imageRepository 的值，kube-proxy 的模式为 ipvs，需要注意的是由于我们使用的containerd作为运行时，所以在初始化节点的时候需要指定<code>cgroupDriver</code>为<code>systemd</code>【1】</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta3</span></span><br><span class="line"><span class="attr">bootstrapTokens:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">groups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">system:bootstrappers:kubeadm:default-node-token</span></span><br><span class="line">  <span class="attr">token:</span> <span class="string">abcdef.0123456789abcdef</span></span><br><span class="line">  <span class="attr">ttl:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">usages:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">signing</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">authentication</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">localAPIEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="number">192.168</span><span class="number">.205</span><span class="number">.128</span></span><br><span class="line">  <span class="attr">bindPort:</span> <span class="number">6443</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">criSocket:</span> <span class="string">unix:///var/run/containerd/containerd.sock</span></span><br><span class="line">  <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">taints:</span> <span class="literal">null</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiServer:</span></span><br><span class="line">  <span class="attr">timeoutForControlPlane:</span> <span class="string">4m0s</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1beta3</span></span><br><span class="line"><span class="attr">certificatesDir:</span> <span class="string">/etc/kubernetes/pki</span></span><br><span class="line"><span class="attr">clusterName:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">controllerManager:</span> &#123;&#125;</span><br><span class="line"><span class="attr">dns:</span> &#123;&#125;</span><br><span class="line"><span class="attr">etcd:</span></span><br><span class="line">  <span class="attr">local:</span></span><br><span class="line">    <span class="attr">dataDir:</span> <span class="string">/var/lib/etcd</span></span><br><span class="line"><span class="attr">imageRepository:</span> <span class="string">registry.cn-hangzhou.aliyuncs.com/google_containers</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterConfiguration</span></span><br><span class="line"><span class="attr">kubernetesVersion:</span> <span class="number">1.24</span><span class="number">.2</span></span><br><span class="line"><span class="attr">networking:</span></span><br><span class="line">  <span class="attr">dnsDomain:</span> <span class="string">cluster.local</span></span><br><span class="line">  <span class="attr">serviceSubnet:</span> <span class="number">10.96</span><span class="number">.0</span><span class="number">.0</span><span class="string">/12</span></span><br><span class="line"><span class="attr">scheduler:</span> &#123;&#125;</span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeproxy.config.k8s.io/v1alpha1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeProxyConfiguration</span></span><br><span class="line"><span class="attr">mode:</span> <span class="string">ipvs</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubelet.config.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">KubeletConfiguration</span></span><br><span class="line"><span class="attr">cgroupDriver:</span> <span class="string">systemd</span></span><br></pre></td></tr></table></figure>

<p>然后使用上面的配置文件进行初始化：</p>
<p>The command to initialize the Kubernetes control-plane and join worker nodes is as follows:</p>
<ol>
<li><p>Initialize the Kubernetes control-plane:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubeadm init --config=kubeadm.yaml</span><br></pre></td></tr></table></figure>
</li>
<li><p>After the control-plane has initialized successfully, run the following commands as a regular user to start using the cluster:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure>
</li>
<li><p>Deploy a pod network to the cluster by running:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubectl apply -f [podnetwork].yaml</span><br></pre></td></tr></table></figure>
<p>Replace <code>[podnetwork].yaml</code> with the appropriate pod network configuration file.</p>
</li>
<li><p>To join worker nodes to the cluster, run the following command on each worker node as root:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kubeadm join 192.168.205.128:6443 --token abcdef.0123456789abcdef --discovery-token-ca-cert-hash sha256:51b5e566d3f95aaf3170916d67958bc16cb1b44934885a857b07ee58f041334a</span><br></pre></td></tr></table></figure>
<p>Replace <code>192.168.205.128:6443</code> with the appropriate control-plane endpoint and token information.</p>
</li>
</ol>
<p>如上输出表示master节点初始化成功。</p>
<h3 id="初始化node节点"><a href="#初始化node节点" class="headerlink" title="初始化node节点"></a>初始化node节点</h3><p>在初始化node节点的时候，必须把kubernetes需要的组件安装上。确保安装完成后，使用初始化master节点成功后输出的命令加入节点即可。</p>
<p> kubeadm join 192.168.205.128:6443 –token abcdef.0123456789abcdef \        –discovery-token-ca-cert-hash sha256:51b5e566d3f95aaf3170916d67958bc16cb1b44934885a857b07ee58f041334a&lt;br&gt;</p>
<p>然后可以在master节点使用kubectl get node查看节点是否加入。</p>
<p> kubectl get noNAME        STATUS     ROLES           AGE     VERSION&lt;br&gt;kk-node01   NotReady   &lt;none&gt;          15s     v1.24.2&lt;br&gt;master      NotReady   control-plane   3m29s   v1.24.2&lt;br&gt;</p>
<h3 id="初始化网络"><a href="#初始化网络" class="headerlink" title="初始化网络"></a>初始化网络</h3><p>通过上面<code>kubectl get node</code>查看节点信息的时候发现节点的<code>STATUS</code>是<code>NotReady</code>，这是因为现在整个集群还没有相应的网络插件，导致整个集群并不能正常的运行，下面我们就来安装对应的网络插件。</p>
<p>网络插件的选择有很多种，比如flannel，calico等。</p>
<p>（1）下载calico的yaml清单</p>
<p> wget <a href="https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml">https://raw.githubusercontent.com/projectcalico/calico/master/manifests/calico.yaml</a></span><br></p>
<p>（2）安装calico</p>
<p> kubectl apply -f calico.yaml</p>
<p>（3）在集群中查看安装结果</p>
<p> kubectl get po -n kube-system | grep calicocalico-kube-controllers-5d49fc6c56-szm6v   1&#x2F;1     Running   0          3m21s&lt;br&gt;calico-node-66q62                          1&#x2F;1     Running   0          3m21s&lt;br&gt;calico-node-lwrcm                          1&#x2F;1     Running   0          3m21s&lt;br&gt;</p>
<p>现在可以看到kubernetes所有节点的状态变成<code>Ready</code>了。</p>
<p> kubectl get noNAME        STATUS   ROLES           AGE   VERSION&lt;br&gt;kk-node01   Ready    &lt;none&gt;          26m   v1.24.2&lt;br&gt;master      Ready    control-plane   29m   v1.24.2&lt;br&gt;</p>
<h3 id="安装Dashboard"><a href="#安装Dashboard" class="headerlink" title="安装Dashboard"></a>安装Dashboard</h3><p>上面集群安装完成后，基本都需要使用命令行进行操作，如果为了提升集群的可视化，可以安装一些Dashboard。</p>
<p>目前市面上的Dashboard有很多，比如kubesphere、kuboard、kubernetes dashboard等。这里安装的是kubernetes dashboard，其他可视化产品可以自己去了解并使用。</p>
<p>（1）使用如下命令进行安装</p>
<p> kubectl apply -f <a href="https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml">https://raw.githubusercontent.com/kubernetes/dashboard/v2.5.0/aio/deploy/recommended.yaml</a></span><br></p>
<p>（2）查看安装情况</p>
<p> kubectl get po -n kubernetes-dashboard NAME                                         READY   STATUS    RESTARTS   AGE&lt;br&gt;dashboard-metrics-scraper-7bfdf779ff-f9zwn   1&#x2F;1     Running   0          41s&lt;br&gt;kubernetes-dashboard-6cdd697d84-lvzvz        1&#x2F;1     Running   0          41s&lt;br&gt;</p>
<p>（3）访问<br>首先将kubernetes-dashboard的service改成NodePort，然后通过节点IP+NodePort端口进行访问。</p>
<p>修改完成过后信息如下。</p>
<p> kubectl get svc -n kubernetes-dashboard NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE&lt;br&gt;dashboard-metrics-scraper   ClusterIP   10.109.224.102   &lt;none&gt;        8000&#x2F;TCP        113s&lt;br&gt;kubernetes-dashboard        NodePort    10.101.69.180    &lt;none&gt;        443:30497&#x2F;TCP   113s&lt;br&gt;</p>
<p>在浏览器输入<code>https://192.168.205.128:30497</code>进行访问，如下：<img src="/images/1708507702-12d5366c17c951cdb2402fe56548bb1b.png" alt="图片"></p>
<p>这里访问要使用<code>token</code>或者<code>kubeconfig</code>，这里使用token进行访问。</p>
<p>（1）生成token，这里直接生成admin级别的token。</p>
<p>apiVersion: v1<br>kind: ClusterRoleBinding<br>metadata:<br>name: dashboard-admin<br>annotations:<br>rbac.authorization.kubernetes.io&#x2F;autoupdate: “true”<br>roleRef:<br>kind: ClusterRole<br>name: admin<br>apiGroup: rbac.authorization.k8s.io<br>subjects:</p>
<p>kind: ServiceAccount<br>name: dashboard-admin<br>namespace: kube-system<br>apiVersion: v1<br>kind: Secret<br>type: kubernetes.io&#x2F;service-account-token<br>metadata:<br>name: dashboard-admin<br>namespace: kube-system<br>annotations:<br>kubernetes.io&#x2F;service-account.name: “dashboard-admin”</p>
<p> 说明：从kubernetes 1.24版本开始，移除了创建serviceaccount自动创建secret token的功能，所以需要自己创建secret token和serviceaccount进行关联。</p>
<p>（2）获取token</p>
<p>kubectl -n kube-system get secret dashboard-admin -o jsonpath&#x3D;{.data.token} | base64 -d</p>
<p>然后就可以登录查看集群信息了。<img src="/images/1708507702-b31e7b28d69127f40593814b6d7311ff.png" alt="图片"></p>
<h1 id="更新集群"><a href="#更新集群" class="headerlink" title="更新集群"></a>更新集群</h1><p>集群的更新操作有很多，比如创建或删除应用、添加或者删除节点等，这里主要介绍几种常用的操作：</p>
<ul>
<li><p>升级集群</p>
</li>
<li><p>更新集群证书</p>
</li>
<li><p>添加或删除集群</p>
</li>
</ul>
<h3 id="升级集群"><a href="#升级集群" class="headerlink" title="升级集群"></a>升级集群</h3><p>Kubernetes社区新版本的推出速度很快的，至少保持一年3个版本的迭代。在实际生产中，我们可能不会频繁的升级集群，因为这样的动作太大，可能导致其他生产问题。</p>
<p>但是，有时候会因为某些原因（比如软件版本兼容性、集群BUG等）不得不做升级集群的操作，所以，有必要掌握集群的升级方法以备不时之需。</p>
<h4 id="升级前准备"><a href="#升级前准备" class="headerlink" title="升级前准备"></a>升级前准备</h4><ul>
<li><p>升级前，需要认真阅读每个版本的?CHANGELOG。</p>
</li>
<li><p>务必备份所有重要组件，例如存储在数据库中应用层面的状态。kubeadm upgrade 不会影响你的工作负载，只会涉及 Kubernetes 内部的组件，但备份终究是好的。</p>
</li>
<li><p>可以小版本升级，也可以跨一个大版本升级，不建议跨两个大版本升级</p>
</li>
</ul>
<h4 id="升级目标"><a href="#升级目标" class="headerlink" title="升级目标"></a>升级目标</h4><p>现在集群的版本是1.24.0，预计升级的目标版本是1.24.2。</p>
<p> kubectl get nodes NAME        STATUS   ROLES           AGE     VERSION&lt;br&gt;kk-master   Ready    control-plane   7m20s   v1.24.0&lt;br&gt;kk-node01   Ready    &lt;none&gt;          6m40s   v1.24.0&lt;br&gt;</p>
<h4 id="备份集群"><a href="#备份集群" class="headerlink" title="备份集群"></a>备份集群</h4><p>kubeadm upgrade 不会影响你的工作负载，只会涉及 Kubernetes 内部的组件，但备份终究是好的。这里主要是对集群的所有资源进行备份，我使用的是一个开源的脚本，项目地址是：?<a href="https://github.com/solomonxu/k8s-backup-restore">https://github.com/solomonxu/k8s-backup-restore</a></p>
<p>（1）下载脚本</p>
<p> mkdir -p &#x2F;data cd &#x2F;data git clone <a href="https://github.com/solomonxu/k8s-backup-restore.git">https://github.com/solomonxu/k8s-backup-restore.git</a></span><br></p>
<p>（2）执行备份</p>
<p> cd &#x2F;data&#x2F;k8s-backup-restore .&#x2F;bin&#x2F;k8s_backup.sh </p>
<p>如果要恢复怎么办？只需要执行如下步骤。（1）创建恢复目录</p>
<p> mkdir -p &#x2F;data&#x2F;k8s-backup-restore&#x2F;data&#x2F;restore</p>
<p>（2）将需要恢复的YAML清单复制到该目录下</p>
<p> cp devops_deployments_gitlab.yaml ..&#x2F;..&#x2F;restore&#x2F;</p>
<p>（3）执行恢复命令</p>
<p> cd &#x2F;data&#x2F;k8s-backup-restore .&#x2F;bin&#x2F;k8s_restore.sh</p>
<h4 id="升级控制节点"><a href="#升级控制节点" class="headerlink" title="升级控制节点"></a>升级控制节点</h4><p>（1）确定要升级的版本包是否存在</p>
<p> yum list –showduplicates kubeadm –disableexcludes&#x3D;kubernetes</p>
<p>（2）升级kubeadm到指定版本</p>
<p> yum install -y kubeadm-1.24.2-0 –disableexcludes&#x3D;kubernetes</p>
<p>执行以下命令查看是否升级成功。</p>
<p> kubeadm versionkubeadm version: &amp;version.Info{Major:”1”, Minor:”24”, GitVersion:”v1.24.2”, GitCommit:”f66044f4361b9f1f96f0053dd46cb7dce5e990a8”, GitTreeState:”clean”, BuildDate:”2022-06-15T14:20:54Z”, GoVersion:”go1.18.3”, Compiler:”gc”, Platform:”linux&#x2F;amd64”}&lt;br&gt;</p>
<p>（3）排空节点</p>
<p> kubectl cordon kk-master kubectl drain kk-master </p>
<p>（4）运行升级计划，查看是否可以升级</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">kubectl -n kube-system get cm kubeadm-config -o yaml</span><br></pre></td></tr></table></figure>

<p>（5）升级集群</p>
<p> kubeadm upgrade apply v1.24.2 –config kubeadm.yaml </p>
<p>看到如下输出表示升级成功。</p>
<p>……&lt;br&gt;[upgrade&#x2F;successful] SUCCESS! Your cluster was upgraded to “v1.24.2”. Enjoy!&lt;br&gt;……&lt;br&gt;</p>
<p>（6）取消节点调度保护</p>
<p> kubectl uncordon kk-master</p>
<p>（7）由于这里Master即是控制平面，也是节点，所以需要对其在进行一次升级</p>
<p> kubeadm upgrade node</p>
<p>（8）升级kubectl和kubelet</p>
<p> yum install -y kubelet-1.24.2-0 kubectl-1.24.2-0 –disableexcludes&#x3D;kubernetes</p>
<p>（9）重启kubelet</p>
<p> systemctl daemon-reload systemctl restart kubelet</p>
<h4 id="升级节点"><a href="#升级节点" class="headerlink" title="升级节点"></a>升级节点</h4><p>（1）升级kubeadm</p>
<p> yum install -y kubeadm-1.24.2-0 –disableexcludes&#x3D;kubernetes</p>
<p>（2）设置节点不可调度且排空节点</p>
<p> kubectl cordon kk-node01 kubectl drain kk-node01</p>
<p>（3）升级节点</p>
<p> kubeadm upgrade node</p>
<p>（4）升级kubelet</p>
<p> yum install -y kubelet-1.24.2-0 –disableexcludes&#x3D;kubernetes</p>
<p>（5）重启节点</p>
<p> systemctl daemon-reload systemctl restart kubelet</p>
<p>（6）恢复节点可调度</p>
<p> kubectl uncordon kk-node01</p>
<h4 id="验证集群"><a href="#验证集群" class="headerlink" title="验证集群"></a>验证集群</h4><p>（1）查看集群状态信息是否正常</p>
<p> kubectl get noNAME        STATUS   ROLES           AGE   VERSION&lt;br&gt;kk-master   Ready    control-plane   33m   v1.24.2&lt;br&gt;kk-node01   Ready    &lt;none&gt;          32m   v1.24.2&lt;br&gt;</p>
<p>（2）查看集群Pod是否正常</p>
<p>NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE<br>kube-system   calico-kube-controllers-5d49fc6c56-pq57d   1&#x2F;1     Running   0          31m<br>kube-system   calico-node-rjdqh                          1&#x2F;1     Running   0          31m<br>kube-system   calico-node-s8475                          1&#x2F;1     Running   0          31m<br>kube-system   coredns-7f74c56694-qpvmv                   1&#x2F;1     Running   0          35m<br>kube-system   coredns-7f74c56694-ww8kb                   1&#x2F;1     Running   0          35m<br>kube-system   etcd-kk-master                             1&#x2F;1     Running   0          35m<br>kube-system   kube-apiserver-kk-master                   1&#x2F;1     Running   0          11m<br>kube-system   kube-controller-manager-kk-master          1&#x2F;1     Running   0          10m<br>kube-system   kube-proxy-5pf65                           1&#x2F;1     Running   0          10m<br>kube-system   kube-proxy-mcxlq                           1&#x2F;1     Running   0          10m<br>kube-system   kube-scheduler-kk-master                   1&#x2F;1     Running   0          10m</p>
<h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>在升级过程中如果升级失败并且没有回滚，可以继续执行<code>kubeadm upgrade</code>。如果要从故障状态恢复，可以执行<code>kubeadm upgrade --force</code>。</p>
<p>在升级期间，会在<code>/etc/kubernetes/tmp</code>目录下生成备份文件：</p>
<ul>
<li><p>kubeadm-backup-etcd-</p>
</li>
<li><p>kubeadm-backup-manifests-</p>
</li>
</ul>
<p>kubeadm-backup-etcd中包含本地etcd的数据备份，如果升级失败并且无法修复，可以将其数据复制到etcd数据目录进行手动修复。</p>
<p>kubeadm-backup-manifests中保存的是节点静态pod的YAML清单，如果升级失败并且无法修复，可以将其复制到<code>/etc/kubernetes/manifests</code>下进行手动修复。</p>
<h3 id="升级证书"><a href="#升级证书" class="headerlink" title="升级证书"></a>升级证书</h3><p>升级集群可能不会经常发送，但是升级证书应该是一个常态化操作。</p>
<p>使用kubeadm安装的证书默认有效期是一年，也就是说在证书过期之前必须对证书进行升级，不然就会导致整个集群异常。</p>
<p>可以使用如下命令查看集群的证书情况。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED</span><br><span class="line">admin.conf                 Jul 04, 2023 08:43 UTC   364d            ca                      no      </span><br><span class="line">apiserver                  Jul 04, 2023 08:39 UTC   364d            ca                      no      </span><br><span class="line">apiserver-etcd-client      Jul 04, 2023 08:39 UTC   364d            etcd-ca                 no      </span><br><span class="line">apiserver-kubelet-client   Jul 04, 2023 08:39 UTC   364d            ca                      no      </span><br><span class="line">controller-manager.conf    Jul 04, 2023 08:40 UTC   364d            ca                      no      </span><br><span class="line">etcd-healthcheck-client    Jul 04, 2023 08:16 UTC   364d            etcd-ca                 no      </span><br><span class="line">etcd-peer                  Jul 04, 2023 08:16 UTC   364d            etcd-ca                 no      </span><br><span class="line">etcd-server                Jul 04, 2023 08:16 UTC   364d            etcd-ca                 no      </span><br><span class="line">front-proxy-client         Jul 04, 2023 08:39 UTC   364d            front-proxy-ca          no      </span><br><span class="line">scheduler.conf             Jul 04, 2023 08:40 UTC   364d            ca                      no      </span><br><span class="line"></span><br><span class="line">CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED</span><br><span class="line">ca                      Jul 01, 2032 08:16 UTC   9y              no      </span><br><span class="line">etcd-ca                 Jul 01, 2032 08:16 UTC   9y              no      </span><br><span class="line">front-proxy-ca          Jul 01, 2032 08:16 UTC   9y              no</span><br></pre></td></tr></table></figure>

<p>（1）使用<code>kubeadm certs check-expiration</code>检查证书是否过期</p>
<p>（2）备份证书</p>
<p> mkdir &#x2F;etc&#x2F;kubernetes.bak.20220704 cp -r &#x2F;etc&#x2F;kubernetes&#x2F;* &#x2F;etc&#x2F;kubernetes.bak.20220704</p>
<p>（3）备份etcd数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 备份数据目录</span></span><br><span class="line"><span class="built_in">cp</span> -r /var/lib/etcd /var/lib/etcd.bak</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快照备份</span></span><br><span class="line"><span class="built_in">export</span> ETCDCTL_API=3</span><br><span class="line">etcdctl --endpoints localhost:2379 snapshot save snapshot.db \</span><br><span class="line">  --cacert=/etc/kubernetes/pki/etcd/ca.crt  \</span><br><span class="line">  --cert=/etc/kubernetes/pki/etcd/server.crt \</span><br><span class="line">  --key=/etc/kubernetes/pki/etcd/server.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 快照恢复命令</span></span><br><span class="line">etcdctl snapshot restore snapshot.db --name m3 --data-dir=/home/etcd_data</span><br></pre></td></tr></table></figure>

<p>（4）更新证书</p>
<p> kubeadm alpha certs renew all –config&#x3D;kubeadm.yaml</p>
<p>（5）更新kubeconfig</p>
<p> kubeadm init phase kubeconfig all –config kubeadm.yaml</p>
<p>（6）覆盖控制节点的kubeconfig</p>
<p> mv $HOME&#x2F;.kube&#x2F;config $HOME&#x2F;.kube&#x2F;config.old cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config&lt;span style&#x3D;”color: #75715e;line-height: 26px;”&gt;#&lt;span style&#x3D;”line-height: 26px;”&gt; chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</p>
<p>（7）完成后重启kubernetes控制面的组件</p>
<p> cd &#x2F;etc&#x2F;kubernetes&#x2F;manifests mv *.yaml ..&#x2F; mv ..&#x2F;*.yaml .</p>
<blockquote>
<p>containerd运行时没有重启容器的命令，所以这里采用是直接移出再拷贝进来的操作。如果底层安装有docker，可以使用docker命令进行重启。</p>
</blockquote>
<p>（8）检查证书是否更新</p>
<p>$ echo | openssl s_client -showcerts -connect 127.0.0.1:6443 -servername api 2&gt;&#x2F;dev&#x2F;null | openssl x509 -noout -enddate  </p>
<p>$ kubeadm certs check-expiration<br>[check-expiration] Reading configuration from the cluster…<br>[check-expiration] FYI: You can look at this config file with ‘kubectl -n kube-system get cm kubeadm-config -o yaml’  </p>
<p>CERTIFICATE                EXPIRES                  RESIDUAL TIME   CERTIFICATE AUTHORITY   EXTERNALLY MANAGED<br>admin.conf                 Jul 04, 2023 09:21 UTC   364d            ca                      no<br>apiserver                  Jul 04, 2023 09:21 UTC   364d            ca                      no<br>apiserver-etcd-client      Jul 04, 2023 09:21 UTC   364d            etcd-ca                 no<br>apiserver-kubelet-client   Jul 04, 2023 09:21 UTC   364d            ca                      no<br>controller-manager.conf    Jul 04, 2023 09:21 UTC   364d            ca                      no<br>etcd-healthcheck-client    Jul 04, 2023 09:21 UTC   364d            etcd-ca                 no<br>etcd-peer                  Jul 04, 2023 09:21 UTC   364d            etcd-ca                 no<br>etcd-server                Jul 04, 2023 09:21 UTC   364d            etcd-ca                 no<br>front-proxy-client         Jul 04, 2023 09:21 UTC   364d            front-proxy-ca          no<br>scheduler.conf             Jul 04, 2023 09:21 UTC   364d            ca                      no  </p>
<p>CERTIFICATE AUTHORITY   EXPIRES                  RESIDUAL TIME   EXTERNALLY MANAGED<br>ca                      Jul 01, 2032 08:16 UTC   9y              no<br>etcd-ca                 Jul 01, 2032 08:16 UTC   9y              no<br>front-proxy-ca          Jul 01, 2032 08:16 UTC   9y              no</p>
<p>（7）其他<br>默认情况下，kubeadm 使用 <code>/etc/kubernetes/kubelet.conf</code> 中指定的 <code>/var/lib/kubelet/pki/kubelet-client-current.pem</code> 符号链接 来配置 kubelet 自动轮换客户端证书。如果此轮换过程失败，你可能会在 kube-apiserver 日志中看到 诸如<code>x509: certificate has expired or is not yet valid</code>之类的错误。</p>
<p>要解决此问题，你必须执行以下步骤：</p>
<ol>
<li><p>从故障节点备份和删除 &#x2F;etc&#x2F;kubernetes&#x2F;kubelet.conf 和 &#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;pki&#x2F;kubelet-client*。</p>
</li>
<li><p>在集群中具有 &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.key 的、正常工作的控制平面节点上 执行 <code>kubeadm alpha kubeconfig user --org system:nodes --client-name system:node:$NODE &gt; kubelet.conf</code>。$NODE 必须设置为集群中现有故障节点的名称。手动修改生成的 kubelet.conf 以调整集群名称和服务器端点， 或传递 kubeconfig user –config（此命令接受 InitConfiguration）。如果你的集群没有 ca.key，你必须在外部对 kubelet.conf 中的嵌入式证书进行签名。</p>
</li>
<li><p>将得到的 kubelet.conf 文件复制到故障节点上，作为 &#x2F;etc&#x2F;kubernetes&#x2F;kubelet.conf。</p>
</li>
<li><p>在故障节点上重启 kubelet（systemctl restart kubelet），等待 &#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;pki&#x2F;kubelet-client-current.pem 重新创建。</p>
</li>
<li><p>在故障节点上运行 kubeadm init phase kubelet-finalize all。这将使新的 kubelet.conf 文件使用 &#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;pki&#x2F;kubelet-client-current.pem 并将重新启动 kubelet。</p>
</li>
<li><p>确保节点状况变为 Ready。</p>
</li>
</ol>
<blockquote>
<p>PS：除了使用上面方式升级集群证书之外，还可以通过升级集群版本的方式升级证书。</p>
</blockquote>
<h3 id="添加-删除节点"><a href="#添加-删除节点" class="headerlink" title="添加&#x2F;删除节点"></a>添加&#x2F;删除节点</h3><p>当集群节点不足以支撑业务的时候，我们也许会对集群进行扩容，也就是添加节点以满足日常需求。当集群节点比较空闲的时候，也会对集群进行缩容，也就是删除节点以节约开支。</p>
<p>所以添加&#x2F;删除节点在日常的工作中是比较常见的操作，而且整体操作也比较简单。</p>
<h4 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h4><p>添加节点的操作和初始化node节点一样，严格按照<code>环境准备</code>和<code>初始化Node节点</code>操作即可。</p>
<p>有几点需要注意：<br>（1）所有主机hosts添加新的主机</p>
<p>$ cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF<br>192.168.205.128 kk-master<br>192.168.205.130 kk-node01<br>192.168.205.133 kk-node02<br>EOF</p>
<p>（2）查看集群token</p>
<p>$ kubeadm token list&lt;br&gt;</p>
<p>（3）如果token不存在就自己创建</p>
<p>$ kubeadm token create&lt;br&gt;</p>
<p>（4）获取ca证书sha256编码hash值</p>
<p>$ kubeadm join 192.168.205.128:6443 –token q0mjah.4k3oavynezdj8jf9 \<br>    –discovery-token-ca-cert-hash sha256:3d5c2e7d2532a4f085159d89de3ea2ea515e0784787b9c1adf0d3826c283733c \<br>    –node-name kk-node02</p>
<p>（5）然后可以看到集群添加成功</p>
<p>$ kubectl get no&lt;br&gt;NAME        STATUS   ROLES           AGE    VERSION&lt;br&gt;kk-master   Ready    control-plane   111m   v1.24.2&lt;br&gt;kk-node01   Ready    &lt;none&gt;          111m   v1.24.2&lt;br&gt;kk-node02   Ready    &lt;none&gt;          54s    v1.24.2&lt;br&gt;</p>
<h4 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h4><p>删除节点的操作也非常简单，总结如下：<br>（1）设置节点不可调度</p>
<p>$ kubectl cordon kk-node02&lt;br&gt;</p>
<p>（2）驱逐待删除节点上面的Pod</p>
<p>$  kubectl drain kk-node02 –ignore-daemonsets&#x3D;&lt;span style&#x3D;”color: #f92672;font-weight: bold;line-height: 26px;”&gt;true –delete-emptydir-data&#x3D;&lt;span style&#x3D;”color: #f92672;font-weight: bold;line-height: 26px;”&gt;true</p>
<p>（3）然后进行节点删除</p>
<p>$ kubectl delete nodes kk-node02&lt;br&gt;</p>
<p>现在，节点已经从整个集群移除。</p>
<h1 id="备份集群-1"><a href="#备份集群-1" class="headerlink" title="备份集群"></a>备份集群</h1><p>对任何系统来说，备份都必不可少，比如备份数据库，备份文件系统，备份配置文件等。</p>
<p>对于Kubernetes来说，备份也尤为重要。Kubernetes中的所有对象都是存储在Etcd中，我们可以直接对数据库进行备份。当然，Kubernetes中所有对象的配置文件也是可见的，我们也可以直接对这些配置文件进行备份。</p>
<p>在真正使用中，一般会做两手方案，即备份数据库和备份配置清单。如果其中一种方案无法进行恢复，还可以通过另一种来兜底。</p>
<p>这里同时会介绍备份Etcd数据库和备份集群配置清单，以方便各位在实际中酌情处理。</p>
<h2 id="备份数据库"><a href="#备份数据库" class="headerlink" title="备份数据库"></a>备份数据库</h2><h3 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h3><p>备份数据库比较简单，可以直接用etcdctl进行备份，在上面升级证书章节有简单提到。</p>
<p>（1）安装etcdctl命令，在?<a href="https://github.com/etcd-io/etcd/releases%E4%B8%8A%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%9A%84etcd%E5%AE%89%E8%A3%85%E5%8C%85">https://github.com/etcd-io/etcd/releases上下载对应的etcd安装包</a></p>
<p>$ wget <a href="https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz">https://github.com/etcd-io/etcd/releases/download/v3.5.3/etcd-v3.5.3-linux-amd64.tar.gz</a><br>$ tar xf etcd-v3.5.3-linux-amd64.tar.gz<br>$ mv etcd-v3.5.3-linux-amd64&#x2F;etcdctl &#x2F;usr&#x2F;<span style="color: #a6e22e;line-height: 26px;">local</span>&#x2F;bin&#x2F;<br></p>
<p>（2）检验命令</p>
<p>$ etcdctl version&lt;br&gt;etcdctl version: 3.5.3&lt;br&gt;API version: 3.5&lt;br&gt;</p>
<p>（3）进行备份操作</p>
<p>$ export ETCDCTL_API&#x3D;3&lt;br&gt;$ etcdctl –endpoints localhost:2379 snapshot save snapshot.db \&lt;br&gt;          –cacert&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt  \&lt;br&gt;          –cert&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;server.crt \&lt;br&gt;          –key&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;server.key&lt;br&gt;</p>
<p>备份Ectd需要指定证书，如果执行节点没有，可以从主节点拷贝过来。</p>
<p>执行完成过后，可以在当前目录查看到备份结果。</p>
<p>$ export ETCDCTL_API&#x3D;3&lt;br&gt;$ etcdctl –endpoints localhost:2379 snapshot save snapshot.db \&lt;br&gt;&gt;           –cacert&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt  \&lt;br&gt;&gt;           –cert&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;server.crt \&lt;br&gt;&gt;           –key&#x3D;&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;server.key&lt;br&gt;{“level”:”info”,”ts”:”2022-07-04T20:00:17.509+0800”,”caller”:”snapshot&#x2F;v3_snapshot.go:65”,”msg”:”created temporary db file”,”path”:”snapshot.db.part”}&lt;br&gt;{“level”:”info”,”ts”:”2022-07-04T20:00:17.520+0800”,”logger”:”client”,”caller”:”v3&#x2F;maintenance.go:211”,”msg”:”opened snapshot stream; downloading”}&lt;br&gt;{“level”:”info”,”ts”:”2022-07-04T20:00:17.520+0800”,”caller”:”snapshot&#x2F;v3_snapshot.go:73”,”msg”:”fetching snapshot”,”endpoint”:”localhost:2379”}&lt;br&gt;{“level”:”info”,”ts”:”2022-07-04T20:00:17.544+0800”,”logger”:”client”,”caller”:”v3&#x2F;maintenance.go:219”,”msg”:”completed snapshot read; closing”}&lt;br&gt;{“level”:”info”,”ts”:”2022-07-04T20:00:17.556+0800”,”caller”:”snapshot&#x2F;v3_snapshot.go:88”,”msg”:”fetched snapshot”,”endpoint”:”localhost:2379”,”size”:”3.6 MB”,”took”:”now”}&lt;br&gt;{“level”:”info”,”ts”:”2022-07-04T20:00:17.556+0800”,”caller”:”snapshot&#x2F;v3_snapshot.go:97”,”msg”:”saved”,”path”:”snapshot.db”}&lt;br&gt;Snapshot saved at snapshot.db&lt;br&gt;$ ll&lt;br&gt;total 3472&lt;br&gt;-rw——-. 1 root root 3551264 Jul  4 20:00 snapshot.db&lt;br&gt;</p>
<p>但是，我们不可能每次都手动来进行备份，所以最好是通过定时任务来执行。为了更好的备份，这里编写了一个简单的shell脚本，然后再加到定时任务中。</p>
<p>&lt;span style&#x3D;”color: #75715e;line-height: 26px;”&gt;#&lt;span style&#x3D;”line-height: 26px;”&gt;! &#x2F;bin&#x2F;bash&lt;br&gt;&lt;br&gt;ETCDCTL_PATH&#x3D;’&#x2F;usr&#x2F;local&#x2F;bin&#x2F;etcdctl’&lt;br&gt;ENDPOINTS&#x3D;’192.168.205.128:2379’&lt;br&gt;ETCD_DATA_DIR&#x3D;”&#x2F;var&#x2F;lib&#x2F;etcd”&lt;br&gt;BACKUP_DIR&#x3D;”&#x2F;var&#x2F;backups&#x2F;kube_etcd&#x2F;etcd-$(date +%Y-%m-%d_%H:%M:%S)”&lt;br&gt;&lt;br&gt;ETCDCTL_CERT&#x3D;”&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;server.crt”&lt;br&gt;ETCDCTL_KEY&#x3D;”&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;server.key”&lt;br&gt;ETCDCTL_CA_FILE&#x3D;”&#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;etcd&#x2F;ca.crt”&lt;br&gt;&lt;br&gt;&lt;br&gt;[ ! -d $BACKUP_DIR ] &amp;&amp; mkdir -p $BACKUP_DIR&lt;br&gt;&lt;br&gt;&lt;br&gt;export ETCDCTL_API&#x3D;2;$ETCDCTL_PATH backup –data-dir $ETCD_DATA_DIR –backup-dir $BACKUP_DIR&lt;br&gt;&lt;br&gt;sleep 3&lt;br&gt;&lt;br&gt;{&lt;br&gt;export ETCDCTL_API&#x3D;3;$ETCDCTL_PATH –endpoints&#x3D;”$ENDPOINTS” snapshot save $BACKUP_DIR&#x2F;snapshot.db \&lt;br&gt;                                   –cacert&#x3D;”$ETCDCTL_CA_FILE” \&lt;br&gt;                                   –cert&#x3D;”$ETCDCTL_CERT” \&lt;br&gt;                                   –key&#x3D;”$ETCDCTL_KEY”&lt;br&gt;} &gt; &#x2F;dev&#x2F;null &lt;br&gt;&lt;br&gt;sleep 3&lt;br&gt;&lt;br&gt;cd $BACKUP_DIR&#x2F;..&#x2F;;ls -lt |awk ‘{if(NR&gt;(5+1)){print “rm -rf “$9}}’|sh&lt;br&gt;</p>
<p>然后加入Linux定时任务，如下：</p>
<p>$ crontab -l&lt;br&gt;*&#x2F;30 * * * * &#x2F;opt&#x2F;etcd_back&#x2F;etcd_backup.sh&lt;br&gt;</p>
<h3 id="恢复"><a href="#恢复" class="headerlink" title="恢复"></a>恢复</h3><p>（1）停止kube-apiserver和etcd<br>我这里直接将所有静态Pod的YAML文件移除。</p>
<p>cd &#x2F;etc&#x2F;kubernetes&#x2F;manifests&lt;br&gt;mv *.yaml ..&#x2F;&lt;br&gt;</p>
<p>（2）移除etcd数据目录</p>
<p>$ mv &#x2F;var&#x2F;lib&#x2F;etcd{,.bak.20220705}&lt;br&gt;</p>
<p>（3）执行恢复</p>
<p>￥ ETCDCTL_API&#x3D;3 etcdctl snapshot restore snapshot.db   –name kk-master   –initial-cluster “kk-master&#x3D;<a href="https://192.168.205.128:2380/">https://192.168.205.128:2380</a>“    –initial-cluster-token etcd-cluster   –initial-advertise-peer-urls <a href="https://192.168.205.128:2380/">https://192.168.205.128:2380</a>   –data-dir&#x3D;&#x2F;var&#x2F;lib&#x2F;etcd<br></p>
<p>（4）重启Kubernetes组件</p>
<p> mv ..&#x2F;*.yaml .&lt;br&gt;</p>
<p>（5）验证集群状态</p>
<p>$ kubectl get nodes &lt;br&gt;NAME        STATUS   ROLES           AGE     VERSION&lt;br&gt;kk-master   Ready    control-plane   7h48m   v1.24.2&lt;br&gt;kk-node01   Ready    &lt;none&gt;          7h48m   v1.24.2&lt;br&gt;$ kubectl get po -A&lt;br&gt;NAMESPACE     NAME                                       READY   STATUS    RESTARTS            AGE&lt;br&gt;default       nginx1-585f98d7bf-45fnk                    1&#x2F;1     Running   0                   3h58m&lt;br&gt;kube-system   calico-kube-controllers-5d49fc6c56-pq57d   1&#x2F;1     Running   3 (&lt;invalid&gt; ago)   7h45m&lt;br&gt;kube-system   calico-node-rjdqh                          1&#x2F;1     Running   0                   7h45m&lt;br&gt;kube-system   calico-node-s8475                          1&#x2F;1     Running   0                   7h45m&lt;br&gt;kube-system   coredns-7f74c56694-qpvmv                   1&#x2F;1     Running   0                   7h48m&lt;br&gt;kube-system   coredns-7f74c56694-ww8kb                   1&#x2F;1     Running   0                   7h48m&lt;br&gt;kube-system   etcd-kk-master                             1&#x2F;1     Running   0                   7h48m&lt;br&gt;kube-system   kube-apiserver-kk-master                   1&#x2F;1     Running   2 (2m1s ago)        7h24m&lt;br&gt;kube-system   kube-controller-manager-kk-master          1&#x2F;1     Running   0                   7h24m&lt;br&gt;kube-system   kube-proxy-5pf65                           1&#x2F;1     Running   0                   7h24m&lt;br&gt;kube-system   kube-proxy-mcxlq                           1&#x2F;1     Running   0                   7h23m&lt;br&gt;kube-system   kube-scheduler-kk-master                   1&#x2F;1     Running   0                   7h24m&lt;br&gt;</p>
<h2 id="备份集群清单"><a href="#备份集群清单" class="headerlink" title="备份集群清单"></a>备份集群清单</h2><p>在Kubernetes的实际使用中，需要备份的集群清单主要有以下几种：</p>
<ul>
<li><p>Deployment类</p>
</li>
<li><p>StatfulSet类</p>
</li>
<li><p>DaemonSet类</p>
</li>
<li><p>Service类</p>
</li>
<li><p>ConfigMap类</p>
</li>
<li><p>Secret类</p>
</li>
<li><p>CronJob类</p>
</li>
<li><p>……</p>
</li>
</ul>
<p>备份整个清单可以用于快速恢复集群。而且由于备份etcd是备份的某一时刻的完整数据，无法选择备份哪些内容，并且其备份的数据除了etcd本身，其他程序不可读。</p>
<p>备份集群的方式有很多 ，简单点的可以按照“备份集群”的步骤使用脚本进行备份，由于上面已经介绍了这种方法，这章节将采用另外的工具——velero进行备份。</p>
<p>velero 是开源方案，项目地址：<a href="https://velero.io/">https://velero.io/</a></p>
<p>velero的作用：</p>
<ul>
<li><p>灾备能力：提供备份恢复k8s集群的能力</p>
</li>
<li><p>迁移能力：提供拷贝集群资源到其他集群的能力</p>
</li>
</ul>
<p>和 etcd 备份的区别：</p>
<ul>
<li><p>etcd 的备份必须拥有 etcd 运维权限，有些用户无法操作 etcd，如多租户场景。</p>
</li>
<li><p>etcd 更适合单集群内数据备份，不太适合集群迁移</p>
</li>
<li><p>etcd 是当前状态备份，velero 可以做到只备份集群内的一部分资源</p>
</li>
</ul>
<p>velero 会在你的 k8s 集群上运行一个 server pod，然后配合 velero 客户端进行操作，安装过程可以参考文档，操作是很简单的。</p>
<h4 id="安装客户端"><a href="#安装客户端" class="headerlink" title="安装客户端"></a>安装客户端</h4><p>到<a href="https://github.com/vmware-tanzu/velero/releases%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%9A%84%E7%89%88%E6%9C%AC%E5%B9%B6%E5%AE%89%E8%A3%85">https://github.com/vmware-tanzu/velero/releases下载对应的版本并安装</a></p>
<p>$ wget <a href="https://github.com/vmware-tanzu/velero/releases/download/v1.9.0/velero-v1.9.0-linux-amd64.tar.gz">https://github.com/vmware-tanzu/velero/releases/download/v1.9.0/velero-v1.9.0-linux-amd64.tar.gz</a><br>$ tar xf velero-v1.9.0-linux-amd64.tar.gz<br>$ mv velero-v1.9.0-linux-amd64&#x2F;velero &#x2F;usr&#x2F;<span style="color: #a6e22e;line-height: 26px;">local</span>&#x2F;bin&#x2F;<br>$ velero version<br>Client:<br>        Version: v1.9.0<br>        Git commit: 6021f148c4d7721285e815a3e1af761262bff029<br>&lt;error getting server version: namespaces <span style="color: #a6e22e;line-height: 26px;">“velero”</span> not found&gt;<br></p>
<h4 id="安装服务端"><a href="#安装服务端" class="headerlink" title="安装服务端"></a>安装服务端</h4><p>安装服务端的方式有两种：</p>
<ul>
<li><p>使用velero客户端安装</p>
</li>
<li><p>使用helm chart安装</p>
</li>
</ul>
<p>这里使用velero客户端进行安装。velero的后端可以选择很多对象存储，比如阿里云OSS，mino等。由于阿里云OSS需要单独购买，所以这里采用minio作为后端存储。</p>
<h5 id="安装minio"><a href="#安装minio" class="headerlink" title="安装minio"></a>安装minio</h5><p>（1）添加helm源</p>
<p>$ helm repo add minio <a href="https://helm.min.io/">https://helm.min.io/</a><br></p>
<p>（2）部署minio。由于这里只是做测试，所以没有做数据持久化等处理。</p>
<p>$ helm install minio \&lt;br&gt;  –namespace velero –create-namespace \&lt;br&gt;  –set accessKey&#x3D;minio,secretKey&#x3D;minio123 \&lt;br&gt;  –set mode&#x3D;standalone \&lt;br&gt;  –set service.type=NodePort \&lt;br&gt;  –set persistence.enabled=&lt;span style&#x3D;”color: #f92672;font-weight: bold;line-height: 26px;”&gt;false \&lt;br&gt;  minio&#x2F;minio&lt;br&gt;</p>
<p>（2）使用UI访问查看</p>
<p>$ kubectl get svc -n velero &lt;br&gt;NAME    TYPE       CLUSTER-IP     EXTERNAL-IP   PORT(S)          AGE&lt;br&gt;minio   NodePort   10.110.75.97   &lt;none&gt;        9000:32000&#x2F;TCP   92s&lt;br&gt;</p>
<p><img src="/images/1708507702-eae3190165c690972320bb9cf089cce7.png" alt="图片"></p>
<p>image.png</p>
<p>登录用户名密码为：minio:minio123</p>
<h5 id="安装velero服务端"><a href="#安装velero服务端" class="headerlink" title="安装velero服务端"></a>安装velero服务端</h5><p>（1）在minio上创建buckrt<img src="/images/1708507702-b4c0d968523ce47ec7f72a1911efadf2.png" alt="图片">（2）在velero安装目录中创建credentials-velero，写入以下内容</p>
<p>[default]&lt;br&gt;aws_access_key_id&#x3D;minio&lt;br&gt;aws_secret_access_key&#x3D;minio123&lt;br&gt;</p>
<p>（3）安装velero</p>
<p>$ velero install    \&lt;br&gt;     –provider aws   \&lt;br&gt;     –bucket velero   \&lt;br&gt;     –image velero&#x2F;velero:v1.6.3  \&lt;br&gt;  –plugins velero&#x2F;velero-plugin-for-aws:v1.2.1  \&lt;br&gt;  –namespace velero  \&lt;br&gt;  –secret-file .&#x2F;credentials-velero  \&lt;br&gt;  –use-volume-snapshots&#x3D;&lt;span style&#x3D;”color: #f92672;font-weight: bold;line-height: 26px;”&gt;false \&lt;br&gt;     –use-restic \&lt;br&gt;  –backup-location-config region&#x3D;minio,s3ForcePathStyle&#x3D;”true”,s3Url&#x3D;<a href="http://minio.velero.svc:9000/">http://minio.velero.svc:9000</a><br></p>
<p>（4）检查所有组件是否正常启动</p>
<p>$ kubectl get po -n velero&lt;br&gt;NAME                     READY   STATUS    RESTARTS   AGE&lt;br&gt;minio-6c9f559d5b-cpc2d   1&#x2F;1     Running   0          3m3s&lt;br&gt;restic-pq5bm             1&#x2F;1     Running   0          3m28s&lt;br&gt;velero-887577984-2tmm4   1&#x2F;1     Running   0          3m28s&lt;br&gt;</p>
<h3 id="执行备份操作"><a href="#执行备份操作" class="headerlink" title="执行备份操作"></a>执行备份操作</h3><p>（1）在default的namespace下创建一个nginx Pod</p>
<p>$ kubectl create deployment nginx –image nginx&lt;br&gt;</p>
<p>（2）执行备份操作，备份default下面的资源</p>
<p>$ velero backup create default-backup-20220705 –include-namespaces default –default-volumes-to-restic&lt;br&gt;</p>
<p>（3）在minio上可以查看到备份的目录已经存在<img src="/images/1708507702-951b58f806af7b79ddf2874c969989e6.png" alt="图片"></p>
<p>（4）现在删除default命名空间下的nginx Pod</p>
<p>$ kubectl delete deployment nginx&lt;br&gt;</p>
<p>（5）执行恢复操作</p>
<p>$ velero restore create –from-backup default-backup-20220705&lt;br&gt;</p>
<p>（6）可以看到default命名空间下的nginx Pod已经恢复</p>
<p>$ kubectl get po&lt;br&gt;NAME                    READY   STATUS    RESTARTS   AGE&lt;br&gt;nginx-8f458dc5b-z6fnh   1&#x2F;1     Running   0          38s&lt;br&gt;</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>Kubernetes是应用的底座，如果底座出问题了，就谈不上应用的稳定性。在实际的工作中，对基础平台的备份尤为重要，可以在遇到不可描述的事情时有兜底的方案，所以，建议对Kubernetes做好备份操作，最好是定时备份。</p>
<h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>上面就是常用的集群相关操作，熟练的掌握它们，并应用于实际，可以为你节约不少的时间成本。</p>
<p>当然除了这些常规操作，还有迁移集群、导入集群等，我认为其本质上还是备份还原的问题，只是会多考虑一点数据完整性和业务连续性，这跟具体的企业情况相关，所以在这里也不在赘述，如有兴趣可以私下交流。</p>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><ul>
<li><a href="https://github.com/kubernetes/kubernetes/tree/master/CHANGELOG">https://github.com/kubernetes/kubernetes/tree/master/CHANGELOG</a></li>
</ul>
]]></content>
      <categories>
        <category>Kubernetes</category>
      </categories>
      <tags>
        <tag>Kubernetes</tag>
      </tags>
  </entry>
  <entry>
    <title>错误日志监控平台-Sentry</title>
    <url>/2024/02/23/%E9%94%99%E8%AF%AF%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0-Sentry/</url>
    <content><![CDATA[<h2 id="1简介"><a href="#1简介" class="headerlink" title="1简介"></a><em>1</em><strong>简介</strong></h2><p>sentry 是一个开源的实时错误监控的项目，它支持很多端的配置，包括 web 前端、服务器端、移动端及其游戏端。</p>
<p>支持各种语言，例如 python、oc、java、node、javascript 等。也可以应用到各种不同的框架上面，如前端框架中的</p>
<p>vue 、angular 、react 等最流行的前端框架。</p>
<p>提供了github、slack、trello 的常见的开发工具的集成。可以自己安装并且搭建 sentry 应用。</p>
<h2 id="2优点"><a href="#2优点" class="headerlink" title="2优点"></a><em>2</em><strong>优点</strong></h2><ol>
<li>多项目，多用户</li>
<li>界面友好</li>
<li>可以配置异常触发规则，例如监控到程序出现异常后发送邮件</li>
<li>支持语言多</li>
</ol>
<h2 id="3部署Sentry"><a href="#3部署Sentry" class="headerlink" title="3部署Sentry"></a><em>3</em><strong>部署Sentry</strong></h2><p><strong>Docker 19.03.6+</strong><br><strong>Compose 1.24.1+</strong><br><strong>4 CPU Cores</strong><br><strong>8 GB RAM</strong><br><strong>20 GB Free Disk Space</strong></p>
<p><strong>实时日志平台(错误日志收集)</strong><br>[<img src="/images/1708682198-e11b85143e00382f979117b7bcac27df.png">]</p>
<h3 id="3-1部署docker"><a href="#3-1部署docker" class="headerlink" title="3.1部署docker"></a><em>3.1</em><strong>部署docker</strong></h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir /etc/docker</span><br><span class="line">yum -y localinstall containerd.io-1.2.10-3.2.fc30.x86_64.rpm docker-ce-cli-19.03.6-3.fc30.x86_64.rpm docker-ce-19.03.1-3.el7.x86_64.rpm</span><br><span class="line">tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://plqjafsr.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"># 启动Docker后台服务</span><br><span class="line">systemctl start docker &amp;&amp; systemctl enable docker</span><br><span class="line">systemctl daemon-reload       </span><br></pre></td></tr></table></figure>

<h3 id="3-2部署python3"><a href="#3-2部署python3" class="headerlink" title="3.2部署python3"></a><em>3.2</em><strong>部署python3</strong></h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum -y install python36 git</span><br><span class="line"></span><br><span class="line"># 移除之前的python</span><br><span class="line">mv /usr/bin/python /usr/bin/python2_bak</span><br></pre></td></tr></table></figure>

<h3 id="3-3安装docker-compose"><a href="#3-3安装docker-compose" class="headerlink" title="3.3安装docker-compose"></a><em>3.3</em><strong>安装docker-compose</strong></h3> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> curl -L https://get.daocloud.io/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line"></span><br><span class="line">tail -1 /etc/profile</span><br><span class="line">export PATH=&quot;/usr/local/bin:$PATH&quot;</span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line">chmod +x /usr/local/bin/docker-compose </span><br><span class="line">docker-compose --version</span><br><span class="line"># docker-compose version 1.25.5, build 8a1c60f6</span><br></pre></td></tr></table></figure>

<h3 id="3-4下载版本库"><a href="#3-4下载版本库" class="headerlink" title="3.4下载版本库"></a><em>3.4</em><strong>下载版本库</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/getsentry/onpremise.git</span><br><span class="line">cd onpremise</span><br></pre></td></tr></table></figure>

<h3 id="3-5启动安装"><a href="#3-5启动安装" class="headerlink" title="3.5启动安装"></a><em>3.5</em><strong>启动安装</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./install.sh</span><br><span class="line"></span><br><span class="line">[root@sentry-12 ~]# docker images</span><br><span class="line">REPOSITORY                             TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">sentry-cleanup-onpremise-local         latest              fb03d231ab9d        2 minutes ago       939MB</span><br><span class="line">symbolicator-cleanup-onpremise-local   latest              d5124910e9fd        2 minutes ago       190MB</span><br><span class="line">snuba-cleanup-onpremise-local          latest              b9974e6d30da        3 minutes ago       401MB</span><br><span class="line">getsentry/sentry                       nightly             b79a66325a5a        2 hours ago         939MB</span><br><span class="line">getsentry/snuba                        nightly             bbf0cc57cdb1        3 hours ago         401MB</span><br><span class="line">getsentry/snuba                        &lt;none&gt;              4dcd02402a7c        23 hours ago        401MB</span><br><span class="line">getsentry/relay                        nightly             fb4c6feab731        3 days ago          220MB</span><br><span class="line">getsentry/symbolicator                 nightly             d2df7abbe190        8 days ago          190MB</span><br><span class="line">maxmindinc/geoipupdate                 latest              8ec32cc727c7        9 days ago          10.6MB</span><br><span class="line">redis                                  5.0-alpine          618083532dc7        2 weeks ago         29.3MB</span><br><span class="line">postgres                               9.6                 673ba4512dda        2 weeks ago         200MB</span><br><span class="line">tianon/exim4                           latest              d02995a16c40        2 weeks ago         157MB</span><br><span class="line">busybox                                latest              388056c9a683        3 weeks ago         1.23MB</span><br><span class="line">yandex/clickhouse-server               20.3.9.70           abe55fc6544d        11 months ago       497MB</span><br><span class="line">nginx                                  1.16                dfcfd8e9a5d3        12 months ago       127MB</span><br><span class="line">confluentinc/cp-kafka                  5.5.0               89e8e98718a8        12 months ago       598MB</span><br><span class="line">confluentinc/cp-zookeeper              5.5.0               124ff6469e3d        12 months ago       598MB</span><br><span class="line">memcached                              1.5-alpine          0dbf6b4c454b        14 months ago       9.19MB</span><br><span class="line">[root@sentry-12 ~]# </span><br><span class="line"></span><br><span class="line"># 创建用户与密码</span><br><span class="line"># 注意内存大小</span><br><span class="line"># 启动, 通过IP:9000即可访问,用之前创建账号即可登录</span><br><span class="line">docker-compose up</span><br><span class="line"></span><br><span class="line">lsof -i:9000</span><br></pre></td></tr></table></figure>

<p>[<img src="/images/1708682198-4dee56bdca27e6d873add246ef77becd.png">]</p>
<h3 id="3-6访问"><a href="#3-6访问" class="headerlink" title="3.6访问"></a><em>3.6</em><strong>访问</strong></h3><p>[<img src="/images/1708682198-d0b40c3b1914448e2346c51719e8442a.png">]</p>
<p><strong>修改语言和时区</strong><br>[<img src="/images/1708682198-11719a09d6db70552f91f38f3a4f00fe.png">]</p>
<h2 id="4使用"><a href="#4使用" class="headerlink" title="4使用"></a><em>4</em><strong>使用</strong></h2><h3 id="4-1创建项目"><a href="#4-1创建项目" class="headerlink" title="4.1创建项目"></a><em>4.1</em><strong>创建项目</strong></h3><p>[<img src="/images/1708682198-2e7a0554964b830aa79b78e02b224b16.png">]</p>
<p>[<img src="/images/1708682198-76bedf61d45ede6adb4558dcdffbc265.png">]</p>
<p>[<img src="/images/1708682198-619bee6d4b507bc3c1f8b9bc25d594d6.png">]</p>
<p>[<img src="/images/1708682198-b6d5dfd2fdeb95cab16c35b94f2cf3d1.png">]</p>
<p><strong>再启动</strong></p>
<h2 id="5编译Jar包"><a href="#5编译Jar包" class="headerlink" title="5编译Jar包"></a><em>5</em><strong>编译Jar包</strong></h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 安装maven</span><br><span class="line">tar xf apache-maven-3.6.1-bin.tar.gz </span><br><span class="line">mv apache-maven-3.6.1 /usr/local/</span><br><span class="line">cd /usr/local/apache-maven-3.6.1/</span><br><span class="line"></span><br><span class="line">tail -2 /etc/profile</span><br><span class="line">export MAVEN_HOME=&quot;/usr/local/apache-maven-3.6.1&quot;</span><br><span class="line">export PATH=$&#123;PATH&#125;:$&#123;MAVEN_HOME&#125;/bin</span><br><span class="line"></span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"># 修改mvn仓库源</span><br><span class="line">vim /usr/local/apache-maven-3.6.1/conf/settings.xml</span><br><span class="line">&lt;mirror&gt;  </span><br><span class="line">  &lt;id&gt;alimaven&lt;/id&gt;  </span><br><span class="line">  &lt;name&gt;aliyun maven&lt;/name&gt;  </span><br><span class="line">  &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;</span><br><span class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;          </span><br><span class="line">&lt;/mirror&gt;</span><br><span class="line"></span><br><span class="line"># 将上面dsn地址修改到源码的 PassportDemoApplication类</span><br><span class="line"># 重新编译</span><br><span class="line">rm -rf target/* </span><br><span class="line">mvn clean package</span><br><span class="line"></span><br><span class="line"># 修改启动命令</span><br><span class="line">java -Dspring.cloud.nacos.discovery.server-addr=192.168.91.11:8848 \</span><br><span class="line">-Dspring.cloud.nacos.config.server-addr=192.168.91.11:8848 \</span><br><span class="line">-jar target/demo-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>

<p>[<img src="/images/1708682198-39c76ca5da1a6a4df0e3f5860d399374.png">]</p>
<p>[<img src="/images/1708682198-f9839b90adab47f9bd160918198110f1.png">]</p>
]]></content>
      <categories>
        <category>Sentry</category>
      </categories>
      <tags>
        <tag>Sentry</tag>
      </tags>
  </entry>
  <entry>
    <title>Alertmanager告警消息对接企业微信、飞书、钉钉</title>
    <url>/2024/02/26/Alertmanager%E5%91%8A%E8%AD%A6%E6%B6%88%E6%81%AF%E5%AF%B9%E6%8E%A5%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E3%80%81%E9%A3%9E%E4%B9%A6%E3%80%81%E9%92%89%E9%92%89/</url>
    <content><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>  很多公司都在使用prometheus作为监控，并使用alertmanager发送告警消息，然而有的公司内部通讯软件使用的是企业微信，或者是飞书，或者是钉钉，那么如何让监控告警消息发送到这些通讯软件呢。<br>  本文主要通过讲解自己开发的工具alertmanager-webhook来实现该功能，该工具已经支持目前主流的通讯软件。同时本工具不仅仅支持接收alertmanager告警消息，也支持接收自研告警平台发送的消息，只需先将告警消息转换成类似alertmanager的json格式即可。</p>
<h1 id="1-实现思路"><a href="#1-实现思路" class="headerlink" title="1. 实现思路"></a>1. 实现思路</h1><p>  我们知道alertmanager支持直接对接webhook，所以我们只要将alertmanager的告警消息解析成企业微信、飞书、钉钉能够识别的消息，那么再通过官方的api接口就可以发送告警消息了。<br><strong>alertmanager消息示例</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;alerts&quot;</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="string">&quot;status&quot;</span>: <span class="string">&quot;firing&quot;</span>,</span><br><span class="line">      <span class="string">&quot;labels&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;alertname&quot;</span>: <span class="string">&quot;机器宕机监测&quot;</span>,</span><br><span class="line">        <span class="string">&quot;instance&quot;</span>: <span class="string">&quot;10.180.48.2&quot;</span>,</span><br><span class="line">        <span class="string">&quot;job&quot;</span>: <span class="string">&quot;node_exporter&quot;</span>,</span><br><span class="line">        <span class="string">&quot;serverity&quot;</span>: <span class="string">&quot;warning&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;annotations&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;description&quot;</span>: <span class="string">&quot;机器:10.180.48.2 所属 job:node_exporter 宕机超过1分钟，请检查！&quot;</span>,</span><br><span class="line">        <span class="string">&quot;summary&quot;</span>: <span class="string">&quot;机器发生宕机&quot;</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="string">&quot;startsAt&quot;</span>: <span class="string">&quot;2023-10-11T11:59:09.775Z&quot;</span>,</span><br><span class="line">      <span class="string">&quot;endsAt&quot;</span>: <span class="string">&quot;0001-01-01T00:00:00Z&quot;</span>,</span><br><span class="line">      <span class="string">&quot;fingerprint&quot;</span>: <span class="string">&quot;02f13394997e5211&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br></pre></td></tr></table></figure>

<p>  这是一个常见alertmanager告警消息，可以看到是一个json的格式，其中labels和annotations里面的字段都是我们配置prometheus时设置的，其他字段是prometheus触发告警时自动生成的，那么我们只需要将这个json字符串解析为各个通讯软件能够识别的格式，就OK了。目前对接企业微信是使用的企业微信所支持的markdown格式，对接飞书是使用的飞书所支持的card格式，对接钉钉是使用的钉钉所支持的markdown格式。具体格式要求，可以到各平台的官网进行查看。</p>
<h1 id="2-工具使用"><a href="#2-工具使用" class="headerlink" title="2. 工具使用"></a>2. 工具使用</h1><p>本文分别介绍使用二进制安装和使用docker安装，该工具依赖redis，所以需要提前安装好redis。</p>
<h2 id="2-1-使用二进制部署"><a href="#2-1-使用二进制部署" class="headerlink" title="2.1 使用二进制部署"></a>2.1 使用二进制部署</h2><p>redis如何使用二进制安装，本文就不介绍了，直接介绍工具的安装。<br>下载地址：<a href="https://github.com/Rainbowhhy/alertmanager-webhook/releases/download/v1.0/alertmanager-webhook-v1.0-linux-amd64.tar.gz">https://github.com/Rainbowhhy/alertmanager-webhook/releases/download/v1.0/alertmanager-webhook-v1.0-linux-amd64.tar.gz</a></p>
<h3 id="2-1-1-下载二进制安装包并解压"><a href="#2-1-1-下载二进制安装包并解压" class="headerlink" title="2.1.1 下载二进制安装包并解压"></a>2.1.1 下载二进制安装包并解压</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/Rainbowhhy/alertmanager-webhook/releases/download/v1.0/alertmanager-webhook-v1.0-linux-amd64.tar.gz</span><br><span class="line">tar -xf alertmanager-webhook-v1.0-linux-amd64.tar.gz</span><br><span class="line"><span class="built_in">cd</span> alertmanager-webhook-v1.0-linux-amd64</span><br></pre></td></tr></table></figure>

<h3 id="2-1-2-目录结构"><a href="#2-1-2-目录结构" class="headerlink" title="2.1.2 目录结构"></a>2.1.2 目录结构</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tree alertmanager-webhook-v1.0-linux-amd64</span><br><span class="line">alertmanager-webhook-v1.0-linux-amd64</span><br><span class="line">├── alertmanager-webhook</span><br><span class="line">├── alertmanager-webhook.yaml</span><br><span class="line">├── example</span><br><span class="line">│   ├── default.tmpl</span><br><span class="line">│   ├── dingding.tmpl</span><br><span class="line">│   ├── feishu.tmpl</span><br><span class="line">│   └── qywechat.tmpl</span><br><span class="line">└── template</span><br><span class="line">    └── alert.tmpl</span><br></pre></td></tr></table></figure>

<p>解压后的目录结构：<br>alertmanager-webhook：二进制启动命令<br>alertmanager-webhook.yaml：工具配置文件<br>example：模板目录，包含各个通讯工具的告警模板<br>template：告警目录，发送消息时实际使用的模板</p>
<h3 id="2-1-3-修改配置文件"><a href="#2-1-3-修改配置文件" class="headerlink" title="2.1.3 修改配置文件"></a>2.1.3 修改配置文件</h3><p>vim alertmanager-webhook.yaml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 企业微信机器人key</span></span><br><span class="line"><span class="comment"># 使用企业微信时必须配置，不使用则留空</span></span><br><span class="line"><span class="attr">qywechatKey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 飞书机器人key</span></span><br><span class="line"><span class="comment"># 使用飞书时必须配置，不使用则留空</span></span><br><span class="line"><span class="attr">feishuKey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 钉钉机器人key</span></span><br><span class="line"><span class="comment"># 使用钉钉时必须配置，不使用则留</span></span><br><span class="line"><span class="attr">dingdingKey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Redis配置</span></span><br><span class="line"><span class="attr">redisServer:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  <span class="comment"># 必须配置</span></span><br><span class="line"><span class="attr">redisPort:</span>  <span class="comment"># 可选项，为空默认为6379</span></span><br><span class="line"><span class="attr">redisPassword:</span> <span class="string">wecloudsre@2023</span> <span class="comment"># redis未设置密码则留空，如果设置了密码登陆则必须配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志配置</span></span><br><span class="line"><span class="attr">logFileDir:</span>   <span class="comment"># 可选项，为空则为程序运行目录</span></span><br><span class="line"><span class="attr">logFilePath:</span> <span class="string">alertmanager-webhook.log</span> <span class="comment"># 必须配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务监听配置</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">9095</span> <span class="comment"># 可选项，为空则默认为9095</span></span><br><span class="line"><span class="attr">host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="comment"># 可选项，为空默认监听 127.0.0.1</span></span><br></pre></td></tr></table></figure>

<p>示例：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 企业微信机器人key</span></span><br><span class="line"><span class="comment"># 使用企业微信时必须配置，不使用则留空</span></span><br><span class="line"><span class="attr">qywechatKey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 飞书机器人key</span></span><br><span class="line"><span class="comment"># 使用飞书时必须配置，不使用则留空</span></span><br><span class="line"><span class="attr">feishuKey:</span> <span class="string">6fabe0c6-ee74-425c-81e2-4cea46abf005</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 钉钉机器人key</span></span><br><span class="line"><span class="comment"># 使用钉钉时必须配置，不使用则留</span></span><br><span class="line"><span class="attr">dingdingKey:</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Redis配置</span></span><br><span class="line"><span class="attr">redisServer:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  <span class="comment"># 必须配置</span></span><br><span class="line"><span class="attr">redisPort:</span> <span class="number">16379</span>  <span class="comment"># 可选项，为空默认为6379</span></span><br><span class="line"><span class="attr">redisPassword:</span> <span class="comment"># redis未设置密码则留空，如果设置了密码登陆则必须配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 日志配置</span></span><br><span class="line"><span class="attr">logFileDir:</span>   <span class="comment"># 可选项，为空则为程序运行目录</span></span><br><span class="line"><span class="attr">logFilePath:</span> <span class="string">alertmanager-webhook.log</span> <span class="comment"># 必须配置</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务监听配置</span></span><br><span class="line"><span class="attr">port:</span> <span class="number">9095</span> <span class="comment"># 可选项，为空则默认为9095</span></span><br><span class="line"><span class="attr">host:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span> <span class="comment"># 可选项，为空默认监听 127.0.0.1</span></span><br></pre></td></tr></table></figure>
<p>大家需要使用什么通讯工具，就配置上对应机器人的key；reidsServer需要配置成redis服务器的ip地址，redisPassword配置成redis的登陆密码；其他配置保持默认即可。</p>
<h3 id="2-1-4-配置模板"><a href="#2-1-4-配置模板" class="headerlink" title="2.1.4 配置模板"></a>2.1.4 配置模板</h3><p>默认模板内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="built_in">cat</span> template/alert.tmpl</span><br><span class="line">&#123;&#123;- <span class="keyword">if</span> eq .Status `firing` -&#125;&#125;</span><br><span class="line">&#123;&#123;- /*  自定义触发告警时的内容格式  */ -&#125;&#125;</span><br><span class="line">告警主题: &#123;&#123;.Annotations.summary&#125;&#125;</span><br><span class="line">告警级别: &#123;&#123;.Labels.serverity&#125;&#125;</span><br><span class="line">告警次数: &#123;&#123;.Count&#125;&#125;</span><br><span class="line">告警主机: &#123;&#123;.Labels.instance&#125;&#125;</span><br><span class="line">告警详情: &#123;&#123;.Annotations.description&#125;&#125;</span><br><span class="line">触发时间: &#123;&#123;.StartTime&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;- <span class="keyword">else</span> <span class="keyword">if</span> eq .Status `resolved` -&#125;&#125;</span><br><span class="line">&#123;&#123;- /*  自定义告警恢复时的内容格式  */ -&#125;&#125;</span><br><span class="line">告警主题: &#123;&#123;.Annotations.summary&#125;&#125;</span><br><span class="line">告警主机: &#123;&#123;.Labels.instance&#125;&#125;</span><br><span class="line">开始时间: &#123;&#123;.StartTime&#125;&#125;</span><br><span class="line">恢复时间: &#123;&#123;.EndTime&#125;&#125;</span><br></pre></td></tr></table></figure>

<p>（1）.Annotations.summary、.Annotations.description 是prometheus中annotations的字段，.Labels.serverity、.Labels.instance是prometheus中labels的字段，可以根据实际的prometheus中所包含的字段来进行修改。<br>（2）.Count、.StartTime、.EndTime 是固定字段，名称不可修改，可以按照实际需求，需要就加上，不需要就删除。<br>（3）注意.Annotations和.Labels中配置的字段必须是实际在prometheus中存在的，如果不存在，接收到的告警消息可能不全或者是非意料之中的。<br>（4）example目录中包含了各个通讯平台的模板实例，实际使用时可以先拷贝到template中进行修改，注意拷贝到template时，文件名称不能变，必须是template&#x2F;alert.tmpl</p>
<p>示例模板内容</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;&#123;- <span class="keyword">if</span> eq .Status `firing` -&#125;&#125;</span><br><span class="line">&#123;&#123;- /*  自定义触发告警时的内容格式  */ -&#125;&#125;</span><br><span class="line">告警主题: &#123;&#123;.Labels.alertname&#125;&#125;</span><br><span class="line">应用S码: &#123;&#123;.Labels.app_code&#125;&#125;</span><br><span class="line">应用名称: &#123;&#123;.Labels.app&#125;&#125;</span><br><span class="line">告警主机: &#123;&#123;.Labels.ip&#125;&#125;</span><br><span class="line">告警类型: &#123;&#123;.Annotations.kind&#125;&#125;</span><br><span class="line">告警级别: &#123;&#123;.Annotations.level&#125;&#125;</span><br><span class="line">告警描述: &#123;&#123;.Annotations.description&#125;&#125;</span><br><span class="line">开始时间: &#123;&#123;.StartTime&#125;&#125;</span><br><span class="line">告警次数: &#123;&#123;.Count&#125;&#125;</span><br><span class="line"></span><br><span class="line">&#123;&#123;- <span class="keyword">else</span> <span class="keyword">if</span> eq .Status `resolved` -&#125;&#125;</span><br><span class="line">&#123;&#123;- /*  自定义告警恢复时的内容格式  */ -&#125;&#125;</span><br><span class="line">告警主题: &#123;&#123;.Labels.alertname&#125;&#125;</span><br><span class="line">应用S码: &#123;&#123;.Labels.app_code&#125;&#125;</span><br><span class="line">应用名称: &#123;&#123;.Labels.app&#125;&#125;</span><br><span class="line">告警主机: &#123;&#123;.Labels.ip&#125;&#125;</span><br><span class="line">告警类型: &#123;&#123;.Annotations.kind&#125;&#125;</span><br><span class="line">告警级别: &#123;&#123;.Annotations.level&#125;&#125;</span><br><span class="line">告警描述: &#123;&#123;.Annotations.description&#125;&#125;</span><br><span class="line">开始时间: &#123;&#123;.StartTime&#125;&#125;</span><br><span class="line">关闭时间: &#123;&#123;.EndTime&#125;&#125;</span><br><span class="line">告警次数: &#123;&#123;.Count&#125;&#125;</span><br><span class="line">&#123;&#123;- end -&#125;&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-1-5-启动alertmanager-webhook"><a href="#2-1-5-启动alertmanager-webhook" class="headerlink" title="2.1.5 启动alertmanager-webhook"></a>2.1.5 启动alertmanager-webhook</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x alertmanager-webhook</span><br><span class="line">./alertmanager-webhook -c alertmanager-webhook.yaml</span><br></pre></td></tr></table></figure>

<h3 id="2-1-6-配置alertmanager"><a href="#2-1-6-配置alertmanager" class="headerlink" title="2.1.6 配置alertmanager"></a>2.1.6 配置alertmanager</h3><p>工具启动后，还需要在alertmanager中配置webhook</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># alertmanager.yml</span></span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">receivers:</span><br><span class="line">  name: webhook</span><br><span class="line">  webhook_configs:</span><br><span class="line">  <span class="comment"># 配置企业微信接口</span></span><br><span class="line">  - url: <span class="string">&#x27;http://127.0.0.1:9095/qywechat&#x27;</span></span><br><span class="line">  <span class="comment"># 配置飞书接口</span></span><br><span class="line">  - url: <span class="string">&#x27;http://127.0.0.1:9095/feishu&#x27;</span></span><br><span class="line">  <span class="comment"># 配置钉钉接口</span></span><br><span class="line">  - url: <span class="string">&#x27;http://127.0.0.1:9095/dingding&#x27;</span></span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure>

<p>实际工作中需要使用哪个通讯工具，就配置哪个工具对应的webhook接口即可。</p>
<h2 id="2-2-使用docker部署"><a href="#2-2-使用docker部署" class="headerlink" title="2.2 使用docker部署"></a>2.2 使用docker部署</h2><h3 id="2-2-1-修改配置"><a href="#2-2-1-修改配置" class="headerlink" title="2.2.1 修改配置"></a>2.2.1 修改配置</h3><p>alertmanager-webhook.yaml配置、模板配置、alertmanager.yml配置同上面的二进制文件部署</p>
<h3 id="2-2-2-docker启动"><a href="#2-2-2-docker启动" class="headerlink" title="2.2.2 docker启动"></a>2.2.2 docker启动</h3><p>docker部署比较简单，两条命令即可。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name redis -v /root/redis.conf:/etc/redis/redis.conf -p 0.0.0.0:6379:6379 redis:5.0.0 redis-server /etc/redis/redis.conf</span></span><br><span class="line">docker <span class="keyword">run</span><span class="language-bash"> -d --name alertmanager-webhook -p 0.0.0.0:9095:9095 -v /root/alertmanager-webhook.yaml:/etc/alertmanager-webhook/alertmanager-webhook.yaml rainbowhhy/alertmanager-webhook:v1.0</span></span><br></pre></td></tr></table></figure>

<h3 id="2-2-3-docker-compose启动"><a href="#2-2-3-docker-compose启动" class="headerlink" title="2.2.3 docker-compose启动"></a>2.2.3 docker-compose启动</h3><p>也可以使用docker-compose部署<br>vim docker-compose.yml</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">redis:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">redis:5.0.0</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">redis</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:6379:6379</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/redis/redis.conf:/etc/redis/redis.conf</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/redis/data:/data</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;redis-server&quot;</span>, <span class="string">&quot;/etc/redis/redis.conf&quot;</span>]</span><br><span class="line"></span><br><span class="line">  <span class="attr">alertmanager-webhook:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">alertmanager-webhook:v1.2</span></span><br><span class="line">    <span class="attr">hostname:</span> <span class="string">alertmanager-webhook</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">unless-stopped</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">alertmanager-webhook</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">:9095:9095</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/data/alertmanager-webhook/alertmanager-webhook.yaml:/etc/alertmanager-webhook/alertmanager-webhook.yaml</span></span><br><span class="line">    <span class="attr">command:</span> [<span class="string">&quot;./alertmanager-webhook&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;/etc/alertmanager-webhook/alertmanager-webhook.yaml&quot;</span>]</span><br></pre></td></tr></table></figure>

<h1 id="3-测试示例"><a href="#3-测试示例" class="headerlink" title="3. 测试示例"></a>3. 测试示例</h1><p>我们可以使用curl命令来模拟alertmanager往alertmanager-webhook发送消息：<br>以发送至企业微信为例<br><strong>触发告警</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&quot;Content-Type: application/json&quot;</span> -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;&quot;alerts&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;status&quot;: &quot;firing&quot;,</span></span><br><span class="line"><span class="string">      &quot;labels&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;alertname&quot;: &quot;机器宕机监测&quot;,</span></span><br><span class="line"><span class="string">        &quot;instance&quot;: &quot;10.180.48.2&quot;,</span></span><br><span class="line"><span class="string">        &quot;job&quot;: &quot;node_exporter&quot;,</span></span><br><span class="line"><span class="string">        &quot;serverity&quot;: &quot;warning&quot;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      &quot;annotations&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;description&quot;: &quot;机器:10.180.48.2 所属 job:node_exporter 宕机超过1分钟，请检查！&quot;,</span></span><br><span class="line"><span class="string">        &quot;summary&quot;: &quot;机器发生宕机&quot;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      &quot;startsAt&quot;: &quot;2024-01-10T11:59:09.775Z&quot;,</span></span><br><span class="line"><span class="string">      &quot;endsAt&quot;: &quot;2024-01-10T13:00:00Z&quot;,</span></span><br><span class="line"><span class="string">      &quot;fingerprint&quot;: &quot;02f13394997e5211&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> 127.0.0.1:9095/qywechat</span><br></pre></td></tr></table></figure>

<p><strong>告警恢复</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&quot;Content-Type: application/json&quot;</span> -d <span class="string">&#x27;</span></span><br><span class="line"><span class="string">&#123;&quot;alerts&quot;: [</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">      &quot;status&quot;: &quot;resolved&quot;,</span></span><br><span class="line"><span class="string">      &quot;labels&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;alertname&quot;: &quot;机器宕机监测&quot;,</span></span><br><span class="line"><span class="string">        &quot;instance&quot;: &quot;10.180.48.2&quot;,</span></span><br><span class="line"><span class="string">        &quot;job&quot;: &quot;node_exporter&quot;,</span></span><br><span class="line"><span class="string">        &quot;serverity&quot;: &quot;warning&quot;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      &quot;annotations&quot;: &#123;</span></span><br><span class="line"><span class="string">        &quot;description&quot;: &quot;机器:10.180.48.2 所属 job:node_exporter 宕机超过1分钟，请检查！&quot;,</span></span><br><span class="line"><span class="string">        &quot;summary&quot;: &quot;机器发生宕机&quot;</span></span><br><span class="line"><span class="string">      &#125;,</span></span><br><span class="line"><span class="string">      &quot;startsAt&quot;: &quot;2024-01-10T11:59:09.775Z&quot;,</span></span><br><span class="line"><span class="string">      &quot;endsAt&quot;: &quot;2024-01-10T13:00:00Z&quot;,</span></span><br><span class="line"><span class="string">      &quot;fingerprint&quot;: &quot;02f13394997e5211&quot;</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  ]</span></span><br><span class="line"><span class="string">&#125;&#x27;</span> 127.0.0.1:9095/qywechat</span><br></pre></td></tr></table></figure>

<h1 id="4-实现效果"><a href="#4-实现效果" class="headerlink" title="4. 实现效果"></a>4. 实现效果</h1><p>alertmanager-webhook工具实现的告警效果<br><strong>企业微信告警效果</strong><br><img src="/images/1708936373-631fc1b464742ad7469e745f18ece469.jpg"></p>
<p><strong>飞书告警效果</strong><br><img src="/images/1708936373-a493b811fee20f7276190c8463beacd4.jpg"></p>
<p><strong>钉钉告警效果</strong><br><img src="/images/1708936373-ce4c959b979b2c71258908a7ac6e504c.jpg"></p>
<h1 id="5-源码分享"><a href="#5-源码分享" class="headerlink" title="5. 源码分享"></a>5. 源码分享</h1><p><a href="https://github.com/Rainbowhhy/alertmanager-webhook">https://github.com/Rainbowhhy/alertmanager-webhook</a><br>本工具拿来即可用，欢迎大家提出优化建议。</p>
]]></content>
      <categories>
        <category>Alertmanager</category>
      </categories>
      <tags>
        <tag>Alertmanager</tag>
      </tags>
  </entry>
  <entry>
    <title>Skywalking高可用部署方案</title>
    <url>/2024/02/26/Skywalking%E9%AB%98%E5%8F%AF%E7%94%A8%E9%83%A8%E7%BD%B2%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<h1 id="部署架构图"><a href="#部署架构图" class="headerlink" title="部署架构图"></a>部署架构图</h1><p><img src="/images/1708941680-8b1e94d93b0785e6d5d50f776270f894.png"><br>Skywalking集群是将skywalking oap作为一个服务注册到nacos上，只要Skywalking oap服务没有全部宕机，保证有一个Skywalking oap在运行，就能进行追踪。<br>搭建一个Skywalking OAP集群需要：<br>（1）至少一个Nacos（也可以是Nacos集群）<br>（2）至少一个ElasticSearch（也可以是ES集群）<br>（3）至少2个Skywalking OAP服务<br>（4）至少1个UI</p>
<h1 id="Skywalking集群部署"><a href="#Skywalking集群部署" class="headerlink" title="Skywalking集群部署"></a>Skywalking集群部署</h1><h2 id="1-下载Skywalking"><a href="#1-下载Skywalking" class="headerlink" title="1.下载Skywalking"></a>1.下载Skywalking</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://archive.apache.org/dist/skywalking/9.3.0/apache-skywalking-apm-9.3.0.tar.gz</span><br></pre></td></tr></table></figure>

<h3 id="目录结构："><a href="#目录结构：" class="headerlink" title="目录结构："></a>目录结构：</h3><ul>
<li>webapp: UI前端的jar包和配置文件。</li>
<li>oap-libs: 后台应用的jar包以及它依赖的jar包，里面的sever-starter-**.jar是启动程序。</li>
<li>config: 启动后台应用程序的配置文件。</li>
<li>bin: 各种启动脚本，一般使用startup.<em>，用来启动web页面和对应的后台应用。<br>- oapService.</em>: 默认使用的后台启动程序的脚本。<br>- oapServiceInit.<em>: 使用init模式启动，在此模式下OAP服务器启动以初始化工作，然后退出。<br>- oapServiceNoInit.</em>: 使用no init模式启动，在此模式下OAP服务启动不进行初始化。<br>- webappService.<em>: UI前端的启动脚本。<br>- startup.</em>: 组合脚本，同时启动oapService.*和webappService.*脚本。</li>
</ul>
<h2 id="2-修改config-application-yml配置文件"><a href="#2-修改config-application-yml配置文件" class="headerlink" title="2.修改config&#x2F;application.yml配置文件"></a>2.修改config&#x2F;application.yml配置文件</h2><h3 id="1）使用nacos作为注册中心"><a href="#1）使用nacos作为注册中心" class="headerlink" title="1）使用nacos作为注册中心"></a>1）使用nacos作为注册中心</h3><p><img src="/images/1708941680-240e81176d6dd274c9021608e701478f.png" alt="1.png"></p>
<h3 id="2）修改nacos配置"><a href="#2）修改nacos配置" class="headerlink" title="2）修改nacos配置"></a>2）修改nacos配置</h3><p><img src="/images/1708941680-2d9dc643860586396817826354a0e7fc.png" alt="8.png"></p>
<h3 id="3）修改存储策略"><a href="#3）修改存储策略" class="headerlink" title="3）修改存储策略"></a>3）修改存储策略</h3><p><img src="/images/1708941680-c0856189b1c4abdd4d423722552609a4.png" alt="5.png"></p>
<h2 id="3-修改webapp-application-yml的oap-service-集群模式写多个oap服务地址"><a href="#3-修改webapp-application-yml的oap-service-集群模式写多个oap服务地址" class="headerlink" title="3.修改webapp&#x2F;application.yml的oap-service(集群模式写多个oap服务地址)"></a>3.修改webapp&#x2F;application.yml的oap-service(集群模式写多个oap服务地址)</h2><p><img src="/images/1708941680-c8fe44a788bc4caea488f021f7a67589.png" alt="6.png"></p>
<h2 id="4-启动服务"><a href="#4-启动服务" class="headerlink" title="4.启动服务"></a>4.启动服务</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sh bin/startup.sh</span><br></pre></td></tr></table></figure>

<h2 id="5-浏览器访问"><a href="#5-浏览器访问" class="headerlink" title="5.浏览器访问"></a>5.浏览器访问</h2><p>访问<a href="http://10.0.0.1:8080的控制台">http://10.0.0.1:8080的控制台</a><br><img src="/images/1708941680-22ba91eed55f7878825814d34a1380f1.png" alt="7.png"></p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis配置文件详解</title>
    <url>/2024/02/27/Redis%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Redis配置文件示例。</span><br><span class="line"># Redis configuration file example.</span><br><span class="line">#</span><br><span class="line"># 注意，为了读取配置文件，Redis必须以文件路径作为第一个参数开始：</span><br><span class="line"># Note that in order to read the configuration file, Redis must be</span><br><span class="line"># started with the file path as first argument:</span><br><span class="line">#</span><br><span class="line"># ./redis-server /path/to/redis.conf</span><br><span class="line"></span><br><span class="line"># 关于单位的说明：当需要内存大小时，可以指定</span><br><span class="line"># Note on units: when memory size is needed, it is possible to specify</span><br><span class="line">#</span><br><span class="line"># 它通常采用1k 5GB 4M等形式：</span><br><span class="line"># it in the usual form of 1k 5GB 4M and so forth:</span><br><span class="line">#</span><br><span class="line"># 1k =&gt; 1000 bytes</span><br><span class="line"># 1kb =&gt; 1024 bytes</span><br><span class="line"># 1m =&gt; 1000000 bytes</span><br><span class="line"># 1mb =&gt; 1024*1024 bytes</span><br><span class="line"># 1g =&gt; 1000000000 bytes</span><br><span class="line"># 1gb =&gt; 1024*1024*1024 bytes</span><br><span class="line">#</span><br><span class="line"># 单元不区分大小写，所以1GB 1GB都是一样的。</span><br><span class="line"># units are case insensitive so 1GB 1Gb 1gB are all the same.</span><br><span class="line">################################## INCLUDES ###################################</span><br><span class="line"></span><br><span class="line">#</span><br><span class="line"># 在此处包含一个或多个其他配置文件。如果您有一个标准的模板，可以连接到所有Redis服务器，</span><br><span class="line"># 但也需要自定义每个服务器的一些设置，那么这将非常有用。Include文件可以包含其他文件，</span><br><span class="line"># 所以请明智地使用它。</span><br><span class="line"># Include one or more other config files here.  This is useful if you</span><br><span class="line"># have a standard template that goes to all Redis servers but also need</span><br><span class="line"># to customize a few per-server settings.  Include files can include</span><br><span class="line"># other files, so use this wisely.</span><br><span class="line">#</span><br><span class="line"># 注意，admin或Redis Sentinel的命令“CONFIG REWRITE”不会重写选项“include”。</span><br><span class="line"># 由于Redis总是使用最后处理的行作为配置指令的值，因此最好将includes放在该文件的开头，</span><br><span class="line"># 以避免在运行时覆盖配置更改。</span><br><span class="line"># Notice option &quot;include&quot; won&#x27;t be rewritten by command &quot;CONFIG REWRITE&quot;</span><br><span class="line"># from admin or Redis Sentinel. Since Redis always uses the last processed</span><br><span class="line"># line as value of a configuration directive, you&#x27;d better put includes</span><br><span class="line"># at the beginning of this file to avoid overwriting config change at runtime.</span><br><span class="line">#</span><br><span class="line"># 如果您对使用include覆盖配置选项感兴趣，最好使用include作为最后一行。</span><br><span class="line"># If instead you are interested in using includes to override configuration</span><br><span class="line"># options, it is better to use include as the last line.</span><br><span class="line">#</span><br><span class="line"># include /path/to/local.conf</span><br><span class="line"># include /path/to/other.conf</span><br><span class="line"></span><br><span class="line">################################## MODULES #####################################</span><br><span class="line"></span><br><span class="line"># 启动时加载模块。如果服务器无法加载模块，它将中止。可以使用多个loadmodule指令。</span><br><span class="line"># Load modules at startup. If the server is not able to load modules</span><br><span class="line"># it will abort. It is possible to use multiple loadmodule directives.</span><br><span class="line">#</span><br><span class="line"># loadmodule /path/to/my_module.so</span><br><span class="line"># loadmodule /path/to/other_module.so</span><br><span class="line">################################## NETWORK #####################################</span><br><span class="line"></span><br><span class="line"># 默认情况下，如果没有指定“bind”配置指令，Redis将侦听服务器上所有可用网络接口的连接。</span><br><span class="line"># 可以使用“bind”配置指令（后跟一个或多个IP地址）只侦听一个或多个选定的接口。</span><br><span class="line"># By default, if no &quot;bind&quot; configuration directive is specified, Redis listens</span><br><span class="line"># for connections from all the network interfaces available on the server.</span><br><span class="line"># It is possible to listen to just one or multiple selected interfaces using</span><br><span class="line"># the &quot;bind&quot; configuration directive, followed by one or more IP addresses.</span><br><span class="line">#</span><br><span class="line"># 例如：</span><br><span class="line"># Examples:</span><br><span class="line">#</span><br><span class="line"># bind 192.168.1.100 10.0.0.1</span><br><span class="line"># bind 127.0.0.1 ::1</span><br><span class="line">#</span><br><span class="line"># ~~~警告~~~如果运行Redis的计算机直接暴露在internet上，绑定到所有接口是危险的，</span><br><span class="line"># 会将实例暴露给internet上的所有人。因此，默认情况下，我们取消注释下面的bind指令，</span><br><span class="line"># 这将强制Redis只监听IPv4 lookback接口地址（这意味着Redis将只能接受来自运行在</span><br><span class="line"># 同一台计算机上的客户端的连接）。</span><br><span class="line"># ~~~ WARNING ~~~ If the computer running Redis is directly exposed to the</span><br><span class="line"># internet, binding to all the interfaces is dangerous and will expose the</span><br><span class="line"># instance to everybody on the internet. So by default we uncomment the</span><br><span class="line"># following bind directive, that will force Redis to listen only into</span><br><span class="line"># the IPv4 lookback interface address (this means Redis will be able to</span><br><span class="line"># accept connections only from clients running into the same computer it</span><br><span class="line"># is running).</span><br><span class="line">#</span><br><span class="line"># 如果您确定希望您的实例侦听所有接口，只需注释以下行。</span><br><span class="line"># IF YOU ARE SURE YOU WANT YOUR INSTANCE TO LISTEN TO ALL THE INTERFACES</span><br><span class="line"># JUST COMMENT THE FOLLOWING LINE.</span><br><span class="line"># ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">bind 127.0.0.1</span><br><span class="line"></span><br><span class="line"># 保护模式是一层安全保护，以避免Redis实例在internet上被访问和利用。</span><br><span class="line"># Protected mode is a layer of security protection, in order to avoid that</span><br><span class="line"># Redis instances left open on the internet are accessed and exploited.</span><br><span class="line">#</span><br><span class="line"># 打开保护模式时，如果：</span><br><span class="line"># When protected mode is on and if:</span><br><span class="line">#</span><br><span class="line">#    服务器没有使用bind“指令显式绑定到一组地址。</span><br><span class="line"># 1) The server is not binding explicitly to a set of addresses using the</span><br><span class="line">#    &quot;bind&quot; directive.</span><br><span class="line">#</span><br><span class="line">#    未配置密码。</span><br><span class="line"># 2) No password is configured.</span><br><span class="line">#</span><br><span class="line"># 服务器仅接受来自从IPv4和IPv6环回地址127.0.0.1和：：1连接的客户端的连接，</span><br><span class="line"># 以及来自Unix域套接字的连接。</span><br><span class="line"># The server only accepts connections from clients connecting from the</span><br><span class="line"># IPv4 and IPv6 loopback addresses 127.0.0.1 and ::1, and from Unix domain</span><br><span class="line"># sockets.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，启用保护模式。只有当您确定希望来自其他主机的客户端连接到Redis时才应该禁用它，</span><br><span class="line"># 即使没有配置身份验证，也没有使用“bind”指令显式列出一组特定的接口。</span><br><span class="line"># By default protected mode is enabled. You should disable it only if</span><br><span class="line"># you are sure you want clients from other hosts to connect to Redis</span><br><span class="line"># even if no authentication is configured, nor a specific set of interfaces</span><br><span class="line"># are explicitly listed using the &quot;bind&quot; directive.</span><br><span class="line">protected-mode yes</span><br><span class="line"></span><br><span class="line"># 接受指定端口上的连接，默认值为6379（IANA#815344）。</span><br><span class="line"># 如果指定了端口0，Redis将不会侦听TCP套接字。</span><br><span class="line"># Accept connections on the specified port, default is 6379 (IANA #815344).</span><br><span class="line"># If port 0 is specified Redis will not listen on a TCP socket.</span><br><span class="line">port 6379</span><br><span class="line"></span><br><span class="line"># TCP listen（）积压工作。</span><br><span class="line"># TCP listen() backlog.</span><br><span class="line">#</span><br><span class="line"># 在每秒请求数高的环境中，您需要一个高积压工作，以避免客户端连接速度慢的问题。</span><br><span class="line"># 请注意，Linux内核将自动将其截断为/proc/sys/net/core/somaxconn的值，</span><br><span class="line"># 因此请确保同时提高somaxconn和tcp\u max\u syn\u backlog的值，以获得所需的效果。</span><br><span class="line"># In high requests-per-second environments you need an high backlog in order</span><br><span class="line"># to avoid slow clients connections issues. Note that the Linux kernel</span><br><span class="line"># will silently truncate it to the value of /proc/sys/net/core/somaxconn so</span><br><span class="line"># make sure to raise both the value of somaxconn and tcp_max_syn_backlog</span><br><span class="line"># in order to get the desired effect.</span><br><span class="line">tcp-backlog 511</span><br><span class="line"></span><br><span class="line"># Unix套接字。</span><br><span class="line"># Unix socket.</span><br><span class="line">#</span><br><span class="line"># 指定用于侦听传入连接的Unix套接字的路径。没有默认值，因此Redis在未指定时不会侦听unix套接字</span><br><span class="line"># Specify the path for the Unix socket that will be used to listen for</span><br><span class="line"># incoming connections. There is no default, so Redis will not listen</span><br><span class="line"># on a unix socket when not specified.</span><br><span class="line">#</span><br><span class="line"># unixsocket /tmp/redis.sock</span><br><span class="line"># unixsocketperm 700</span><br><span class="line"></span><br><span class="line"># 客户端空闲N秒后关闭连接（0表示禁用）</span><br><span class="line"># Close the connection after a client is idle for N seconds (0 to disable)</span><br><span class="line">timeout 0</span><br><span class="line"></span><br><span class="line"># TCP保持连接。</span><br><span class="line"># TCP keepalive.</span><br><span class="line">#</span><br><span class="line"># 如果非零，则在没有通信的情况下，使用SO_KEEPALIVE向客户端发送TCP确认。这有两个原因：</span><br><span class="line"># If non-zero, use SO_KEEPALIVE to send TCP ACKs to clients in absence</span><br><span class="line"># of communication. This is useful for two reasons:</span><br><span class="line">#</span><br><span class="line">#    检测死掉的同伴。</span><br><span class="line"># 1) Detect dead peers.</span><br><span class="line">#</span><br><span class="line">#    从中间的网络设备的角度来看待连接。</span><br><span class="line"># 2) Take the connection alive from the point of view of network</span><br><span class="line">#    equipment in the middle.</span><br><span class="line">#</span><br><span class="line"># 在Linux上，指定的值（以秒为单位）是用于发送ACK的时间段。</span><br><span class="line"># 请注意，要关闭连接，需要两倍的时间。</span><br><span class="line"># 在其他内核上，周期取决于内核配置。</span><br><span class="line"># On Linux, the specified value (in seconds) is the period used to send ACKs.</span><br><span class="line"># Note that to close the connection the double of the time is needed.</span><br><span class="line"># On other kernels the period depends on the kernel configuration.</span><br><span class="line">#</span><br><span class="line"># 这个选项的合理值是300秒，这是从redis3.2.1开始的新Redis默认值。</span><br><span class="line"># A reasonable value for this option is 300 seconds, which is the new</span><br><span class="line"># Redis default starting with Redis 3.2.1.</span><br><span class="line">tcp-keepalive 300</span><br><span class="line">################################ SNAPSHOTTING  ################################</span><br><span class="line">#</span><br><span class="line"># 将数据库保存在磁盘上：</span><br><span class="line"># Save the DB on disk:</span><br><span class="line">#</span><br><span class="line">#   保存 &lt;seconds&gt; &lt;changes&gt;</span><br><span class="line">#   save &lt;seconds&gt; &lt;changes&gt;</span><br><span class="line">#</span><br><span class="line">#   如果给定的秒数和对数据库执行的写入操作数都达到给定的秒数，则将保存数据库。</span><br><span class="line">#   Will save the DB if both the given number of seconds and the given</span><br><span class="line">#   number of write operations against the DB occurred.</span><br><span class="line">#</span><br><span class="line">#   在下面的示例中，行为将会保存：</span><br><span class="line">#   In the example below the behaviour will be to save:</span><br><span class="line">#</span><br><span class="line">#   900秒（15分钟）后，如果至少有一个键更改</span><br><span class="line">#   after 900 sec (15 min) if at least 1 key changed</span><br><span class="line">#</span><br><span class="line">#   300秒（5分钟）后，如果至少有10个键更改</span><br><span class="line">#   after 300 sec (5 min) if at least 10 keys changed</span><br><span class="line">#</span><br><span class="line">#   60秒后，如果至少10000个键发生更改</span><br><span class="line">#   after 60 sec if at least 10000 keys changed</span><br><span class="line">#</span><br><span class="line">#   注意：您可以通过注释掉所有“save”行来完全禁用保存。</span><br><span class="line">#   Note: you can disable saving completely by commenting out all &quot;save&quot; lines.</span><br><span class="line">#</span><br><span class="line">#   通过添加带有单个空字符串参数的save指令，也可以删除以前配置的所有保存点，如以下示例所示：</span><br><span class="line">#   It is also possible to remove all the previously configured save</span><br><span class="line">#   points by adding a save directive with a single empty string argument</span><br><span class="line">#   like in the following example:</span><br><span class="line">#</span><br><span class="line">#   save &quot;&quot;</span><br><span class="line"></span><br><span class="line">save 900 1</span><br><span class="line">save 300 10</span><br><span class="line">save 60 10000</span><br><span class="line"></span><br><span class="line"># 默认情况下，如果RDB快照已启用（至少一个保存点），并且最新的后台保存失败，Redis将停止接受写入。</span><br><span class="line"># 这将使用户意识到（以一种强硬的方式）数据没有正确地保存在磁盘上，否则很可能没有人会注意到，</span><br><span class="line"># 并且会发生一些灾难。</span><br><span class="line"># By default Redis will stop accepting writes if RDB snapshots are enabled</span><br><span class="line"># (at least one save point) and the latest background save failed.</span><br><span class="line"># This will make the user aware (in a hard way) that data is not persisting</span><br><span class="line"># on disk properly, otherwise chances are that no one will notice and some</span><br><span class="line"># disaster will happen.</span><br><span class="line">#</span><br><span class="line"># 如果后台保存过程重新开始工作，Redis将自动再次允许写操作。</span><br><span class="line"># If the background saving process will start working again Redis will</span><br><span class="line"># automatically allow writes again.</span><br><span class="line">#</span><br><span class="line"># 但是，如果您已经设置了对Redis服务器和持久性的正确监视，那么您可能需要禁用此功能，</span><br><span class="line"># 以便即使在磁盘、权限等方面出现问题时，Redis仍能正常工作。</span><br><span class="line"># However if you have setup your proper monitoring of the Redis server</span><br><span class="line"># and persistence, you may want to disable this feature so that Redis will</span><br><span class="line"># continue to work as usual even if there are problems with disk,</span><br><span class="line"># permissions, and so forth.</span><br><span class="line">stop-writes-on-bgsave-error yes</span><br><span class="line"></span><br><span class="line"># 转储.rdb数据库时使用LZF压缩字符串对象？</span><br><span class="line"># 默认设置为“是”，因为它几乎总是一个胜利。</span><br><span class="line"># 如果您想在saving child中保存一些CPU，请将其设置为“no”，但是如果您有可压缩的值或键，</span><br><span class="line"># 则数据集可能会更大。</span><br><span class="line"># Compress string objects using LZF when dump .rdb databases?</span><br><span class="line"># For default that&#x27;s set to &#x27;yes&#x27; as it&#x27;s almost always a win.</span><br><span class="line"># If you want to save some CPU in the saving child set it to &#x27;no&#x27; but</span><br><span class="line"># the dataset will likely be bigger if you have compressible values or keys.</span><br><span class="line">rdbcompression yes</span><br><span class="line"></span><br><span class="line"># 由于RDB版本5，CRC64校验和放在文件的末尾。</span><br><span class="line"># 这使格式更能抵抗损坏，但在保存和加载RDB文件时，性能会受到影响（约10%），</span><br><span class="line"># 因此可以禁用它以获得最大性能。</span><br><span class="line"># Since version 5 of RDB a CRC64 checksum is placed at the end of the file.</span><br><span class="line"># This makes the format more resistant to corruption but there is a performance</span><br><span class="line"># hit to pay (around 10%) when saving and loading RDB files, so you can disable it</span><br><span class="line"># for maximum performances.</span><br><span class="line">#</span><br><span class="line"># 在禁用校验和的情况下创建的RDB文件的校验和为零，这将告诉加载代码跳过检查。</span><br><span class="line"># RDB files created with checksum disabled have a checksum of zero that will</span><br><span class="line"># tell the loading code to skip the check.</span><br><span class="line">rdbchecksum yes</span><br><span class="line"></span><br><span class="line"># 将数据库转储到的文件名</span><br><span class="line"># The filename where to dump the DB</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"></span><br><span class="line"># 工作目录。</span><br><span class="line"># The working directory.</span><br><span class="line">#</span><br><span class="line"># DB将被写入这个目录，使用上面使用&#x27;dbfilename&#x27;配置指令指定的文件名。</span><br><span class="line"># The DB will be written inside this directory, with the filename specified</span><br><span class="line"># above using the &#x27;dbfilename&#x27; configuration directive.</span><br><span class="line">#</span><br><span class="line"># 只附加的文件也将在这个目录中创建。</span><br><span class="line"># The Append Only File will also be created inside this directory.</span><br><span class="line">#</span><br><span class="line"># 请注意，必须在此处指定目录，而不是文件名。</span><br><span class="line"># Note that you must specify a directory here, not a file name.</span><br><span class="line">dir ./</span><br><span class="line">################################# REPLICATION #################################</span><br><span class="line"></span><br><span class="line"># 主从复制。使用slaveof使Redis实例成为另一个Redis服务器的副本。</span><br><span class="line"># 关于Redis复制，需要尽快了解的一些事情。</span><br><span class="line"># Master-Slave replication. Use slaveof to make a Redis instance a copy of</span><br><span class="line"># another Redis server. A few things to understand ASAP about Redis replication.</span><br><span class="line">#</span><br><span class="line">#    Redis复制是异步的，但是您可以配置一个主设备，如果它看起来没有连接到至少给定数量的从设备，</span><br><span class="line">#    那么它就停止接受写操作。</span><br><span class="line"># 1) Redis replication is asynchronous, but you can configure a master to</span><br><span class="line">#    stop accepting writes if it appears to be not connected with at least</span><br><span class="line">#    a given number of slaves.</span><br><span class="line">#</span><br><span class="line">#    如果复制链路丢失的时间相对较少，Redis从机可以执行与主机的部分重新同步。</span><br><span class="line">#    您可能需要根据需要使用合理的值来配置复制积压工作大小（请参阅本文件的下一节）。</span><br><span class="line"># 2) Redis slaves are able to perform a partial resynchronization with the</span><br><span class="line">#    master if the replication link is lost for a relatively small amount of</span><br><span class="line">#    time. You may want to configure the replication backlog size (see the next</span><br><span class="line">#    sections of this file) with a sensible value depending on your needs.</span><br><span class="line">#</span><br><span class="line">#    复制是自动的，不需要用户干预。在网络分区之后，从机会自动尝试重新连接到主机并与它们重新同步。</span><br><span class="line"># 3) Replication is automatic and does not need user intervention. After a</span><br><span class="line">#    network partition slaves automatically try to reconnect to masters</span><br><span class="line">#    and resynchronize with them.</span><br><span class="line">#</span><br><span class="line"># slaveof &lt;masterip&gt; &lt;masterport&gt;</span><br><span class="line"></span><br><span class="line"># 如果主机受密码保护（使用下面的“requirepass”配置指令），</span><br><span class="line"># 则可以在启动复制同步过程之前通知从机进行身份验证，否则主机将拒绝从机请求。</span><br><span class="line"># If the master is password protected (using the &quot;requirepass&quot; configuration</span><br><span class="line"># directive below) it is possible to tell the slave to authenticate before</span><br><span class="line"># starting the replication synchronization process, otherwise the master will</span><br><span class="line"># refuse the slave request.</span><br><span class="line">#</span><br><span class="line"># masterauth &lt;master-password&gt;</span><br><span class="line"></span><br><span class="line"># 当从机失去与主机的连接时，或当复制仍在进行时，从机可以以两种不同的方式操作：</span><br><span class="line"># When a slave loses its connection with the master, or when the replication</span><br><span class="line"># is still in progress, the slave can act in two different ways:</span><br><span class="line">#</span><br><span class="line">#    如果slave serve stale data设置为“yes”（默认值），那么slave仍然会回复客户机请求，</span><br><span class="line">#    可能有过期的数据，或者如果这是第一次同步，那么数据集可能是空的。</span><br><span class="line"># 1) if slave-serve-stale-data is set to &#x27;yes&#x27; (the default) the slave will</span><br><span class="line">#    still reply to client requests, possibly with out of date data, or the</span><br><span class="line">#    data set may just be empty if this is the first synchronization.</span><br><span class="line">#</span><br><span class="line">#    如果slave-serve-stale data设置为“no”，</span><br><span class="line">#    则slave将以错误“SYNC with master in progress”回复除INFO和SLAVEOF之外的所有命令。</span><br><span class="line"># 2) if slave-serve-stale-data is set to &#x27;no&#x27; the slave will reply with</span><br><span class="line">#    an error &quot;SYNC with master in progress&quot; to all the kind of commands</span><br><span class="line">#    but to INFO and SLAVEOF.</span><br><span class="line">#</span><br><span class="line">slave-serve-stale-data yes</span><br><span class="line"></span><br><span class="line"># 您可以将从属实例配置为是否接受写入。对从属实例进行写入可能有助于存储一些临时数据</span><br><span class="line"># （因为写入从属实例的数据在与主实例重新同步后很容易被删除），</span><br><span class="line"># 但如果客户端由于配置错误而向其写入数据，则也可能会导致问题。</span><br><span class="line"># You can configure a slave instance to accept writes or not. Writing against</span><br><span class="line"># a slave instance may be useful to store some ephemeral data (because data</span><br><span class="line"># written on a slave will be easily deleted after resync with the master) but</span><br><span class="line"># may also cause problems if clients are writing to it because of a</span><br><span class="line"># misconfiguration.</span><br><span class="line">#</span><br><span class="line"># 因为redis2.6在默认情况下是只读的。</span><br><span class="line"># Since Redis 2.6 by default slaves are read-only.</span><br><span class="line">#</span><br><span class="line"># 注意：只读从属服务器的设计不允许暴露于internet上不受信任的客户端。</span><br><span class="line"># 它只是一个防止实例被滥用的保护层。</span><br><span class="line"># 默认情况下，只读从设备仍然导出所有管理命令，如CONFIG、DEBUG等。</span><br><span class="line"># 在一定程度上，您可以使用“rename command”来隐藏所有管理/危险命令，</span><br><span class="line"># 从而提高只读从机的安全性。</span><br><span class="line"># Note: read only slaves are not designed to be exposed to untrusted clients</span><br><span class="line"># on the internet. It&#x27;s just a protection layer against misuse of the instance.</span><br><span class="line"># Still a read only slave exports by default all the administrative commands</span><br><span class="line"># such as CONFIG, DEBUG, and so forth. To a limited extent you can improve</span><br><span class="line"># security of read only slaves using &#x27;rename-command&#x27; to shadow all the</span><br><span class="line"># administrative / dangerous commands.</span><br><span class="line">slave-read-only yes</span><br><span class="line"></span><br><span class="line"># 复制同步策略：磁盘或套接字。</span><br><span class="line"># Replication SYNC strategy: disk or socket.</span><br><span class="line">#</span><br><span class="line"># -------------------------------------------------------</span><br><span class="line"># 警告：无盘复制目前处于试验阶段</span><br><span class="line"># WARNING: DISKLESS REPLICATION IS EXPERIMENTAL CURRENTLY</span><br><span class="line"># -------------------------------------------------------</span><br><span class="line">#</span><br><span class="line"># 新的从机和重新连接的从机如果只是接收到差异而无法继续复制过程，</span><br><span class="line"># 则需要执行所谓的“完全同步”。</span><br><span class="line"># RDB文件从主设备传输到从设备。</span><br><span class="line"># 传输有两种不同的方式：</span><br><span class="line"># New slaves and reconnecting slaves that are not able to continue the replication</span><br><span class="line"># process just receiving differences, need to do what is called a &quot;full</span><br><span class="line"># synchronization&quot;. An RDB file is transmitted from the master to the slaves.</span><br><span class="line"># The transmission can happen in two different ways:</span><br><span class="line">#</span><br><span class="line">#    磁盘备份：Redis主控程序创建一个新的进程，该进程将RDB文件写入磁盘。</span><br><span class="line">#              之后，父进程将文件增量传输到从属程序。</span><br><span class="line"># 1) Disk-backed: The Redis master creates a new process that writes the RDB</span><br><span class="line">#                 file on disk. Later the file is transferred by the parent</span><br><span class="line">#                 process to the slaves incrementally.</span><br><span class="line">#    无盘：Redis master创建了一个新进程，直接将RDB文件写入从属套接字，而完全不接触磁盘。</span><br><span class="line"># 2) Diskless: The Redis master creates a new process that directly writes the</span><br><span class="line">#              RDB file to slave sockets, without touching the disk at all.</span><br><span class="line">#</span><br><span class="line"># 使用磁盘备份复制，在生成RDB文件的同时，只要生成RDB文件的当前子级完成其工作，</span><br><span class="line"># 就可以将更多的从属服务器排队并与RDB文件一起提供服务。如果使用无盘复制，则在传输开始后，</span><br><span class="line"># 到达的新从机将排队，当当前传输终止时，新的传输将开始。</span><br><span class="line"># With disk-backed replication, while the RDB file is generated, more slaves</span><br><span class="line"># can be queued and served with the RDB file as soon as the current child producing</span><br><span class="line"># the RDB file finishes its work. With diskless replication instead once</span><br><span class="line"># the transfer starts, new slaves arriving will be queued and a new transfer</span><br><span class="line"># will start when the current one terminates.</span><br><span class="line">#</span><br><span class="line"># 当使用无盘复制时，主机在开始传输之前等待一段可配置的时间（以秒为单位），</span><br><span class="line"># 希望多个从机将到达并且传输可以并行化。</span><br><span class="line"># When diskless replication is used, the master waits a configurable amount of</span><br><span class="line"># time (in seconds) before starting the transfer in the hope that multiple slaves</span><br><span class="line"># will arrive and the transfer can be parallelized.</span><br><span class="line">#</span><br><span class="line"># 对于慢速磁盘和快速（大带宽）网络，无盘复制工作得更好。</span><br><span class="line"># With slow disks and fast (large bandwidth) networks, diskless replication</span><br><span class="line"># works better.</span><br><span class="line">repl-diskless-sync no</span><br><span class="line"></span><br><span class="line"># 启用无盘复制时，可以配置服务器等待的延迟，以便生成通过套接字将RDB传输到从属服务器的子级。</span><br><span class="line"># When diskless replication is enabled, it is possible to configure the delay</span><br><span class="line"># the server waits in order to spawn the child that transfers the RDB via socket</span><br><span class="line"># to the slaves.</span><br><span class="line">#</span><br><span class="line"># 这一点很重要，因为一旦传输开始，就不可能为到达的新从属服务器提供服务，</span><br><span class="line"># 这些从属服务器将排队等待下一次RDB传输，因此服务器会等待一个延迟，以便让更多从属服务器到达。</span><br><span class="line"># This is important since once the transfer starts, it is not possible to serve</span><br><span class="line"># new slaves arriving, that will be queued for the next RDB transfer, so the server</span><br><span class="line"># waits a delay in order to let more slaves arrive.</span><br><span class="line">#</span><br><span class="line"># 延迟以秒为单位指定，默认为5秒。要完全禁用它，只需将其设置为0秒，传输将尽快开始。</span><br><span class="line"># The delay is specified in seconds, and by default is 5 seconds. To disable</span><br><span class="line"># it entirely just set it to 0 seconds and the transfer will start ASAP.</span><br><span class="line">repl-diskless-sync-delay 5</span><br><span class="line"></span><br><span class="line"># 从属服务器以预定义的间隔向服务器发送ping。可以使用repl_ping_slave_period选项更改此间隔。</span><br><span class="line"># 默认值为10秒。</span><br><span class="line"># Slaves send PINGs to server in a predefined interval. It&#x27;s possible to change</span><br><span class="line"># this interval with the repl_ping_slave_period option. The default value is 10</span><br><span class="line"># seconds.</span><br><span class="line">#</span><br><span class="line"># repl-ping-slave-period 10</span><br><span class="line"></span><br><span class="line"># 以下选项设置的复制超时：</span><br><span class="line"># The following option sets the replication timeout for:</span><br><span class="line">#</span><br><span class="line"># 1）从从从机的角度来看，同步期间的批量传输I/O。</span><br><span class="line"># 2）从从机（数据、ping）的角度看主超时。</span><br><span class="line"># 3）从主机的角度来看，从机超时（REPLCONF-ACK pings）。</span><br><span class="line"># 1) Bulk transfer I/O during SYNC, from the point of view of slave.</span><br><span class="line"># 2) Master timeout from the point of view of slaves (data, pings).</span><br><span class="line"># 3) Slave timeout from the point of view of masters (REPLCONF ACK pings).</span><br><span class="line">#</span><br><span class="line"># 务必确保此值大于为repl ping slave period指定的值，</span><br><span class="line"># 否则每次主设备和从设备之间的通信量较低时都会检测到超时。</span><br><span class="line"># It is important to make sure that this value is greater than the value</span><br><span class="line"># specified for repl-ping-slave-period otherwise a timeout will be detected</span><br><span class="line"># every time there is low traffic between the master and the slave.</span><br><span class="line">#</span><br><span class="line"># repl-timeout 60</span><br><span class="line"></span><br><span class="line"># 同步后在从属套接字上禁用TCP\U节点？</span><br><span class="line"># Disable TCP_NODELAY on the slave socket after SYNC?</span><br><span class="line">#</span><br><span class="line"># 如果您选择“是”，Redis将使用较少的TCP数据包和较少的带宽将数据发送到从属服务器。</span><br><span class="line"># 但是这会增加数据出现在从机端的延迟，对于使用默认配置的Linux内核，最长为40毫秒。</span><br><span class="line"># If you select &quot;yes&quot; Redis will use a smaller number of TCP packets and</span><br><span class="line"># less bandwidth to send data to slaves. But this can add a delay for</span><br><span class="line"># the data to appear on the slave side, up to 40 milliseconds with</span><br><span class="line"># Linux kernels using a default configuration.</span><br><span class="line">#</span><br><span class="line"># 如果选择“否”，则从机端显示数据的延迟将减少，但复制将使用更多带宽。</span><br><span class="line"># If you select &quot;no&quot; the delay for data to appear on the slave side will</span><br><span class="line"># be reduced but more bandwidth will be used for replication.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，我们会针对低延迟进行优化，但是在流量非常大的情况下，</span><br><span class="line"># 或者当主节点和从节点之间有许多跳距时，将此选项改为“是”可能是个好主意。</span><br><span class="line"># By default we optimize for low latency, but in very high traffic conditions</span><br><span class="line"># or when the master and slaves are many hops away, turning this to &quot;yes&quot; may</span><br><span class="line"># be a good idea.</span><br><span class="line">repl-disable-tcp-nodelay no</span><br><span class="line"></span><br><span class="line"># 设置复制积压大小。backlog是一个缓冲区，当从机断开连接一段时间后，它会累积从机数据，</span><br><span class="line"># 因此当从机想要再次重新连接时，通常不需要完全重新同步，但部分重新同步就足够了，</span><br><span class="line"># 只需传递从机在断开连接时丢失的部分数据。</span><br><span class="line"># Set the replication backlog size. The backlog is a buffer that accumulates</span><br><span class="line"># slave data when slaves are disconnected for some time, so that when a slave</span><br><span class="line"># wants to reconnect again, often a full resync is not needed, but a partial</span><br><span class="line"># resync is enough, just passing the portion of data the slave missed while</span><br><span class="line"># disconnected.</span><br><span class="line">#</span><br><span class="line"># 复制积压越大，从机可以断开连接的时间就越长，并且以后可以执行部分重新同步。</span><br><span class="line"># The bigger the replication backlog, the longer the time the slave can be</span><br><span class="line"># disconnected and later be able to perform a partial resynchronization.</span><br><span class="line">#</span><br><span class="line"># 只有在至少有一个从机连接时，才会分配backlog。</span><br><span class="line"># The backlog is only allocated once there is at least a slave connected.</span><br><span class="line">#</span><br><span class="line"># repl-backlog-size 1mb</span><br><span class="line"></span><br><span class="line"># 在一段时间内主设备不再连接从属设备之后，积压的工作将被释放。</span><br><span class="line"># 以下选项配置从最后一个从机断开连接开始释放积压缓冲区所需的秒数。</span><br><span class="line"># After a master has no longer connected slaves for some time, the backlog</span><br><span class="line"># will be freed. The following option configures the amount of seconds that</span><br><span class="line"># need to elapse, starting from the time the last slave disconnected, for</span><br><span class="line"># the backlog buffer to be freed.</span><br><span class="line">#</span><br><span class="line"># 请注意，从机从不为超时释放backlog，因为它们可能稍后升级为主机，</span><br><span class="line"># 并且应该能够正确地与从机“部分重新同步”：因此它们应该总是累积backlog。</span><br><span class="line"># Note that slaves never free the backlog for timeout, since they may be</span><br><span class="line"># promoted to masters later, and should be able to correctly &quot;partially</span><br><span class="line"># resynchronize&quot; with the slaves: hence they should always accumulate backlog.</span><br><span class="line">#</span><br><span class="line"># 值为0表示从不释放积压工作。</span><br><span class="line"># A value of 0 means to never release the backlog.</span><br><span class="line">#</span><br><span class="line"># repl-backlog-ttl 3600</span><br><span class="line"></span><br><span class="line"># slave priority是Redis在INFO输出中发布的整数。</span><br><span class="line"># Redis Sentinel使用它来选择一个从属设备，以便在主设备不再正常工作时升级为主设备。</span><br><span class="line"># The slave priority is an integer number published by Redis in the INFO output.</span><br><span class="line"># It is used by Redis Sentinel in order to select a slave to promote into a</span><br><span class="line"># master if the master is no longer working correctly.</span><br><span class="line">#</span><br><span class="line"># 优先级较低的从机被认为更适合提升，因此，例如，如果有三个优先级为10、100、25的从机，</span><br><span class="line"># Sentinel将选择优先级为10的从机，这是最低的。</span><br><span class="line"># A slave with a low priority number is considered better for promotion, so</span><br><span class="line"># for instance if there are three slaves with priority 10, 100, 25 Sentinel will</span><br><span class="line"># pick the one with priority 10, that is the lowest.</span><br><span class="line">#</span><br><span class="line"># 但是，特殊优先级为0表示从机无法执行主机角色，</span><br><span class="line"># 因此Redis Sentinel永远不会选择优先级为0的从机进行升级。</span><br><span class="line"># However a special priority of 0 marks the slave as not able to perform the</span><br><span class="line"># role of master, so a slave with priority of 0 will never be selected by</span><br><span class="line"># Redis Sentinel for promotion.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，优先级为100。</span><br><span class="line"># By default the priority is 100.</span><br><span class="line">slave-priority 100</span><br><span class="line"></span><br><span class="line"># 如果连接的从属设备少于N个，且延迟时间小于或等于M秒，则主设备有可能停止接受写操作。</span><br><span class="line"># It is possible for a master to stop accepting writes if there are less than</span><br><span class="line"># N slaves connected, having a lag less or equal than M seconds.</span><br><span class="line">#</span><br><span class="line"># N个从机需要处于“在线”状态。</span><br><span class="line"># The N slaves need to be in &quot;online&quot; state.</span><br><span class="line">#</span><br><span class="line"># 滞后时间（以秒为单位）必须&lt;=指定值，它是从从从机接收的最后一次ping（通常每秒发送一次）计算出来的。</span><br><span class="line"># The lag in seconds, that must be &lt;= the specified value, is calculated from</span><br><span class="line"># the last ping received from the slave, that is usually sent every second.</span><br><span class="line">#</span><br><span class="line"># 此选项不保证N个复制副本将接受写入，</span><br><span class="line"># 但将在没有足够的从副本可用时将丢失写入的暴露窗口限制在指定的秒数内。</span><br><span class="line"># This option does not GUARANTEE that N replicas will accept the write, but</span><br><span class="line"># will limit the window of exposure for lost writes in case not enough slaves</span><br><span class="line"># are available, to the specified number of seconds.</span><br><span class="line">#</span><br><span class="line"># 例如，要要求至少3个滞后时间小于等于10秒的从机，请使用：</span><br><span class="line"># For example to require at least 3 slaves with a lag &lt;= 10 seconds use:</span><br><span class="line">#</span><br><span class="line"># min-slaves-to-write 3</span><br><span class="line"># min-slaves-max-lag 10</span><br><span class="line">#</span><br><span class="line"># 将其中一个设置为0将禁用该功能。</span><br><span class="line"># Setting one or the other to 0 disables the feature.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，要写入的最小从属设置为0（功能已禁用），最小从属最大滞后设置为10。</span><br><span class="line"># By default min-slaves-to-write is set to 0 (feature disabled) and</span><br><span class="line"># min-slaves-max-lag is set to 10.</span><br><span class="line"></span><br><span class="line"># Redis主机能够以不同的方式列出连接的从机的地址和端口。</span><br><span class="line"># 例如，“信息复制”部分提供了这些信息，Redis Sentinel在其他工具中使用这些信息来发现从属实例。</span><br><span class="line"># 另一个可以获得这些信息的地方是主机的“ROLE”命令的输出。</span><br><span class="line"># A Redis master is able to list the address and port of the attached</span><br><span class="line"># slaves in different ways. For example the &quot;INFO replication&quot; section</span><br><span class="line"># offers this information, which is used, among other tools, by</span><br><span class="line"># Redis Sentinel in order to discover slave instances.</span><br><span class="line"># Another place where this info is available is in the output of the</span><br><span class="line"># &quot;ROLE&quot; command of a master.</span><br><span class="line">#</span><br><span class="line"># 从机通常报告的列出的IP和地址通过以下方式获得：</span><br><span class="line"># The listed IP and address normally reported by a slave is obtained</span><br><span class="line"># in the following way:</span><br><span class="line">#</span><br><span class="line">#   IP：通过检查从机用于连接主机的套接字的对等地址自动检测地址。</span><br><span class="line">#   IP: The address is auto detected by checking the peer address</span><br><span class="line">#   of the socket used by the slave to connect with the master.</span><br><span class="line">#</span><br><span class="line">#   端口：端口在复制握手期间由从机通信，通常是从机用于列出连接的端口。</span><br><span class="line">#   Port: The port is communicated by the slave during the replication</span><br><span class="line">#   handshake, and is normally the port that the slave is using to</span><br><span class="line">#   list for connections.</span><br><span class="line">#</span><br><span class="line"># 然而，当使用端口转发或网络地址转换（NAT）时，从机实际上可以通过不同的IP和端口对到达。</span><br><span class="line"># 从属服务器可以使用以下两个选项向其主服务器报告一组特定的IP和端口，以便INFO和ROLE都报告这些值。</span><br><span class="line"># However when port forwarding or Network Address Translation (NAT) is</span><br><span class="line"># used, the slave may be actually reachable via different IP and port</span><br><span class="line"># pairs. The following two options can be used by a slave in order to</span><br><span class="line"># report to its master a specific set of IP and port, so that both INFO</span><br><span class="line"># and ROLE will report those values.</span><br><span class="line">#</span><br><span class="line"># 如果只需要覆盖端口或IP地址，则无需同时使用这两个选项。</span><br><span class="line"># There is no need to use both the options if you need to override just</span><br><span class="line"># the port or the IP address.</span><br><span class="line">#</span><br><span class="line"># slave-announce-ip 5.5.5.5</span><br><span class="line"># slave-announce-port 1234</span><br><span class="line">################################## SECURITY ###################################</span><br><span class="line"></span><br><span class="line"># 要求客户端在处理任何其他命令之前发出AUTH&lt;PASSWORD&gt;。</span><br><span class="line"># 在您不信任其他人可以访问运行redis服务器的主机的环境中，这可能很有用。</span><br><span class="line"># Require clients to issue AUTH &lt;PASSWORD&gt; before processing any other</span><br><span class="line"># commands.  This might be useful in environments in which you do not trust</span><br><span class="line"># others with access to the host running redis-server.</span><br><span class="line">#</span><br><span class="line"># 为了向后兼容性和大多数人不需要auth（例如，他们运行自己的服务器），这应该被注释掉。</span><br><span class="line"># This should stay commented out for backward compatibility and because most</span><br><span class="line"># people do not need auth (e.g. they run their own servers).</span><br><span class="line">#</span><br><span class="line"># 警告：由于Redis速度非常快，外部用户可以在一个好的盒子上每秒尝试多达150k个密码。</span><br><span class="line"># 这意味着你应该使用一个非常强大的密码，否则它将很容易被打破。</span><br><span class="line"># Warning: since Redis is pretty fast an outside user can try up to</span><br><span class="line"># 150k passwords per second against a good box. This means that you should</span><br><span class="line"># use a very strong password otherwise it will be very easy to break.</span><br><span class="line">#</span><br><span class="line"># requirepass foobared</span><br><span class="line"></span><br><span class="line"># 命令重命名。</span><br><span class="line"># Command renaming.</span><br><span class="line">#</span><br><span class="line"># 可以在共享环境中更改危险命令的名称。例如，CONFIG命令可能会被重命名为一些难以猜测的内容，</span><br><span class="line"># 这样它仍然可以用于内部使用工具，但不可用于一般客户机。</span><br><span class="line"># It is possible to change the name of dangerous commands in a shared</span><br><span class="line"># environment. For instance the CONFIG command may be renamed into something</span><br><span class="line"># hard to guess so that it will still be available for internal-use tools</span><br><span class="line"># but not available for general clients.</span><br><span class="line">#</span><br><span class="line"># 例如：</span><br><span class="line"># Example:</span><br><span class="line">#</span><br><span class="line"># rename-command CONFIG b840fc02d524045429941cc15f59e41cb7be6c52</span><br><span class="line">#</span><br><span class="line"># 也可以通过将命令重命名为空字符串来完全终止命令：</span><br><span class="line"># It is also possible to completely kill a command by renaming it into</span><br><span class="line"># an empty string:</span><br><span class="line">#</span><br><span class="line"># rename-command CONFIG &quot;&quot;</span><br><span class="line">#</span><br><span class="line"># 请注意，更改登录到AOF文件或传输到从属服务器的命令的名称可能会导致问题。</span><br><span class="line"># Please note that changing the name of commands that are logged into the</span><br><span class="line"># AOF file or transmitted to slaves may cause problems.</span><br><span class="line">################################### CLIENTS ####################################</span><br><span class="line"></span><br><span class="line"># 设置同时连接的最大客户端数。默认情况下，此限制设置为10000个客户端，</span><br><span class="line"># 但是如果Redis服务器无法配置进程文件限制以允许指定的限制，</span><br><span class="line"># 则允许的最大客户端数将设置为当前文件限制减去32（因为Redis保留了一些文件描述符供内部使用）。</span><br><span class="line"># Set the max number of connected clients at the same time. By default</span><br><span class="line"># this limit is set to 10000 clients, however if the Redis server is not</span><br><span class="line"># able to configure the process file limit to allow for the specified limit</span><br><span class="line"># the max number of allowed clients is set to the current file limit</span><br><span class="line"># minus 32 (as Redis reserves a few file descriptors for internal uses).</span><br><span class="line">#</span><br><span class="line"># 一旦达到限制，Redis将关闭所有新连接，并发送一个错误“max number of clients reached”。</span><br><span class="line"># Once the limit is reached Redis will close all the new connections sending</span><br><span class="line"># an error &#x27;max number of clients reached&#x27;.</span><br><span class="line">#</span><br><span class="line"># maxclients 10000</span><br><span class="line">############################## MEMORY MANAGEMENT ################################</span><br><span class="line"></span><br><span class="line"># 将内存使用限制设置为指定的字节数。</span><br><span class="line"># 当达到内存限制时，Redis将根据所选的逐出策略（参见maxmemory策略）尝试删除密钥。</span><br><span class="line"># Set a memory usage limit to the specified amount of bytes.</span><br><span class="line"># When the memory limit is reached Redis will try to remove keys</span><br><span class="line"># according to the eviction policy selected (see maxmemory-policy).</span><br><span class="line">#</span><br><span class="line"># 如果Redis无法根据策略删除密钥，或者如果策略设置为“noeviction”，</span><br><span class="line"># Redis将开始以错误的方式答复使用更多内存的命令，如set、LPUSH等，并将继续答复GET等只读命令。</span><br><span class="line"># If Redis can&#x27;t remove keys according to the policy, or if the policy is</span><br><span class="line"># set to &#x27;noeviction&#x27;, Redis will start to reply with errors to commands</span><br><span class="line"># that would use more memory, like SET, LPUSH, and so on, and will continue</span><br><span class="line"># to reply to read-only commands like GET.</span><br><span class="line">#</span><br><span class="line"># 当使用Redis作为LRU或LFU缓存，或者为实例设置硬内存限制（使用“noeviction”策略）时，此选项通常很有用</span><br><span class="line"># This option is usually useful when using Redis as an LRU or LFU cache, or to</span><br><span class="line"># set a hard memory limit for an instance (using the &#x27;noeviction&#x27; policy).</span><br><span class="line">#</span><br><span class="line"># 警告：如果在maxmemory打开的情况下将从属服务器连接到实例，</span><br><span class="line"># 则从已用内存计数中减去为从属服务器提供数据所需的输出缓冲区的大小，</span><br><span class="line"># 这样网络问题/重新同步就不会触发退出密钥的循环，反过来，从机的输出缓冲区充满了被逐出的密钥的del，</span><br><span class="line"># 从而触发了更多密钥的删除，以此类推，直到数据库完全清空。</span><br><span class="line"># WARNING: If you have slaves attached to an instance with maxmemory on,</span><br><span class="line"># the size of the output buffers needed to feed the slaves are subtracted</span><br><span class="line"># from the used memory count, so that network problems / resyncs will</span><br><span class="line"># not trigger a loop where keys are evicted, and in turn the output</span><br><span class="line"># buffer of slaves is full with DELs of keys evicted triggering the deletion</span><br><span class="line"># of more keys, and so forth until the database is completely emptied.</span><br><span class="line">#</span><br><span class="line"># 总之...如果您连接了从机，建议您设置maxmemory的下限，</span><br><span class="line"># 以便系统上有一些可用RAM用于从机输出缓冲区（但如果策略为“noeviction”，则不需要这样做）。</span><br><span class="line"># In short... if you have slaves attached it is suggested that you set a lower</span><br><span class="line"># limit for maxmemory so that there is some free RAM on the system for slave</span><br><span class="line"># output buffers (but this is not needed if the policy is &#x27;noeviction&#x27;).</span><br><span class="line">#</span><br><span class="line"># maxmemory &lt;bytes&gt;</span><br><span class="line"></span><br><span class="line"># MAXMEMORY策略：当到达MAXMEMORY时，Redis将如何选择要删除的内容。您可以从五种行为中选择：</span><br><span class="line"># MAXMEMORY POLICY: how Redis will select what to remove when maxmemory</span><br><span class="line"># is reached. You can select among five behaviors:</span><br><span class="line">#</span><br><span class="line">#                 在具有过期集的密钥中使用近似的LRU逐出。</span><br><span class="line"># volatile-lru -&gt; Evict using approximated LRU among the keys with an expire set.</span><br><span class="line">#</span><br><span class="line">#                使用近似的LRU逐出任何密钥。</span><br><span class="line"># allkeys-lru -&gt; Evict any key using approximated LRU.</span><br><span class="line">#</span><br><span class="line">#                 在具有过期集的键中使用近似LFU逐出。</span><br><span class="line"># volatile-lfu -&gt; Evict using approximated LFU among the keys with an expire set.</span><br><span class="line">#</span><br><span class="line">#                使用近似LFU逐出任何键。</span><br><span class="line"># allkeys-lfu -&gt; Evict any key using approximated LFU.</span><br><span class="line">#</span><br><span class="line">#                    从具有过期集的密钥中移除随机密钥。</span><br><span class="line"># volatile-random -&gt; Remove a random key among the ones with an expire set.</span><br><span class="line">#</span><br><span class="line">#                   删除随机键，任意键。</span><br><span class="line"># allkeys-random -&gt; Remove a random key, any key.</span><br><span class="line">#</span><br><span class="line">#                 删除过期时间最近的密钥（次要TTL）</span><br><span class="line"># volatile-ttl -&gt; Remove the key with the nearest expire time (minor TTL)</span><br><span class="line">#</span><br><span class="line">#               不逐出任何内容，只返回一个写操作错误。</span><br><span class="line"># noeviction -&gt; Don&#x27;t evict anything, just return an error on write operations.</span><br><span class="line">#</span><br><span class="line"># LRU表示最近最少使用</span><br><span class="line"># LRU means Least Recently Used</span><br><span class="line">#</span><br><span class="line"># LFU表示使用频率最低</span><br><span class="line"># LFU means Least Frequently Used</span><br><span class="line">#</span><br><span class="line"># LRU、LFU和volatile-ttl均采用近似随机算法实现。</span><br><span class="line"># Both LRU, LFU and volatile-ttl are implemented using approximated</span><br><span class="line"># randomized algorithms.</span><br><span class="line">#</span><br><span class="line"># 注意：对于上述任何策略，Redis都会在写操作时返回一个错误，因为没有合适的键来逐出。</span><br><span class="line"># Note: with any of the above policies, Redis will return an error on write</span><br><span class="line">#       operations, when there are no suitable keys for eviction.</span><br><span class="line">#</span><br><span class="line">#                          在编写之日，这些命令是：</span><br><span class="line">#       At the date of writing these commands are: set setnx setex append</span><br><span class="line">#       incr decr rpush lpush rpushx lpushx linsert lset rpoplpush sadd</span><br><span class="line">#       sinter sinterstore sunion sunionstore sdiff sdiffstore zadd zincrby</span><br><span class="line">#       zunionstore zinterstore hset hsetnx hmset hincrby incrby decrby</span><br><span class="line">#       getset mset msetnx exec sort</span><br><span class="line">#</span><br><span class="line"># 默认值为：</span><br><span class="line"># The default is:</span><br><span class="line">#</span><br><span class="line"># maxmemory-policy noeviction</span><br><span class="line"></span><br><span class="line"># LRU、LFU和minimal-TTL算法不是精确算法，而是近似算法（为了节省内存），因此您可以调整它的速度或精度。</span><br><span class="line"># 对于默认Redis将检查五个键并选择最近使用较少的键，您可以使用以下配置指令更改样本大小。</span><br><span class="line"># LRU, LFU and minimal TTL algorithms are not precise algorithms but approximated</span><br><span class="line"># algorithms (in order to save memory), so you can tune it for speed or</span><br><span class="line"># accuracy. For default Redis will check five keys and pick the one that was</span><br><span class="line"># used less recently, you can change the sample size using the following</span><br><span class="line"># configuration directive.</span><br><span class="line">#</span><br><span class="line"># 默认值5会产生足够好的结果。10非常接近真实的LRU，但需要更多的CPU。3更快，但不是很准确。</span><br><span class="line"># The default of 5 produces good enough results. 10 Approximates very closely</span><br><span class="line"># true LRU but costs more CPU. 3 is faster but not very accurate.</span><br><span class="line">#</span><br><span class="line"># maxmemory-samples 5</span><br><span class="line">############################# LAZY FREEING ####################################</span><br><span class="line"></span><br><span class="line"># Redis有两个删除键的原语。一个称为DEL，是对象的阻塞删除。这意味着服务器停止处理新命令，</span><br><span class="line"># 以便以同步方式回收与对象关联的所有内存。如果删除的键与一个小对象相关联，</span><br><span class="line"># 那么执行DEL命令所需的时间非常少，与Redis中的大多数其他O（1）或O（logn）命令相当。</span><br><span class="line"># 但是，如果密钥与包含数百万个元素的聚合值相关联，则服务器可以阻塞很长时间（甚至几秒钟）以完成操作。</span><br><span class="line"># Redis has two primitives to delete keys. One is called DEL and is a blocking</span><br><span class="line"># deletion of the object. It means that the server stops processing new commands</span><br><span class="line"># in order to reclaim all the memory associated with an object in a synchronous</span><br><span class="line"># way. If the key deleted is associated with a small object, the time needed</span><br><span class="line"># in order to execute the DEL command is very small and comparable to most other</span><br><span class="line"># O(1) or O(log_N) commands in Redis. However if the key is associated with an</span><br><span class="line"># aggregated value containing millions of elements, the server can block for</span><br><span class="line"># a long time (even seconds) in order to complete the operation.</span><br><span class="line">#</span><br><span class="line"># 基于上述原因，Redis还提供了UNLINK（non-blocking DEL）和FLUSHDB命令的ASYNC选项等非阻塞删除原语，</span><br><span class="line"># 以便在后台回收内存。这些命令在固定时间内执行。另一个线程将尽可能快地增量释放背景中的对象。</span><br><span class="line"># For the above reasons Redis also offers non blocking deletion primitives</span><br><span class="line"># such as UNLINK (non blocking DEL) and the ASYNC option of FLUSHALL and</span><br><span class="line"># FLUSHDB commands, in order to reclaim memory in background. Those commands</span><br><span class="line"># are executed in constant time. Another thread will incrementally free the</span><br><span class="line"># object in the background as fast as possible.</span><br><span class="line">#</span><br><span class="line"># FLUSHDB和FLUSHDB的DEL、UNLINK和ASYNC选项由用户控制。</span><br><span class="line"># 应用程序的设计决定了何时使用其中一个是好主意。然而，Redis服务器有时不得不删除密钥或刷新整个数据库，</span><br><span class="line"># 作为其他操作的副作用。具体来说，在以下场景中，Redis独立于用户调用删除对象：</span><br><span class="line"># DEL, UNLINK and ASYNC option of FLUSHALL and FLUSHDB are user-controlled.</span><br><span class="line"># It&#x27;s up to the design of the application to understand when it is a good</span><br><span class="line"># idea to use one or the other. However the Redis server sometimes has to</span><br><span class="line"># delete keys or flush the whole database as a side effect of other operations.</span><br><span class="line"># Specifically Redis deletes objects independently of a user call in the</span><br><span class="line"># following scenarios:</span><br><span class="line">#</span><br><span class="line">#    逐出时，由于maxmemory和maxmemory策略配置，为了给新数据腾出空间，而不超过指定的内存限制。</span><br><span class="line"># 1) On eviction, because of the maxmemory and maxmemory policy configurations,</span><br><span class="line">#    in order to make room for new data, without going over the specified</span><br><span class="line">#    memory limit.</span><br><span class="line">#</span><br><span class="line">#    因为expire：当必须从内存中删除具有相关生存时间的密钥（请参阅expire命令）时。</span><br><span class="line"># 2) Because of expire: when a key with an associated time to live (see the</span><br><span class="line">#    EXPIRE command) must be deleted from memory.</span><br><span class="line">#</span><br><span class="line">#    因为命令的一个副作用是在一个可能已经存在的键上存储数据。</span><br><span class="line">#    例如，当用另一个密钥内容替换旧密钥内容时，RENAME命令可能会删除它。</span><br><span class="line">#    类似地，SUNIONSTORE或SORT with STORE选项可能会删除现有密钥。</span><br><span class="line">#    SET命令本身删除指定键的任何旧内容，以便用指定的字符串替换它。</span><br><span class="line"># 3) Because of a side effect of a command that stores data on a key that may</span><br><span class="line">#    already exist. For example the RENAME command may delete the old key</span><br><span class="line">#    content when it is replaced with another one. Similarly SUNIONSTORE</span><br><span class="line">#    or SORT with STORE option may delete existing keys. The SET command</span><br><span class="line">#    itself removes any old content of the specified key in order to replace</span><br><span class="line">#    it with the specified string.</span><br><span class="line">#</span><br><span class="line">#    在复制过程中，当从机与其主机执行完全重新同步时，整个数据库的内容将被删除，</span><br><span class="line">#    以便加载刚刚传输的RDB文件。</span><br><span class="line"># 4) During replication, when a slave performs a full resynchronization with</span><br><span class="line">#    its master, the content of the whole database is removed in order to</span><br><span class="line">#    load the RDB file just transfered.</span><br><span class="line">#</span><br><span class="line"># 在上述所有情况下，默认情况是以阻塞方式删除对象，就像调用DEL一样。</span><br><span class="line"># 但是，您可以使用以下配置指令专门配置每种情况，以非阻塞方式释放内存，就像调用UNLINK一样：</span><br><span class="line"># In all the above cases the default is to delete objects in a blocking way,</span><br><span class="line"># like if DEL was called. However you can configure each case specifically</span><br><span class="line"># in order to instead release memory in a non-blocking way like if UNLINK</span><br><span class="line"># was called, using the following configuration directives:</span><br><span class="line"></span><br><span class="line">lazyfree-lazy-eviction no</span><br><span class="line">lazyfree-lazy-expire no</span><br><span class="line">lazyfree-lazy-server-del no</span><br><span class="line">slave-lazy-flush no</span><br><span class="line">############################## APPEND ONLY MODE ###############################</span><br><span class="line"></span><br><span class="line"># 默认情况下，Redis将数据集异步转储到磁盘上。这种模式在许多应用程序中已经足够好了，</span><br><span class="line"># 但是Redis进程出现问题或断电可能会导致几分钟的写丢失（取决于配置的保存点）。</span><br><span class="line"># By default Redis asynchronously dumps the dataset on disk. This mode is</span><br><span class="line"># good enough in many applications, but an issue with the Redis process or</span><br><span class="line"># a power outage may result into a few minutes of writes lost (depending on</span><br><span class="line"># the configured save points).</span><br><span class="line">#</span><br><span class="line"># 仅附加文件是一种可选的持久性模式，它提供了更好的持久性。</span><br><span class="line"># 例如，如果使用默认的数据fsync策略（见后面的配置文件），</span><br><span class="line"># Redis可能会在服务器断电之类的戏剧性事件中丢失一秒钟的写操作，或者如果Redis进程本身发生错误，</span><br><span class="line"># 但操作系统仍然正常运行，则会丢失一次写操作。</span><br><span class="line"># The Append Only File is an alternative persistence mode that provides</span><br><span class="line"># much better durability. For instance using the default data fsync policy</span><br><span class="line"># (see later in the config file) Redis can lose just one second of writes in a</span><br><span class="line"># dramatic event like a server power outage, or a single write if something</span><br><span class="line"># wrong with the Redis process itself happens, but the operating system is</span><br><span class="line"># still running correctly.</span><br><span class="line">#</span><br><span class="line"># AOF和RDB持久性可以同时启用而不会出现问题。</span><br><span class="line"># 如果启动时启用了AOF，Redis将加载AOF，即具有更好持久性保证的文件。</span><br><span class="line"># AOF and RDB persistence can be enabled at the same time without problems.</span><br><span class="line"># If the AOF is enabled on startup Redis will load the AOF, that is the file</span><br><span class="line"># with the better durability guarantees.</span><br><span class="line">#</span><br><span class="line"># Please check http://redis.io/topics/persistence for more information.</span><br><span class="line"></span><br><span class="line">appendonly no</span><br><span class="line"></span><br><span class="line"># 仅附加文件的名称（默认值：“appendonly.aof”）</span><br><span class="line"># The name of the append only file (default: &quot;appendonly.aof&quot;)</span><br><span class="line"></span><br><span class="line">appendfilename &quot;appendonly.aof&quot;</span><br><span class="line"></span><br><span class="line"># fsync（）调用告诉操作系统实际将数据写入磁盘，而不是等待输出缓冲区中的更多数据。</span><br><span class="line"># 有些操作系统真的会在磁盘上刷新数据，有些操作系统只会尝试尽快这样做。</span><br><span class="line"># The fsync() call tells the Operating System to actually write data on disk</span><br><span class="line"># instead of waiting for more data in the output buffer. Some OS will really flush</span><br><span class="line"># data on disk, some other OS will just try to do it ASAP.</span><br><span class="line">#</span><br><span class="line"># Redis支持三种不同的模式：</span><br><span class="line"># Redis supports three different modes:</span><br><span class="line">#</span><br><span class="line">#       否：不要fsync，只要让操作系统在需要时刷新数据即可。更快。</span><br><span class="line">#     总是：每次写入仅附加日志后进行fsync。慢，最安全。</span><br><span class="line"># everysec: fsync每秒只同步一次。妥协。</span><br><span class="line"># no: don&#x27;t fsync, just let the OS flush the data when it wants. Faster.</span><br><span class="line"># always: fsync after every write to the append only log. Slow, Safest.</span><br><span class="line"># everysec: fsync only one time every second. Compromise.</span><br><span class="line">#</span><br><span class="line"># 默认值是“everysec”，因为这通常是速度和数据安全之间的正确折衷。这是由你来理解，</span><br><span class="line"># 如果你可以放松这个“否”，这将让操作系统刷新输出缓冲器当它想要的，</span><br><span class="line"># 为了更好的性能（但如果你能生活在一些数据丢失的想法，考虑默认持久模式的快照），或相反，</span><br><span class="line"># 使用“总是”这是非常缓慢，但有点比everysec安全。</span><br><span class="line"># The default is &quot;everysec&quot;, as that&#x27;s usually the right compromise between</span><br><span class="line"># speed and data safety. It&#x27;s up to you to understand if you can relax this to</span><br><span class="line"># &quot;no&quot; that will let the operating system flush the output buffer when</span><br><span class="line"># it wants, for better performances (but if you can live with the idea of</span><br><span class="line"># some data loss consider the default persistence mode that&#x27;s snapshotting),</span><br><span class="line"># or on the contrary, use &quot;always&quot; that&#x27;s very slow but a bit safer than</span><br><span class="line"># everysec.</span><br><span class="line">#</span><br><span class="line"># 更多详情请查看以下文章：</span><br><span class="line"># More details please check the following article:</span><br><span class="line"># http://antirez.com/post/redis-persistence-demystified.html</span><br><span class="line">#</span><br><span class="line"># 如果不确定，请使用“everysec”。</span><br><span class="line"># If unsure, use &quot;everysec&quot;.</span><br><span class="line"></span><br><span class="line"># appendfsync always</span><br><span class="line">appendfsync everysec</span><br><span class="line"># appendfsync no</span><br><span class="line"></span><br><span class="line"># 当AOF fsync策略设置为always或everysec，并且后台保存进程（后台保存或AOF日志后台重写）</span><br><span class="line"># 正在对磁盘执行大量I/O时，在某些Linux配置中，Redis可能会在fsync（）调用上阻塞太长时间。</span><br><span class="line"># 请注意，目前还没有解决此问题的方法，因为即使在不同的线程中执行fsync，</span><br><span class="line"># 也会阻止我们的同步写入（2）调用。</span><br><span class="line"># When the AOF fsync policy is set to always or everysec, and a background</span><br><span class="line"># saving process (a background save or AOF log background rewriting) is</span><br><span class="line"># performing a lot of I/O against the disk, in some Linux configurations</span><br><span class="line"># Redis may block too long on the fsync() call. Note that there is no fix for</span><br><span class="line"># this currently, as even performing fsync in a different thread will block</span><br><span class="line"># our synchronous write(2) call.</span><br><span class="line">#</span><br><span class="line"># 为了缓解此问题，可以使用以下选项，以防止在进行BGSAVE或BGREWRITEAOF时在主进程中调用fsync（）。</span><br><span class="line"># In order to mitigate this problem it&#x27;s possible to use the following option</span><br><span class="line"># that will prevent fsync() from being called in the main process while a</span><br><span class="line"># BGSAVE or BGREWRITEAOF is in progress.</span><br><span class="line">#</span><br><span class="line"># 这意味着，当另一个孩子在储蓄时，Redis的持久性与“appendfsync none”相同。</span><br><span class="line"># 实际上，这意味着在最坏的情况下（使用默认的Linux设置），可能会丢失最多30秒的日志。</span><br><span class="line"># This means that while another child is saving, the durability of Redis is</span><br><span class="line"># the same as &quot;appendfsync none&quot;. In practical terms, this means that it is</span><br><span class="line"># possible to lose up to 30 seconds of log in the worst scenario (with the</span><br><span class="line"># default Linux settings).</span><br><span class="line">#</span><br><span class="line"># 如果您有延迟问题，请将此设置为“是”。否则，从耐久性的角度来看，选择“否”是最安全的。</span><br><span class="line"># If you have latency problems turn this to &quot;yes&quot;. Otherwise leave it as</span><br><span class="line"># &quot;no&quot; that is the safest pick from the point of view of durability.</span><br><span class="line"></span><br><span class="line">no-appendfsync-on-rewrite no</span><br><span class="line"></span><br><span class="line"># 自动重写仅附加的文件。</span><br><span class="line"># Redis能够在AOF日志大小以指定的百分比增长时自动重写隐式调用BGREWRITEAOF的日志文件。</span><br><span class="line"># Automatic rewrite of the append only file.</span><br><span class="line"># Redis is able to automatically rewrite the log file implicitly calling</span><br><span class="line"># BGREWRITEAOF when the AOF log size grows by the specified percentage.</span><br><span class="line">#</span><br><span class="line"># 工作原理是这样的：Redis会记住最近一次重写后AOF文件的大小</span><br><span class="line"># （如果重启后没有发生重写，则使用启动时AOF的大小）。</span><br><span class="line"># This is how it works: Redis remembers the size of the AOF file after the</span><br><span class="line"># latest rewrite (if no rewrite has happened since the restart, the size of</span><br><span class="line"># the AOF at startup is used).</span><br><span class="line">#</span><br><span class="line"># 此基本大小与当前大小进行比较。如果当前大小大于指定的百分比，则会触发重写。</span><br><span class="line"># 您还需要为要重写的AOF文件指定一个最小大小，这对于避免重写AOF文件非常有用，</span><br><span class="line"># 即使达到了百分比增加，但仍然非常小。</span><br><span class="line"># This base size is compared to the current size. If the current size is</span><br><span class="line"># bigger than the specified percentage, the rewrite is triggered. Also</span><br><span class="line"># you need to specify a minimal size for the AOF file to be rewritten, this</span><br><span class="line"># is useful to avoid rewriting the AOF file even if the percentage increase</span><br><span class="line"># is reached but it is still pretty small.</span><br><span class="line">#</span><br><span class="line"># 指定0的百分比以禁用自动AOF重写功能。</span><br><span class="line"># Specify a percentage of zero in order to disable the automatic AOF</span><br><span class="line"># rewrite feature.</span><br><span class="line"></span><br><span class="line">auto-aof-rewrite-percentage 100</span><br><span class="line">auto-aof-rewrite-min-size 64mb</span><br><span class="line"></span><br><span class="line"># 在Redis启动过程的最后，当AOF数据被加载回内存时，可能会发现AOF文件被截断。</span><br><span class="line"># 当运行Redis的系统崩溃时，尤其是在没有data=ordered选项的情况下挂载ext4文件系统时，</span><br><span class="line"># 可能会发生这种情况（但是当Redis本身崩溃或中止但操作系统仍然正常工作时，这种情况就不会发生）。</span><br><span class="line"># An AOF file may be found to be truncated at the end during the Redis</span><br><span class="line"># startup process, when the AOF data gets loaded back into memory.</span><br><span class="line"># This may happen when the system where Redis is running</span><br><span class="line"># crashes, especially when an ext4 filesystem is mounted without the</span><br><span class="line"># data=ordered option (however this can&#x27;t happen when Redis itself</span><br><span class="line"># crashes or aborts but the operating system still works correctly).</span><br><span class="line">#</span><br><span class="line"># Redis可以在发生这种情况时带着错误退出，也可以加载尽可能多的数据（现在是默认值），</span><br><span class="line"># 如果发现AOF文件在末尾被截断，就可以启动。以下选项控制此行为。</span><br><span class="line"># Redis can either exit with an error when this happens, or load as much</span><br><span class="line"># data as possible (the default now) and start if the AOF file is found</span><br><span class="line"># to be truncated at the end. The following option controls this behavior.</span><br><span class="line">#</span><br><span class="line"># 如果aof load TREATED设置为“是”，则加载截断的aof文件，Redis服务器将开始发出日志，以通知用户事件。</span><br><span class="line"># 否则，如果选项设置为“否”，则服务器会因错误中止，拒绝启动。</span><br><span class="line"># 当选项设置为否时，用户需要在重新启动服务器之前使用“redis check AOF”实用程序修复AOF文件。</span><br><span class="line"># If aof-load-truncated is set to yes, a truncated AOF file is loaded and</span><br><span class="line"># the Redis server starts emitting a log to inform the user of the event.</span><br><span class="line"># Otherwise if the option is set to no, the server aborts with an error</span><br><span class="line"># and refuses to start. When the option is set to no, the user requires</span><br><span class="line"># to fix the AOF file using the &quot;redis-check-aof&quot; utility before to restart</span><br><span class="line"># the server.</span><br><span class="line">#</span><br><span class="line"># 注意，如果发现AOF文件在中间被损坏，服务器仍将退出一个错误。</span><br><span class="line"># 此选项仅适用于Redis尝试从AOF文件读取更多数据但找不到足够字节的情况。</span><br><span class="line"># Note that if the AOF file will be found to be corrupted in the middle</span><br><span class="line"># the server will still exit with an error. This option only applies when</span><br><span class="line"># Redis will try to read more data from the AOF file but not enough bytes</span><br><span class="line"># will be found.</span><br><span class="line">aof-load-truncated yes</span><br><span class="line"></span><br><span class="line"># 当重写AOF文件时，Redis能够在AOF文件中使用RDB前导码，以实现更快的重写和恢复。</span><br><span class="line"># 启用此选项后，重写的AOF文件由两个不同的节组成：</span><br><span class="line"># When rewriting the AOF file, Redis is able to use an RDB preamble in the</span><br><span class="line"># AOF file for faster rewrites and recoveries. When this option is turned</span><br><span class="line"># on the rewritten AOF file is composed of two different stanzas:</span><br><span class="line">#</span><br><span class="line">#   [RDB file][AOF tail]</span><br><span class="line">#</span><br><span class="line"># 加载Redis时，会识别出AOF文件以“Redis”字符串开头，并加载前缀RDB文件，然后继续加载AOF尾部。</span><br><span class="line"># When loading Redis recognizes that the AOF file starts with the &quot;REDIS&quot;</span><br><span class="line"># string and loads the prefixed RDB file, and continues loading the AOF</span><br><span class="line"># tail.</span><br><span class="line">#</span><br><span class="line"># 当前默认情况下，此选项处于关闭状态，以避免格式更改带来的意外情况，但在某些时候将用作默认值。</span><br><span class="line"># This is currently turned off by default in order to avoid the surprise</span><br><span class="line"># of a format change, but will at some point be used as the default.</span><br><span class="line">aof-use-rdb-preamble no</span><br><span class="line">################################ LUA SCRIPTING  ###############################</span><br><span class="line"></span><br><span class="line"># Lua脚本的最大执行时间（毫秒）。</span><br><span class="line"># Max execution time of a Lua script in milliseconds.</span><br><span class="line">#</span><br><span class="line"># 如果达到最大执行时间，Redis将记录在允许的最长时间之后脚本仍在执行中，并将开始回复有错误的查询。</span><br><span class="line"># If the maximum execution time is reached Redis will log that a script is</span><br><span class="line"># still in execution after the maximum allowed time and will start to</span><br><span class="line"># reply to queries with an error.</span><br><span class="line">#</span><br><span class="line"># 当长时间运行的脚本超过最大执行时间时，只有脚本KILL和SHUTDOWN NOSAVE命令可用。</span><br><span class="line"># 第一个命令可用于停止尚未调用write命令的脚本。</span><br><span class="line"># 第二种方法是在脚本已经发出写入命令但用户不想等待脚本自然终止的情况下关闭服务器的唯一方法。</span><br><span class="line"># When a long running script exceeds the maximum execution time only the</span><br><span class="line"># SCRIPT KILL and SHUTDOWN NOSAVE commands are available. The first can be</span><br><span class="line"># used to stop a script that did not yet called write commands. The second</span><br><span class="line"># is the only way to shut down the server in the case a write command was</span><br><span class="line"># already issued by the script but the user doesn&#x27;t want to wait for the natural</span><br><span class="line"># termination of the script.</span><br><span class="line">#</span><br><span class="line"># 将其设置为0或负值，以便在没有警告的情况下无限执行。</span><br><span class="line"># Set it to 0 or a negative value for unlimited execution without warnings.</span><br><span class="line">lua-time-limit 5000</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">################################ REDIS CLUSTER  ###############################</span><br><span class="line">#</span><br><span class="line"># ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line"># 警告：Redis集群被认为是稳定的代码，但是为了将其标记为“成熟”，</span><br><span class="line"># 我们需要等待相当一部分用户将其部署到生产环境中。</span><br><span class="line"># WARNING EXPERIMENTAL: Redis Cluster is considered to be stable code, however</span><br><span class="line"># in order to mark it as &quot;mature&quot; we need to wait for a non trivial percentage</span><br><span class="line"># of users to deploy it in production.</span><br><span class="line"># ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++</span><br><span class="line">#</span><br><span class="line"># 普通Redis实例不能是Redis集群的一部分；只有作为群集节点启动的节点才能启动。</span><br><span class="line"># 要将Redis实例启动为群集节点，请启用群集支持，取消注释以下内容：</span><br><span class="line"># Normal Redis instances can&#x27;t be part of a Redis Cluster; only nodes that are</span><br><span class="line"># started as cluster nodes can. In order to start a Redis instance as a</span><br><span class="line"># cluster node enable the cluster support uncommenting the following:</span><br><span class="line">#</span><br><span class="line"># cluster-enabled yes</span><br><span class="line"></span><br><span class="line"># 每个集群节点都有一个集群配置文件。此文件不可手动编辑。它由Redis节点创建和更新。</span><br><span class="line"># 每个Redis集群节点都需要不同的集群配置文件。</span><br><span class="line"># 确保在同一系统中运行的实例没有重叠的群集配置文件名。</span><br><span class="line"># Every cluster node has a cluster configuration file. This file is not</span><br><span class="line"># intended to be edited by hand. It is created and updated by Redis nodes.</span><br><span class="line"># Every Redis Cluster node requires a different cluster configuration file.</span><br><span class="line"># Make sure that instances running in the same system do not have</span><br><span class="line"># overlapping cluster configuration file names.</span><br><span class="line">#</span><br><span class="line"># cluster-config-file nodes-6379.conf</span><br><span class="line"></span><br><span class="line"># Cluster node timeout是节点必须无法访问才能被视为处于故障状态的毫秒数。</span><br><span class="line"># 大多数其他内部时间限制是节点超时的倍数。</span><br><span class="line"># Cluster node timeout is the amount of milliseconds a node must be unreachable</span><br><span class="line"># for it to be considered in failure state.</span><br><span class="line"># Most other internal time limits are multiple of the node timeout.</span><br><span class="line">#</span><br><span class="line"># cluster-node-timeout 15000</span><br><span class="line"></span><br><span class="line">#如果发生故障的主设备的从属设备的数据看起来太旧，它将避免启动故障转移。</span><br><span class="line"># A slave of a failing master will avoid to start a failover if its data</span><br><span class="line"># looks too old.</span><br><span class="line">#</span><br><span class="line"># 从机没有简单的方法可以精确测量其“数据年龄”，因此执行以下两项检查：</span><br><span class="line"># There is no simple way for a slave to actually have an exact measure of</span><br><span class="line"># its &quot;data age&quot;, so the following two checks are performed:</span><br><span class="line">#</span><br><span class="line">#    如果有多个从属设备能够进行故障切换，它们会交换消息，</span><br><span class="line">#    以便尝试为具有最佳复制偏移量的从属设备提供优势（从主设备处理更多数据）。</span><br><span class="line">#    从属服务器将尝试通过偏移量获得它们的秩，并在故障转移开始时应用与它们的秩成比例的延迟。</span><br><span class="line"># 1) If there are multiple slaves able to failover, they exchange messages</span><br><span class="line">#    in order to try to give an advantage to the slave with the best</span><br><span class="line">#    replication offset (more data from the master processed).</span><br><span class="line">#    Slaves will try to get their rank by offset, and apply to the start</span><br><span class="line">#    of the failover a delay proportional to their rank.</span><br><span class="line">#</span><br><span class="line">#    每个从机计算最后一次与主机交互的时间。这可以是接收到的最后一次ping或命令</span><br><span class="line">#  （如果主机仍处于“已连接”状态），也可以是与主机断开连接后经过的时间（如果复制链路当前已关闭）。</span><br><span class="line">#    如果上一次交互太旧，从机将根本不尝试故障转移。</span><br><span class="line"># 2) Every single slave computes the time of the last interaction with</span><br><span class="line">#    its master. This can be the last ping or command received (if the master</span><br><span class="line">#    is still in the &quot;connected&quot; state), or the time that elapsed since the</span><br><span class="line">#    disconnection with the master (if the replication link is currently down).</span><br><span class="line">#    If the last interaction is too old, the slave will not try to failover</span><br><span class="line">#    at all.</span><br><span class="line">#</span><br><span class="line"># 点“2”可由用户调整。具体来说，如果自上次与主设备交互以来，所用时间大于以下时间，</span><br><span class="line"># 则从设备将不会执行故障转移：</span><br><span class="line"># The point &quot;2&quot; can be tuned by user. Specifically a slave will not perform</span><br><span class="line"># the failover if, since the last interaction with the master, the time</span><br><span class="line"># elapsed is greater than:</span><br><span class="line">#</span><br><span class="line">#   (node-timeout * slave-validity-factor) + repl-ping-slave-period</span><br><span class="line">#</span><br><span class="line"># 因此，例如，如果节点超时为30秒，从机有效性系数为10，并且假设默认的repl ping slave周期为10秒，</span><br><span class="line"># 那么如果从机无法与主机通信的时间超过310秒，它将不会尝试故障转移。</span><br><span class="line"># So for example if node-timeout is 30 seconds, and the slave-validity-factor</span><br><span class="line"># is 10, and assuming a default repl-ping-slave-period of 10 seconds, the</span><br><span class="line"># slave will not try to failover if it was not able to talk with the master</span><br><span class="line"># for longer than 310 seconds.</span><br><span class="line">#</span><br><span class="line"># 较大的从属有效性因子可能允许数据太旧的从属设备故障切换到主设备，</span><br><span class="line"># 而太小的值可能会阻止集群选择从属设备。</span><br><span class="line"># A large slave-validity-factor may allow slaves with too old data to failover</span><br><span class="line"># a master, while a too small value may prevent the cluster from being able to</span><br><span class="line"># elect a slave at all.</span><br><span class="line">#</span><br><span class="line"># 为了获得最大可用性，可以将从属有效性因子设置为0，这意味着从属服务器将始终尝试故障转移主服务器，</span><br><span class="line"># 而不管它们上次与主服务器交互的时间是什么时候。</span><br><span class="line">#（然而，他们总是尝试应用与他们的偏移等级成比例的延迟）。</span><br><span class="line"># For maximum availability, it is possible to set the slave-validity-factor</span><br><span class="line"># to a value of 0, which means, that slaves will always try to failover the</span><br><span class="line"># master regardless of the last time they interacted with the master.</span><br><span class="line"># (However they&#x27;ll always try to apply a delay proportional to their</span><br><span class="line"># offset rank).</span><br><span class="line">#</span><br><span class="line"># 零是唯一一个能够保证当所有分区恢复时，集群始终能够继续的值。</span><br><span class="line"># Zero is the only value able to guarantee that when all the partitions heal</span><br><span class="line"># the cluster will always be able to continue.</span><br><span class="line">#</span><br><span class="line"># cluster-slave-validity-factor 10</span><br><span class="line"></span><br><span class="line"># 集群从机能够迁移到孤立的主机，即没有工作从机的主机。这提高了集群抵抗失败的能力，</span><br><span class="line"># 因为如果孤立的主服务器没有工作的从属服务器，那么它就不能在发生故障时进行故障转移。</span><br><span class="line"># Cluster slaves are able to migrate to orphaned masters, that are masters</span><br><span class="line"># that are left without working slaves. This improves the cluster ability</span><br><span class="line"># to resist to failures as otherwise an orphaned master can&#x27;t be failed over</span><br><span class="line"># in case of failure if it has no working slaves.</span><br><span class="line">#</span><br><span class="line"># 只有当他们的老主人至少还有一定数量的其他奴隶在工作时，奴隶才会迁移到孤儿主人那里。</span><br><span class="line"># 这个数字就是“移民壁垒”。迁移屏障为1意味着一个从机只有在其主机至少有一个其他工作从机时才会迁移，</span><br><span class="line"># 以此类推。它通常反映集群中每个主服务器所需的从属服务器数量。</span><br><span class="line"># Slaves migrate to orphaned masters only if there are still at least a</span><br><span class="line"># given number of other working slaves for their old master. This number</span><br><span class="line"># is the &quot;migration barrier&quot;. A migration barrier of 1 means that a slave</span><br><span class="line"># will migrate only if there is at least 1 other working slave for its master</span><br><span class="line"># and so forth. It usually reflects the number of slaves you want for every</span><br><span class="line"># master in your cluster.</span><br><span class="line">#</span><br><span class="line"># 默认值为1（从属服务器仅在其主服务器至少保留一个从属服务器时迁移）。</span><br><span class="line"># 要禁用迁移，只需将其设置为非常大的值。</span><br><span class="line"># 可以设置值0，但仅对调试有用，在生产中很危险。</span><br><span class="line"># Default is 1 (slaves migrate only if their masters remain with at least</span><br><span class="line"># one slave). To disable migration just set it to a very large value.</span><br><span class="line"># A value of 0 can be set but is useful only for debugging and dangerous</span><br><span class="line"># in production.</span><br><span class="line">#</span><br><span class="line"># cluster-migration-barrier 1</span><br><span class="line"></span><br><span class="line"># 默认情况下，如果Redis集群节点检测到至少有一个散列槽未覆盖（没有可用的节点为其提供服务），</span><br><span class="line"># 那么它们将停止接受查询。</span><br><span class="line"># 这样，如果集群部分关闭（例如，一系列哈希槽不再覆盖），那么所有集群最终都将不可用。</span><br><span class="line"># 一旦所有插槽被覆盖，它就会自动返回可用状态。</span><br><span class="line"># By default Redis Cluster nodes stop accepting queries if they detect there</span><br><span class="line"># is at least an hash slot uncovered (no available node is serving it).</span><br><span class="line"># This way if the cluster is partially down (for example a range of hash slots</span><br><span class="line"># are no longer covered) all the cluster becomes, eventually, unavailable.</span><br><span class="line"># It automatically returns available as soon as all the slots are covered again.</span><br><span class="line">#</span><br><span class="line"># 但是，有时您希望正在工作的集群的子集继续接受对仍然覆盖的密钥空间部分的查询。</span><br><span class="line"># 为此，只需将cluster require full coverage选项设置为no。</span><br><span class="line"># However sometimes you want the subset of the cluster which is working,</span><br><span class="line"># to continue to accept queries for the part of the key space that is still</span><br><span class="line"># covered. In order to do so, just set the cluster-require-full-coverage</span><br><span class="line"># option to no.</span><br><span class="line">#</span><br><span class="line"># cluster-require-full-coverage yes</span><br><span class="line"></span><br><span class="line"># 此选项设置为“是”时，可防止从机在主机故障期间尝试故障转移其主机。</span><br><span class="line"># 但是，如果强制执行手动故障切换，则主设备仍然可以执行手动故障切换。</span><br><span class="line"># This option, when set to yes, prevents slaves from trying to failover its</span><br><span class="line"># master during master failures. However the master can still perform a</span><br><span class="line"># manual failover, if forced to do so.</span><br><span class="line">#</span><br><span class="line"># 这在不同的场景中非常有用，特别是在多个数据中心操作的情况下，如果没有发生完全的DC故障，</span><br><span class="line"># 我们希望其中一方永远不会得到提升。</span><br><span class="line"># This is useful in different scenarios, especially in the case of multiple</span><br><span class="line"># data center operations, where we want one side to never be promoted if not</span><br><span class="line"># in the case of a total DC failure.</span><br><span class="line">#</span><br><span class="line"># cluster-slave-no-failover no</span><br><span class="line"></span><br><span class="line"># 为了设置集群，请务必阅读文档</span><br><span class="line"># In order to setup your cluster make sure to read the documentation</span><br><span class="line"># available at http://redis.io web site.</span><br><span class="line"></span><br><span class="line">########################## CLUSTER DOCKER/NAT support  ########################</span><br><span class="line"></span><br><span class="line"># 在某些部署中，Redis集群节点地址发现失败，原因是地址被NAT-ted或端口被转发</span><br><span class="line"># （典型的情况是Docker和其他容器）。</span><br><span class="line"># In certain deployments, Redis Cluster nodes address discovery fails, because</span><br><span class="line"># addresses are NAT-ted or because ports are forwarded (the typical case is</span><br><span class="line"># Docker and other containers).</span><br><span class="line">#</span><br><span class="line"># 为了使Redis集群在这样的环境中工作，需要一个静态配置，其中每个节点都知道自己的公共地址。</span><br><span class="line"># 以下两个选项用于此范围，分别是：</span><br><span class="line"># In order to make Redis Cluster working in such environments, a static</span><br><span class="line"># configuration where each node knows its public address is needed. The</span><br><span class="line"># following two options are used for this scope, and are:</span><br><span class="line">#</span><br><span class="line"># * cluster-announce-ip</span><br><span class="line"># * cluster-announce-port</span><br><span class="line"># * cluster-announce-bus-port</span><br><span class="line">#</span><br><span class="line"># 每个节点都指示节点其地址、客户机端口和集群消息总线端口。然后在总线包的报头中发布信息，</span><br><span class="line"># 以便其他节点能够正确映射发布信息的节点的地址。</span><br><span class="line"># Each instruct the node about its address, client port, and cluster message</span><br><span class="line"># bus port. The information is then published in the header of the bus packets</span><br><span class="line"># so that other nodes will be able to correctly map the address of the node</span><br><span class="line"># publishing the information.</span><br><span class="line">#</span><br><span class="line"># 如果不使用上述选项，将使用正常的Redis集群自动检测。</span><br><span class="line"># If the above options are not used, the normal Redis Cluster auto-detection</span><br><span class="line"># will be used instead.</span><br><span class="line">#</span><br><span class="line"># 请注意，重新映射时，总线端口可能不在客户端端口+10000的固定偏移量处，</span><br><span class="line"># 因此您可以根据重新映射的方式指定任何端口和总线端口。如果没有设置总线端口，</span><br><span class="line"># 则通常使用10000的固定偏移量。</span><br><span class="line"># Note that when remapped, the bus port may not be at the fixed offset of</span><br><span class="line"># clients port + 10000, so you can specify any port and bus-port depending</span><br><span class="line"># on how they get remapped. If the bus-port is not set, a fixed offset of</span><br><span class="line"># 10000 will be used as usually.</span><br><span class="line">#</span><br><span class="line"># Example:</span><br><span class="line">#</span><br><span class="line"># cluster-announce-ip 10.1.1.5</span><br><span class="line"># cluster-announce-port 6379</span><br><span class="line"># cluster-announce-bus-port 6380</span><br><span class="line"></span><br><span class="line">################################## SLOW LOG ###################################</span><br><span class="line"></span><br><span class="line"># Redis Slow Log是一个系统，用于记录超出指定执行时间的查询。</span><br><span class="line"># 执行时间不包括与客户端交谈、发送应答等I/O操作，而是实际执行命令所需的时间</span><br><span class="line"># （这是命令执行的唯一阶段，线程被阻塞，同时无法服务其他请求）。</span><br><span class="line"># The Redis Slow Log is a system to log queries that exceeded a specified</span><br><span class="line"># execution time. The execution time does not include the I/O operations</span><br><span class="line"># like talking with the client, sending the reply and so forth,</span><br><span class="line"># but just the time needed to actually execute the command (this is the only</span><br><span class="line"># stage of command execution where the thread is blocked and can not serve</span><br><span class="line"># other requests in the meantime).</span><br><span class="line">#</span><br><span class="line"># 您可以使用两个参数来配置慢日志：一个参数告诉Redis为了记录命令要超过的执行时间（以微秒为单位），</span><br><span class="line"># 另一个参数是慢日志的长度。记录新命令时，将从记录的命令队列中删除最旧的命令。</span><br><span class="line"># You can configure the slow log with two parameters: one tells Redis</span><br><span class="line"># what is the execution time, in microseconds, to exceed in order for the</span><br><span class="line"># command to get logged, and the other parameter is the length of the</span><br><span class="line"># slow log. When a new command is logged the oldest one is removed from the</span><br><span class="line"># queue of logged commands.</span><br><span class="line"></span><br><span class="line">#下面的时间以微秒表示，因此1000000相当于1秒。请注意，负数将禁用慢速日志，而零值将强制记录每个命令。</span><br><span class="line"># The following time is expressed in microseconds, so 1000000 is equivalent</span><br><span class="line"># to one second. Note that a negative number disables the slow log, while</span><br><span class="line"># a value of zero forces the logging of every command.</span><br><span class="line">slowlog-log-slower-than 10000</span><br><span class="line"></span><br><span class="line"># 这个长度没有限制。只是要注意它会消耗内存。</span><br><span class="line"># 您可以通过SLOWLOG RESET回收慢日志使用的内存。</span><br><span class="line"># There is no limit to this length. Just be aware that it will consume memory.</span><br><span class="line"># You can reclaim memory used by the slow log with SLOWLOG RESET.</span><br><span class="line">slowlog-max-len 128</span><br><span class="line"></span><br><span class="line">################################ LATENCY MONITOR ##############################</span><br><span class="line"></span><br><span class="line"># Redis延迟监控子系统在运行时对不同的操作进行采样，以便收集与Redis实例的可能延迟源相关的数据。</span><br><span class="line"># The Redis latency monitoring subsystem samples different operations</span><br><span class="line"># at runtime in order to collect data related to possible sources of</span><br><span class="line"># latency of a Redis instance.</span><br><span class="line">#</span><br><span class="line"># 通过LATENCY命令，该信息可供可以打印图形和获取报告的用户使用。</span><br><span class="line"># Via the LATENCY command this information is available to the user that can</span><br><span class="line"># print graphs and obtain reports.</span><br><span class="line">#</span><br><span class="line"># 系统仅记录在等于或大于通过延迟监视器阈值配置指令指定的毫秒数的时间内执行的操作。</span><br><span class="line"># 当其值设置为零时，延迟监视器将关闭。</span><br><span class="line"># The system only logs operations that were performed in a time equal or</span><br><span class="line"># greater than the amount of milliseconds specified via the</span><br><span class="line"># latency-monitor-threshold configuration directive. When its value is set</span><br><span class="line"># to zero, the latency monitor is turned off.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，延迟监视是禁用的，因为如果没有延迟问题，通常不需要延迟监视，</span><br><span class="line"># 并且收集数据会对性能产生影响，虽然影响很小，但可以在大负载下进行测量。</span><br><span class="line">#如果需要，可以在运行时使用命令“CONFIG SET Latency monitor threshold&lt;millishes&gt;”轻松启用延迟监视</span><br><span class="line"># By default latency monitoring is disabled since it is mostly not needed</span><br><span class="line"># if you don&#x27;t have latency issues, and collecting data has a performance</span><br><span class="line"># impact, that while very small, can be measured under big load. Latency</span><br><span class="line"># monitoring can easily be enabled at runtime using the command</span><br><span class="line"># &quot;CONFIG SET latency-monitor-threshold &lt;milliseconds&gt;&quot; if needed.</span><br><span class="line">latency-monitor-threshold 0</span><br><span class="line"></span><br><span class="line">############################# EVENT NOTIFICATION ##############################</span><br><span class="line"></span><br><span class="line"># Redis可以将密钥空间中发生的事件通知Pub/Sub客户机。</span><br><span class="line"># 此功能记录在http://redis.io/topics/notifications</span><br><span class="line"># Redis can notify Pub/Sub clients about events happening in the key space.</span><br><span class="line"># This feature is documented at http://redis.io/topics/notifications</span><br><span class="line">#</span><br><span class="line"># 例如，如果启用了keyspace events通知，并且客户端对存储在数据库0中的键“foo”执行DEL操作，</span><br><span class="line"># 则将通过Pub/Sub发布两条消息：</span><br><span class="line"># For instance if keyspace events notification is enabled, and a client</span><br><span class="line"># performs a DEL operation on key &quot;foo&quot; stored in the Database 0, two</span><br><span class="line"># messages will be published via Pub/Sub:</span><br><span class="line">#</span><br><span class="line"># PUBLISH __keyspace@0__:foo del</span><br><span class="line"># PUBLISH __keyevent@0__:del foo</span><br><span class="line">#</span><br><span class="line"># 可以在一组类中选择Redis将通知的事件。每个类都由一个字符标识：</span><br><span class="line"># It is possible to select the events that Redis will notify among a set</span><br><span class="line"># of classes. Every class is identified by a single character:</span><br><span class="line">#</span><br><span class="line">#  K     Keyspace events, published with __keyspace@&lt;db&gt;__ prefix.</span><br><span class="line">#  E     Keyevent events, published with __keyevent@&lt;db&gt;__ prefix.</span><br><span class="line">#  g     Generic commands (non-type specific) like DEL, EXPIRE, RENAME, ...</span><br><span class="line">#  $     String commands</span><br><span class="line">#  l     List commands</span><br><span class="line">#  s     Set commands</span><br><span class="line">#  h     Hash commands</span><br><span class="line">#  z     Sorted set commands</span><br><span class="line">#  x     Expired events (events generated every time a key expires)</span><br><span class="line">#  e     Evicted events (events generated when a key is evicted for maxmemory)</span><br><span class="line">#  A     Alias for g$lshzxe, so that the &quot;AKE&quot; string means all the events.</span><br><span class="line">#</span><br><span class="line"># “notify keyspace events”将由零个或多个字符组成的字符串作为参数。空字符串表示已禁用通知。</span><br><span class="line">#  The &quot;notify-keyspace-events&quot; takes as argument a string that is composed</span><br><span class="line">#  of zero or multiple characters. The empty string means that notifications</span><br><span class="line">#  are disabled.</span><br><span class="line">#</span><br><span class="line">#  示例：要启用列表和常规事件，请从事件名称的角度使用：</span><br><span class="line">#  Example: to enable list and generic events, from the point of view of the</span><br><span class="line">#           event name, use:</span><br><span class="line">#</span><br><span class="line">#  notify-keyspace-events Elg</span><br><span class="line">#</span><br><span class="line">#  示例2：获取订阅频道名称的过期密钥流__keyevent@0__：过期使用：</span><br><span class="line">#  Example 2: to get the stream of the expired keys subscribing to channel</span><br><span class="line">#             name __keyevent@0__:expired use:</span><br><span class="line">#</span><br><span class="line">#  notify-keyspace-events Ex</span><br><span class="line">#</span><br><span class="line"># 默认情况下，所有通知都被禁用，因为大多数用户不需要此功能，而且该功能有一些开销。</span><br><span class="line"># 注意，如果您没有指定至少一个K或E，则不会传递任何事件。</span><br><span class="line">#  By default all notifications are disabled because most users don&#x27;t need</span><br><span class="line">#  this feature and the feature has some overhead. Note that if you don&#x27;t</span><br><span class="line">#  specify at least one of K or E, no events will be delivered.</span><br><span class="line">notify-keyspace-events &quot;&quot;</span><br><span class="line"></span><br><span class="line">############################### ADVANCED CONFIG ###############################</span><br><span class="line"></span><br><span class="line"># 哈希在具有少量条目时使用内存高效的数据结构进行编码，最大条目不超过给定的阈值。</span><br><span class="line"># 这些阈值可以使用以下指令进行配置。</span><br><span class="line"># Hashes are encoded using a memory efficient data structure when they have a</span><br><span class="line"># small number of entries, and the biggest entry does not exceed a given</span><br><span class="line"># threshold. These thresholds can be configured using the following directives.</span><br><span class="line">hash-max-ziplist-entries 512</span><br><span class="line">hash-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># 列表也以一种特殊的方式编码以节省大量空间。</span><br><span class="line"># 每个内部列表节点允许的条目数可以指定为固定的最大大小或最大元素数。</span><br><span class="line"># 对于固定的最大大小，使用-5到-1，意思是：</span><br><span class="line"># Lists are also encoded in a special way to save a lot of space.</span><br><span class="line"># The number of entries allowed per internal list node can be specified</span><br><span class="line"># as a fixed maximum size or a maximum number of elements.</span><br><span class="line"># For a fixed maximum size, use -5 through -1, meaning:</span><br><span class="line"># -5: max size: 64 Kb  &lt;-- not recommended for normal workloads ## 不建议用于正常工作负载</span><br><span class="line"># -4: max size: 32 Kb  &lt;-- not recommended  ## 未推荐的</span><br><span class="line"># -3: max size: 16 Kb  &lt;-- probably not recommended  ## 可能不推荐</span><br><span class="line"># -2: max size: 8 Kb   &lt;-- good</span><br><span class="line"># -1: max size: 4 Kb   &lt;-- good</span><br><span class="line">#</span><br><span class="line"># 正数表示每个列表节点最多可存储的元素数。</span><br><span class="line"># Positive numbers mean store up to _exactly_ that number of elements</span><br><span class="line"># per list node.</span><br><span class="line">#</span><br><span class="line"># 最高性能的选项通常是-2（8KB大小）或-1（4KB大小），</span><br><span class="line"># 但是如果您的用例是唯一的，则根据需要调整设置。</span><br><span class="line"># The highest performing option is usually -2 (8 Kb size) or -1 (4 Kb size),</span><br><span class="line"># but if your use case is unique, adjust the settings as necessary.</span><br><span class="line">list-max-ziplist-size -2</span><br><span class="line"></span><br><span class="line"># 列表也可以被压缩。</span><br><span class="line"># Compress depth是要从压缩中*排除*的列表*每*侧的quicklist ziplist节点数。名单的头尾</span><br><span class="line"># 对于快速的push/pop操作总是解压缩的。设置为：</span><br><span class="line"># Lists may also be compressed.</span><br><span class="line"># Compress depth is the number of quicklist ziplist nodes from *each* side of</span><br><span class="line"># the list to *exclude* from compression.  The head and tail of the list</span><br><span class="line"># are always uncompressed for fast push/pop operations.  Settings are:</span><br><span class="line"># 0: disable all list compression ## 禁用所有列表压缩</span><br><span class="line">#</span><br><span class="line">#    深度1表示“在列表中的1个节点之后才开始压缩，从头部或尾部开始”</span><br><span class="line"># 1: depth 1 means &quot;don&#x27;t start compressing until after 1 node into the list,</span><br><span class="line">#    going from either the head or tail&quot;</span><br><span class="line">#    So: [head]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[tail]</span><br><span class="line">#    [head], [tail] will always be uncompressed; inner nodes will compress.</span><br><span class="line"># 2: [head]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[tail]</span><br><span class="line">#      这里的意思是：不压缩head或head-&gt;next或tail-&gt;prev或tail，而是压缩它们之间的所有节点。</span><br><span class="line">#    2 here means: don&#x27;t compress head or head-&gt;next or tail-&gt;prev or tail,</span><br><span class="line">#    but compress all nodes between them.</span><br><span class="line"># 3: [head]-&gt;[next]-&gt;[next]-&gt;node-&gt;node-&gt;...-&gt;node-&gt;[prev]-&gt;[prev]-&gt;[tail]</span><br><span class="line"># etc.</span><br><span class="line">list-compress-depth 0</span><br><span class="line"></span><br><span class="line"># 在一种情况下，集合有一种特殊的编码方式：当一个集合由恰好是基数10中的整数的字符串组成时，</span><br><span class="line"># 这些字符串的范围是64位有符号整数。</span><br><span class="line"># 以下配置设置设置集合大小的限制，以便使用此特殊的内存节省编码。</span><br><span class="line"># Sets have a special encoding in just one case: when a set is composed</span><br><span class="line"># of just strings that happen to be integers in radix 10 in the range</span><br><span class="line"># of 64 bit signed integers.</span><br><span class="line"># The following configuration setting sets the limit in the size of the</span><br><span class="line"># set in order to use this special memory saving encoding.</span><br><span class="line">set-max-intset-entries 512</span><br><span class="line"></span><br><span class="line"># 与散列和列表类似，排序集也经过特殊编码以节省大量空间。</span><br><span class="line"># 此编码仅在排序集的长度和元素低于以下限制时使用：</span><br><span class="line"># Similarly to hashes and lists, sorted sets are also specially encoded in</span><br><span class="line"># order to save a lot of space. This encoding is only used when the length and</span><br><span class="line"># elements of a sorted set are below the following limits:</span><br><span class="line">zset-max-ziplist-entries 128</span><br><span class="line">zset-max-ziplist-value 64</span><br><span class="line"></span><br><span class="line"># HyperLogLog稀疏表示字节数限制。限制包括16字节头。</span><br><span class="line"># 当使用稀疏表示的超对数超过这个极限时，它将转换为稠密表示。</span><br><span class="line"># HyperLogLog sparse representation bytes limit. The limit includes the</span><br><span class="line"># 16 bytes header. When an HyperLogLog using the sparse representation crosses</span><br><span class="line"># this limit, it is converted into the dense representation.</span><br><span class="line">#</span><br><span class="line"># 大于16000的值是完全无用的，因为在这一点上，密集表示更高效。</span><br><span class="line"># A value greater than 16000 is totally useless, since at that point the</span><br><span class="line"># dense representation is more memory efficient.</span><br><span class="line">#</span><br><span class="line"># 建议值为~3000，以便在不减慢太多PFADD的情况下具有节省空间的编码的优点，这对于稀疏编码是O（N）。</span><br><span class="line"># 当CPU不是问题，但空间是问题，并且数据集由基数在0-15000范围内的许多超日志组成时，</span><br><span class="line"># 该值可以提高到~10000。</span><br><span class="line"># The suggested value is ~ 3000 in order to have the benefits of</span><br><span class="line"># the space efficient encoding without slowing down too much PFADD,</span><br><span class="line"># which is O(N) with the sparse encoding. The value can be raised to</span><br><span class="line"># ~ 10000 when CPU is not a concern, but space is, and the data set is</span><br><span class="line"># composed of many HyperLogLogs with cardinality in the 0 - 15000 range.</span><br><span class="line">hll-sparse-max-bytes 3000</span><br><span class="line"></span><br><span class="line"># 活动重新灰化使用每100毫秒CPU时间1毫秒，以帮助重新设置主Redis哈希表（将顶级键映射到值的表）。</span><br><span class="line"># 哈希表实现Redis使用（请参见dict.c）执行惰性重灰化：当您遇到正在重新灰化的哈希表中的操作越多，</span><br><span class="line"># 执行的“步骤”就越多，因此如果服务器空闲，则重新灰化永远不会完成，哈希表将使用更多内存。</span><br><span class="line"># Active rehashing uses 1 millisecond every 100 milliseconds of CPU time in</span><br><span class="line"># order to help rehashing the main Redis hash table (the one mapping top-level</span><br><span class="line"># keys to values). The hash table implementation Redis uses (see dict.c)</span><br><span class="line"># performs a lazy rehashing: the more operation you run into a hash table</span><br><span class="line"># that is rehashing, the more rehashing &quot;steps&quot; are performed, so if the</span><br><span class="line"># server is idle the rehashing is never complete and some more memory is used</span><br><span class="line"># by the hash table.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，每秒使用10次此毫秒，以便主动地重新刷新主词典，尽可能释放内存。</span><br><span class="line"># The default is to use this millisecond 10 times every second in order to</span><br><span class="line"># actively rehash the main dictionaries, freeing memory when possible.</span><br><span class="line">#</span><br><span class="line"># 如果不确定：</span><br><span class="line"># 如果您有严格的延迟要求，那么使用“activerehashing no”，在您的环境中，</span><br><span class="line"># Redis可以不时地以2毫秒的延迟回复查询并不是一件好事。</span><br><span class="line"># If unsure:</span><br><span class="line"># use &quot;activerehashing no&quot; if you have hard latency requirements and it is</span><br><span class="line"># not a good thing in your environment that Redis can reply from time to time</span><br><span class="line"># to queries with 2 milliseconds delay.</span><br><span class="line">#</span><br><span class="line"># 如果您没有这样的硬性要求，但希望尽快释放内存，请使用“activerehashing yes”。</span><br><span class="line"># use &quot;activerehashing yes&quot; if you don&#x27;t have such hard requirements but</span><br><span class="line"># want to free memory asap when possible.</span><br><span class="line">activerehashing yes</span><br><span class="line"></span><br><span class="line"># 客户机输出缓冲区限制可用于强制断开由于某种原因从服务器读取数据速度不够快的客户机的连接</span><br><span class="line"># （一个常见的原因是Pub/Sub客户机不能像发布服务器生成消息那样快地使用消息）。</span><br><span class="line"># The client output buffer limits can be used to force disconnection of clients</span><br><span class="line"># that are not reading data from the server fast enough for some reason (a</span><br><span class="line"># common reason is that a Pub/Sub client can&#x27;t consume messages as fast as the</span><br><span class="line"># publisher can produce them).</span><br><span class="line">#</span><br><span class="line"># 对于三种不同类型的客户端，可以设置不同的限制：</span><br><span class="line"># The limit can be set differently for the three different classes of clients:</span><br><span class="line">#</span><br><span class="line"># normal -&gt; normal clients including MONITOR clients ## 普通客户端包括监控客户端</span><br><span class="line"># slave  -&gt; slave clients ## 从属客户端</span><br><span class="line"># pubsub -&gt; clients subscribed to at least one pubsub channel or pattern</span><br><span class="line">#           ## 客户端订阅了至少一个子频道或模式</span><br><span class="line">#</span><br><span class="line"># 每个客户端输出缓冲区限制指令的语法如下：</span><br><span class="line"># The syntax of every client-output-buffer-limit directive is the following:</span><br><span class="line">#</span><br><span class="line"># client-output-buffer-limit &lt;class&gt; &lt;hard limit&gt; &lt;soft limit&gt; &lt;soft seconds&gt;</span><br><span class="line">#</span><br><span class="line"># 一旦达到硬限制，或者如果达到软限制并保持达到指定秒数（连续），客户端将立即断开连接。</span><br><span class="line"># A client is immediately disconnected once the hard limit is reached, or if</span><br><span class="line"># the soft limit is reached and remains reached for the specified number of</span><br><span class="line"># seconds (continuously).</span><br><span class="line">#</span><br><span class="line"># 因此，例如，如果硬限制为32兆字节，软限制为16兆字节/10秒，则如果输出缓冲区的大小达到32兆字节，</span><br><span class="line"># 客户端将立即断开连接，但如果客户端达到16兆字节并连续克服限制10秒，客户端也将断开连接。</span><br><span class="line"># So for instance if the hard limit is 32 megabytes and the soft limit is</span><br><span class="line"># 16 megabytes / 10 seconds, the client will get disconnected immediately</span><br><span class="line"># if the size of the output buffers reach 32 megabytes, but will also get</span><br><span class="line"># disconnected if the client reaches 16 megabytes and continuously overcomes</span><br><span class="line"># the limit for 10 seconds.</span><br><span class="line">#</span><br><span class="line"># 默认情况下，普通客户机不受限制，因为它们不会在没有请求（以推送方式）的情况下接收数据，</span><br><span class="line"># 而是在请求之后接收数据，因此只有异步客户机可能会创建这样一种场景，</span><br><span class="line"># 即请求数据的速度比读取数据的速度快。</span><br><span class="line"># By default normal clients are not limited because they don&#x27;t receive data</span><br><span class="line"># without asking (in a push way), but just after a request, so only</span><br><span class="line"># asynchronous clients may create a scenario where data is requested faster</span><br><span class="line"># than it can read.</span><br><span class="line">#</span><br><span class="line"># 相反，对于pubsub和slave客户机有一个默认限制，因为订阅者和从属客户端以推送方式接收数据。</span><br><span class="line"># Instead there is a default limit for pubsub and slave clients, since</span><br><span class="line"># subscribers and slaves receive data in a push fashion.</span><br><span class="line">#</span><br><span class="line"># 硬限制或软限制都可以通过将其设置为零来禁用。</span><br><span class="line"># Both the hard or the soft limit can be disabled by setting them to zero.</span><br><span class="line">client-output-buffer-limit normal 0 0 0</span><br><span class="line">client-output-buffer-limit slave 256mb 64mb 60</span><br><span class="line">client-output-buffer-limit pubsub 32mb 8mb 60</span><br><span class="line"></span><br><span class="line"># 客户端查询缓冲区积累新命令。默认情况下，它们被限制为固定数量，以避免协议取消同步</span><br><span class="line">#（例如，由于客户端中的错误）将导致查询缓冲区中未绑定的内存使用。但是，如果您有非常特殊的需求，</span><br><span class="line"># 比如我们的multi/exec请求或类似请求，您可以在这里配置它。</span><br><span class="line"># Client query buffers accumulate new commands. They are limited to a fixed</span><br><span class="line"># amount by default in order to avoid that a protocol desynchronization (for</span><br><span class="line"># instance due to a bug in the client) will lead to unbound memory usage in</span><br><span class="line"># the query buffer. However you can configure it here if you have very special</span><br><span class="line"># needs, such us huge multi/exec requests or alike.</span><br><span class="line">#</span><br><span class="line"># client-query-buffer-limit 1gb</span><br><span class="line"></span><br><span class="line"># 在Redis协议中，批量请求（即表示单个字符串的元素）通常限制在512MB。但是你可以在这里改变这个限制。</span><br><span class="line"># In the Redis protocol, bulk requests, that are, elements representing single</span><br><span class="line"># strings, are normally limited ot 512 mb. However you can change this limit</span><br><span class="line"># here.</span><br><span class="line">#</span><br><span class="line"># proto-max-bulk-len 512mb</span><br><span class="line"></span><br><span class="line"># Redis调用一个内部函数来执行许多后台任务，比如在超时时关闭客户端的连接，清除从未请求的过期密钥，</span><br><span class="line"># 等等。</span><br><span class="line"># Redis calls an internal function to perform many background tasks, like</span><br><span class="line"># closing connections of clients in timeout, purging expired keys that are</span><br><span class="line"># never requested, and so forth.</span><br><span class="line">#</span><br><span class="line"># 并非所有任务都以相同的频率执行，但是Redis会根据指定的“hz”值检查要执行的任务。</span><br><span class="line"># Not all tasks are performed with the same frequency, but Redis checks for</span><br><span class="line"># tasks to perform according to the specified &quot;hz&quot; value.</span><br><span class="line">#</span><br><span class="line"># 默认情况下“hz”设置为10。当Redis空闲时，提高该值将使用更多的CPU，</span><br><span class="line"># 但同时会使Redis在多个键同时过期时更具响应性，超时处理可能会更精确。</span><br><span class="line"># By default &quot;hz&quot; is set to 10. Raising the value will use more CPU when</span><br><span class="line"># Redis is idle, but at the same time will make Redis more responsive when</span><br><span class="line"># there are many keys expiring at the same time, and timeouts may be</span><br><span class="line"># handled with more precision.</span><br><span class="line">#</span><br><span class="line"># 范围在1到500之间，但是值超过100通常不是一个好主意。大多数用户应该使用默认值10，</span><br><span class="line"># 并且仅在需要非常低延迟的环境中才将其提高到100。</span><br><span class="line"># The range is between 1 and 500, however a value over 100 is usually not</span><br><span class="line"># a good idea. Most users should use the default of 10 and raise this up to</span><br><span class="line"># 100 only in environments where very low latency is required.</span><br><span class="line">hz 10</span><br><span class="line"></span><br><span class="line"># 当子级重写AOF文件时，如果启用以下选项，则该文件将每生成32mb的数据进行一次fsync。</span><br><span class="line"># 这对于以更增量的方式将文件提交到磁盘和避免较大的延迟峰值非常有用。</span><br><span class="line"># When a child rewrites the AOF file, if the following option is enabled</span><br><span class="line"># the file will be fsync-ed every 32 MB of data generated. This is useful</span><br><span class="line"># in order to commit the file to the disk more incrementally and avoid</span><br><span class="line"># big latency spikes.</span><br><span class="line">aof-rewrite-incremental-fsync yes</span><br><span class="line"></span><br><span class="line"># Redis LFU逐出（参见maxmemory设置）可以进行调优。但是，最好从默认设置开始，</span><br><span class="line"># 在研究如何提高性能以及键LFU如何随时间变化后才进行更改，这可以通过OBJECT FREQ命令进行检查。</span><br><span class="line"># Redis LFU eviction (see maxmemory setting) can be tuned. However it is a good</span><br><span class="line"># idea to start with the default settings and only change them after investigating</span><br><span class="line"># how to improve the performances and how the keys LFU change over time, which</span><br><span class="line"># is possible to inspect via the OBJECT FREQ command.</span><br><span class="line">#</span><br><span class="line"># Redis LFU实现中有两个可调参数：计数器对数因子和计数器衰减时间。在改变这两个参数之前，</span><br><span class="line"># 了解这两个参数的含义是很重要的。</span><br><span class="line"># There are two tunable parameters in the Redis LFU implementation: the</span><br><span class="line"># counter logarithm factor and the counter decay time. It is important to</span><br><span class="line"># understand what the two parameters mean before changing them.</span><br><span class="line">#</span><br><span class="line"># LFU计数器每个键只有8位，它的最大值是255，所以Redis使用了对数行为的概率增量。</span><br><span class="line"># 给定旧计数器的值，当访问键时，计数器按以下方式递增：</span><br><span class="line"># The LFU counter is just 8 bits per key, it&#x27;s maximum value is 255, so Redis</span><br><span class="line"># uses a probabilistic increment with logarithmic behavior. Given the value</span><br><span class="line"># of the old counter, when a key is accessed, the counter is incremented in</span><br><span class="line"># this way:</span><br><span class="line">#</span><br><span class="line">#    提取0到1之间的随机数R。</span><br><span class="line"># 1. A random number R between 0 and 1 is extracted.</span><br><span class="line">#</span><br><span class="line">#    概率P的计算公式为1/(old_value*lfu_log_factor+1).</span><br><span class="line"># 2. A probability P is calculated as 1/(old_value*lfu_log_factor+1).</span><br><span class="line">#</span><br><span class="line">#    只有当R&lt;P时，计数器才递增。</span><br><span class="line"># 3. The counter is incremented only if R &lt; P.</span><br><span class="line">#</span><br><span class="line"># 默认的lfu log factor是10。</span><br><span class="line"># 这是一个关于频率计数器如何随着具有不同对数因子的不同访问次数而变化的表：</span><br><span class="line"># The default lfu-log-factor is 10. This is a table of how the frequency</span><br><span class="line"># counter changes with a different number of accesses with different</span><br><span class="line"># logarithmic factors:</span><br><span class="line">#</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | factor | 100 hits   | 1000 hits  | 100K hits  | 1M hits    | 10M hits   |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 0      | 104        | 255        | 255        | 255        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 1      | 18         | 49         | 255        | 255        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 10     | 10         | 18         | 142        | 255        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line"># | 100    | 8          | 11         | 49         | 143        | 255        |</span><br><span class="line"># +--------+------------+------------+------------+------------+------------+</span><br><span class="line">#</span><br><span class="line"># 注：上表是通过运行以下命令获得的：</span><br><span class="line"># NOTE: The above table was obtained by running the following commands:</span><br><span class="line">#</span><br><span class="line">#   redis-benchmark -n 1000000 incr foo</span><br><span class="line">#   redis-cli object freq foo</span><br><span class="line">#</span><br><span class="line"># 注2：计数器初始值为5，以便给新对象一个累积命中的机会。</span><br><span class="line"># NOTE 2: The counter initial value is 5 in order to give new objects a chance</span><br><span class="line"># to accumulate hits.</span><br><span class="line">#</span><br><span class="line"># #计数器衰减时间是键计数器除以2所必须经过的时间，单位为分钟（如果值小于等于10，则递减）。</span><br><span class="line"># The counter decay time is the time, in minutes, that must elapse in order</span><br><span class="line"># for the key counter to be divided by two (or decremented if it has a value</span><br><span class="line"># less &lt;= 10).</span><br><span class="line">#</span><br><span class="line"># lfu衰减时间的默认值为1。特殊值0意味着每次扫描计数器时都会衰减计数器。</span><br><span class="line"># The default value for the lfu-decay-time is 1. A Special value of 0 means to</span><br><span class="line"># decay the counter every time it happens to be scanned.</span><br><span class="line">#</span><br><span class="line"># lfu-log-factor 10</span><br><span class="line"># lfu-decay-time 1</span><br><span class="line"></span><br><span class="line">########################### ACTIVE DEFRAGMENTATION #######################</span><br><span class="line">#</span><br><span class="line"># 警告：此功能是实验性的。然而，它甚至在生产中也进行了压力测试，</span><br><span class="line"># 并由多名工程师进行了一段时间的手动测试。</span><br><span class="line"># WARNING THIS FEATURE IS EXPERIMENTAL. However it was stress tested</span><br><span class="line"># even in production and manually tested by multiple engineers for some</span><br><span class="line"># time.</span><br><span class="line">#</span><br><span class="line"># 什么是活动碎片整理？</span><br><span class="line"># What is active defragmentation?</span><br><span class="line"># -------------------------------</span><br><span class="line">#</span><br><span class="line"># 主动（在线）碎片整理允许Redis服务器压缩内存中数据的小分配和释放之间的空间，从而允许回收内存。</span><br><span class="line"># Active (online) defragmentation allows a Redis server to compact the</span><br><span class="line"># spaces left between small allocations and deallocations of data in memory,</span><br><span class="line"># thus allowing to reclaim back memory.</span><br><span class="line">#</span><br><span class="line"># 碎片化是每个分配器（幸运的是Jemalloc）和某些工作负载都会发生的自然过程。</span><br><span class="line"># 通常需要重新启动服务器以降低碎片，或者至少清除所有数据并重新创建。</span><br><span class="line"># 不过，由于OranAgraforRedis4.0实现了这个特性，这个过程可以在服务器运行时以“热”的方式在运行时发生。</span><br><span class="line"># Fragmentation is a natural process that happens with every allocator (but</span><br><span class="line"># less so with Jemalloc, fortunately) and certain workloads. Normally a server</span><br><span class="line"># restart is needed in order to lower the fragmentation, or at least to flush</span><br><span class="line"># away all the data and create it again. However thanks to this feature</span><br><span class="line"># implemented by Oran Agra for Redis 4.0 this process can happen at runtime</span><br><span class="line"># in an &quot;hot&quot; way, while the server is running.</span><br><span class="line">#</span><br><span class="line"># 基本上，当碎片超过某个级别（见下面的配置选项）时，</span><br><span class="line"># Redis将开始利用某些特定的Jemalloc特性在连续内存区域中创建值的新副本</span><br><span class="line"># （以便了解分配是否导致碎片并将其分配到更好的位置），同时，将发布数据的旧拷贝。</span><br><span class="line"># 这个过程，对所有键进行增量重复，将导致碎片降回正常值。</span><br><span class="line"># Basically when the fragmentation is over a certain level (see the</span><br><span class="line"># configuration options below) Redis will start to create new copies of the</span><br><span class="line"># values in contiguous memory regions by exploiting certain specific Jemalloc</span><br><span class="line"># features (in order to understand if an allocation is causing fragmentation</span><br><span class="line"># and to allocate it in a better place), and at the same time, will release the</span><br><span class="line"># old copies of the data. This process, repeated incrementally for all the keys</span><br><span class="line"># will cause the fragmentation to drop back to normal values.</span><br><span class="line">#</span><br><span class="line"># 需要了解的重要事项：</span><br><span class="line"># Important things to understand:</span><br><span class="line">#</span><br><span class="line">#    此功能在默认情况下是禁用的，</span><br><span class="line">#    并且仅当您编译Redis以使用我们随Redis源代码提供的Jemalloc副本时才起作用。</span><br><span class="line">#    这是Linux版本的默认设置。</span><br><span class="line"># 1. This feature is disabled by default, and only works if you compiled Redis</span><br><span class="line">#    to use the copy of Jemalloc we ship with the source code of Redis.</span><br><span class="line">#    This is the default with Linux builds.</span><br><span class="line">#</span><br><span class="line">#    如果没有碎片问题，就不需要启用此功能</span><br><span class="line"># 2. You never need to enable this feature if you don&#x27;t have fragmentation</span><br><span class="line">#    issues.</span><br><span class="line">#</span><br><span class="line">#    一旦遇到碎片，可以在需要时使用命令“CONFIG SET activedefrag yes”启用此功能。</span><br><span class="line"># 3. Once you experience fragmentation, you can enable this feature when</span><br><span class="line">#    needed with the command &quot;CONFIG SET activedefrag yes&quot;.</span><br><span class="line">#</span><br><span class="line"># 配置参数能够微调碎片整理过程的行为。如果您不确定它们的含义，那么最好保持默认值不变。</span><br><span class="line"># The configuration parameters are able to fine tune the behavior of the</span><br><span class="line"># defragmentation process. If you are not sure about what they mean it is</span><br><span class="line"># a good idea to leave the defaults untouched.</span><br><span class="line"></span><br><span class="line"># 已启用活动碎片整理</span><br><span class="line"># Enabled active defragmentation</span><br><span class="line"># activedefrag yes</span><br><span class="line"></span><br><span class="line"># 启动活动碎片整理的最小碎片浪费量</span><br><span class="line"># Minimum amount of fragmentation waste to start active defrag</span><br><span class="line"># active-defrag-ignore-bytes 100mb</span><br><span class="line"></span><br><span class="line"># 启动活动碎片整理的最小碎片百分比</span><br><span class="line"># Minimum percentage of fragmentation to start active defrag</span><br><span class="line"># active-defrag-threshold-lower 10</span><br><span class="line"></span><br><span class="line"># 使用最大努力的最大碎片百分比</span><br><span class="line"># Maximum percentage of fragmentation at which we use maximum effort</span><br><span class="line"># active-defrag-threshold-upper 100</span><br><span class="line"></span><br><span class="line"># 以CPU百分比表示的最小碎片整理工作量</span><br><span class="line"># Minimal effort for defrag in CPU percentage</span><br><span class="line"># active-defrag-cycle-min 25</span><br><span class="line"></span><br><span class="line"># 以CPU百分比表示的碎片整理最大工作量</span><br><span class="line"># Maximal effort for defrag in CPU percentage</span><br><span class="line"># active-defrag-cycle-max 75</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>Redis 6379端口无法访问的解决方案</title>
    <url>/2024/02/27/Redis-6379%E7%AB%AF%E5%8F%A3%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    <content><![CDATA[<p>如果配置Redis在不可预知的情况下只能在内网访问，而外网无法访问，先检查一下步骤是否配置</p>
<p>1、需要考虑到Redis配置本身是否支持远程外网访问，在redis的配置文件中找到bind参数，如果bind参数配置为127.0.0.1则不允许外网访问，此时我们需要改变它的配置，将bind参数注释掉，或者是修改为0.0.0.0，或者是相应的外网ip 地址，然后保存配置。<br>2、其次需要考虑到Redis的安全控制，在Redis的配置文件中有一个可配置的参数 protected-mode, 如果该参数设置为yes, 则只允许本地访问，此时需要将protected-mode 参数设置为no,即可允许外网访问。<br>3、最后需要考虑到防火墙的设置，由于Redis占用6379端口，因此我们可用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 开放端口</span><br><span class="line">sudo firewall-cmd --add-port=6379/tcp --permanent</span><br><span class="line"># 重启防火墙</span><br><span class="line">sudo firewall-cmd --reload </span><br></pre></td></tr></table></figure>

<p>因为服务器默认关闭了防火墙，所以只按照上面的1，2 步骤设置了Redis的配置文件，未设置redis的密码，按照指定配置文件的方式重新启动Redis服务。</p>
]]></content>
      <categories>
        <category>Redis</category>
      </categories>
      <tags>
        <tag>Redis</tag>
      </tags>
  </entry>
  <entry>
    <title>服务注册中心-Consul介绍</title>
    <url>/2024/02/27/%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83-Consul%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h1><h2 id="什么是注册中心"><a href="#什么是注册中心" class="headerlink" title="什么是注册中心"></a>什么是注册中心</h2><p>随着微服务理论发展的成熟，越来越多互联网公司采用微服务架构来支持业务发展。各个微服务之间都需要通过注册中心来实现自动化的注册和发现。<br><img src="/images/1709025686-56e5fd03e5aee3d7f07fe99d236fe27a.jpg" alt="123321.png"><br>注册中心主要有三种角色：</p>
<ul>
<li><strong>服务提供者（RPC Server）</strong>：在启动时，向 Registry 注册自身服务，并向 Registry 定期发送心跳汇报存活状态。</li>
<li><strong>服务消费者（RPC Client）</strong>：在启动时，向 Registry 订阅服务，把 Registry 返回的服务节点列表缓存在本地内存中，并与 RPC Sever 建立连接。</li>
<li><strong>服务注册中心（Registry）</strong>：用于保存 RPC Server 的注册信息，当 RPC Server 节点发生变更时，Registry 会同步变更，RPC Client 感知后会刷新本地 内存中缓存的服务节点列表。</li>
</ul>
<p>最后，RPC Client 从本地缓存的服务节点列表中，基于负载均衡算法选择一台 RPC Sever 发起调用。<br>目前常见的注册中心有Consul、ETCD、Zookeeper、Eureka、Nacos等。</p>
<h2 id="什么是Consul"><a href="#什么是Consul" class="headerlink" title="什么是Consul"></a>什么是Consul</h2><p>Consul是HashiCorp公司推出的开源工具，Consul由Go语言开发，部署起来非常容易，只需要极少的可执行程序和配置文件，具有绿色、轻量级的特点。Consul是分布式的、高可用的、 可横向扩展的用于实现分布式系统的服务发现与配置。</p>
<h2 id="Consul特点"><a href="#Consul特点" class="headerlink" title="Consul特点"></a>Consul特点</h2><ul>
<li>服务发现（Service Discovery）：Consul提供了通过DNS或者HTTP接口的方式来注册服务和发现服务。一些外部的服务通过Consul很容易的找到它所依赖的服务。</li>
<li>健康检查（Health Checking）：Consul的Client可以提供任意数量的健康检查，既可以与给定的服务相关联(“webserver是否返回200 OK”)，也可以与本地节点相关联(“内存利用率是否低于90%”)。操作员可以使用这些信息来监视集群的健康状况，服务发现组件可以使用这些信息将流量从不健康的主机路由出去。</li>
<li>Key&#x2F;Value存储：应用程序可以根据自己的需要使用Consul提供的Key&#x2F;Value存储。 Consul提供了简单易用的HTTP接口，结合其他工具可以实现动态配置、功能标记、领袖选举等等功能。</li>
<li>安全服务通信：Consul可以为服务生成和分发TLS证书，以建立相互的TLS连接。意图可用于定义允许哪些服务通信。服务分割可以很容易地进行管理，其目的是可以实时更改的，而不是使用复杂的网络拓扑和静态防火墙规则。</li>
<li>多数据中心：Consul支持开箱即用的多数据中心. 这意味着用户不需要担心需要建立额外的抽象层让业务扩展到多个区域。</li>
</ul>
<h2 id="consul组件"><a href="#consul组件" class="headerlink" title="consul组件"></a>consul组件</h2><ul>
<li>Agent：是在 Consul 集群的每个成员上长期运行的守护进程，通过命令 consul agent 启动运行。由于所有节点都必须运行一个 Agent，因此 Agent 可以分为 client 或 Server。所有的 Agent 都可以运行DNS或HTTP接口，并负责运行监测和保持服务同步</li>
<li>Client：是将所有RPC转发到 Server 的 Agent。Client 是相对无状态的，Client 唯一执行的后台活动是加入 LAN gossip 池。这只有最小的资源开销，且只消耗少量的网络带宽</li>
<li>Server：是一个有一组扩展功能的 Agent，这些功能包括参与 Raft 选举、维护集群状态、响应RPC查询、与其他数据中心交互 WAN gossip 和转发查询给 leader 或远程的数据中心</li>
<li>Datacenter：是一个私有的、低延迟和高带宽的网络环境。这不包括通过公网的通信，但就目的而言，单个 EC2 中的多个可用区域被视为数据中心的一部分</li>
<li>Consensus：一致性。Consul 使用 Consensus 协议（具体由 Raft 算法实现）来提供一致性（由 CAP 定义），表明 leader 选举和事务的顺序达成一致</li>
<li>Gossip：Consul 使用 Gossip 协议来管理成员资格并向集群广播消息。Serf 提供了完整的 Gossip 协议，可用于多种目的，而 Consul 建立在 Serf 之上。Gossip 涉及节点到节点的随机通信，主要是通过UDP。Gossip 协议也被称为 Epidemic 协议（流行病协议）</li>
<li>LAN Gossip：指包含所有位于同一局域网或数据中心的节点的 LAN gossip 池</li>
<li>WAN Gossip：指仅包含 Server 的 WAN gossip 池。这些 Server 主要分布在不同的数据中心，通常通过Internet或者广域网进行通信</li>
<li>RPC：远程过程调用。一种 请求&#x2F;响应 机制，允许 Client 向 Server 发起请求</li>
</ul>
<h2 id="Consul-架构图"><a href="#Consul-架构图" class="headerlink" title="Consul 架构图"></a>Consul 架构图</h2><p><img src="/images/1709025686-34a054a5f58cc00d7e3c05256d9af1d1.jpg" alt="image.png"><br>每个为Consul提供服务的节点都会运行一个Consul Agent进程。运行代理不需要发现其他服务或获取&#x2F;设置密钥&#x2F;值数据。Agent负责对节点上的服务以及节点本身进行健康检查。<br>Consul Agent 分为两种模式， Server 和 Client模式，一般部署模型是 Server + Client的模式（当然也可以纯Server）, Server 具有Client的全部功能， 但是由于Server负责存储数据，并且强一致性模型的缘故， Server数是有限的（3-5个Server节点，Client可以无限扩展的）。<br>Agent与一个或多个Consul Server对话。Consul Server是<strong>存储</strong>和<strong>复制数据</strong>的地方。Server本身会选出一个Leader。虽然Consul可以用一台Server来运作，但建议使用3到5台，以避免故障情况导致数据丢失。建议每个数据中心采用Consul服务器集群。<br>Server Agent维护着一个目录（Catalog），这个目录（Catalog）是由Agent提交的信息汇总形成的。目录维护着集群的高层视图，包括哪些服务可用，哪些节点运行这些服务，健康信息等。<br>需要发现其他服务或节点的基础结构组件可以查询任何Consul Server或任何Consul Agent。Agent将查询自动转发到Server。<br>Agent会自动将查询转发给Server Agent。 每个数据中心都运行一个Consul Server集群。当有跨数据中心的服务发现或配置请求时，本地Consul Server将请求转发到远程数据中心并返回结果。</p>
<h2 id="Consul的使用场景"><a href="#Consul的使用场景" class="headerlink" title="Consul的使用场景"></a>Consul的使用场景</h2><p>Consul的应用场景包括服务发现、服务隔离、服务配置：</p>
<ul>
<li>服务发现场景中consul作为注册中心，服务地址被注册到consul中以后，可以使用consul提供的dns、http接口查询，consul支持health check。</li>
<li>服务隔离场景中consul支持以服务为单位设置访问策略，能同时支持经典的平台和新兴的平台，支持tls证书分发，service-to-service加密。</li>
<li>服务配置场景中consul提供key-value数据存储功能，并且能将变动迅速地通知出去，借助Consul可以实现配置共享，需要读取配置的服务可以从Consul中读取到准确的配置信息。</li>
<li>Consul可以帮助系统管理者更清晰的了解复杂系统内部的系统架构，运维人员可以将Consul看成一种监控软件，也可以看成一种资产（资源）管理系统。</li>
</ul>
<h1 id="安装部署"><a href="#安装部署" class="headerlink" title="安装部署"></a>安装部署</h1><p>参考文档：<a href="https://developer.hashicorp.com/consul/downloads?host=www.consul.io">https://developer.hashicorp.com/consul/downloads?host=www.consul.io</a></p>
<h2 id="yum部署"><a href="#yum部署" class="headerlink" title="yum部署"></a>yum部署</h2><p>安装软件包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban ~]# yum install -y yum-utils</span><br><span class="line">[root@tiaoban ~]# yum-config-manager --add-repo https://rpm.releases.hashicorp.com/RHEL/hashicorp.repo</span><br><span class="line">[root@tiaoban ~]# yum -y install consul</span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban ~]# systemctl start consul</span><br><span class="line">[root@tiaoban ~]# systemctl enable consul</span><br></pre></td></tr></table></figure>

<h2 id="二进制部署"><a href="#二进制部署" class="headerlink" title="二进制部署"></a>二进制部署</h2><p>下载</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban ~]# mkdir consul</span><br><span class="line">[root@tiaoban ~]# cd consul/</span><br><span class="line">[root@tiaoban consul]# wget https://releases.hashicorp.com/consul/1.13.2/consul_1.13.2_linux_amd64.zip</span><br><span class="line">[root@tiaoban consul]# ls</span><br><span class="line">consul_1.13.2_darwin_amd64.zip</span><br></pre></td></tr></table></figure>

<p>解压安装</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban consul]# unzip consul_1.13.2_linux_amd64.zip </span><br><span class="line">Archive:  consul_1.13.2_linux_amd64.zip</span><br><span class="line">  inflating: consul                  </span><br><span class="line">[root@tiaoban consul]# ls</span><br><span class="line">consul  consul_1.13.2_linux_amd64.zip</span><br><span class="line">[root@tiaoban consul]# mv consul /usr/local/bin/</span><br><span class="line">[root@tiaoban consul]# consul version</span><br><span class="line">Consul v1.13.2</span><br><span class="line">Revision 0e046bbb</span><br><span class="line">Build Date 2022-09-20T20:30:07Z</span><br><span class="line">Protocol 2 spoken by default, understands 2 to 3 (agent will automatically use protocol &gt;2 when speaking to compatible agents)</span><br></pre></td></tr></table></figure>

<p>启动服务测试<br>使用单节点模式启动测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban consul]# consul agent -dev -ui -client 0.0.0.0</span><br></pre></td></tr></table></figure>

<p><img src="/images/1709025686-5f4b34f1e393657c4764d8c1dfc111bf.jpg" alt="image.png"><br>添加启动脚本</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban ~]# cat /usr/lib/systemd/system/consul.service </span><br><span class="line">[Unit]</span><br><span class="line">Description=consul</span><br><span class="line">After=network.target</span><br><span class="line">    </span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/usr/local/consul/start.sh</span><br><span class="line">KillSignal=SIGTERM</span><br><span class="line">    </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">[root@tiaoban ~]# mkdir -p /usr/local/consul/</span><br><span class="line">[root@tiaoban ~]# cat /usr/local/consul/start.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">/usr/local/bin/consul agent -dev -ui -client 0.0.0.0</span><br><span class="line">[root@tiaoban ~]# chmod u+x /usr/local/consul/start.sh </span><br></pre></td></tr></table></figure>

<p>启动服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban ~]# systemctl daemon-reload </span><br><span class="line">[root@tiaoban ~]# systemctl start consul</span><br><span class="line">[root@tiaoban ~]# systemctl enable consul</span><br></pre></td></tr></table></figure>

<h1 id="服务启动"><a href="#服务启动" class="headerlink" title="服务启动"></a>服务启动</h1><blockquote>
<p>以下操作以yum方式安装consul配置为例，配置文件路径<code>/etc/consul.d/consul.hcl</code></p>
</blockquote>
<h2 id="单节点模式"><a href="#单节点模式" class="headerlink" title="单节点模式"></a>单节点模式</h2><p>修改配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 指明数据中心的名字</span><br><span class="line">datacenter = &quot;my-dc-1&quot;</span><br><span class="line"># 存储状态的数据目录</span><br><span class="line">data_dir = &quot;/opt/consul&quot;</span><br><span class="line"># web ui</span><br><span class="line">ui_config&#123;</span><br><span class="line">  enabled = true</span><br><span class="line">&#125;</span><br><span class="line"># 节点是个Server</span><br><span class="line">server = true</span><br><span class="line"># 绑定的一个地址，用于节点之间通信的地址</span><br><span class="line">bind_addr = &quot;192.168.10.100&quot;</span><br><span class="line"># 期望提供的Server节点数目</span><br><span class="line">bootstrap_expect=1</span><br><span class="line"># Client接口绑定到的地址</span><br><span class="line">client_addr = &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动服务，查看集群成员</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban consul.d]# systemctl start consul</span><br><span class="line">[root@tiaoban consul.d]# consul members </span><br><span class="line">Node     Address              Status  Type    Build   Protocol  DC       Partition  Segment</span><br><span class="line">tiaoban  192.168.10.100:8301  alive   server  1.13.2  2         my-dc-1  default    &lt;all&gt;</span><br></pre></td></tr></table></figure>

<h2 id="集群模式"><a href="#集群模式" class="headerlink" title="集群模式"></a>集群模式</h2><p>主机规划</p>
<table>
<thead>
<tr>
<th>主机名</th>
<th>IP</th>
<th>角色</th>
</tr>
</thead>
<tbody><tr>
<td>k8s-master</td>
<td>192.168.10.10</td>
<td>server</td>
</tr>
<tr>
<td>k8s-work1</td>
<td>192.168.10.11</td>
<td>server</td>
</tr>
<tr>
<td>k8s-work2</td>
<td>192.168.10.12</td>
<td>server</td>
</tr>
<tr>
<td>tiaoban</td>
<td>192.168.10.100</td>
<td>clinet</td>
</tr>
</tbody></table>
<p>server端配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 指明数据中心的名字</span><br><span class="line">datacenter = &quot;my-dc-1&quot;</span><br><span class="line"># 存储状态的数据目录</span><br><span class="line">data_dir = &quot;/opt/consul&quot;</span><br><span class="line"># web ui</span><br><span class="line">ui_config&#123;</span><br><span class="line">  enabled = true</span><br><span class="line">&#125;</span><br><span class="line"># 节点是个Server</span><br><span class="line">server = true</span><br><span class="line"># 绑定的一个地址，用于节点之间通信的地址。此处以192.168.10.10为例，其他两个更换ip即可。</span><br><span class="line">bind_addr = &quot;192.168.10.10&quot;</span><br><span class="line"># 期望提供的Server节点数目</span><br><span class="line">bootstrap_expect=3</span><br><span class="line"># Client接口绑定到的地址</span><br><span class="line">client_addr = &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>client配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 指明数据中心的名字</span><br><span class="line">datacenter = &quot;my-dc-1&quot;</span><br><span class="line"># 存储状态的数据目录</span><br><span class="line">data_dir = &quot;/opt/consul&quot;</span><br><span class="line"># web ui</span><br><span class="line">ui_config&#123;</span><br><span class="line">  enabled = true</span><br><span class="line">&#125;</span><br><span class="line"># 节点是个Server</span><br><span class="line">server = false</span><br><span class="line"># 绑定的一个地址，用于节点之间通信的地址</span><br><span class="line">bind_addr = &quot;192.168.10.100&quot;</span><br><span class="line"># Client接口绑定到的地址</span><br><span class="line">client_addr = &quot;0.0.0.0&quot;</span><br></pre></td></tr></table></figure>

<p>启动服务并加入集群</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 所有机器执行</span><br><span class="line">[root@k8s-master consul.d]# systemctl restart consul</span><br><span class="line"># 除了k8s-master以外的其他机器执行</span><br><span class="line">[root@k8s-tiaoban consul.d]# consul join 192.168.10.10</span><br><span class="line">Successfully joined cluster by contacting 1 nodes.</span><br></pre></td></tr></table></figure>

<h1 id="Consul-常用CLI"><a href="#Consul-常用CLI" class="headerlink" title="Consul 常用CLI"></a>Consul 常用CLI</h1><h2 id="查看服务列表"><a href="#查看服务列表" class="headerlink" title="查看服务列表"></a>查看服务列表</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# consul catalog services</span><br><span class="line">consul</span><br><span class="line">traefik</span><br><span class="line">traefik-tcp</span><br></pre></td></tr></table></figure>

<h2 id="注销服务"><a href="#注销服务" class="headerlink" title="注销服务"></a>注销服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">consul services deregister -id=:service-id</span><br><span class="line">// :service-id 为用户服务Id</span><br></pre></td></tr></table></figure>

<h2 id="查看节点成员"><a href="#查看节点成员" class="headerlink" title="查看节点成员"></a>查看节点成员</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# consul members</span><br><span class="line">Node        Address              Status  Type    Build   Protocol  DC       Partition  Segment</span><br><span class="line">k8s-master  192.168.10.10:8301   alive   server  1.13.3  2         my-dc-1  default    &lt;all&gt;</span><br><span class="line">k8s-work1   192.168.10.11:8301   alive   server  1.13.3  2         my-dc-1  default    &lt;all&gt;</span><br><span class="line">k8s-work2   192.168.10.12:8301   alive   server  1.13.3  2         my-dc-1  default    &lt;all&gt;</span><br><span class="line">tiaoban     192.168.10.100:8301  alive   client  1.13.2  2         my-dc-1  default    &lt;default&gt;</span><br></pre></td></tr></table></figure>

<h2 id="查看server节点信息"><a href="#查看server节点信息" class="headerlink" title="查看server节点信息"></a>查看server节点信息</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# consul operator raft list-peers</span><br><span class="line">Node        ID                                    Address             State     Voter  RaftProtocol</span><br><span class="line">k8s-work1   322a522a-dcf5-3727-052e-0f2d65406f8d  192.168.10.11:8300  follower  true   3</span><br><span class="line">k8s-master  5db3c09a-f94d-b53f-6c9f-694beb64c1aa  192.168.10.10:8300  leader    true   3</span><br><span class="line">k8s-work2   d0e4a609-f029-cd91-1d61-63c3403b82b3  192.168.10.12:8300  follower  false  3</span><br></pre></td></tr></table></figure>

<h2 id="Consul常用HTTP-API"><a href="#Consul常用HTTP-API" class="headerlink" title="Consul常用HTTP API"></a>Consul常用HTTP API</h2><h2 id="服务查询"><a href="#服务查询" class="headerlink" title="服务查询"></a>服务查询</h2><ul>
<li>&#x2F;agent&#x2F;services：该端点返回在本地代理程序中注册的所有服务；</li>
<li>&#x2F;agent&#x2F;service&#x2F;{service_id}：返回在本地代理上注册的单个服务实例的完整服务定义；</li>
<li>&#x2F;agent&#x2F;health&#x2F;service&#x2F;name&#x2F;{service_name} ：通过名称检索注册的服务状态（设置了健康检查的服务）；</li>
<li>&#x2F;agent&#x2F;health&#x2F;service&#x2F;id&#x2F;{service_id}：通过id检索注册的服务状态（设置了健康检查的服务）；</li>
<li>&#x2F;health&#x2F;service&#x2F;{service_name}?passing：通过健康检查的服务(包含未设置check的service)</li>
</ul>
<h2 id="服务注册"><a href="#服务注册" class="headerlink" title="服务注册"></a>服务注册</h2><ul>
<li>&#x2F;agent&#x2F;service&#x2F;register：注册服务；</li>
</ul>
<h2 id="服务删除"><a href="#服务删除" class="headerlink" title="服务删除"></a>服务删除</h2><ul>
<li>&#x2F;agent&#x2F;service&#x2F;deregister&#x2F;{service_id}：注销服务；</li>
<li>&#x2F;agent&#x2F;service&#x2F;maintenance&#x2F;{service_id}：该端点将给定的服务置于“维护模式”，在维护模式下，该服务将被标记为不可用，并且不会出现在DNS或API查询中；</li>
</ul>
<h1 id="服务注册-1"><a href="#服务注册-1" class="headerlink" title="服务注册"></a>服务注册</h1><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>新增json配置文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# cat /etc/consul.d/kube-apiserver.json </span><br><span class="line">&#123;</span><br><span class="line">    &quot;service&quot;: &#123;</span><br><span class="line">        &quot;name&quot;: &quot;traefik-tcp&quot;,</span><br><span class="line">        &quot;tags&quot;: [</span><br><span class="line">            &quot;k8s&quot;,&quot;traefik&quot;</span><br><span class="line">        ],</span><br><span class="line">        &quot;address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">        &quot;port&quot;: 9100</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重启服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# systemctl restart consul</span><br></pre></td></tr></table></figure>

<p>web界面查看<br><img src="/images/1709025686-6826da809f1490aa8e1e1ad021b1337f.jpg" alt="image.png"></p>
<h2 id="HTTP-API"><a href="#HTTP-API" class="headerlink" title="HTTP API"></a>HTTP API</h2><p>注册一个name为traefik的服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# curl -X PUT -d &#x27;&#123;&quot;name&quot;: &quot;traefik&quot;,&quot;address&quot;: &quot;192.168.10.10&quot;,&quot;port&quot;: 80,&quot;tags&quot;: [&quot;k8s&quot;]&#125;&#x27; http://192.168.10.10:8500/v1/agent/service/register</span><br></pre></td></tr></table></figure>

<p>注册带健康检查的服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -X PUT -d &#x27;&#123;&quot;name&quot;: &quot;traefik-metrics&quot;,&quot;address&quot;: &quot;192.168.10.10&quot;,&quot;port&quot;: 80,&quot;tags&quot;: [&quot;k8s&quot;],&quot;checks&quot;:[&#123;&quot;http&quot;:&quot;http://192.168.10.10:9100/metrics&quot;,&quot;interval&quot;:&quot;5s&quot;&#125;]&#125;&#x27; http://192.168.10.10:8500/v1/agent/service/register</span><br></pre></td></tr></table></figure>

<p>打开管理页面查看已注册的服务<br><img src="/images/1709025686-eb49bc0af4b5961462306e5db6329ebd.jpg" alt="image.png"></p>
<h2 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h2><p>除了采用配置文件或者HTTP API方式注册服务外，consul也支持使用sdk包注册查询服务，目前主流的开发语法均已支持，详情参考文档：<br><a href="https://developer.hashicorp.com/consul/api-docs/libraries-and-sdks">https://developer.hashicorp.com/consul/api-docs/libraries-and-sdks</a></p>
<h1 id="服务查询-1"><a href="#服务查询-1" class="headerlink" title="服务查询"></a>服务查询</h1><h2 id="HTTP-API-1"><a href="#HTTP-API-1" class="headerlink" title="HTTP API"></a>HTTP API</h2><p>查看服务列表</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# curl -s http://192.168.10.10:8500/v1/catalog/services | jq</span><br><span class="line">&#123;</span><br><span class="line">  &quot;consul&quot;: [],</span><br><span class="line">  &quot;traefik&quot;: [</span><br><span class="line">    &quot;k8s&quot;</span><br><span class="line">  ],</span><br><span class="line">  &quot;traefik-tcp&quot;: [</span><br><span class="line">    &quot;k8s&quot;,</span><br><span class="line">    &quot;traefik&quot;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>查看服务详细信息</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# curl -s http://192.168.10.10:8500/v1/catalog/service/traefik | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;ID&quot;: &quot;eda0ef7f-ca12-bbca-c84e-f88cc3664cd1&quot;,</span><br><span class="line">    &quot;Node&quot;: &quot;tiaoban&quot;,</span><br><span class="line">    &quot;Address&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">    &quot;Datacenter&quot;: &quot;my-dc-1&quot;,</span><br><span class="line">    &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">      &quot;lan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;lan_ipv4&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;wan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;wan_ipv4&quot;: &quot;192.168.10.100&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;NodeMeta&quot;: &#123;</span><br><span class="line">      &quot;consul-network-segment&quot;: &quot;&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceKind&quot;: &quot;&quot;,</span><br><span class="line">    &quot;ServiceID&quot;: &quot;traefik&quot;,</span><br><span class="line">    &quot;ServiceName&quot;: &quot;traefik&quot;,</span><br><span class="line">    &quot;ServiceTags&quot;: [</span><br><span class="line">      &quot;k8s&quot;</span><br><span class="line">    ],</span><br><span class="line">    &quot;ServiceAddress&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">    &quot;ServiceTaggedAddresses&quot;: &#123;</span><br><span class="line">      &quot;lan_ipv4&quot;: &#123;</span><br><span class="line">        &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">        &quot;Port&quot;: 80</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;wan_ipv4&quot;: &#123;</span><br><span class="line">        &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">        &quot;Port&quot;: 80</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceWeights&quot;: &#123;</span><br><span class="line">      &quot;Passing&quot;: 1,</span><br><span class="line">      &quot;Warning&quot;: 1</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceMeta&quot;: &#123;&#125;,</span><br><span class="line">    &quot;ServicePort&quot;: 80,</span><br><span class="line">    &quot;ServiceSocketPath&quot;: &quot;&quot;,</span><br><span class="line">    &quot;ServiceEnableTagOverride&quot;: false,</span><br><span class="line">    &quot;ServiceProxy&quot;: &#123;</span><br><span class="line">      &quot;Mode&quot;: &quot;&quot;,</span><br><span class="line">      &quot;MeshGateway&quot;: &#123;&#125;,</span><br><span class="line">      &quot;Expose&quot;: &#123;&#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;ServiceConnect&quot;: &#123;&#125;,</span><br><span class="line">    &quot;CreateIndex&quot;: 12,</span><br><span class="line">    &quot;ModifyIndex&quot;: 12</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>健康检查</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# curl -s http://192.168.10.10:8500/v1/health/service/traefik?passing | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;Node&quot;: &#123;</span><br><span class="line">      &quot;ID&quot;: &quot;eda0ef7f-ca12-bbca-c84e-f88cc3664cd1&quot;,</span><br><span class="line">      &quot;Node&quot;: &quot;tiaoban&quot;,</span><br><span class="line">      &quot;Address&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">      &quot;Datacenter&quot;: &quot;my-dc-1&quot;,</span><br><span class="line">      &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">        &quot;lan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;lan_ipv4&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;wan&quot;: &quot;192.168.10.100&quot;,</span><br><span class="line">        &quot;wan_ipv4&quot;: &quot;192.168.10.100&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;Meta&quot;: &#123;</span><br><span class="line">        &quot;consul-network-segment&quot;: &quot;&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;CreateIndex&quot;: 9,</span><br><span class="line">      &quot;ModifyIndex&quot;: 11</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Service&quot;: &#123;</span><br><span class="line">      &quot;ID&quot;: &quot;traefik&quot;,</span><br><span class="line">      &quot;Service&quot;: &quot;traefik&quot;,</span><br><span class="line">      &quot;Tags&quot;: [</span><br><span class="line">        &quot;k8s&quot;</span><br><span class="line">      ],</span><br><span class="line">      &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">      &quot;TaggedAddresses&quot;: &#123;</span><br><span class="line">        &quot;lan_ipv4&quot;: &#123;</span><br><span class="line">          &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">          &quot;Port&quot;: 80</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;wan_ipv4&quot;: &#123;</span><br><span class="line">          &quot;Address&quot;: &quot;192.168.10.10&quot;,</span><br><span class="line">          &quot;Port&quot;: 80</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;Meta&quot;: null,</span><br><span class="line">      &quot;Port&quot;: 80,</span><br><span class="line">      &quot;Weights&quot;: &#123;</span><br><span class="line">        &quot;Passing&quot;: 1,</span><br><span class="line">        &quot;Warning&quot;: 1</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;EnableTagOverride&quot;: false,</span><br><span class="line">      &quot;Proxy&quot;: &#123;</span><br><span class="line">        &quot;Mode&quot;: &quot;&quot;,</span><br><span class="line">        &quot;MeshGateway&quot;: &#123;&#125;,</span><br><span class="line">        &quot;Expose&quot;: &#123;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;Connect&quot;: &#123;&#125;,</span><br><span class="line">      &quot;PeerName&quot;: &quot;&quot;,</span><br><span class="line">      &quot;CreateIndex&quot;: 12,</span><br><span class="line">      &quot;ModifyIndex&quot;: 12</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;Checks&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;Node&quot;: &quot;tiaoban&quot;,</span><br><span class="line">        &quot;CheckID&quot;: &quot;serfHealth&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;Serf Health Status&quot;,</span><br><span class="line">        &quot;Status&quot;: &quot;passing&quot;,</span><br><span class="line">        &quot;Notes&quot;: &quot;&quot;,</span><br><span class="line">        &quot;Output&quot;: &quot;Agent alive and reachable&quot;,</span><br><span class="line">        &quot;ServiceID&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ServiceName&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ServiceTags&quot;: [],</span><br><span class="line">        &quot;Type&quot;: &quot;&quot;,</span><br><span class="line">        &quot;Interval&quot;: &quot;&quot;,</span><br><span class="line">        &quot;Timeout&quot;: &quot;&quot;,</span><br><span class="line">        &quot;ExposedPort&quot;: 0,</span><br><span class="line">        &quot;Definition&quot;: &#123;&#125;,</span><br><span class="line">        &quot;CreateIndex&quot;: 9,</span><br><span class="line">        &quot;ModifyIndex&quot;: 9</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>删除注册的服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# curl -X PUT http://192.168.10.10:8500/v1/agent/service/deregister/traefik</span><br></pre></td></tr></table></figure>

<h2 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h2><p>DNS接口是Consul中主要的查询接口之一，另一个是HTTP接口， HTTP接口查询请查阅,Consul默认在8600端口监听DNS查询。<br>参考文档：<a href="https://developer.hashicorp.com/consul/docs/discovery/dns">https://developer.hashicorp.com/consul/docs/discovery/dns</a><br>要使用DNS接口， 有几种方法可以实现：<br>一是使用指定的DNS解析库， 然后指向Consul；<br>二是把Consul设置为节点的DNS服务器, 并且提供recursors配置项， 这样非Consul的查询也能被解析；<br>最后一种方法是从已有的DNS服务器上把所有consul.为域名的请求转发到consul agent上。<br><strong>节点查找</strong><br>查找节点的地址信息，查找格式：<node>.node[.datacenter].<domain>。如果datacenter不指定，默认为当前集群查询。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# dig @192.168.10.10 -p 8600 tiaoban.node.consul ANY</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.26-RedHat-9.11.26-6.el8 &lt;&lt;&gt;&gt; @192.168.10.10 -p 8600 tiaoban.node.consul ANY</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 25684</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;tiaoban.node.consul.           IN      ANY</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">tiaoban.node.consul.    0       IN      A       192.168.10.100</span><br><span class="line">tiaoban.node.consul.    0       IN      TXT     &quot;consul-network-segment=&quot;</span><br><span class="line"></span><br><span class="line">;; Query time: 14 msec</span><br><span class="line">;; SERVER: 192.168.10.10#8600(192.168.10.10)</span><br><span class="line">;; WHEN: 一 10月 31 10:51:10 CST 2022</span><br><span class="line">;; MSG SIZE  rcvd: 100</span><br></pre></td></tr></table></figure>

<p><strong>服务查找</strong><br>查询服务提供者。服务查询支持两种查找方法：标准和严格RFC 2782。<br>标准查找格式：[tag.]<service>.service[.datacenter].<domain>。Tag是可选的，而且与节点查找一样，数据中心也是可选。如果没有提供Tag，就不会有过滤，如果没有数据中心，就会选择默认的数据中心。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master ~]# dig @192.168.10.10 -p 8600 traefik.service.consul SRV</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.26-RedHat-9.11.26-6.el8 &lt;&lt;&gt;&gt; @192.168.10.10 -p 8600 traefik.service.consul SRV</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 28200</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 3</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;traefik.service.consul.                IN      SRV</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">traefik.service.consul. 0       IN      SRV     1 1 80 c0a80a0a.addr.my-dc-1.consul.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">c0a80a0a.addr.my-dc-1.consul. 0 IN      A       192.168.10.10</span><br><span class="line">tiaoban.node.my-dc-1.consul. 0  IN      TXT     &quot;consul-network-segment=&quot;</span><br><span class="line"></span><br><span class="line">;; Query time: 13 msec</span><br><span class="line">;; SERVER: 192.168.10.10#8600(192.168.10.10)</span><br><span class="line">;; WHEN: 一 10月 31 10:53:30 CST 2022</span><br><span class="line">;; MSG SIZE  rcvd: 164</span><br></pre></td></tr></table></figure>

<p>RFC2782 查找 格式：_<service>._<protocol>.service[.datacenter][.domain]根据RFC 2782， SRV请求都应该在service和protocol前使用(_)作为前缀。避免发生DNS冲突。Protocol可以是service任何一个tag，如果service没有tag，使用tcp作为protocol。如果一旦设置了tcp，那么查询时将不会执行任何标签过滤。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查询tag为k8s的注册服务traefik信息。</span><br><span class="line">[root@k8s-master ~]# dig @192.168.10.10 -p 8600 _traefik._k8s.service.consul SRV</span><br><span class="line"></span><br><span class="line">; &lt;&lt;&gt;&gt; DiG 9.11.26-RedHat-9.11.26-6.el8 &lt;&lt;&gt;&gt; @192.168.10.10 -p 8600 _traefik._k8s.service.consul SRV</span><br><span class="line">; (1 server found)</span><br><span class="line">;; global options: +cmd</span><br><span class="line">;; Got answer:</span><br><span class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 43270</span><br><span class="line">;; flags: qr aa rd; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 3</span><br><span class="line">;; WARNING: recursion requested but not available</span><br><span class="line"></span><br><span class="line">;; OPT PSEUDOSECTION:</span><br><span class="line">; EDNS: version: 0, flags:; udp: 4096</span><br><span class="line">;; QUESTION SECTION:</span><br><span class="line">;_traefik._k8s.service.consul.  IN      SRV</span><br><span class="line"></span><br><span class="line">;; ANSWER SECTION:</span><br><span class="line">_traefik._k8s.service.consul. 0 IN      SRV     1 1 80 c0a80a0a.addr.my-dc-1.consul.</span><br><span class="line"></span><br><span class="line">;; ADDITIONAL SECTION:</span><br><span class="line">c0a80a0a.addr.my-dc-1.consul. 0 IN      A       192.168.10.10</span><br><span class="line">tiaoban.node.my-dc-1.consul. 0  IN      TXT     &quot;consul-network-segment=&quot;</span><br><span class="line"></span><br><span class="line">;; Query time: 1 msec</span><br><span class="line">;; SERVER: 192.168.10.10#8600(192.168.10.10)</span><br><span class="line">;; WHEN: 一 10月 31 10:57:05 CST 2022</span><br><span class="line">;; MSG SIZE  rcvd: 170</span><br></pre></td></tr></table></figure>

<h1 id="配置kv"><a href="#配置kv" class="headerlink" title="配置kv"></a>配置kv</h1><p>consul kv 是consul的核心功能，并随consul agent一起安装。consul kv允许用户存储索引对象，尽管其主要用途是存储配置参数和元数据。<br>consul kv 数据存储在server上，可以由任何agent（client或server）访问。consul允许在所有server之间自动复制数据，如果发生故障，拥有一定数量的server将减少数据丢失的风险。<br>数据存储位于server上的数据目录中，为确保在完全中断的情况下不会丢失数据，可以使用 consul snapshot 命令备份数据。还可以通过 consul kv 子命令、HTTP API 和 Consul UI 访问kv存储。</p>
<h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><p>命令行创建kv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul kv put key1 value1</span><br><span class="line">Success! Data written to: key1</span><br></pre></td></tr></table></figure>

<p>查看kv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 查看所有key value数据</span><br><span class="line">[root@k8s-master consul.d]# consul kv get --recurse </span><br><span class="line">key1:value1</span><br><span class="line">key2:value2</span><br><span class="line"># 查看指定key value数据</span><br><span class="line">[root@k8s-master consul.d]# consul kv get key2</span><br><span class="line">value2</span><br></pre></td></tr></table></figure>

<p>更新kv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul kv put key2 v2</span><br><span class="line">Success! Data written to: key2</span><br></pre></td></tr></table></figure>

<p>删除kv</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul kv delete key2</span><br><span class="line">Success! Deleted key: key2</span><br></pre></td></tr></table></figure>

<h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><p>web界面创建kv<br><img src="/images/1709025686-a59c600d1b1ab302c4d2a373db93f867.jpg" alt="image.png"><br>web界面查看kv<br><img src="/images/1709025686-9114be0525c9e185fe3c122074452975.jpg" alt="image.png"></p>
<h2 id="HTTP-API-2"><a href="#HTTP-API-2" class="headerlink" title="HTTP API"></a>HTTP API</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 设置kv</span><br><span class="line">[root@k8s-master consul.d]# curl -X PUT -d &#x27;value3&#x27; http://192.168.10.10:8500/v1/kv/key3</span><br><span class="line">true</span><br><span class="line"># 查看kv</span><br><span class="line">[root@k8s-master consul.d]# curl -s http://192.168.10.10:8500/v1/kv/key3 | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;LockIndex&quot;: 0,</span><br><span class="line">    &quot;Key&quot;: &quot;key3&quot;,</span><br><span class="line">    &quot;Flags&quot;: 0,</span><br><span class="line">    &quot;Value&quot;: &quot;dmFsdWUz&quot;,</span><br><span class="line">    &quot;CreateIndex&quot;: 611,</span><br><span class="line">    &quot;ModifyIndex&quot;: 611</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br><span class="line"># base64解码查看内容</span><br><span class="line">[root@k8s-master consul.d]# echo &quot;dmFsdWUz&quot; | base64 -d</span><br><span class="line">value3</span><br><span class="line"># 删除kv</span><br><span class="line">[root@k8s-master consul.d]# curl -X DELETE http://192.168.10.10:8500/v1/kv/key3</span><br></pre></td></tr></table></figure>

<h1 id="访问控制"><a href="#访问控制" class="headerlink" title="访问控制"></a>访问控制</h1><p>通过ACLS 来确保安全的访问 UI, API, CLI, servie 通信，Agent通信。如果想要确保数据中心安全，就需要配置ACLS。ACL核心原理是，将规则分组为策略， 然后一个或多个策略于令牌关联。</p>
<h2 id="启用ACL"><a href="#启用ACL" class="headerlink" title="启用ACL"></a>启用ACL</h2><p>修改consul配置文件，新增如下内容</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># acl访问控制</span><br><span class="line">acl = &#123;</span><br><span class="line">  enabled = true</span><br><span class="line">  default_policy = &quot;deny&quot; # 默认拒绝所有操作</span><br><span class="line">  enable_token_persistence = true # 持久化到磁盘，重启时重新加载</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>重启consul服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# systemctl restart consul</span><br></pre></td></tr></table></figure>

<p>生成token</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master consul.d]# consul acl bootstrap</span><br><span class="line">AccessorID:       16a37577-f243-94fb-8770-35489870025c</span><br><span class="line">SecretID:         54a3e3fd-ea07-85a8-67e3-33107a958977</span><br><span class="line">Description:      Bootstrap Token (Global Management)</span><br><span class="line">Local:            false</span><br><span class="line">Create Time:      2022-10-27 22:56:07.654230262 +0800 CST</span><br><span class="line">Policies:</span><br><span class="line">   00000000-0000-0000-0000-000000000001 - global-management</span><br></pre></td></tr></table></figure>

<h2 id="访问验证"><a href="#访问验证" class="headerlink" title="访问验证"></a>访问验证</h2><p>web页面访问验证<br><img src="/images/1709025686-26d150b9427340dcffb99c35da36980c.jpg" alt="image.png"><br>api接口访问验证</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 直接获取kv提示权限拒绝</span><br><span class="line">[root@k8s-master consul.d]# curl -s http://192.168.10.10:8500/v1/kv/key3 </span><br><span class="line">rpc error making call: Permission denied: token with AccessorID &#x27;00000000-0000-0000-0000-000000000002&#x27; lacks permission &#x27;key:read&#x27; on &quot;key3&quot;[root@k8s-master consul.d]# </span><br><span class="line"># 请求头添加token访问</span><br><span class="line">[root@k8s-master consul.d]# curl -s -H &quot;X-Consul-Token:54a3e3fd-ea07-85a8-67e3-33107a958977&quot; http://192.168.10.10:8500/v1/kv/key3 | jq</span><br><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;LockIndex&quot;: 0,</span><br><span class="line">    &quot;Key&quot;: &quot;key3&quot;,</span><br><span class="line">    &quot;Flags&quot;: 0,</span><br><span class="line">    &quot;Value&quot;: &quot;dmFsdWUz&quot;,</span><br><span class="line">    &quot;CreateIndex&quot;: 611,</span><br><span class="line">    &quot;ModifyIndex&quot;: 611</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Consul</category>
      </categories>
      <tags>
        <tag>Consul</tag>
      </tags>
  </entry>
  <entry>
    <title>Alertmanager配置详解</title>
    <url>/2024/02/27/Alertmanager%E9%85%8D%E7%BD%AE%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="一、配置概述"><a href="#一、配置概述" class="headerlink" title="一、配置概述"></a>一、配置概述</h2><h3 id="1-配置简介"><a href="#1-配置简介" class="headerlink" title="1. 配置简介"></a>1. 配置简介</h3><p>Alertmanager主要负责对Prometheus产生的告警进行统一处理，在Alertmanager配置中一般会包含以下几个主要部分：</p>
<ul>
<li>全局配置（global）：用于定义一些全局的公共参数，如全局的SMTP配置，Slack配置等内容；</li>
<li>模板（templates）：用于定义告警通知时的模板，如HTML模板，邮件模板等；</li>
<li>告警路由（route）：根据标签匹配，确定当前告警应该如何处理；</li>
<li>接收人（receivers）：接收人是一个抽象的概念，它可以是一个邮箱也可以是微信，Slack或者Webhook等，接收人一般配合告警路由使用；</li>
<li>抑制规则（inhibit_rules）：合理设置抑制规则可以减少垃圾告警的产生</li>
</ul>
<h3 id="2-global配置"><a href="#2-global配置" class="headerlink" title="2.global配置"></a>2.global配置</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  [ resolve_timeout: &lt;duration&gt; | default = 5m ] # 当Alertmanager持续多长时间未接收到告警后标记告警状态为resolved（已解决）</span><br><span class="line">  [ smtp_from: &lt;tmpl_string&gt; ]</span><br><span class="line">  [ smtp_smarthost: &lt;string&gt; ]</span><br><span class="line">  [ smtp_hello: &lt;string&gt; | default = &quot;localhost&quot; ] </span><br><span class="line">  [ smtp_auth_username: &lt;string&gt; ]</span><br><span class="line">  [ smtp_auth_password: &lt;secret&gt; ] </span><br><span class="line">  [ smtp_auth_identity: &lt;string&gt; ]</span><br><span class="line">  [ smtp_auth_secret: &lt;secret&gt; ]</span><br><span class="line">  [ smtp_require_tls: &lt;bool&gt; | default = true ]</span><br><span class="line">  [ slack_api_url: &lt;secret&gt; ]</span><br><span class="line">  [ victorops_api_key: &lt;secret&gt; ]</span><br><span class="line">  [ victorops_api_url: &lt;string&gt; | default = &quot;https://alert.victorops.com/integrations/generic/20131114/alert/&quot; ]</span><br><span class="line">  [ pagerduty_url: &lt;string&gt; | default = &quot;https://events.pagerduty.com/v2/enqueue&quot; ]</span><br><span class="line">  [ opsgenie_api_key: &lt;secret&gt; ]</span><br><span class="line">  [ opsgenie_api_url: &lt;string&gt; | default = &quot;https://api.opsgenie.com/&quot; ]</span><br><span class="line">  [ hipchat_api_url: &lt;string&gt; | default = &quot;https://api.hipchat.com/&quot; ]</span><br><span class="line">  [ hipchat_auth_token: &lt;secret&gt; ]</span><br><span class="line">  [ wechat_api_url: &lt;string&gt; | default = &quot;https://qyapi.weixin.qq.com/cgi-bin/&quot; ]</span><br><span class="line">  [ wechat_api_secret: &lt;secret&gt; ]</span><br><span class="line">  [ wechat_api_corp_id: &lt;string&gt; ]</span><br><span class="line">  [ http_config: &lt;http_config&gt; ]</span><br><span class="line"></span><br><span class="line">templates:</span><br><span class="line">  [ - &lt;filepath&gt; ... ]</span><br><span class="line"></span><br><span class="line">route: &lt;route&gt;</span><br><span class="line"></span><br><span class="line">receivers:</span><br><span class="line">  - &lt;receiver&gt; ...</span><br><span class="line"></span><br><span class="line">inhibit_rules:</span><br><span class="line">  [ - &lt;inhibit_rule&gt; ... ]</span><br></pre></td></tr></table></figure>

<p>global配置中主要关注resolve_timeout的配置。其他配置为SMTP配置，Slack配置等告警媒介的相关配置，在后续章节配置不同的告警媒介时会具体讲到。也可参考官方文档：<a href="https://prometheus.io/docs/alerting/latest/configuration/">https://prometheus.io/docs/alerting/latest/configuration/</a></p>
<h2 id="二、告警路由"><a href="#二、告警路由" class="headerlink" title="二、告警路由"></a>二、告警路由</h2><h3 id="1-配置详解"><a href="#1-配置详解" class="headerlink" title="1. 配置详解"></a>1. 配置详解</h3><p>告警路由可以使我们的告警根据不同的标签告警匹配到不同的渠道发送处理。配置文件解析如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route: #配置路由树</span><br><span class="line">  receiver: # 接收组名，对于不同级别的告警，我们可能多个完全不同的接收组进行处理。</span><br><span class="line">  group_by: []# 根据label标签的key进行匹配，如果是多个，就要多个都匹配</span><br><span class="line">  continue: false # 告警是否去继续路由子节点</span><br><span class="line">  match: [labelname:labelvalue,labelname1,labelvalue1] # 通过标签去匹配这次告警是否符合这个路由节点。</span><br><span class="line">  match_re: [labelname:regex] # 通过正则表达是匹配标签，意义同上</span><br><span class="line">  group_wait: 30s  # 组内等待时间，同一分组内收到第一个告警等待多久开始发送，目标是为了同组消息同时发送，不占用告警信息，默认30s</span><br><span class="line">  group_interval: 5m # 当组内已经发送过一个告警，组内若有新增告警需要等待的时间，默认为5m,这条要确定组内信息是影响同一业务才能设置，若分组不合理，可能导致告警延迟，造成影响</span><br><span class="line">  repeat_inteval: 4h # 告警已经发送，且无新增告警，若重复告警需要间隔多久 默认4h 属于重复告警，时间间隔应根据告警的严重程度来设置</span><br><span class="line">  routes:</span><br><span class="line">    - route: #路由子节点 配置信息跟主节点的路由信息一致</span><br></pre></td></tr></table></figure>

<h3 id="2-路由匹配"><a href="#2-路由匹配" class="headerlink" title="2. 路由匹配"></a>2. 路由匹配</h3><p>每一个告警都会从配置文件中顶级的route进入路由树，需要注意的是顶级的route必须匹配所有告警(即不能有任何的匹配设置match和match_re)，每一个路由都可以定义自己的接受人以及匹配规则。默认情况下，告警进入到顶级route后会遍历所有的子节点，直到找到最深的匹配route，并将告警发送到该route定义的receiver中。但如果route中设置<strong>continue</strong>的值为false，那么告警在匹配到第一个子节点之后就直接停止。如果<strong>continue</strong>为true，报警则会继续进行后续子节点的匹配。如果当前告警匹配不到任何的子节点，那该告警将会基于当前路由节点的接收器配置方式进行处理。<br>其中告警的匹配有两种方式可以选择。一种方式基于字符串验证，通过设置<strong>match</strong>规则判断当前告警中是否存在标签labelname并且其值等于labelvalue。第二种方式则基于正则表达式，通过设置<strong>match_re</strong>验证当前告警标签的值是否满足正则表达式的内容。<br>如果警报已经成功发送通知, 如果想设置发送告警通知之前要等待时间，则可以通过<strong>repeat_interval</strong>参数进行设置。</p>
<h3 id="3-告警分组"><a href="#3-告警分组" class="headerlink" title="3. 告警分组"></a>3. 告警分组</h3><p>Alertmanager可以对告警通知进行分组，将多条告警合合并为一个通知，避免短期内频繁收到多条相关告警。这里我们可以使用<strong>group_by</strong>来定义分组规则。基于告警中包含的标签，如果满足<strong>group_by</strong>中定义标签名称，那么这些告警将会合并为一个通知发送给接收器。<br>有的时候为了能够一次性收集和发送更多的相关信息时，可以通过<strong>group_wait</strong>参数设置等待时间，如果在等待时间内当前group接收到了新的告警，这些告警将会合并为一个通知向receiver发送。<br>而<strong>group_interval</strong>配置，则用于定义相同的Group之间发送告警通知的时间间隔。</p>
<h3 id="4-配置举例：告警分组功能的实现"><a href="#4-配置举例：告警分组功能的实现" class="headerlink" title="4. 配置举例：告警分组功能的实现"></a>4. 配置举例：告警分组功能的实现</h3><blockquote>
<p>一个完善的告警系统，告警路由通常是非常复杂的，为了便于运维人员配置，prometheus官方开发了一个路由配置树工具。<a href="https://www.prometheus.io/webtools/alerting/routing-tree-editor/">https://www.prometheus.io/webtools/alerting/routing-tree-editor/</a></p>
</blockquote>
<ul>
<li>默认情况下所有的告警都会发送给管理员default-receiver，因此在Alertmanager的配置文件的根路由中，对告警信息按照集群以及告警的名称对告警进行分组。</li>
<li>如果告警是来源于数据库服务如MySQL或者pgsql，此时则需要将告警发送给相应的数据库管理员(dba)。这里定义了一个单独子路由，如果告警中包含service标签，并且service为mysql或者pgsql,则向dba-pager发送告警通知，由于这里没有定义group_by等属性，这些属性的配置信息将从上级路由继承，dba-pager将会接收到按cluser和alertname进行分组的告警通知。</li>
<li>而某些告警规则来源可能来源于开发团队，这些告警中通过添加标签team来标示这些告警的创建者。在Alertmanager配置文件的告警路由下，定义单独子路由用于处理这一类的告警通知，如果匹配到告警中包含标签team，并且team的值为dev，Alertmanager将会按照标签product和environment对告警进行分组。此时如果应用出现异常，开发团队就能清楚的知道哪一个环境(environment)中的哪一个应用程序出现了问题，可以快速对应用进行问题定位。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route:</span><br><span class="line">  receiver: &#x27;default-receiver&#x27;</span><br><span class="line">  group_wait: 30s</span><br><span class="line">  group_interval: 5m</span><br><span class="line">  repeat_interval: 4h</span><br><span class="line">  group_by: [cluster, alertname]</span><br><span class="line">  routes:</span><br><span class="line">  - receiver: &#x27;dba-pager&#x27;</span><br><span class="line">    group_wait: 10s</span><br><span class="line">    match_re:</span><br><span class="line">      service: mysql|pgsql</span><br><span class="line">  - receiver: &#x27;dev-pager&#x27;</span><br><span class="line">    group_by: [product, environment]</span><br><span class="line">    match:</span><br><span class="line">      team: dev</span><br></pre></td></tr></table></figure>

<h3 id="5-配置举例：告警分级功能的实现"><a href="#5-配置举例：告警分级功能的实现" class="headerlink" title="5. 配置举例：告警分级功能的实现"></a>5. 配置举例：告警分级功能的实现</h3><ul>
<li>在每条告警配置的标签中添加severity配置，有三种等级，分别为warning、critical和emergency。严重等级依次递增。</li>
<li>不论收到那种等级的告警，都会邮件通知给默认的管理员default-receiver</li>
<li>当告警等级为critical时，比较严重的告警，发送短信通知，每2h重复发送一次，直到问题解决</li>
<li>当告警等级为emergency时，特别严重的告警，打电话通知，每1h重复发送一次，直到问题解决</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">route:</span><br><span class="line">  receiver: &#x27;default-receiver&#x27;</span><br><span class="line">  group_wait: 30s</span><br><span class="line">  group_interval: 5m</span><br><span class="line">  repeat_interval: 4h</span><br><span class="line">  group_by: [cluster, alertname]</span><br><span class="line">  routes:</span><br><span class="line">  - receiver: &#x27;SMS-pager&#x27;</span><br><span class="line">    repeat_inteval: 2h</span><br><span class="line">    group_wait: 10s</span><br><span class="line">    match:</span><br><span class="line">      severity: critical</span><br><span class="line">  - receiver: &#x27;phone-pager&#x27;</span><br><span class="line">    repeat_inteval: 1h</span><br><span class="line">    group_wait: 10s</span><br><span class="line">    match:</span><br><span class="line">      severity: emergency</span><br></pre></td></tr></table></figure>

<h2 id="三、告警接收"><a href="#三、告警接收" class="headerlink" title="三、告警接收"></a>三、告警接收</h2><h3 id="1-receiver配置介绍"><a href="#1-receiver配置介绍" class="headerlink" title="1. receiver配置介绍"></a>1. receiver配置介绍</h3><p>在Alertmanager中路由负责对告警信息进行分组匹配，并向告警接收器发送通知。每一个receiver具有一个全局唯一的名称，并且对应一个或者多个通知方式，告警接收配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">receivers:</span><br><span class="line">- name: # 接收器名称，全局唯一</span><br><span class="line"></span><br><span class="line">  # Configurations for several notification integrations.</span><br><span class="line">  email_configs:</span><br><span class="line">    [ - &lt;email_config&gt;, ... ]</span><br><span class="line">  pagerduty_configs:</span><br><span class="line">    [ - &lt;pagerduty_config&gt;, ... ]</span><br><span class="line">  pushover_configs:</span><br><span class="line">    [ - &lt;pushover_config&gt;, ... ]</span><br><span class="line">  slack_configs:</span><br><span class="line">    [ - &lt;slack_config&gt;, ... ]</span><br><span class="line">  opsgenie_configs:</span><br><span class="line">    [ - &lt;opsgenie_config&gt;, ... ]</span><br><span class="line">  webhook_configs:</span><br><span class="line">    [ - &lt;webhook_config&gt;, ... ]</span><br><span class="line">  victorops_configs:</span><br><span class="line">    [ - &lt;victorops_config&gt;, ... ]</span><br><span class="line">  wechat_configs:</span><br><span class="line">    [ - &lt;wechat_config&gt;, ... ]</span><br><span class="line">- name: # 另一个接收器名称，全局唯一</span><br><span class="line">	………………</span><br></pre></td></tr></table></figure>

<p>目前官方内置的第三方通知集成包括：邮件、 即时通讯软件（如Slack、Hipchat）、移动应用消息推送(如Pushover)和自动化运维工具（例如：Pagerduty、Opsgenie、Victorops）。Alertmanager的通知方式中还可以支持Webhook，通过这种方式开发者可以实现更多个性化的扩展支持。<br>更多告警媒介配置请参考官方文档：<a href="https://prometheus.io/docs/alerting/latest/configuration/#receiver">https://prometheus.io/docs/alerting/latest/configuration/#receiver</a></p>
<h3 id="2-邮件告警配置"><a href="#2-邮件告警配置" class="headerlink" title="2. 邮件告警配置"></a>2. 邮件告警配置</h3><p>Alertmanager使用邮箱通知，用户只需要全局配置中定义好SMTP相关的配置，并且在receiver中定义接收方的邮件地址即可，此处以qq邮箱为例：</p>
<ul>
<li>需要先登录QQ邮箱，开通smtp功能，并获取授权码。smtp_auth_password填写的信息，就是授权码，而非QQ邮箱的登录密码！</li>
</ul>
<p><img src="/images/1709026478-8d5b028f8b2e3a30d02ba5a7fafee655.jpg" alt="image.png"></p>
<ul>
<li>Alertmanager配置</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-conf</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  config.yaml: |-</span><br><span class="line">    global: </span><br><span class="line">      smtp_smarthost: &#x27;smtp.qq.com:465&#x27; </span><br><span class="line">      smtp_from: &#x27;cuiliangblog@qq.com&#x27; </span><br><span class="line">      smtp_auth_username: &#x27;cuiliangblog@qq.com&#x27; </span><br><span class="line">      smtp_auth_password: &#x27;XXXX&#x27; </span><br><span class="line">      smtp_require_tls: false</span><br><span class="line">    route: </span><br><span class="line">      receiver: email </span><br><span class="line">      group_by: </span><br><span class="line">      - alertname </span><br><span class="line">      group_wait: 10s </span><br><span class="line">      group_interval: 10s </span><br><span class="line">      repeat_interval: 1h</span><br><span class="line">    receivers: </span><br><span class="line">    - name: &#x27;email&#x27; </span><br><span class="line">      email_configs: </span><br><span class="line">      - to: &#x27;1111@qq.com&#x27;</span><br><span class="line">      	send_resolved: false #告警解除发送恢复通知</span><br></pre></td></tr></table></figure>

<ul>
<li>告警测试</li>
</ul>
<p><img src="/images/1709026478-9779034ceb99ee8aebd50cf4669560cc.jpg" alt="image.png"><br><img src="/images/1709026478-222df5ef03dbbdfe227eb437f56fb8b6.jpg" alt="image.png"><br><img src="/images/1709026478-cc5a733f6b7101e5bd46a9343ba7eb0a.jpg" alt="image.png"></p>
<h2 id="四、告警模板"><a href="#四、告警模板" class="headerlink" title="四、告警模板"></a>四、告警模板</h2><p>Alertmanager提供了一套基于Go的默认模板系统。Alertmanager也支持用户定义和使用自己的模板。</p>
<h3 id="1-模板字符串"><a href="#1-模板字符串" class="headerlink" title="1. 模板字符串"></a>1. 模板字符串</h3><p>和prometheus配置模板字符串一样。具体参考官方文档<a href="https://prometheus.io/blog/2016/03/03/custom-alertmanager-templates/#customize">https://prometheus.io/blog/2016/03/03/custom-alertmanager-templates/#customize</a>，实际生产环境使用较少，此处不再介绍。</p>
<h3 id="2-模板文件"><a href="#2-模板文件" class="headerlink" title="2. 模板文件"></a>2. 模板文件</h3><p>官方语法介绍：<a href="https://prometheus.io/docs/alerting/latest/notifications/">https://prometheus.io/docs/alerting/latest/notifications/</a><br>官方模板链接：<a href="https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl">https://github.com/prometheus/alertmanager/blob/master/template/default.tmpl</a><br>邮件模板链接：<a href="https://github.com/mailgun/transactional-email-templates">https://github.com/mailgun/transactional-email-templates</a></p>
<ul>
<li>首先定义模板文件configmap</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-email-tmpl</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  email-monitor.tmpl: |-</span><br><span class="line">    &#123;&#123; define &quot;email-monitor.html&quot; &#125;&#125;</span><br><span class="line">    &#123;&#123;- if gt (len .Alerts.Firing) 0 -&#125;&#125;</span><br><span class="line">    &lt;h1&gt;告警&lt;/h1&gt;</span><br><span class="line">    &lt;table border=&quot;5&quot;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;报警项&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;实例&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;报警详情&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;报警阀值&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;开始时间&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &#123;&#123; range $i, $alert := .Alerts &#125;&#125;</span><br><span class="line">            &lt;tr&gt;&lt;td&gt;&#123;&#123; index $alert.Labels &quot;alertname&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Labels &quot;instance&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Annotations &quot;description&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Annotations &quot;value&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; $alert.StartsAt.Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &#123;&#123; end &#125;&#125;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &#123;&#123; end &#125;&#125;</span><br><span class="line">    &#123;&#123;- if gt (len .Alerts.Resolved) 0 -&#125;&#125;</span><br><span class="line">    &lt;h1&gt;恢复&lt;/h1&gt;</span><br><span class="line">    &lt;table border=&quot;5&quot;&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;报警项&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;实例&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;报警详情&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;报警阀值&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;开始时间&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &#123;&#123; range $i, $alert := .Alerts &#125;&#125;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Labels &quot;alertname&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Labels &quot;instance&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Annotations &quot;description&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; index $alert.Annotations &quot;value&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&#123;&#123; $alert.StartsAt.Format &quot;2006-01-02 15:04:05&quot; &#125;&#125;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &#123;&#123; end &#125;&#125;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &#123;&#123; end &#125;&#125;&#123;&#123;- end &#125;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>然后修改Alertmanager-config，指定模板文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-conf</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  config.yaml: |-</span><br><span class="line">    global: </span><br><span class="line">      smtp_smarthost: &#x27;smtp.qq.com:465&#x27; </span><br><span class="line">      smtp_from: &#x27;cuiliangblog@qq.com&#x27; </span><br><span class="line">      smtp_auth_username: &#x27;cuiliangblog@qq.com&#x27; </span><br><span class="line">      smtp_auth_password: &#x27;XXXXXX&#x27; </span><br><span class="line">      smtp_require_tls: false</span><br><span class="line">    templates:</span><br><span class="line">    - &#x27;/etc/alertmanager/tmpl/*.tmpl&#x27; # 指定自定义告警模板位置</span><br><span class="line">    route: </span><br><span class="line">      receiver: email </span><br><span class="line">      group_by: </span><br><span class="line">      - alertname </span><br><span class="line">      group_wait: 10s </span><br><span class="line">      group_interval: 10m</span><br><span class="line">      repeat_interval: 1h</span><br><span class="line">    receivers: </span><br><span class="line">    - name: &#x27;email&#x27; </span><br><span class="line">      email_configs: </span><br><span class="line">      - to: &#x27;1554382111@qq.com&#x27;</span><br><span class="line">        send_resolved: false # 告警解除发送恢复通知</span><br><span class="line">        html: &#x27;&#123;&#123; template &quot;email-monitor.html&quot; . &#125;&#125;&#x27; # 指定告警模板</span><br><span class="line">        headers: &#123; Subject: &quot;告警邮件&quot; &#125; # 邮件主题 如果不写也可以在模板中定义默认值</span><br></pre></td></tr></table></figure>

<ul>
<li>最后修改Alertmanager资源清单，将模板配置文件挂载</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: alertmanager</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      name: alertmanager</span><br><span class="line">      labels:</span><br><span class="line">        app: alertmanager</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: alertmanager</span><br><span class="line">        image: prom/alertmanager:v0.23.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            memory: &quot;4Gi&quot;</span><br><span class="line">            cpu: &quot;4&quot;</span><br><span class="line">          requests:</span><br><span class="line">            memory: &quot;128Mi&quot;</span><br><span class="line">            cpu: &quot;500m&quot;</span><br><span class="line">        args:</span><br><span class="line">          - &#x27;--config.file=/etc/alertmanager/config/config.yaml&#x27;</span><br><span class="line">          - &#x27;--storage.path=/alertmanager&#x27;</span><br><span class="line">          - &#x27;--log.level=debug&#x27; </span><br><span class="line">        ports:</span><br><span class="line">        - name: alertmanager</span><br><span class="line">          containerPort: 9093</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: alertmanager-conf</span><br><span class="line">          mountPath: /etc/alertmanager/config</span><br><span class="line">        - name: alertmanager-email-tmpl</span><br><span class="line">          mountPath: /etc/alertmanager/tmpl</span><br><span class="line">        - name: alertmanager</span><br><span class="line">          mountPath: /alertmanager</span><br><span class="line">      affinity:</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          requiredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">          - labelSelector:</span><br><span class="line">              matchExpressions:</span><br><span class="line">              - key: app</span><br><span class="line">                operator: In</span><br><span class="line">                values:</span><br><span class="line">                - alertmanager</span><br><span class="line">            topologyKey: &quot;kubernetes.io/hostname&quot;</span><br><span class="line">      volumes:</span><br><span class="line">      - name: alertmanager-conf</span><br><span class="line">        configMap:</span><br><span class="line">          name: alertmanager-conf</span><br><span class="line">      - name: alertmanager-email-tmpl</span><br><span class="line">        configMap:</span><br><span class="line">          name: alertmanager-email-tmpl</span><br><span class="line">      - name: alertmanager</span><br><span class="line">        emptyDir: &#123;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>一切准备就绪后，接下来模拟节点宕机，测试告警是否正常发出</li>
</ul>
<p><img src="/images/1709026478-8123c621c184bd7c9f9b293bab58c4b8.jpg" alt="image.png"></p>
<h2 id="五、告警静默"><a href="#五、告警静默" class="headerlink" title="五、告警静默"></a>五、告警静默</h2><p>接着上文提到的操作，现在work3节点持续处于宕机状态，并配置了repeat_interval: 1h，也就是如果故障没有解决，每1h会通知一次，直到故障恢复。但有可能这台服务器硬件损坏，短期内无法恢复，为了避免告警打扰，可以设置临时静默。</p>
<h3 id="1-查看告警"><a href="#1-查看告警" class="headerlink" title="1. 查看告警"></a>1. 查看告警</h3><p>首先，查看Alertmanager的alerts。查看当前未恢复的告警<br><img src="/images/1709026478-d4626e4e4d2f6a8b2571259782ca7c1b.jpg" alt="image.png"></p>
<h3 id="2-设置静默"><a href="#2-设置静默" class="headerlink" title="2. 设置静默"></a>2. 设置静默</h3><p>然后点击silence，对这个告警设置临时静默，然后填写静默持续时间(默认2h)，以及创建这和备注，填写完成后点击create创建静默规则<br><img src="/images/1709026478-869b2b2f3aabec19afbcdd89f6354fed.jpg" alt="image.png"></p>
<h3 id="3-查看验证"><a href="#3-查看验证" class="headerlink" title="3. 查看验证"></a>3. 查看验证</h3><ul>
<li>此时在alert中就不会看到激活的告警内容<img src="/images/1709026478-c0016a076859812f549f9ec4937d7c23.jpg" alt="image.png"></li>
<li>点击silence就可以查看到已经静默的告警</li>
</ul>
<p><img src="/images/1709026478-4d5ec6b8bfdc9d9674569909675754c0.jpg" alt="image.png"></p>
<h2 id="六、告警抑制"><a href="#六、告警抑制" class="headerlink" title="六、告警抑制"></a>六、告警抑制</h2><p>Alertmanager的抑制机制可以避免当某种问题告警产生之后用户接收到大量由此问题导致的一系列的其它告警通知。例如当集群不可用时，用户可能只希望接收到一条告警，告诉他这时候集群出现了问题，而不是大量的如集群中的应用异常、中间件服务异常的告警通知。</p>
<h3 id="1-基本格式"><a href="#1-基本格式" class="headerlink" title="1. 基本格式"></a>1. 基本格式</h3><ul>
<li>Alertmanager中使用inhibit_rules定义一组告警的抑制规则，基本格式如下</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">inhibit_rules:</span><br><span class="line">  - source_match: # 第一条抑制规则</span><br><span class="line">    target_match: # 匹配标签</span><br><span class="line">    target_match_re: # 匹配正则</span><br><span class="line">    equal: # 在源和目标中具有相同值的标签</span><br><span class="line">  - source_match: # 第二条抑制规则</span><br><span class="line">    …………</span><br></pre></td></tr></table></figure>

<p>当已经发送的告警通知匹配到target_match和target_match_re规则，当有新的告警规则如果满足source_match或者定义的匹配规则，并且已发送的告警与新产生的告警中equal定义的标签完全相同，则启动抑制机制，新的告警不会发送。</p>
<h3 id="2-模拟测试-抑制前"><a href="#2-模拟测试-抑制前" class="headerlink" title="2. 模拟测试-抑制前"></a>2. 模拟测试-抑制前</h3><p>场景模拟：当前当前集群的work2上面运行了nginx服务，访问地址为<a href="http://192.168.10.12/test.html">http://192.168.10.12/test.html</a>，并且配置了网络探针，检测<a href="http://192.168.10.12/test.html">http://192.168.10.12/test.html</a>页面状态码是否为200，以及80端口的TCP检测，还有node_exporter宕机检测。并且都设置了告警，如果此时服务器宕机了，那么我将收到大量无用的告警信息，反而不好排查问题原因。</p>
<ul>
<li>我们先在work2服务器上运行nginx服务，并添加测试页面，模拟线上生产环境的web服务</li>
</ul>
<p><img src="/images/1709026478-23b211f20fa7a01c50e8618923a1a0ee.jpg" alt="image.png"></p>
<ul>
<li>然后部署blackbox-exporter组件用于网络检测</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: blackbox-exporter-svc</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  labels:</span><br><span class="line">    app: blackbox-exporter</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    app: blackbox-exporter</span><br><span class="line">  type: ClusterIP</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 9115</span><br><span class="line">    protocol: TCP</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: blackbox-exporter</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  labels:</span><br><span class="line">    app: blackbox-exporter</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: blackbox-exporter</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: blackbox-exporter</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: prom/blackbox-exporter</span><br><span class="line">        name: blackbox-exporter</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9115</span><br><span class="line">          name: http</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /-/healthy</span><br><span class="line">            port: http</span><br><span class="line">          initialDelaySeconds: 10</span><br><span class="line">          timeoutSeconds: 60</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /-/healthy</span><br><span class="line">            port: http</span><br><span class="line">          initialDelaySeconds: 30</span><br><span class="line">          timeoutSeconds: 60</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 1 </span><br><span class="line">            memory: &quot;2Gi&quot;</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 250m</span><br><span class="line">            memory: 640Mi</span><br><span class="line">      restartPolicy: Always</span><br></pre></td></tr></table></figure>

<ul>
<li>接下来在prometheus配置文件中添加网络检测相关target</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-config</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  prometheus.yaml: |-</span><br><span class="line">    global:</span><br><span class="line">      scrape_interval: 15s</span><br><span class="line">      evaluation_interval: 15s</span><br><span class="line">    rule_files:</span><br><span class="line">    - /etc/prometheus/rules/*.yaml</span><br><span class="line">    alerting:</span><br><span class="line">      alertmanagers:</span><br><span class="line">      - static_configs:</span><br><span class="line">        - targets: [&quot;alertmanager:9093&quot;]</span><br><span class="line">    scrape_configs:</span><br><span class="line">    - job_name: blackbox_http_exporter</span><br><span class="line">      metrics_path: /probe</span><br><span class="line">      params:</span><br><span class="line">        module: [http_2xx]</span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - http://192.168.10.12/test.html</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter-svc:9115</span><br><span class="line">    - job_name: blackbox_tcp_exporter</span><br><span class="line">      metrics_path: /probe</span><br><span class="line">      params:</span><br><span class="line">        module: [tcp_connect]</span><br><span class="line">      static_configs:</span><br><span class="line">      - targets:</span><br><span class="line">        - 192.168.10.12:80</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__address__]</span><br><span class="line">        target_label: __param_target</span><br><span class="line">      - source_labels: [__param_target]</span><br><span class="line">        target_label: instance</span><br><span class="line">      - target_label: __address__</span><br><span class="line">        replacement: blackbox-exporter-svc:9115</span><br></pre></td></tr></table></figure>

<ul>
<li>接下来查看prometheus-target页面，确认采集项成功添加</li>
</ul>
<p><img src="/images/1709026478-f2f28e6fe70e20fd311cc224dfaa753e.jpg" alt="image.png"></p>
<ul>
<li>接下来添加告警规则配置，现在有三条告警，第一条为node status is WODN，事件等级为emergency，第二条为nginx service status is WODN，事件等级为critical，第三条为page status code error，事件等级为critical。三个告警事件从上到下层层依赖，重要程度依次递减。</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-rule</span><br><span class="line">  labels:</span><br><span class="line">    name: prometheus-rule</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  alert-rules.yaml: |-</span><br><span class="line">    groups:</span><br><span class="line">    - name: node-alert</span><br><span class="line">      rules:</span><br><span class="line">      - alert: node status is WODN</span><br><span class="line">        expr: up&#123;job=&quot;node_exporter&quot;&#125; == 0</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: emergency</span><br><span class="line">          instance: &quot;&#123;&#123; $labels.instance &#125;&#125;&quot;</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;node: &#123;&#123; $labels.instance &#125;&#125; down&quot;</span><br><span class="line">          description: &quot;&#123;&#123;$labels.instance&#125;&#125; down more than 1 minutes&quot;</span><br><span class="line">          value: &quot;&#123;&#123; $value &#125;&#125;&quot;</span><br><span class="line">      - alert: nginx service status is WODN</span><br><span class="line">        expr: probe_success&#123;instance=&quot;192.168.10.12:80&quot;&#125; == 0</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: critical</span><br><span class="line">          instance: &quot;&#123;&#123; $labels.instance &#125;&#125;&quot;</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;node: &#123;&#123; $labels.instance &#125;&#125; nginx service down&quot;</span><br><span class="line">          description: &quot;&#123;&#123;$labels.instance&#125;&#125; nginx service down more than 1 minutes&quot;</span><br><span class="line">          value: &quot;&#123;&#123; $value &#125;&#125;&quot;</span><br><span class="line">      - alert: page status code error</span><br><span class="line">        expr: probe_http_status_code&#123;instance=&quot;http://192.168.10.12/test.html&quot;&#125; != 200</span><br><span class="line">        for: 1m</span><br><span class="line">        labels:</span><br><span class="line">          severity: warning</span><br><span class="line">          instance: &quot;&#123;&#123; $labels.instance &#125;&#125;&quot;</span><br><span class="line">        annotations:</span><br><span class="line">          summary: &quot;url: &#123;&#123; $labels.instance &#125;&#125; page status code error&quot;</span><br><span class="line">          description: &quot;&#123;&#123;$labels.instance&#125;&#125; page status code error more than 1 minutes&quot;</span><br><span class="line">          value: &quot;&#123;&#123; $value &#125;&#125;&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>先查看告警规则状态，当前三条告警规则都没有被触发</li>
</ul>
<p><img src="/images/1709026478-6ad11bd01a208407f730c59b4b64cb75.jpg" alt="image.png"></p>
<ul>
<li>接下来先关闭其中任意一个节点，模拟服务器宕机。查看prometheus告警信息，三条告警被成功触发。</li>
</ul>
<p><img src="/images/1709026478-8096171d538e2f0b23b3b78aca51d8cb.jpg" alt="image.png"></p>
<ul>
<li>接下来查看Alertmanager告警列表，同样的收到了三条告警信息</li>
</ul>
<p><img src="/images/1709026478-efc83233a39b395f71f383439b525aaa.jpg" alt="image.png"></p>
<ul>
<li>可以看到由于节点宕机，导致这台主机的nginx服务和对应的web页面均无法访问而产生了大量告警。在实际生产环境中，服务的依赖关系错综复杂，例如交换机端口down，可能会导致服务器间通信异常，从而收到大量的相关告警，反而无法快速定位出问题。遇到这种情况，就需要梳理告警之间的依赖关系，配置合理的告警抑制策略，避免告警风暴产生。</li>
</ul>
<h3 id="3-模拟测试-抑制后"><a href="#3-模拟测试-抑制后" class="headerlink" title="3. 模拟测试-抑制后"></a>3. 模拟测试-抑制后</h3><p>接下来，我们先对这三条告警依赖关系做一个简单的梳理，三条告警的依赖关系如下图所示：</p>
<ul>
<li>接下来，我们先对nginx服务异常和web页面访问异常告警添加一个额外的标签<code>project: test-web</code>，标注这两条告警同属一个业务。接下来查看这三条告警的label，后面配置的告警抑制规则是根据每条告警的标签匹配的。</li>
</ul>
<p><img src="/images/1709026478-ef9f2608a3fe4b588b1c154545f2b885.jpg" alt="image.png"><br><img src="/images/1709026478-5ccb861084828567f50cde72066477da.jpg" alt="image.png"><br><img src="/images/1709026478-828106221685594a5c13a047b06015fb.jpg" alt="image.png"></p>
<ul>
<li>接下来，我们编写告警抑制规则</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: alertmanager-conf</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  config.yaml: |-</span><br><span class="line">    global: </span><br><span class="line">      smtp_smarthost: &#x27;smtp.qq.com:465&#x27; </span><br><span class="line">      smtp_from: &#x27;cuiliangblog@qq.com&#x27; </span><br><span class="line">      smtp_auth_username: &#x27;cuiliangblog@qq.com&#x27; </span><br><span class="line">      smtp_auth_password: &#x27;XXXXXXX&#x27; </span><br><span class="line">      smtp_require_tls: false</span><br><span class="line">    templates:</span><br><span class="line">    - &#x27;/etc/alertmanager/tmpl/*.tmpl&#x27; # 指定自定义告警模板位置</span><br><span class="line">    route: </span><br><span class="line">      receiver: email </span><br><span class="line">      group_by: </span><br><span class="line">      - alertname </span><br><span class="line">      group_wait: 10s </span><br><span class="line">      group_interval: 10m</span><br><span class="line">      repeat_interval: 1h</span><br><span class="line">    receivers: </span><br><span class="line">    - name: &#x27;email&#x27; </span><br><span class="line">      email_configs: </span><br><span class="line">      - to: &#x27;1554382111@qq.com&#x27;</span><br><span class="line">        send_resolved: false # 告警解除发送恢复通知</span><br><span class="line">        html: &#x27;&#123;&#123; template &quot;email-monitor.html&quot; . &#125;&#125;&#x27; # 指定告警模板</span><br><span class="line">        headers: &#123; Subject: &quot;告警邮件&quot; &#125; # 邮件主题 如果不写也可以在模板中定义默认值</span><br><span class="line">    inhibit_rules:  </span><br><span class="line">    - source_match: </span><br><span class="line">        alertname: &#x27;node status is WODN&#x27;  </span><br><span class="line">        instance: k8s-work2  </span><br><span class="line">      target_match:</span><br><span class="line">        project: test-web  </span><br><span class="line">    - source_match: </span><br><span class="line">        severity: critical  </span><br><span class="line">      target_match:</span><br><span class="line">        severity: warning</span><br><span class="line">      equal:</span><br><span class="line">      - project</span><br></pre></td></tr></table></figure>

<p>其中第一条抑制规则含义为：当收到告警的标签中instance&#x3D;k8s-work2并且alertname&#x3D;’node status is WODN’时，触发抑制规则。后续收到的告警标签中project&#x3D;test-web的告警将全部被抑制（也就是nginx告警和page code告警）<br>第二条抑制规则含义为：当收到告警的标签中severity&#x3D;critical时，触发抑制规则，包含severity&#x3D;warning的告警将被抑制。需要注意的是，还添加了一个equal标签，作用就是source和target中都包含project这个标签，且他们的值一致时，才会抑制（也就是抑制page code告警）</p>
<ul>
<li>我们先将服务恢复正常状态</li>
</ul>
<p><img src="/images/1709026478-fafaa67a31c4d882c1ed8e7ba476acd5.jpg" alt="image.png"></p>
<ul>
<li>接下来关闭nginx服务，查看prometheus会发现有page status code error和nginx service status isWODN两条告警事件</li>
</ul>
<p><img src="/images/1709026478-8c4c48d891d4068ef6968e1cdc79f387.jpg" alt="image.png"></p>
<ul>
<li>但此时Alertmanager只有nginx service status is WODN这一条告警事件，另一条page status code error告警被成功抑制。</li>
</ul>
<p><img src="/images/1709026478-5e15c4c66843d07ca297c262376ada97.jpg" alt="image.png"></p>
<ul>
<li>接下来关闭work2节点，模拟服务器宕机。查看prometheus告警这三条全部触发</li>
</ul>
<p><img src="/images/1709026478-bd83c4d8c00f4500646a20afb91e5d40.jpg" alt="image.png"></p>
<ul>
<li>查看Alertmanager告警列表，只有一条node status is WODN，其余两条告警被成功抑制。</li>
</ul>
<p><img src="/images/1709026478-042cf07e761d5b8f675d7327445ef521.jpg" alt="image.png"></p>
]]></content>
      <categories>
        <category>Alertmanager</category>
      </categories>
      <tags>
        <tag>Alertmanager</tag>
      </tags>
  </entry>
  <entry>
    <title>grafana API使用</title>
    <url>/2024/02/27/grafana-API%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>Grafana 是一款采用 go 语言编写的开源应用，主要用于大规模指标数据的可视化展现，是运维工具中最流行的<strong>时序数据展示</strong>工具，目前已经支持绝大部分常用的时序数据库。同时它也提供了许多常用操作的API接口，可以通过调用相关API接口，实现grafana运维的自动化操作。</p>
</blockquote>
<h2 id="一、创建API-token"><a href="#一、创建API-token" class="headerlink" title="一、创建API token"></a>一、创建API token</h2><p>调用grafana的api请求时，需要在请求头中添加token认证，首先是创建api token</p>
<p><img src="/images/1709027250-ead40ec42fb1364a7a43c0368725daa5.jpg" alt="image.png"></p>
<p><img src="/images/1709027250-71970c15639692ca9bff3c691ee253c5.jpg" alt="image.png"></p>
<p><img src="/images/1709027250-45f60e99879b400cd8b2d08ea1ed16da.jpg" alt="image.png"></p>
<p>点击add按钮以后会返回一个token，妥善保存这个token，后续的所有请求都需要用到它。</p>
<h2 id="二、常用API接口"><a href="#二、常用API接口" class="headerlink" title="二、常用API接口"></a>二、常用API接口</h2><h3 id="1-仪表盘-API"><a href="#1-仪表盘-API" class="headerlink" title="1. 仪表盘 API"></a>1. 仪表盘 API</h3><ul>
<li>查询所有dashboard列表</li>
</ul>
<p><img src="/images/1709027250-116ea9403b930d990fe71bf40f1fb7f9.jpg" alt="image.png"></p>
<ul>
<li>查询指定uid的dashboard信息（uid字段可以从刚才查询所有dashboard中获取）</li>
</ul>
<p><img src="/images/1709027250-1b5be317ad426ddab6e958f268d5f28e.jpg" alt="image.png"></p>
<ul>
<li>删除指定uid的dashboard</li>
</ul>
<p><img src="/images/1709027250-6dc58733dddb27f508e2c2b5062d8026.jpg" alt="image.png"></p>
<h3 id="2-数据源API"><a href="#2-数据源API" class="headerlink" title="2. 数据源API"></a>2. 数据源API</h3><ul>
<li>获取所有数据源</li>
</ul>
<p><img src="/images/1709027250-4db373baef81430a3336f298a9ae4559.jpg" alt="image.png"></p>
<ul>
<li>查询指定id的数据源</li>
</ul>
<p><img src="/images/1709027250-64ee08df156c613bae8fa04746a00cd4.jpg" alt="image.png"></p>
<ul>
<li>查询指定名称数据源</li>
</ul>
<p><img src="/images/1709027250-a00cb7079ce41f85a0d565c99101711e.jpg" alt="image.png"></p>
<ul>
<li>更新指定id的数据源（可以先查询指定id的数据源，获取响应内容，然后修改相关的字段组成请求体。body类型选择json）</li>
</ul>
<p><img src="/images/1709027250-f7ef8dd78cf9d4cd9f8b53fed3dbdefa.jpg" alt="image.png"></p>
<ul>
<li>删除指定id的数据源</li>
</ul>
<p><img src="/images/1709027250-557e4dc4900d3a80396d109770d1faa3.jpg" alt="image.png"></p>
<h3 id="3-告警API"><a href="#3-告警API" class="headerlink" title="3. 告警API"></a>3. 告警API</h3><ul>
<li>获取所有告警列表</li>
</ul>
<p><img src="/images/1709027250-28afbf36c1fb9d393f14ce209e85e98a.jpg" alt="image.png"></p>
<ul>
<li>查询指定id的告警信息</li>
</ul>
<p><img src="/images/1709027250-84eb4c29ae3edca1bd811e2e738628f5.jpg" alt="image.png"></p>
<ul>
<li>暂停指定id的告警</li>
</ul>
<p><img src="/images/1709027250-f11f49b161f76c81d3c18ee3787485b6.jpg" alt="image.png"></p>
<h2 id="三、python调用grafana-API示例"><a href="#三、python调用grafana-API示例" class="headerlink" title="三、python调用grafana API示例"></a>三、python调用grafana API示例</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">import json</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class GrafanaApi:</span><br><span class="line">    def __init__(self, base, key):</span><br><span class="line">        self.base_url = &#x27;grafana访问地址&#x27;</span><br><span class="line">        self.headers = &#123;&#x27;Authorization&#x27;: &#x27;API token&#x27;, &#x27;content-type&#x27;: &quot;application/json&quot;&#125;</span><br><span class="line"></span><br><span class="line">    def get_all_datasource(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        获取所有数据源</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        api_url = self.base_url + &#x27;/api/datasources&#x27;</span><br><span class="line">        response = requests.get(api_url, headers=self.headers, verify=False, timeout=120)</span><br><span class="line">        if response.status_code == 200:</span><br><span class="line">            res = response.json()</span><br><span class="line">            ……</span><br><span class="line">            return result</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def get_dashboard_uid(self, name):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        查询指定dashboard的uid</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        api_url = self.base_url + &#x27;/api/search?query=&#x27; + name</span><br><span class="line">        response = requests.get(api_url, headers=self.headers, verify=False, timeout=120)</span><br><span class="line">        if response.status_code == 200:</span><br><span class="line">            res = response.json()</span><br><span class="line">            ……</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">    def get_dashboard_data(self, uid):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        查询指定dashboard的data</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        api_url = self.base_url + &#x27;/api/dashboards/uid/&#x27; + uid</span><br><span class="line">        response = requests.get(api_url, headers=self.headers, verify=False, timeout=120)</span><br><span class="line">        if response.status_code == 200:</span><br><span class="line">            res = response.json()[&#x27;dashboard&#x27;]</span><br><span class="line">            ……</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">    def get_all_alert(self):</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        获取所有告警列表</span><br><span class="line">        &quot;&quot;&quot;</span><br><span class="line">        api_url = self.base_url + &#x27;/api/alerts&#x27;</span><br><span class="line">        response = requests.get(api_url, headers=self.headers, verify=False, timeout=120)</span><br><span class="line">        if response.status_code == 200:</span><br><span class="line">            res = response.json()</span><br><span class="line">            ……</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br></pre></td></tr></table></figure>

<blockquote>
<p>以上只列举了常用的API接口使用，其他API接口详细使用方法请参阅官方文档<a href="https://grafana.com/docs/grafana/latest/http_api/" title="https://grafana.com/docs/grafana/latest/http_api/">https://grafana.com/docs/grafana/latest/http_api&#x2F;</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus自动发现之kubernetes_sd_configs</title>
    <url>/2024/02/27/Prometheus%E8%87%AA%E5%8A%A8%E5%8F%91%E7%8E%B0%E4%B9%8Bkubernetes-sd-configs/</url>
    <content><![CDATA[<h2 id="一、服务发现概述"><a href="#一、服务发现概述" class="headerlink" title="一、服务发现概述"></a>一、服务发现概述</h2><h3 id="1-为什么要使用服务发现"><a href="#1-为什么要使用服务发现" class="headerlink" title="1. 为什么要使用服务发现"></a>1. 为什么要使用服务发现</h3><p>通常我们的Kubernetes 集群中会有很多的 Service 和 Pod等资源，这些资源可以随着需求规模的变化而变化，而这些pod的ip，名称也并非一成不变的。那么当k8s资源创建或更新时，如果一个一个的去更改或创建对应的监控Job，那操作将会非常的繁琐。而prometheus的自动发现功能，便轻松的解决了上述问题。</p>
<h3 id="2-什么是服务发现"><a href="#2-什么是服务发现" class="headerlink" title="2. 什么是服务发现"></a>2. 什么是服务发现</h3><p>对于上述问题，Prometheus这一类基于Pull模式的监控系统，很显然也无法继续使用的static_configs的方式静态的定义监控目标。而Prometheus的解决方案就是引入一个中间的代理人（服务注册中心），这个代理人掌握着当前所有监控目标的访问信息，Prometheus只需要向这个代理人询问有哪些监控目标即可，Prometheus查询到需要监控的Target列表，然后轮训这些Target获取监控数据，这种模式被称为服务发现。<br>Prometheus支持多种服务发现机制：文件、DNS、Consul、Kubernetes、OpenStack、EC2等。本文以Kubernetes服务发现机制为例，详细探究。<br>在Kubernetes下，Prometheus 通过与 Kubernetes API 集成主要支持5种服务发现模式：Node、Service、Pod、Endpoints、Ingress。不同的服务发现模式适用于不同的场景，例如：node适用于与主机相关的监控资源，如节点中运行的Kubernetes 组件状态、节点上运行的容器状态等；service 和 ingress 适用于通过黑盒监控的场景，如对服务的可用性以及服务质量的监控；endpoints 和 pod 均可用于获取 Pod 实例的监控数据，如监控用户或者管理员部署的支持 Prometheus 的应用。</p>
<h2 id="二、配置文件分析"><a href="#二、配置文件分析" class="headerlink" title="二、配置文件分析"></a>二、配置文件分析</h2><h3 id="1-配置文件编写流程"><a href="#1-配置文件编写流程" class="headerlink" title="1. 配置文件编写流程"></a>1. 配置文件编写流程</h3><p>prometheus自动发现的核心之处在于relabel_configs的相关配置，首先是通过source_labels配置以__meta_开头的这些元数据标签，声明要匹配的资源，然后通过regex匹配规则找到相关的资源对象，最后再对采集过来的指标做二次处理，比如保留、过来、替换等操作。</p>
<h3 id="2-配置文件示例"><a href="#2-配置文件示例" class="headerlink" title="2. 配置文件示例"></a>2. 配置文件示例</h3><blockquote>
<p>此处以prometheus服务为例，标签为app&#x3D;prometheus</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  # 间隔时间</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  # 超时时间</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  # 另一个独立的规则周期，对告警规则做定期计算</span><br><span class="line">  evaluation_interval: 30s</span><br><span class="line">  # 外部系统标签用于区分prometheus服务实例</span><br><span class="line">  external_labels:</span><br><span class="line">    prometheus: monitoring/k8s</span><br><span class="line">    prometheus_replica: prometheus-k8s-1</span><br><span class="line">scrape_configs: </span><br><span class="line">  # 定义job名称，一个能够被抓取监控数据的endpoint叫做Instance，有着同样目的的Instance集合叫做Job。</span><br><span class="line">- job_name: &quot;prometheus&quot;</span><br><span class="line">  # Honor_labels 控制 Prometheus 如何处理已存在于抓取数据中的标签与 Prometheus 将在服务器端附加的标签（“作业”和“实例”标签、手动配置的目标标签以及由服务发现实现生成的标签）之间的冲突。</span><br><span class="line">  # 如果honor_labels 设置为“true”，标签冲突通过从抓取的数据中保留标签值并忽略冲突的服务器端标签来解决。</span><br><span class="line">  # 如果 Honor_labels 设置为“false”，则通过将抓取数据中的冲突标签重命名为“exported_&lt;original-label&gt;”来解决标签冲突（</span><br><span class="line">  # 将 Honor_labels 设置为“true”对于联邦和抓取 Pushgateway 等用例很有用，其中应保留目标中指定的所有标签。</span><br><span class="line">  honor_labels: true  </span><br><span class="line">  # Honor_timestamps是否采用抓取数据中存在的时间戳默认为true。设置为“true”，则将使用目标公开的指标的时间戳。设置为“false”，则目标公开的指标的时间戳将被忽略。</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  # 抓取目标的频率</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  # 抓取请求超时的时间</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  # 配置抓取请求的 TLS 设置。（https协议时需要填写证书等相关配置）</span><br><span class="line">  #tls_config:</span><br><span class="line">  #  [ &lt;tls_config&gt; ]</span><br><span class="line">  # bearer_token_file</span><br><span class="line">  # 使用配置的承载令牌在每个scrape请求上设置`Authorization`标头。 它`bearer_token_file`和是互斥的。</span><br><span class="line">  #[ bearer_token: &lt;secret&gt; ]</span><br><span class="line">  # 使用配置的承载令牌在每个scrape请求上设置`Authorization`标头。 它`bearer_token`和是互斥的。</span><br><span class="line">  # [ bearer_token_file: /path/to/bearer/token/file ]</span><br><span class="line">  # 从目标获取指标的资源路径，默认为/metrics</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  # 配置请求使用的协议方案，默认为http</span><br><span class="line">  scheme: http</span><br><span class="line">  # 基于kubernetes的API server实现自动发现</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  # 角色为 endpoints，通过service来发现后端endpoints，每一个service都有对应的endpoints，如果满足采集条件，那么在service、POD中定义的labels也会被采集进去</span><br><span class="line">  - role: endpoints</span><br><span class="line">  # 标签匹配处理相关配置</span><br><span class="line">  relabel_configs:</span><br><span class="line">    # 以prometheus服务为例，他的service标签为app=prometheus。因此source_labels选择__meta_kubernetes_service_label_app，他会列出k8s所有服务对象的标签，其他常用的元数据标签如下</span><br><span class="line">    # 节点node</span><br><span class="line">    # __meta_kubernetes_node_name: 节点对象的名称</span><br><span class="line">    # __meta_kubernetes_node_label_&lt;labelname&gt;: 节点对象的每个标签</span><br><span class="line">    # __meta_kubernetes_node_address_&lt;address_type&gt;: 如果存在，每一个节点对象类型的第一个地址</span><br><span class="line">    # 服务service</span><br><span class="line">    # __meta_kubernetes_namespace: 服务对象的命名空间</span><br><span class="line">    # __meta_kubernetes_service_cluster_ip: 服务的群集IP地址。（不适用于ExternalName类型的服务）</span><br><span class="line">    # __meta_kubernetes_service_external_name: 服务的DNS名称。（适用于ExternalName类型的服务）</span><br><span class="line">    # __meta_kubernetes_service_label_&lt;labelname&gt;: 服务对象的标签。</span><br><span class="line">    # __meta_kubernetes_service_name: 服务对象的名称</span><br><span class="line">    # __meta_kubernetes_service_port_name: 目标服务端口的名称</span><br><span class="line">    # __meta_kubernetes_service_port_protocol: 目标服务端口的协议</span><br><span class="line">    # __meta_kubernetes_service_type: 服务的类型</span><br><span class="line">    # pod</span><br><span class="line">    # __meta_kubernetes_namespace: pod对象的命名空间</span><br><span class="line">    # __meta_kubernetes_pod_name: pod对象的名称</span><br><span class="line">    # __meta_kubernetes_pod_ip: pod对象的IP地址</span><br><span class="line">    # __meta_kubernetes_pod_label_&lt;labelname&gt;: pod对象的标签</span><br><span class="line">    # __meta_kubernetes_pod_container_name: 目标地址的容器名称</span><br><span class="line">    # __meta_kubernetes_pod_container_port_name: 容器端口名称</span><br><span class="line">    # __meta_kubernetes_pod_ready: 设置pod ready状态为true或者false</span><br><span class="line">    # __meta_kubernetes_pod_phase: 在生命周期中设置 Pending, Running, Succeeded, Failed 或 Unknown</span><br><span class="line">    # __meta_kubernetes_pod_node_name: pod调度的node名称</span><br><span class="line">    # __meta_kubernetes_pod_host_ip: 节点对象的主机IP</span><br><span class="line">    # __meta_kubernetes_pod_uid: pod对象的UID。</span><br><span class="line">    # __meta_kubernetes_pod_controller_kind: pod控制器的kind对象.</span><br><span class="line">    # __meta_kubernetes_pod_controller_name: pod控制器的名称.</span><br><span class="line">    # 端点endpoints</span><br><span class="line">    # __meta_kubernetes_namespace: 端点对象的命名空间</span><br><span class="line">    # __meta_kubernetes_endpoints_name: 端点对象的名称</span><br><span class="line">    # __meta_kubernetes_endpoint_hostname: 端点的Hostname</span><br><span class="line">    # __meta_kubernetes_endpoint_node_name: 端点所在节点的名称。</span><br><span class="line">    # __meta_kubernetes_endpoint_ready: endpoint ready状态设置为true或者false。</span><br><span class="line">    # __meta_kubernetes_endpoint_port_name: 端点的端口名称</span><br><span class="line">    # __meta_kubernetes_endpoint_port_protocol: 端点的端口协议</span><br><span class="line">    # __meta_kubernetes_endpoint_address_target_kind: 端点地址目标的kind。</span><br><span class="line">    # __meta_kubernetes_endpoint_address_target_name: 端点地址目标的名称。</span><br><span class="line">    # ingress</span><br><span class="line">    # __meta_kubernetes_namespace: ingress对象的命名空间</span><br><span class="line">    # __meta_kubernetes_ingress_name: ingress对象的名称</span><br><span class="line">    # __meta_kubernetes_ingress_label_&lt;labelname&gt;: ingress对象的每个label。</span><br><span class="line">    # __meta_kubernetes_ingress_scheme: 协议方案，如果设置了TLS配置，则为https。默认为http。</span><br><span class="line">    # __meta_kubernetes_ingress_path: ingree spec的路径。默认为/。</span><br><span class="line">    - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">      # 通过正式表达式匹配，条件为service的label标签app=prometheus的资源</span><br><span class="line">      regex: prometheus</span><br><span class="line">      # 执行动作 </span><br><span class="line">      # keep：仅收集匹配到regex的源标签，而会丢弃没有匹配到的所有标签，用于选择</span><br><span class="line">      # replace：默认行为，不配置action的话就采用这种行为，它会根据regex来去匹配source_labels标签上的值，并将并将匹配到的值写入target_label中</span><br><span class="line">      # labelmap：它会根据regex去匹配标签名称，并将匹配到的内容作为新标签的名称，其值作为新标签的值</span><br><span class="line">      # drop：丢弃匹配到regex的源标签，而会收集没有匹配到的所有标签，用于排除</span><br><span class="line">      # labeldrop：使用regex匹配标签，符合regex规则的标签将从target实例中移除，其实也就是不收集不保存</span><br><span class="line">      # labelkeep：使用regex匹配标签，仅收集符合regex规则的标签，不符合的不收集</span><br><span class="line">      action: keep</span><br><span class="line">    # 添加服务对象的名称空间信息，并替换标签名为namespace</span><br><span class="line">    - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">      action: replace</span><br><span class="line">      target_label: namespace</span><br><span class="line">    # 添加对象的名称信息，并替换为name</span><br><span class="line">    - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">      action: replace</span><br><span class="line">      target_label: name</span><br><span class="line">    # 添加pod对象的名称信息，并替换为pod</span><br><span class="line">    - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">      action: replace</span><br><span class="line">      target_label: pod</span><br></pre></td></tr></table></figure>

<h2 id="三、具体实现步骤"><a href="#三、具体实现步骤" class="headerlink" title="三、具体实现步骤"></a>三、具体实现步骤</h2><blockquote>
<p>通过部署prometheus服务相关资源，具体说明在实际使用中如何配置prometheus的自动发现</p>
</blockquote>
<h3 id="1-创建ServiceAccount并为其绑定RBAC权限"><a href="#1-创建ServiceAccount并为其绑定RBAC权限" class="headerlink" title="1. 创建ServiceAccount并为其绑定RBAC权限"></a>1. 创建ServiceAccount并为其绑定RBAC权限</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# cat rbac.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: monitoring</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: monitoring</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: monitoring</span><br><span class="line">rules:</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources:</span><br><span class="line">  - nodes</span><br><span class="line">  - nodes/proxy</span><br><span class="line">  - nodes/metrics</span><br><span class="line">  - services</span><br><span class="line">  - endpoints</span><br><span class="line">  - pods</span><br><span class="line">  verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]</span><br><span class="line">- apiGroups: [&quot;&quot;]</span><br><span class="line">  resources: [&quot;configmaps&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;]</span><br><span class="line">- nonResourceURLs: [&quot;/metrics&quot;]</span><br><span class="line">  verbs: [&quot;get&quot;]</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1beta1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: prometheus</span><br><span class="line">    namespace: monitoring</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: prometheus</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">[root@tiaoban prometheus]# kubectl apply -f rbac.yaml </span><br><span class="line">namespace/monitoring created</span><br><span class="line">serviceaccount/prometheus created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/prometheus created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/prometheus created</span><br></pre></td></tr></table></figure>

<h3 id="2-创建configmap"><a href="#2-创建configmap" class="headerlink" title="2. 创建configmap"></a>2. 创建configmap</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# cat prometheus-config.yaml </span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-config</span><br><span class="line">  namespace: monitoring</span><br><span class="line">data:</span><br><span class="line">  prometheus.yaml: |-</span><br><span class="line">    global:</span><br><span class="line">      scrape_interval: 5s</span><br><span class="line">      evaluation_interval: 5s</span><br><span class="line">      external_labels:</span><br><span class="line">        cluster: prometheus-1</span><br><span class="line">    rule_files:</span><br><span class="line">    - /etc/prometheus/rules/*.yaml</span><br><span class="line">    scrape_configs:</span><br><span class="line">    - job_name: prometheus</span><br><span class="line">      kubernetes_sd_configs:</span><br><span class="line">      - role: endpoints</span><br><span class="line">      relabel_configs:</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">        regex: prometheus</span><br><span class="line">        action: keep</span><br><span class="line">      - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: endpoint</span><br><span class="line">      - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: pod</span><br><span class="line">      - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: service</span><br><span class="line">      - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">        action: replace</span><br><span class="line">        target_label: namespace</span><br><span class="line">[root@tiaoban prometheus]# kubectl apply -f prometheus-config.yaml </span><br><span class="line">configmap/prometheus-config created</span><br></pre></td></tr></table></figure>

<h3 id="3-创建prometheus"><a href="#3-创建prometheus" class="headerlink" title="3. 创建prometheus"></a>3. 创建prometheus</h3><blockquote>
<p>因为prometheus是有状态服务，因此创建StatefulSet控制器，存储使用local pv。</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# cat prometheus.yaml </span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus-headless</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  labels:</span><br><span class="line">    app: prometheus</span><br><span class="line">spec:</span><br><span class="line">  type: ClusterIP</span><br><span class="line">  clusterIP: None</span><br><span class="line">  selector:</span><br><span class="line">    app: prometheus</span><br><span class="line">  ports:</span><br><span class="line">  - name: web</span><br><span class="line">    protocol: TCP</span><br><span class="line">    port: 9090</span><br><span class="line">    targetPort: web</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: monitoring</span><br><span class="line">  labels:</span><br><span class="line">    app: prometheus</span><br><span class="line">spec:</span><br><span class="line">  serviceName: prometheus-headless</span><br><span class="line">  podManagementPolicy: Parallel</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: prometheus</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: prometheus</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: prometheus</span><br><span class="line">      containers:</span><br><span class="line">      - name: prometheus</span><br><span class="line">        image: prom/prometheus:v2.30.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        args:</span><br><span class="line">        - --config.file=/etc/prometheus/config/prometheus.yaml</span><br><span class="line">        - --storage.tsdb.path=/prometheus</span><br><span class="line">        - --storage.tsdb.retention.time=10d</span><br><span class="line">        - --web.route-prefix=/</span><br><span class="line">        - --web.enable-lifecycle</span><br><span class="line">        - --storage.tsdb.no-lockfile</span><br><span class="line">        - --storage.tsdb.min-block-duration=2h</span><br><span class="line">        - --storage.tsdb.max-block-duration=2h</span><br><span class="line">        - --log.level=debug</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9090</span><br><span class="line">          name: web</span><br><span class="line">          protocol: TCP</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /-/healthy</span><br><span class="line">            port: web</span><br><span class="line">            scheme: HTTP</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /-/ready</span><br><span class="line">            port: web</span><br><span class="line">            scheme: HTTP</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /etc/prometheus/config</span><br><span class="line">          name: prometheus-config</span><br><span class="line">          readOnly: true</span><br><span class="line">        - mountPath: /prometheus</span><br><span class="line">          name: data</span><br><span class="line">      volumes:</span><br><span class="line">      - name: prometheus-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: prometheus-config</span><br><span class="line">  volumeClaimTemplates:</span><br><span class="line">  - metadata:</span><br><span class="line">      name: data</span><br><span class="line">    spec:</span><br><span class="line">      accessModes:</span><br><span class="line">      - ReadWriteOnce</span><br><span class="line">      storageClassName: local-storage</span><br><span class="line">      resources:</span><br><span class="line">        requests:</span><br><span class="line">          storage: 10Gi</span><br><span class="line">[root@tiaoban prometheus]# kubectl apply -f prometheus.yaml </span><br><span class="line">service/prometheus-headless created</span><br><span class="line">statefulset.apps/prometheus created</span><br></pre></td></tr></table></figure>

<h3 id="4-创建ingress"><a href="#4-创建ingress" class="headerlink" title="4. 创建ingress"></a>4. 创建ingress</h3><blockquote>
<p>此处以traefik举例说明</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# cat prometheus-ingress.yaml </span><br><span class="line">apiVersion: traefik.containo.us/v1alpha1</span><br><span class="line">kind: IngressRoute</span><br><span class="line">metadata:</span><br><span class="line">  name: prometheus</span><br><span class="line">  namespace: monitoring</span><br><span class="line">spec:</span><br><span class="line">  routes:</span><br><span class="line">    - match: Host(`prometheus.local.com`)</span><br><span class="line">      kind: Rule</span><br><span class="line">      services:</span><br><span class="line">        - name: prometheus-headless</span><br><span class="line">          port: 9090</span><br><span class="line">[root@tiaoban prometheus]# kubectl apply -f prometheus-ingress.yaml </span><br><span class="line">ingressroute.traefik.containo.us/prometheus created</span><br></pre></td></tr></table></figure>

<h3 id="5-访问验证"><a href="#5-访问验证" class="headerlink" title="5. 访问验证"></a>5. 访问验证</h3><blockquote>
<p>修改本地hosts文件后访问验证</p>
</blockquote>
<p><img src="/images/1709027620-0b7d5ac7b2bd95e235fbae19bc9d465e.jpg" alt="image.png"></p>
<h2 id="四、常见job配置示例"><a href="#四、常见job配置示例" class="headerlink" title="四、常见job配置示例"></a>四、常见job配置示例</h2><h3 id="1-apiserver"><a href="#1-apiserver" class="headerlink" title="1. apiserver"></a>1. apiserver</h3><ul>
<li>查看apiserver服务信息</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe svc kubernetes </span><br><span class="line">Name:              kubernetes</span><br><span class="line">Namespace:         default</span><br><span class="line">Labels:            component=apiserver</span><br><span class="line">                   provider=kubernetes</span><br><span class="line">Annotations:       &lt;none&gt;</span><br><span class="line">Selector:          &lt;none&gt;</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.96.0.1</span><br><span class="line">Port:              https  443/TCP</span><br><span class="line">TargetPort:        6443/TCP</span><br><span class="line">Endpoints:         192.168.10.10:6443</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>根据svc信息可知，apiserver位于default命名空间下，标签为component&#x3D;apiserver，访问方式为https，端口为6443</p>
</blockquote>
<ul>
<li>编写prometheus配置文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: kube-apiserver</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: endpoints</span><br><span class="line">  scheme: https</span><br><span class="line">  tls_config:</span><br><span class="line">    ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name]</span><br><span class="line">    action: keep</span><br><span class="line">    regex: default;kubernetes</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: service</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<blockquote>
<p>需要注意的是使用https访问时，需要tls相关配置，可以指定ca证书路径或者insecure_skip_verify: true跳过证书验证。除此之外，还要指定bearer_token_file，否则会提示server returned HTTP status 400 Bad Request</p>
</blockquote>
<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-65b5229c1805f4737ce5f4f884ceccdb.jpg" alt="image.png"></p>
<h3 id="2-controller-manager"><a href="#2-controller-manager" class="headerlink" title="2. controller-manager"></a>2. controller-manager</h3><ul>
<li>查看controller-manager信息</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe pod -n kube-system kube-controller-manager-k8s-master </span><br><span class="line">Name:                 kube-controller-manager-k8s-master</span><br><span class="line">Namespace:            kube-system</span><br><span class="line">……</span><br><span class="line">Labels:               component=kube-controller-manager</span><br><span class="line">                      tier=control-plane</span><br><span class="line">……</span><br><span class="line">Containers:</span><br><span class="line">  kube-controller-manager:</span><br><span class="line">    ……</span><br><span class="line">    Command:</span><br><span class="line">      kube-controller-manager</span><br><span class="line">      --allocate-node-cidrs=true</span><br><span class="line">      --authentication-kubeconfig=/etc/kubernetes/controller-manager.conf</span><br><span class="line">      --authorization-kubeconfig=/etc/kubernetes/controller-manager.conf</span><br><span class="line">      --bind-address=127.0.0.1</span><br><span class="line">      ……</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由上可知，匹配pod对象，lable标签为component&#x3D;kube-controller-manager即可，但需注意的是controller-manager默认只运行127.0.0.1访问，因此还需先修改controller-manager配置</p>
</blockquote>
<ul>
<li>修改&#x2F;etc&#x2F;kubernetes&#x2F;manifests&#x2F;kube-controller-manager.yaml</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-master manifests]# cat /etc/kubernetes/manifests/kube-controller-manager.yaml </span><br><span class="line">……</span><br><span class="line">  - command:</span><br><span class="line">    - --bind-address=0.0.0.0 # 端口改为0.0.0.0</span><br><span class="line">    #- --port=0 # 注释0端口</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<ul>
<li>编写prometheus配置文件，需要注意的是，他默认匹配到的是80端口，需要手动指定为10252端口</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: kube-controller-manager</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_component]</span><br><span class="line">    regex: kube-controller-manager</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_ip]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:10252</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: service</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-d3d70171ce18deedea42a2834acab1e5.jpg" alt="image.png"></p>
<h3 id="3-scheduler"><a href="#3-scheduler" class="headerlink" title="3. scheduler"></a>3. scheduler</h3><ul>
<li>查看scheduler资源详情</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe pod -n kube-system kube-scheduler-k8s-master </span><br><span class="line">Name:                 kube-scheduler-k8s-master</span><br><span class="line">Namespace:            kube-system</span><br><span class="line">……</span><br><span class="line">Labels:               component=kube-scheduler</span><br><span class="line">                      tier=control-plane</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由上可知，匹配pod对象，lable标签为component&#x3D;kube-scheduler即可scheduler和controller-manager一样，默认监听0端口，需要注释</p>
</blockquote>
<ul>
<li>编写prometheus配置文件，需要注意的是，他默认匹配到的是80端口，需要手动指定为10251端口,同时指定token，否则会提示server returned HTTP status 400 Bad Request</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: kube-scheduler</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_component]</span><br><span class="line">    regex: kube-scheduler</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_ip]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:10251</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: service</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-3df46332151a0b186d9518efd750d4c7.jpg" alt="image.png"></p>
<h3 id="4-kube-state-metrics"><a href="#4-kube-state-metrics" class="headerlink" title="4. kube-state-metrics"></a>4. kube-state-metrics</h3><ul>
<li>查看scheduler资源详情</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe svc -n kube-system kube-state-metrics </span><br><span class="line">Name:              kube-state-metrics</span><br><span class="line">Namespace:         kube-system</span><br><span class="line">Labels:            app.kubernetes.io/component=exporter</span><br><span class="line">                   app.kubernetes.io/name=kube-state-metrics</span><br><span class="line">                   app.kubernetes.io/version=2.2.1</span><br><span class="line">Annotations:       Selector:  app.kubernetes.io/name=kube-state-metrics</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                None</span><br><span class="line">Port:              http-metrics  8080/TCP</span><br><span class="line">TargetPort:        http-metrics/TCP</span><br><span class="line">Endpoints:         10.244.1.47:8080</span><br><span class="line">Port:              telemetry  8081/TCP</span><br><span class="line">TargetPort:        telemetry/TCP</span><br><span class="line">Endpoints:         10.244.1.47:8081</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由上可知，匹配svc对象，name为kube-state-metrics即可</p>
</blockquote>
<ul>
<li>编写prometheus配置文件，需要注意的是，他默认匹配到的是8080和801两个端口，需要手动指定为8080端口</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: kube-state-metrics</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: endpoints</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    regex: kube-state-metrics</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_ip]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:8080</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: service</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-ce0cc1b6744a77d9b5c864cdd07ac386.jpg" alt="image.png"></p>
<h3 id="5-kubelet"><a href="#5-kubelet" class="headerlink" title="5. kubelet"></a>5. kubelet</h3><ul>
<li>查看kubelet资源详情</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@k8s-work2 ~]# ss -tunlp | grep kubelet</span><br><span class="line">tcp     LISTEN   0        128            127.0.0.1:42735          0.0.0.0:*      users:((&quot;kubelet&quot;,pid=1064,fd=12))                                             </span><br><span class="line">tcp     LISTEN   0        128            127.0.0.1:10248          0.0.0.0:*      users:((&quot;kubelet&quot;,pid=1064,fd=29))                                             </span><br><span class="line">tcp     LISTEN   0        128                    *:10250                *:*      users:((&quot;kubelet&quot;,pid=1064,fd=30))</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由上可知，kubelet在每个node节点都有运行，端口为10250，因此role使用node即可。</p>
</blockquote>
<ul>
<li>编写prometheus配置文件，需要注意的是，他的指标采集地址为&#x2F;metrics&#x2F;cadvisor，需要配置https访问，可以设置insecure_skip_verify: true跳过证书验证</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: kubelet</span><br><span class="line">  metrics_path: /metrics/cadvisor</span><br><span class="line">  scheme: https</span><br><span class="line">  tls_config:</span><br><span class="line">    insecure_skip_verify: true</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: node</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-689a42f2211a8ca7d590340ea4178b41.jpg" alt="image.png"></p>
<h3 id="6-node-exporter"><a href="#6-node-exporter" class="headerlink" title="6. node_exporter"></a>6. node_exporter</h3><ul>
<li>查看scheduler资源详情</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe pod -n monitoring node-exporter-9dsqr </span><br><span class="line">Name:         node-exporter-9dsqr</span><br><span class="line">Namespace:    monitoring</span><br><span class="line">Priority:     0</span><br><span class="line">Node:         k8s-master/192.168.10.10</span><br><span class="line">Start Time:   Sun, 17 Oct 2021 16:42:24 +0800</span><br><span class="line">Labels:       app=node-exporter</span><br><span class="line">              controller-revision-hash=775f546bd4</span><br><span class="line">              pod-template-generation=1</span><br><span class="line">……</span><br><span class="line">    Port:          9100/TCP</span><br><span class="line">    Host Port:     9100/TCP</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<blockquote>
<p>node_exporter也是每个node节点都运行，因此role使用node即可，默认address端口为10250，替换为9100即可</p>
</blockquote>
<ul>
<li>编写prometheus配置文件</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: node_exporter</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: node</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__address__]</span><br><span class="line">    regex: &#x27;(.*):10250&#x27;</span><br><span class="line">    replacement: &#x27;$&#123;1&#125;:9100&#x27;</span><br><span class="line">    target_label: __address__</span><br><span class="line">    action: replace</span><br><span class="line">  - action: labelmap</span><br><span class="line">    regex: __meta_kubernetes_node_label_(.+)</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-c705fd92ad8e11f8f4dd2174a620c492.jpg" alt="image.png"></p>
<h3 id="7-coredns"><a href="#7-coredns" class="headerlink" title="7. coredns"></a>7. coredns</h3><ul>
<li>查看coredns资源详情</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe svc -n kube-system kube-dns </span><br><span class="line">Name:              kube-dns</span><br><span class="line">Namespace:         kube-system</span><br><span class="line">Labels:            k8s-app=kube-dns</span><br><span class="line">                   kubernetes.io/cluster-service=true</span><br><span class="line">                   kubernetes.io/name=KubeDNS</span><br><span class="line">Annotations:       prometheus.io/port: 9153</span><br><span class="line">                   prometheus.io/scrape: true</span><br><span class="line">Selector:          k8s-app=kube-dns</span><br><span class="line">Type:              ClusterIP</span><br><span class="line">IP:                10.96.0.10</span><br><span class="line">Port:              dns  53/UDP</span><br><span class="line">TargetPort:        53/UDP</span><br><span class="line">Endpoints:         10.244.1.44:53,10.244.2.36:53</span><br><span class="line">Port:              dns-tcp  53/TCP</span><br><span class="line">TargetPort:        53/TCP</span><br><span class="line">Endpoints:         10.244.1.44:53,10.244.2.36:53</span><br><span class="line">Port:              metrics  9153/TCP</span><br><span class="line">TargetPort:        9153/TCP</span><br><span class="line">Endpoints:         10.244.1.44:9153,10.244.2.36:9153</span><br><span class="line">Session Affinity:  None</span><br><span class="line">Events:            &lt;none&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由上可知，匹配pod对象，lable标签为component&#x3D;kube-scheduler即可</p>
</blockquote>
<ul>
<li>编写prometheus配置文件，需要注意的是，他默认匹配到的是53端口，需要手动指定为9153端口</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: coredns</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: endpoints</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels:</span><br><span class="line">      - __meta_kubernetes_service_label_k8s_app</span><br><span class="line">    regex: kube-dns</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_ip]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:9153</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: service</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-8a214fdcf946aef0c89ad3fc5516f3a3.jpg" alt="image.png"></p>
<h3 id="8-etcd"><a href="#8-etcd" class="headerlink" title="8. etcd"></a>8. etcd</h3><ul>
<li>查看scheduler资源详情</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@tiaoban prometheus]# kubectl describe pod -n kube-system etcd-k8s-master </span><br><span class="line">Name:                 etcd-k8s-master</span><br><span class="line">Namespace:            kube-system</span><br><span class="line">Priority:             2000001000</span><br><span class="line">Priority Class Name:  system-node-critical</span><br><span class="line">Node:                 k8s-master/192.168.10.10</span><br><span class="line">Start Time:           Sun, 17 Oct 2021 12:31:51 +0800</span><br><span class="line">Labels:               component=etcd</span><br><span class="line">                      tier=control-plane</span><br><span class="line">……</span><br><span class="line">    Command:</span><br><span class="line">      etcd</span><br><span class="line">      --advertise-client-urls=https://192.168.10.10:2379</span><br><span class="line">      --cert-file=/etc/kubernetes/pki/etcd/server.crt</span><br><span class="line">      --client-cert-auth=true</span><br><span class="line">      --data-dir=/var/lib/etcd</span><br><span class="line">      --initial-advertise-peer-urls=https://192.168.10.10:2380</span><br><span class="line">      --initial-cluster=k8s-master=https://192.168.10.10:2380</span><br><span class="line">      --key-file=/etc/kubernetes/pki/etcd/server.key</span><br><span class="line">      --listen-client-urls=https://127.0.0.1:2379,https://192.168.10.10:2379</span><br><span class="line">      --listen-metrics-urls=http://127.0.0.1:2381</span><br><span class="line">      --listen-peer-urls=https://192.168.10.10:2380</span><br><span class="line">      --name=k8s-master</span><br><span class="line">      --peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt</span><br><span class="line">      --peer-client-cert-auth=true</span><br><span class="line">      --peer-key-file=/etc/kubernetes/pki/etcd/peer.key</span><br><span class="line">      --peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt</span><br><span class="line">      --snapshot-count=10000</span><br><span class="line">      --trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt</span><br><span class="line">……</span><br></pre></td></tr></table></figure>

<blockquote>
<p>由上可知，启动参数里面有一个 –listen-metrics-urls&#x3D;<a href="http://127.0.0.1:2381/">http://127.0.0.1:2381</a> 的配置，该参数就是来指定 Metrics 接口运行在 2381 端口下面的，而且是 http 的协议，所以也不需要什么证书配置，这就比以前的版本要简单许多了，以前的版本需要用 https 协议访问，所以要配置对应的证书。但是还需修改配置文件，地址改为0.0.0.0</p>
</blockquote>
<ul>
<li>编写prometheus配置文件，需要注意的是，他默认匹配到的是2379端口，需要手动指定为2381端口</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: etcd</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - role: pod</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels:</span><br><span class="line">      - __meta_kubernetes_pod_label_component</span><br><span class="line">    regex: etcd</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_ip]</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: __address__</span><br><span class="line">    replacement: $&#123;1&#125;:2381</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoints_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: endpoint</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: pod</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    action: replace</span><br><span class="line">    target_label: namespace</span><br></pre></td></tr></table></figure>

<ul>
<li>结果查看</li>
</ul>
<p><img src="/images/1709027620-b5a167d26dc1df564aaa5c2cfdfb1987.jpg" alt="image.png"></p>
<blockquote>
<p>参考链接</p>
<ul>
<li>prometheus配置文件说明</li>
</ul>
</blockquote>
<p><a href="https://cloud.tencent.com/developer/article/1844101">https://cloud.tencent.com/developer/article/1844101</a></p>
<blockquote>
<ul>
<li>prometheus kubernetes_sd_configs配置官方文档：<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config">https://prometheus.io/docs/prometheus/latest/configuration/configuration/#kubernetes_sd_config</a></li>
</ul>
</blockquote>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana中ElasticSearch日志查询使用方法</title>
    <url>/2024/02/28/Grafana%E4%B8%ADElasticSearch%E6%97%A5%E5%BF%97%E6%9F%A5%E8%AF%A2%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>创建一个基于 ElasticSearch 的日志快速搜索仪表板.</p>
<p>最终完整效果如下:</p>
<p><img src="/images/1709104497-d2ab56f1fce5d7a945a6e1fab9290ea4.png"></p>
<p>ElasticSearch Logs Quick Search Dashboard</p>
<blockquote>
<p>📝<strong>Notes</strong>:</p>
<p>其实我基于 ElasticSearch 做了2个仪表板</p>
<ul>
<li>用于检索 Applog 的</li>
<li>用于检索 accesslog 的</li>
</ul>
<p>在下面的讲解中会综合2个仪表板来进行说明.</p>
</blockquote>
<p>这次不会讲述详细细节, 只选择部分关键点进行说明.</p>
<h2 id="知识储备"><a href="#知识储备" class="headerlink" title="知识储备"></a>知识储备</h2><h3 id="创建-Query"><a href="#创建-Query" class="headerlink" title="创建 Query"></a>创建 Query</h3><p>使用自定义的JSON字符串编写查询，field 在Elasticsearch索引映射中被映射为一个 keyword。</p>
<p>如果查询是 multi-field 的 <code>text</code> 和 <code>keyword</code> 类型，使用 <code>&quot;field&quot;: &quot;fieldname.keyword&quot;</code>（有时是<code>fieldname.raw</code>）来指定你查询中的关键字字段。</p>
<h4 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h4><table>
<thead>
<tr>
<th>Query</th>
<th>Description</th>
</tr>
</thead>
<tbody><tr>
<td><code>&#123;&quot;find&quot;: &quot;fields&quot;, &quot;type&quot;: &quot;keyword&quot;&#125;</code></td>
<td>返回一个索引类型为<code>keyword</code> 的字段名列表。</td>
</tr>
<tr>
<td><code>&#123;&quot;find&quot;: &quot;terms&quot;, &quot;field&quot;: &quot;hostname.keyword&quot;, &quot;size&quot;: 1000&#125;</code></td>
<td>使用 terms 聚合返回一个 keyword 的值列表。查询将使用当前仪表板的时间范围作为时间范围查询。</td>
</tr>
<tr>
<td><code>&#123;&quot;find&quot;: &quot;terms&quot;, &quot;field&quot;: &quot;hostname&quot;, &quot;query&quot;: &#39;&lt;Lucene query&gt;&#39;&#125;</code></td>
<td>使用terms 聚合和指定的Lucene查询过滤器，返回一个keyword field 的值列表。查询将使用当前仪表板的时间范围作为查询的时间范围。</td>
</tr>
</tbody></table>
<p><code>terms</code> 的查询默认有500个结果的限制。要设置一个自定义的限制，需要在你的查询中设置<code>size</code>属性。</p>
<h3 id="Variable-语法"><a href="#Variable-语法" class="headerlink" title="Variable 语法"></a>Variable 语法</h3><p>面板标题和 metric 查询可以使用多种不同的语法来引用变量：</p>
<ul>
<li><code>$varname</code>, 这种语法很容易阅读，但它不允许你在词的中间使用变量。例如：<code>apps.frontend.$server.requests.count</code></li>
<li><code>$&#123;var_name&#125;</code>, 当你想在表达式的中间插值一个变量时，请使用这种语法。</li>
<li><code>$&#123;var_name:&lt;format&gt;&#125;</code> 这种格式让你对Grafana如何插值有更多控制。</li>
<li><code>[[varname]]</code> 不建议使用。废弃的旧语法，将在未来的版本中删除。</li>
</ul>
<h4 id="高级变量格式选项"><a href="#高级变量格式选项" class="headerlink" title="高级变量格式选项"></a>高级变量格式选项</h4><p>变量插值的格式取决于数据源，但在有些情况下，你可能想改变默认的格式。</p>
<p>例如，MySql数据源的默认格式是以逗号分隔的方式连接多个值，并加引号, 如：<code>&#39;server01&#39;, &#39;server02&#39;</code>.在某些情况下，你可能希望有一个不带引号的逗号分隔的字符串, 如：<code>server01,server02</code>。你可以用下面列出的高级变量格式化选项来实现这一目的。</p>
<h5 id="通用语法"><a href="#通用语法" class="headerlink" title="通用语法"></a>通用语法</h5><p>语法: <code>$&#123;var_name:option&#125;</code></p>
<p>可以在[Grafana Play网站]上测试格式化选项。</p>
<p>如果指定了任何无效的格式化选项，那么 <code>glob</code> 就是默认&#x2F;回退选项。</p>
<h5 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h5><p>将具有多个值的变量形成一个逗号分隔的字符串。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:csv&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;test1,test2&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="分布式-OpenTSDB"><a href="#分布式-OpenTSDB" class="headerlink" title="分布式 - OpenTSDB"></a>分布式 - OpenTSDB</h5><p>以OpenTSDB的自定义格式对具有多个值的变量进行格式化。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:distributed&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;test1,servers=test2&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h5><p>将单值和多值变量形成一个逗号分隔的字符串，在单个值中用<code>\&quot;</code>转义<code>&quot;</code>，并将每个值用<code>&quot;&quot;</code>引号括起来。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:doublequote&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;&quot;test1&quot;,&quot;test2&quot;&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="Glob-Graphite"><a href="#Glob-Graphite" class="headerlink" title="Glob - Graphite"></a>Glob - Graphite</h5><p>将具有多个值的变量组成一个glob（用于Graphite查询）。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:glob&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;&#123;test1,test2&#125;&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h5><p>将具有多个值的变量形成一个逗号分隔的字符串。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:json&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;[&quot;test1&quot;, &quot;test2&quot;]&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="Lucene-Elasticsearch"><a href="#Lucene-Elasticsearch" class="headerlink" title="Lucene - Elasticsearch"></a>Lucene - Elasticsearch</h5><p>以Lucene格式对Elasticsearch的多值变量进行格式化。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:lucene&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;(&quot;test1&quot; OR &quot;test2&quot;)&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="URL-编码-Percentencode"><a href="#URL-编码-Percentencode" class="headerlink" title="URL 编码 (Percentencode)"></a>URL 编码 (Percentencode)</h5><p>对单值和多值变量进行格式化，以便在URL参数中使用。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;foo()bar BAZ&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:percentencode&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;foo%28%29bar%20BAZ%2Ctest2&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="Pipe"><a href="#Pipe" class="headerlink" title="Pipe"></a>Pipe</h5><p>将具有多个值的变量形成一个管道分隔的字符串。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1.&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:pipe&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;test1.|test2&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h5><p>关闭数据源特定的格式化，如SQL查询中的单引号。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test.1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;var_name:raw&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;test.1,test2&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="Regex"><a href="#Regex" class="headerlink" title="Regex"></a>Regex</h5><p>将有多个值的变量形成一个regex字符串。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1.&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:regex&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&#x27;(test1\.|test2)&#x27;</span></span><br></pre></td></tr></table></figure>

<h5 id="单引号"><a href="#单引号" class="headerlink" title="单引号"></a>单引号</h5><p>将单值和多值变量形成一个逗号分隔的字符串，在单个值中用<code>\&#39;</code>转义<code>&#39;</code>，并将每个值用<code>&#39;</code>引号括起来。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&#x27;test1&#x27;</span>, <span class="string">&#x27;test2&#x27;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:singlequote&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&quot;&#x27;test1&#x27;,&#x27;test2&#x27;&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="Sqlstring"><a href="#Sqlstring" class="headerlink" title="Sqlstring"></a>Sqlstring</h5><p>将单值和多值变量组成一个逗号分隔的字符串，每个值中的<code>&#39;</code>用<code>&#39;&#39;</code>转义，每个值用<code>&#39;</code>引号括起来。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&quot;test&#x27;1&quot;</span>, <span class="string">&quot;test2&quot;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:sqlstring&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&quot;&#x27;test&#x27;&#x27;1&#x27;,&#x27;test2&#x27;&quot;</span></span><br></pre></td></tr></table></figure>

<h5 id="Text"><a href="#Text" class="headerlink" title="Text"></a>Text</h5><p>将单值和多值变量转换成其文本表示法。对于一个单变量，它将只返回文本表示法。对于多值变量，它将返回与<code>+</code>相结合的文本表示法。</p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&quot;test1&quot;</span>, <span class="string">&quot;test2&quot;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:text&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&quot;test1 + test2&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="查询参数"><a href="#查询参数" class="headerlink" title="查询参数"></a>查询参数</h4><p>将单值和多值变量编入其查询参数表示法。例如：<code>var-foo=value1&amp;var-foo=value2</code></p>
<figure class="highlight dart"><table><tr><td class="code"><pre><span class="line">servers = [<span class="string">&quot;test1&quot;</span>, <span class="string">&quot;test2&quot;</span>]</span><br><span class="line"><span class="built_in">String</span> to interpolate: <span class="string">&#x27;<span class="subst">$&#123;servers:queryparam&#125;</span>&#x27;</span></span><br><span class="line">Interpolation result: <span class="string">&quot;servers=test1&amp;servers=test2&quot;</span></span><br></pre></td></tr></table></figure>

<h3 id="配置变量选择选项"><a href="#配置变量选择选项" class="headerlink" title="配置变量选择选项"></a>配置变量选择选项</h3><p><strong>Selection Options</strong> 是一个你可以用来管理变量选项选择的功能。所有的选择选项都是可选的，它们在默认情况下是关闭的。</p>
<h4 id="Multi-value-Variables"><a href="#Multi-value-Variables" class="headerlink" title="Multi-value Variables"></a>Multi-value Variables</h4><p>内插一个选择了多个值的变量是很棘手的，因为如何将多个值格式化为一个在使用该变量的给定环境中有效的字符串并不直接。Grafana试图通过允许每个数据源插件告知模板插值引擎对多个值使用什么格式来解决这个问题。</p>
<blockquote>
<p>📝<strong>Notes</strong>:</p>
<p>变量上的<strong>Custom all value</strong>选项必须为空，以便Grafana将所有值格式化为一个字符串。如果它留空，那么Grafana就会把查询中的所有值连接起来（加在一起）。类似于<code>value1,value2,value3</code>。如果使用了一个自定义的所有值，那么该值将是类似于<code>*</code>或<code>all</code>的东西。</p>
</blockquote>
<h4 id="带有Prometheus或InfluxDB数据源的多值变量"><a href="#带有Prometheus或InfluxDB数据源的多值变量" class="headerlink" title="带有Prometheus或InfluxDB数据源的多值变量"></a>带有Prometheus或InfluxDB数据源的多值变量</h4><p>InfluxDB和Prometheus使用regex表达式，所以<code>host1</code>, <code>host2</code>, <code>host3</code> 变量会被插值为<code>&#123;host1,host2,host3&#125;</code>。每个值都会被regex转义。</p>
<h4 id="使用Elastic数据源的多值变量"><a href="#使用Elastic数据源的多值变量" class="headerlink" title="使用Elastic数据源的多值变量"></a>使用Elastic数据源的多值变量</h4><p>Elasticsearch使用lucene查询语法，所以同样的变量会被格式化为<code>(&quot;host1&quot; OR &quot;host2&quot; OR &quot;host3&quot;)</code>。在这种情况下，每一个值都必须被转义，以便该值只包含lucene控制词和引号。</p>
<h4 id="Include-All-选项"><a href="#Include-All-选项" class="headerlink" title="Include All 选项"></a>Include All 选项</h4><p>Grafana在变量下拉列表中添加了一个 <code>All</code> 选项。如果用户选择了这个选项，那么所有的变量选项都被选中。</p>
<h4 id="自定义-all-的值"><a href="#自定义-all-的值" class="headerlink" title="自定义 all 的值"></a>自定义 all 的值</h4><p>这个选项只有在选择了 <strong>Include All option</strong> 时才可见。</p>
<p>在Custom all value字段中可以输入regex、globs或lucene语法来定义All选项的值。</p>
<p>默认情况下，<code>All</code> 值包括组合表达式中的所有选项。这可能会变得非常长，而且会产生性能问题。有时，指定一个自定义的所有值可能会更好，比如通配符。</p>
<p>为了在 <strong>Custom all value</strong> 选项中拥有自定义的regex、globs或lucene语法，它永远不会被转义，所以你将不得不考虑什么是你的数据源的有效值。</p>
<h3 id="ElasticSearch-Template-Variables"><a href="#ElasticSearch-Template-Variables" class="headerlink" title="ElasticSearch Template Variables"></a>ElasticSearch Template Variables</h3><h4 id="选择一种-Variable-语法"><a href="#选择一种-Variable-语法" class="headerlink" title="选择一种 Variable 语法"></a>选择一种 Variable 语法</h4><p>如上文所述, Elasticsearch数据源支持在查询字段中使用多种变量语法.</p>
<p>当启用 <strong>Multi-value</strong> 或 <strong>Include all value</strong> 选项时，Grafana 会将标签从纯文本转换为与 Lucene 兼容的条件。即隐式转换 <code>$varname</code> 为 <code>$&#123;varname:lucene&#125;</code></p>
<h2 id="实战"><a href="#实战" class="headerlink" title="实战"></a>实战</h2><h3 id="1-弄清楚有哪些索引字段"><a href="#1-弄清楚有哪些索引字段" class="headerlink" title="1. 弄清楚有哪些索引字段"></a>1. 弄清楚有哪些索引字段</h3><p>首先, 最重要的, 就是弄清楚该索引有哪些索引<strong>字段(fields)</strong>, 以及有哪些<strong>keywords</strong>, 选择部分字段和 keywords 作为 varibles. 可以直接通过 Kibana 界面进行查询和尝试.</p>
<p>如本次选择的有:</p>
<ul>
<li><code>app_name</code></li>
<li><code>level</code></li>
<li><code>request_path</code> (🐾 通过多次在 Kibana 上使用发现, 查询时应该使用 <code>request_path.keyword</code> 而不是 <code>request_path</code>)</li>
<li><code>request_method</code></li>
<li><code>status_code</code></li>
</ul>
<h3 id="2-创建-Variables"><a href="#2-创建-Variables" class="headerlink" title="2. 创建 Variables"></a>2. 创建 Variables</h3><h4 id="app-name"><a href="#app-name" class="headerlink" title="app_name"></a>app_name</h4><p>设置如下:</p>
<ul>
<li>Name: <code>app_name</code></li>
<li>Type: Query</li>
<li>Data source: ES</li>
<li>Query: <code>&#123;&quot;find&quot;: &quot;terms&quot;, &quot;field&quot;: &quot;current_app_name&quot;&#125;</code>, 另外, 如果嵌套使用, 可以类似这样 <code>&#123;&quot;find&quot;: &quot;terms&quot;, &quot;field&quot;: &quot;pod_name&quot;, &quot;query&quot;: &quot;app_name:$app_name&quot;&#125;</code></li>
</ul>
<h4 id="request-path"><a href="#request-path" class="headerlink" title="request_path"></a>request_path</h4><p>设置如下:</p>
<ul>
<li>Name: <code>request_path</code></li>
<li>Type: Query</li>
<li>Data source: ES</li>
<li>Query: <code>&#123;&quot;find&quot;: &quot;terms&quot;, &quot;field&quot;: &quot;request_path.keyword&quot;, &quot;query&quot;: &quot;app_name:$app_name&quot;&#125;</code></li>
<li>Multi-value: ✔️</li>
<li>Include All option: ✔️</li>
<li>Custom all value: <code>*</code></li>
</ul>
<p>🐾 注意, 这里使用了 Custom all value, 最终 Query All 的表达式就会变成: <code>request_path.keyword:*</code> 而不是 <code>request_path.keyword:(&lt;path1&gt; OR &lt;path2&gt; ...)</code></p>
<h4 id="request-method"><a href="#request-method" class="headerlink" title="request_method"></a>request_method</h4><p><code>request_method</code> 常用的就这么几个:</p>
<ul>
<li>GET</li>
<li>POST</li>
<li>DELETE</li>
<li>HEAD</li>
<li>PUT</li>
<li>PATCH</li>
<li>OPTIONS</li>
</ul>
<p>所以可以将其设置为 <code>Custom</code> variable, 设置如下:</p>
<ul>
<li>Name: <code>request_method</code></li>
<li>Type: Custom</li>
<li>Values separated by comma: <code>GET,POST,DELETE,HEAD, PUT,PATCH,OPTIONS</code></li>
<li>Multi-value: ✔️</li>
<li>Include All option: ✔️</li>
<li>Custom all value: <code>*</code></li>
</ul>
<h4 id="level"><a href="#level" class="headerlink" title="level"></a>level</h4><p>日志级别可以直接使用 Custom 类型变量. 如下:</p>
<ul>
<li>Name: <code>level</code></li>
<li>Type: <code>Custom</code></li>
<li>Values separated by comma: <code>INFO, WARN, ERROR,FATAL</code></li>
<li>Multi-value: ✔️</li>
<li>Include All option: ✔️</li>
</ul>
<p>如果只关注错误日志, 那么 level 变量的默认值可以设置为同时勾选: <code>ERROR</code> 和 <code>FATAL</code></p>
<h4 id="status-code"><a href="#status-code" class="headerlink" title="status_code"></a>status_code</h4><p>这里会将 <code>status_code</code> variable 用于 Lucene 的范围语法 <code>[]</code>(包括开头和结尾的2个数字), 所以有用到<code>Custom all value</code> 以及 Variable 语法配置.</p>
<ul>
<li>Name: <code>status_code</code></li>
<li>Type: <code>Custom</code></li>
<li>Values separated by comma: <code>200 TO 299, 300 TO 399, 400 TO 499, 500 TO 599</code></li>
<li>Include All option: ✔️</li>
<li>Custom all value: <code>200 TO 599</code> (📝Note: 即包括所有的 http 状态码, 从 200 到 599)</li>
</ul>
<p>后续要在 Query 中使用, 用法如下:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">status_code:[<span class="variable">$&#123;status_code:raw&#125;</span>]</span><br></pre></td></tr></table></figure>

<p>直接使用 <code>$&#123;status_code:raw&#125;</code>, 这样传入就会变成:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">status_code:[<span class="number">200</span> TO <span class="number">299</span>]</span><br><span class="line">status_code:[<span class="number">200</span> TO <span class="number">599</span>]</span><br></pre></td></tr></table></figure>

<p>按期望完成对 ES 的查询.</p>
<h4 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h4><p>最后, 还添加一个 <code>Ad hoc filters</code> variable, 方便用户进行更多自定义的过滤筛选.</p>
<ul>
<li>Name: filter</li>
<li>Type: <code>Ad hoc filters</code></li>
<li>Data source: <code>$&#123;datasource&#125;</code></li>
</ul>
<p>后续会在该 Dashboard 的所有 Query 中自动使用. 一个典型使用场景如下:</p>
<p>对于 <code>request_path</code>, 需要过滤监控&#x2F;健康检查等请求(包含<code>info</code> <code>health</code> <code>metric</code> 等关键词), 那么可以将该 <code>filter</code> 保存为默认的变量值.</p>
<p>request_path ad hoc filter</p>
<h3 id="3-Panel"><a href="#3-Panel" class="headerlink" title="3. Panel"></a>3. Panel</h3><p>Dashboard 只有 2 个面板组成:</p>
<ul>
<li>上图: Time series, 显示日志柱状图, 并着色, <code>INFO</code>日志为绿色, <code>WARN</code> 日志为黄色, <code>ERROR</code> 和 <code>FATAL</code> 日志为红色.</li>
<li>下日志</li>
</ul>
<h4 id="Time-series-panel"><a href="#Time-series-panel" class="headerlink" title="Time series panel"></a>Time series panel</h4><p>如下图:</p>
<p>3 Colors Time series panel</p>
<p>可以通过如下 Query 实现:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">app_name:<span class="variable">$app_name</span> AND level:(<span class="variable">$level</span> AND INFO)</span><br><span class="line">app_name:<span class="variable">$app_name</span> AND level:(<span class="variable">$level</span> AND ERROR or FATAL)</span><br></pre></td></tr></table></figure>

<p><code>$level AND INFO</code> 这种写法是一个 workaround, 为的是在 level 变量改变时, Time series panel 随之改变.</p>
<p>另外一个需要注意的点是, <code>Metric</code> 是 <code>Count</code>(日志条数) 而不是 <code>Logs</code> (具体日志).</p>
<p>还有, 需要配置 Override -&gt; Color, 如下:</p>
<p>Color Override</p>
<p>最后, 如果柱子太密, 可以通过调整如 <code>3 Colors Time series panel</code> 图中的 <code>Interval</code> 来调整时间间隔, 本例调整为 <code>1m</code></p>
<h3 id="Logs-panel"><a href="#Logs-panel" class="headerlink" title="Logs panel"></a>Logs panel</h3><p>在 Logs panel 中, 也可以根据实际情况做一系列调整.</p>
<p>如下图, 可以对日志展示方式做调整:</p>
<p>Logs panel settings</p>
<ul>
<li>Time: 是否加时间戳</li>
<li>Unique labels: 是否每条日志加 label</li>
<li>Common labels: 是否对 logs panel 左上角对所有日志加 common labels</li>
<li>Wrap lines</li>
<li>Pretify JSON: JSON 美化</li>
<li>Enable log details: 启用查看日志详细信息</li>
<li>Deduplication: 日志去重, 去重方式有:<ul>
<li>None: 不去重</li>
<li>Exact: 精确去重</li>
<li>Numbers: 不同数字记为同一类的去重方式</li>
<li>Signature: 根据计算得出的 Signature 去重</li>
</ul>
</li>
<li>Order: 排序.</li>
</ul>
<p>另外, 考虑到 ES 日志的 log details 会有很多我们不关注的 fields, 如: <code>_source</code> <code>_id</code> 等, 可以通过 <strong>Transform</strong> 进行转换调整. 具体如下图:</p>
<p>Logs panel Transform</p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这篇文章算是该系列文章的一个重点了. 包含了非常多的实用细节.</p>
<p>如:</p>
<ul>
<li>ES Query</li>
<li>Variable 语法<ul>
<li>Variable raw 语法</li>
<li>Lucene - Elasticsearch 语法</li>
<li>…</li>
</ul>
</li>
<li>Multi-value Variables</li>
<li>Include All 选项</li>
<li>自定义 all 的值</li>
<li><code>Ad hoc filters</code> Variable</li>
<li>ES Metric Type<ul>
<li>Count</li>
<li>Logs</li>
<li>…</li>
</ul>
</li>
<li>调整Query 时间间隔</li>
<li>Logs panel 设置</li>
<li>Panel Transform</li>
</ul>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix配置Webhook告警推送至企业微信</title>
    <url>/2024/02/28/Zabbix%E9%85%8D%E7%BD%AEWebhook%E5%91%8A%E8%AD%A6%E6%8E%A8%E9%80%81%E8%87%B3%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Zabbix如何将告警通过Webhook发送至IM？网上搜罗一番发现配置还是比较繁琐，以此为由本文将介绍如何通过自带的Webhook功能将告警信息推送至IM平台，笔者的推送思路是创建两个Webhook一个为一般告警或以下，另一个为严重和灾难级别，方便区分告警紧急程度，下面来看看如何配置吧。</p>
<h2 id="版本与环境"><a href="#版本与环境" class="headerlink" title="版本与环境"></a>版本与环境</h2><ul>
<li><p>版本：Zabbix 6.0 LTS</p>
</li>
<li><p>IM：企业微信</p>
</li>
</ul>
<h2 id="Webhook"><a href="#Webhook" class="headerlink" title="Webhook"></a>Webhook</h2><h3 id="什么是Webhook"><a href="#什么是Webhook" class="headerlink" title="什么是Webhook"></a>什么是Webhook</h3><p>以下是来自GPT对Webhook的介绍： Webhook 是一种网络编程的概念，用于在特定事件发生时，将数据或通知传送到指定的 URL。它是一种异步通信方式，可以让应用程序之间实现实时的数据交换和信息传递。 以下是 Webhook 的一些基本概念和特点：- 工作原理： Webhook 的工作原理很简单。当某个事件在源应用程序中触发时，源应用会向预先配置的目标 URL 发送 HTTP 请求。目标 URL 可以是你自己的服务器、外部服务、第三方应用程序等。- 事件触发： Webhook 通常用于捕获和响应特定事件，如用户注册、支付成功、数据更新等。当事件发生时，源应用程序会将相关数据封装为一个 HTTP 请求，并发送到目标 URL。- 实时性： Webhook 实现了实时数据传输，因为事件触发后立即发送通知。这与轮询（Polling）方式不同，后者需要定期查询源数据是否有更新。- 自定义数据： Webhook 可以在请求中传递自定义数据，这样目标应用程序可以根据数据内容做出适当的处理。- 用途广泛： Webhook 在很多场景中得到应用，包括通知、集成、自动化等。比如，你可以通过 Webhook 将表单提交的数据发送到外部数据库、实现不同应用程序之间的集成，或者实现实时通知功能。- 安全性： Webhook 通常需要进行身份验证，确保只有合法的请求可以触发。常见的方式包括使用密钥、令牌、数字签名等来验证来源。- 管理： 一些服务提供了管理界面，让用户可以配置和管理 Webhook，包括设置事件、目标 URL、请求方法等。 Webhook 的使用非常灵活，可以根据不同的应用场景进行定制。许多云服务、应用程序和开发框架都支持 Webhook 功能，使得不同系统之间的集成更加便捷。</p>
<h3 id="创建Webhook"><a href="#创建Webhook" class="headerlink" title="创建Webhook"></a>创建Webhook</h3><p>先创建一个群聊，点击菜单-&gt;添加群机器人-&gt;添加机器人。</p>
<p><img src="/images/1709109514-3c702544ef2b4421e9f76a70cf0bc946.jpg" alt="图片"></p>
<p>选择新建机器人。</p>
<p><img src="/images/1709109514-e95bd7109939befb7083962b4813f176.jpg" alt="图片"></p>
<p>输入机器人名称后点击添加。</p>
<p><img src="/images/1709109514-47201d711be7971994d6bd23da5dd582.jpg" alt="图片"></p>
<p>创建完成后得到一个webhook地址。</p>
<p><img src="/images/1709109514-b641041f0170575cd7feec27a224973d.jpg" alt="图片"></p>
<h2 id="安装ZABBIX"><a href="#安装ZABBIX" class="headerlink" title="安装ZABBIX"></a>安装ZABBIX</h2><p>参照此片文章</p>
<p><a href="https://zhuanlan.zhihu.com/p/645105851">Debain 部署 Zabbix 6 LTS1 </a></p>
<h2 id="创建一般告警媒介"><a href="#创建一般告警媒介" class="headerlink" title="创建一般告警媒介"></a>创建一般告警媒介</h2><p>创建告警类型</p>
<p><img src="/images/1709109514-438e05a77ae4fbed562402bd36f69284.jpg" alt="图片"></p>
<p>按需填入相关信息，token获取请参照 创建Webhook 章节。</p>
<p><img src="/images/1709109514-ad3dfb7d0aa8d93fdc6b35782c07c8a5.jpg" alt="图片"></p>
<p>javaScript脚本内容如下，有相关注释。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var WeCom = &#123;</span><br><span class="line">    message: null,</span><br><span class="line">    webhook_url: null,</span><br><span class="line"></span><br><span class="line">    sendMessage: function() &#123;</span><br><span class="line">        // 定义消息推送格式</span><br><span class="line">        var params = &#123;</span><br><span class="line">            msgtype: &quot;markdown&quot;,</span><br><span class="line">            markdown: &#123;</span><br><span class="line">                content:WeCom.message</span><br><span class="line">            &#125;,</span><br><span class="line">            // 这个参数控制是否禁用消息中的链接预览。当设置为 true 时，如果消息中包含链接，企业微信客户端将不会自动预览链接的内容，而是直接显示链接地址。</span><br><span class="line">            disable_web_page_preview: true,</span><br><span class="line">        &#125;,</span><br><span class="line">        data,</span><br><span class="line">        response,</span><br><span class="line">        request = new CurlHttpRequest();</span><br><span class="line">        request.AddHeader(&#x27;Content-Type: application/json&#x27;);</span><br><span class="line">        data = JSON.stringify(params);</span><br><span class="line"></span><br><span class="line">        // 将推送信息写入zabbix日志中用于排错，第一个参数 4 表示日志级别Information，不存储webhook链接信息，避免泄露。</span><br><span class="line">        Zabbix.Log(4, &#x27;[WeCom Webhook] URL: Webhook  address&#x27;);</span><br><span class="line">        Zabbix.Log(4, &#x27;[WeCom Webhook] params: &#x27; + data);</span><br><span class="line">        // 推送告警消息</span><br><span class="line">        response = request.Post(WeCom.webhook_url, data);</span><br><span class="line">        Zabbix.Log(4, &#x27;[WeCom Webhook] HTTP code: &#x27; + request.Status());</span><br><span class="line">        Zabbix.Log(4, &#x27;[WeCom Webhook] response: &#x27; + response);</span><br><span class="line"></span><br><span class="line">        // 格式化返回的结果并做出判断，有异常则抛出异常。</span><br><span class="line">        try &#123;</span><br><span class="line">            response = JSON.parse(response);</span><br><span class="line">        &#125;</span><br><span class="line">        catch (error) &#123;</span><br><span class="line">            response = null;</span><br><span class="line">            Zabbix.Log(4, &#x27;[WeCom Webhook] response parse error&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if (request.Status() !== 200 ||  response.errcode !== 0 || response.errmsg !== &#x27;ok&#x27;) &#123;</span><br><span class="line">            if (typeof response.errmsg === &#x27;string&#x27;) &#123;</span><br><span class="line">                throw response.errmsg;</span><br><span class="line">            &#125;</span><br><span class="line">            else &#123;</span><br><span class="line">                throw &#x27;Unknown error. Check debug log for more information.&#x27;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">    var params = JSON.parse(value);</span><br><span class="line">    // 判断Webhook_url参数是否定义，未定义抛出错误。</span><br><span class="line">    if (typeof params.Webhook_url === &#x27;undefined&#x27;) &#123;</span><br><span class="line">        throw &#x27;Incorrect value is given for parameter &quot;Webhook_url&quot;: parameter is missing&#x27;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // 传参给WeCom</span><br><span class="line">    WeCom.webhook_url = params.Webhook_url;</span><br><span class="line">    WeCom.message = params.Subject + &#x27;\n&#x27; + params.Message;</span><br><span class="line">    // 执行消息推送函数</span><br><span class="line">    WeCom.sendMessage();</span><br><span class="line">    // 返回给zabbix，ok 在 Zabbix 动作中会被用来标识成功执行。</span><br><span class="line">    return &#x27;OK&#x27;;</span><br><span class="line">&#125;</span><br><span class="line">    // 遇到错误抛出错误信息。</span><br><span class="line">catch (error) &#123;</span><br><span class="line">    Zabbix.Log(4, &#x27;[WeCom Webhook] notification failed: &#x27; + error);</span><br><span class="line">    throw &#x27;Sending failed: &#x27; + error + &#x27;.&#x27;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="配置一般告警通知消息模板"><a href="#配置一般告警通知消息模板" class="headerlink" title="配置一般告警通知消息模板"></a>配置一般告警通知消息模板</h3><p>告警通知消息格式如下图所示：</p>
<p><img src="/images/1709109514-9aa0b415787c3962059aa3fb07456090.jpg" alt="图片"></p>
<p>告警可用变量请参照官方文档 <a href="https://www.zabbix.com/documentation/current/zh/manual/appendix/macros/supported_by_location">跳转</a></p>
<p><img src="/images/1709109514-31586a36090c2ed7c1fb7cc92e27cafa.jpg" alt="图片"></p>
<p>配置信息如下，标题为和关键信息加粗和上色（黄色）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># &lt;font color=&quot;warning&quot;&gt;【ZABBIX监控告警】&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&gt;通知时间：&lt;font color=&quot;comment&quot;&gt;&#123;DATE&#125;-&#123;TIME&#125;&lt;/font&gt;</span><br><span class="line">&gt;告警级别：**&lt;font color=&quot;warning&quot;&gt;&#123;TRIGGER.SEVERITY&#125;&lt;/font&gt;**</span><br><span class="line">&gt;主机名称：&lt;font color=&quot;comment&quot;&gt;&#123;HOST.NAME&#125;&lt;/font&gt;</span><br><span class="line">&gt;主机IP：&lt;font color=&quot;comment&quot;&gt;&#123;HOST.IP&#125;&lt;/font&gt;</span><br><span class="line">&gt;告警时间：**&lt;font color=&quot;warning&quot;&gt;&#123;EVENT.DATE&#125;-&#123;EVENT.TIME&#125;&lt;/font&gt;**</span><br><span class="line">&gt;问题名称：**&lt;font color=&quot;warning&quot;&gt;&#123;EVENT.NAME&#125;&lt;/font&gt;**</span><br><span class="line">&gt;问题详情：&lt;font color=&quot;comment&quot;&gt;&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;&lt;/font&gt;</span><br><span class="line">&gt;目前状态：**&lt;font color=&quot;warning&quot;&gt;&#123;TRIGGER.STATUS&#125;&lt;/font&gt;**</span><br><span class="line">&gt;操作数据：&lt;font color=&quot;comment&quot;&gt;&#123;EVENT.OPDATA&#125;&lt;/font&gt;</span><br><span class="line">&gt;告警持续时间：**&lt;font color=&quot;warning&quot;&gt;&#123;EVENT.DURATION&#125;&lt;/font&gt;**</span><br><span class="line">&gt;[确认告警和查看详情,请点击链接](http://http://x.x.x.x:8080/)</span><br></pre></td></tr></table></figure>

<p>企业微信webhook支持三种颜色，详情参考官方文档<a href="https://developer.work.weixin.qq.com/document">跳转</a></p>
<p><img src="/images/1709109514-14fc9e5390e43698338267c7a91e0070.jpg" alt="图片"></p>
<h3 id="配置一般告警恢复消息模板"><a href="#配置一般告警恢复消息模板" class="headerlink" title="配置一般告警恢复消息模板"></a>配置一般告警恢复消息模板</h3><p>告警消息恢复通知格式如下图所示：</p>
<p><img src="/images/1709109514-6a17e96b7dee9eb95a7cbf864fcd5003.jpg" alt="图片"></p>
<p>告警可用变量请参照官方文档 <a href="https://www.zabbix.com/documentation/current/zh/manual/appendix/macros/supported_by_location">跳转</a></p>
<p><img src="/images/1709109514-6084bed8a43010b5455b92e36f908967.jpg" alt="图片"></p>
<p>配置信息如下，标题为和关键信息加粗和上色（绿色）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># &lt;font color=&quot;info&quot;&gt;【ZABBIX告警恢复】&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&gt;通知时间：&lt;font color=&quot;comment&quot;&gt;&#123;DATE&#125;-&#123;TIME&#125;&lt;/font&gt;</span><br><span class="line">&gt;告警级别：**&lt;font color=&quot;info&quot;&gt;&#123;TRIGGER.SEVERITY&#125;&lt;/font&gt;**</span><br><span class="line">&gt;主机名称：&lt;font color=&quot;comment&quot;&gt;&#123;HOST.NAME&#125;&lt;/font&gt;</span><br><span class="line">&gt;主机IP：&lt;font color=&quot;comment&quot;&gt;&#123;HOST.IP&#125;&lt;/font&gt;</span><br><span class="line">&gt;告警时间：**&lt;font color=&quot;warning&quot;&gt;&#123;EVENT.DATE&#125;-&#123;EVENT.TIME&#125;&lt;/font&gt;**</span><br><span class="line">&gt;问题名称：**&lt;font color=&quot;info&quot;&gt;&#123;EVENT.NAME&#125;&lt;/font&gt;**</span><br><span class="line">&gt;问题详情：&lt;font color=&quot;comment&quot;&gt;&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;&lt;/font&gt;</span><br><span class="line">&gt;目前状态：**&lt;font color=&quot;info&quot;&gt;&#123;TRIGGER.STATUS&#125;&lt;/font&gt;**</span><br><span class="line">&gt;操作数据：&lt;font color=&quot;comment&quot;&gt;&#123;EVENT.OPDATA&#125;&lt;/font&gt;</span><br><span class="line">&gt;告警持续时间：**&lt;font color=&quot;info&quot;&gt;&#123;EVENT.DURATION&#125;&lt;/font&gt;**</span><br><span class="line">&gt;[确认告警和查看详情,请点击链接](http://x.x.x.x:8080/)</span><br></pre></td></tr></table></figure>

<p>点击添加，完成告警媒介添加。</p>
<p><img src="/images/1709109514-da26071b15125946a458ba89c1c08181.jpg" alt="图片"></p>
<h3 id="验证告警媒介"><a href="#验证告警媒介" class="headerlink" title="验证告警媒介"></a>验证告警媒介</h3><p><img src="/images/1709109514-79dc66f46f33873c84e8cfa0120cc354.jpg" alt="图片"></p>
<p>如下图所示标识脚本调用正常，出现异常情况可根据日志信息针对性解决。</p>
<p><img src="/images/1709109514-0c71e3354e38a3f131e5c2e1e655f02d.jpg" alt="图片"></p>
<p>会收到这样一条信息。</p>
<p><img src="/images/1709109514-86c9ffcd9414e9d8b3570e976fa61f9e.png" alt="图片"></p>
<h3 id="配置一般告警动作"><a href="#配置一般告警动作" class="headerlink" title="配置一般告警动作"></a>配置一般告警动作</h3><p>点击创建动作。</p>
<p><img src="/images/1709109514-07d1b8ad321c82f2128e471f68a42ebb.jpg" alt="图片"></p>
<p>定义名称和点击添加条件。</p>
<p><img src="/images/1709109514-e1c984329d45f9982191ed1872fe9bb2.jpg" alt="图片"></p>
<p>选择一般严重及以下等级告警。</p>
<p><img src="/images/1709109514-367dd7250e39305e456494773a317400.jpg" alt="图片"></p>
<p>验证配置。</p>
<p><img src="/images/1709109514-919f694fe00d032f1bfb66ee2c3565f9.jpg" alt="图片"></p>
<p>配置操作，发送到的用户组或用户至少要有设备的读取权限。</p>
<p><img src="/images/1709109514-db53b41c31983a7c6ea96de91a196505.jpg" alt="图片"></p>
<p>定义告警恢复操作。</p>
<p><img src="/images/1709109514-59301475e1deddbf473d6d5e01ffd2bf.jpg" alt="图片"></p>
<p>核对配置后点击添加。</p>
<p><img src="/images/1709109514-a7578c63bad4ce4366110c8068e2bfa8.jpg" alt="图片"></p>
<h3 id="配置用户一般告警媒介"><a href="#配置用户一般告警媒介" class="headerlink" title="配置用户一般告警媒介"></a>配置用户一般告警媒介</h3><p>进入Admin用户。</p>
<p><img src="/images/1709109514-c05f3eac9d29eb5a92479b76d8b3b9a7.jpg" alt="图片"></p>
<p>配置告警级别。</p>
<p><img src="/images/1709109514-3a0698d09af38aaf1261f6a6ab08b1d5.jpg" alt="图片"></p>
<p>核对信息，点击更新。</p>
<p><img src="/images/1709109514-c2208a258e7efb8a22456e93d4b91892.jpg" alt="图片"></p>
<h2 id="创建紧急告警媒介"><a href="#创建紧急告警媒介" class="headerlink" title="创建紧急告警媒介"></a>创建紧急告警媒介</h2><h3 id="配置紧急告警通知消息模板"><a href="#配置紧急告警通知消息模板" class="headerlink" title="配置紧急告警通知消息模板"></a>配置紧急告警通知消息模板</h3><p>将一般告警媒介克隆一份，替换Webhook的地址。</p>
<p><img src="/images/1709109514-334fa9c73baa1abbd532d95fb8fa3ed3.jpg" alt="图片"></p>
<p>修改名称和Webhook地址。</p>
<p><img src="/images/1709109514-235bfc2bab94a4675778202e4f9413c6.jpg" alt="图片"></p>
<p>修改告警消息模板，主题修改为ZABBIX监控紧急告警 ，问题和恢复都需要修改然后点击添加。</p>
<p><img src="/images/1709109514-fa31ddc5f7b8ede0407b5a7fdb7af593.jpg" alt="图片"></p>
<h3 id="配置紧急告警动作"><a href="#配置紧急告警动作" class="headerlink" title="配置紧急告警动作"></a>配置紧急告警动作</h3><p><img src="/images/1709109514-e20e1f02d5162ffa479907ee2c303f9d.jpg" alt="图片"></p>
<p>配置条件为严重及以上</p>
<p><img src="/images/1709109514-730fd2f110964437069830d0aef7305f.jpg" alt="图片"></p>
<p><img src="/images/1709109514-248d22728c18956425570cc506dce20b.jpg" alt="图片"></p>
<p>设置操作为紧急告警，告警周期缩短至每60秒一次</p>
<p><img src="/images/1709109514-e729d1f17bc9bd1bb0ece1f698e779b3.jpg" alt="图片"></p>
<p>设置恢复操作</p>
<p><img src="/images/1709109514-acc74193435cbeecd1d3c610d76fe1db.jpg" alt="图片"></p>
<p>核对后点击添加。</p>
<p><img src="/images/1709109514-3c409949f3b54b44801261412740c2d5.jpg" alt="图片"></p>
<p>区分普通和紧急告警。</p>
<p><img src="/images/1709109514-7f50525b0c812f8d2c60dc233f674e98.jpg" alt="图片"></p>
<h3 id="配置用户紧急告警媒介"><a href="#配置用户紧急告警媒介" class="headerlink" title="配置用户紧急告警媒介"></a>配置用户紧急告警媒介</h3><p><img src="/images/1709109514-49d2a471eb1312949b69299ecd5825d1.jpg" alt="图片"></p>
<p>核对配置后点击更新。</p>
<p><img src="/images/1709109514-3463d6ace4403b3d3e31a0d0c4583168.jpg" alt="图片"></p>
<p>至此Zabbix通过Webook告警配置完成。</p>
<p>其它IM平台修改一下Webhook地址应该就好了。</p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix通过API批量添加/删除主机</title>
    <url>/2024/03/01/Zabbix%E9%80%9A%E8%BF%87API%E6%89%B9%E9%87%8F%E6%B7%BB%E5%8A%A0-%E5%88%A0%E9%99%A4%E4%B8%BB%E6%9C%BA/</url>
    <content><![CDATA[<h1 id="场景："><a href="#场景：" class="headerlink" title="场景："></a><strong>场景：</strong></h1><p>公司业务变更，部分机器需要变更，下线重新调整相关的业务。</p>
<p>我们机器上有zabbix和prometheus监控，下线需要清空这些监控。</p>
<p>prometheus比较简单，可以直接使用consul自动注册。</p>
<p>zabbix 删除下线就很麻烦。一台就可以手动删除，但是上百台那，一个个手动吗，很麻烦的。</p>
<p>[<img src="/images/1709282302-5b016a99d868dfcb6efbfe7d224b3dd0.png">]</p>
<p> [<img src="/images/1709282302-91147db6051cba4dd1ebdbcfc9bb87e6.png">]</p>
<p>所以直接考虑zabbix的APi来批量删除主机</p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p><strong>代码放在下方</strong></p>
<p>代码使用的是python2.0的</p>
<p>因为我是纯内网环境需要先在外网部署好环境 ，然后打包使用的。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Python3虚拟环境创建</span><br><span class="line"></span><br><span class="line">/usr/local/python3/bin/python3.7 -m venv py3</span><br><span class="line"></span><br><span class="line">加载虚拟环境</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> py3/bin/activate</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">安装依赖</span><br><span class="line"></span><br><span class="line">pip install -r requirements.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">生成依赖</span><br><span class="line"></span><br><span class="line">pip freeze &gt; requirements.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">python2 虚拟环境</span><br><span class="line">1.安装virtualenv</span><br><span class="line"></span><br><span class="line">pip install virtualenv</span><br><span class="line"></span><br><span class="line">2.创建虚拟环境</span><br><span class="line"></span><br><span class="line">virtualenv 虚拟环境名称 </span><br><span class="line"></span><br><span class="line">3.激活虚拟环境</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> 虚拟环境目录/bin/activate  （./虚拟环境目录/bin/activate）</span><br><span class="line"></span><br><span class="line">4.退出虚拟环境</span><br><span class="line"></span><br><span class="line">deactivate</span><br></pre></td></tr></table></figure>

<p>我们采用python2.0创建虚拟环境</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line">[root<span class="variable">@zabbix</span> zabbix]<span class="comment"># virtualenv py2</span></span><br><span class="line"></span><br><span class="line">[root<span class="variable">@zabbix</span> zabbix]<span class="comment"># ls</span></span><br><span class="line">py2  zbx_tool.py</span><br><span class="line">[root<span class="variable">@zabbix</span> zabbix]<span class="comment"># source py2/</span></span><br><span class="line">bin/        .gitignore  <span class="keyword">include</span>/    lib/        lib64/      pyvenv.cfg  </span><br><span class="line">             python            wheel2            </span><br><span class="line">[root<span class="variable">@zabbix</span> zabbix]<span class="comment"># source py2/bin/activate</span></span><br><span class="line">(py2) [root<span class="variable">@zabbix</span> zabbix]<span class="comment"># ls</span></span><br><span class="line">py2  zbx_tool.py</span><br><span class="line">(py2) [root<span class="variable">@zabbix</span> zabbix]<span class="comment"># pip install argparse</span></span><br><span class="line">.........</span><br><span class="line">(py2) [root<span class="variable">@zabbix</span> zabbix]<span class="comment"># ls</span></span><br><span class="line">py2  zbx_tool.py</span><br><span class="line">(py2) [root<span class="variable">@zabbix</span> zabbix]<span class="comment"># python</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">打包 上传虚拟环境</span><br><span class="line">tar -zcvf zabbix.tar.gz zabbix</span><br></pre></td></tr></table></figure>

<p>上传内网环境进行解压，然后加载就可以使用虚拟环境</p>
 <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> py2/bin/activate</span><br></pre></td></tr></table></figure>

<h2 id="生产环境实战"><a href="#生产环境实战" class="headerlink" title="生产环境实战"></a>生产环境实战</h2><h3 id="删除单台主机"><a href="#删除单台主机" class="headerlink" title="删除单台主机"></a>删除单台主机</h3><p>[<img src="/images/1709282302-025168128dd28ca7b93aff605d0a85fb.png">]</p>
<h3 id="批量删除"><a href="#批量删除" class="headerlink" title="批量删除"></a>批量删除</h3><p>[<img src="/images/1709282302-3a3138885596170b0ba76905be2dd3db.png">]</p>
<h3 id="for循环删除"><a href="#for循环删除" class="headerlink" title="for循环删除"></a>for循环删除</h3><p>首先新建有一个文本，然后通过for 循环批量删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> `<span class="built_in">cat</span> zabbixip`;<span class="keyword">do</span> python zbx_tool.py --delete <span class="variable">$ip</span> ;<span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<p>[<img src="/images/1709282302-3e558386f6be7e49e2c444fa3948872e.png">]</p>
<p> <strong>开始</strong>[<img src="/images/1709282302-9c432aef97ebeab4e3645c112ba83b8c.png">]</p>
<p><strong>批量操作</strong></p>
<p> [<img src="/images/1709282302-7bf1e47c6db6e1ba7d774f59bca33f81.png">]</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a><strong>代码</strong></h2><p>集合脚本，包含查询主机，主机组，模板，添加开启禁用删除主机等功能</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#-*- coding: utf-8 -*-</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"> </span><br><span class="line"><span class="keyword">from</span> urllib2 <span class="keyword">import</span> URLError</span><br><span class="line"> </span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">class</span> <span class="title class_">zabbix_api</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.url = <span class="string">&#x27;http://zabbix.xxx.com/api_jsonrpc.php&#x27;</span></span><br><span class="line">        self.header = &#123;<span class="string">&quot;Content-Type&quot;</span>:<span class="string">&quot;application/json&quot;</span>&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">user_login</span>(<span class="params">self</span>):</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">                           <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;method&quot;</span>: <span class="string">&quot;user.login&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                                      <span class="string">&quot;user&quot;</span>: <span class="string">&quot;admin&quot;</span>,</span><br><span class="line">                                      <span class="string">&quot;password&quot;</span>: <span class="string">&quot;zabbix&quot;</span></span><br><span class="line">                                      &#125;,</span><br><span class="line">                           <span class="string">&quot;id&quot;</span>: <span class="number">0</span></span><br><span class="line">                           &#125;)</span><br><span class="line"> </span><br><span class="line">        request = urllib2.Request(self.url, data)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;\033[041m 认证失败，请检查URL !\033[0m&quot;</span>,e.code</span><br><span class="line">        <span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;\033[041m 认证失败，请检查用户名密码 !\033[0m&quot;</span>,e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="comment">#print response[&#x27;result&#x27;]</span></span><br><span class="line">            self.authID = response[<span class="string">&#x27;result&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> self.authID</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hostid_get_hostname</span>(<span class="params">self, hostId=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">            <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;host.get&quot;</span>,</span><br><span class="line">            <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">                <span class="string">&quot;filter&quot;</span>: &#123;<span class="string">&quot;hostid&quot;</span>: hostId&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">        request = urllib2.Request(self.url, data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;reason&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;We failed to reach a server.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Reason: &#x27;</span>, e.reason</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;code&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;The server could not fulfill the request.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Error code: &#x27;</span>, e.code</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            <span class="comment">#print response</span></span><br><span class="line">            result.close()</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;hostId is not exist&quot;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">#print &quot;主机数量: \33[31m%s\33[0m&quot; % (len(response[&#x27;result&#x27;]))</span></span><br><span class="line">            host_dict=<span class="built_in">dict</span>()</span><br><span class="line">            <span class="keyword">for</span> host <span class="keyword">in</span> response[<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                status = &#123;<span class="string">&quot;0&quot;</span>: <span class="string">&quot;OK&quot;</span>, <span class="string">&quot;1&quot;</span>: <span class="string">&quot;Disabled&quot;</span>&#125;</span><br><span class="line">                available = &#123;<span class="string">&quot;0&quot;</span>: <span class="string">&quot;Unknown&quot;</span>, <span class="string">&quot;1&quot;</span>: <span class="string">&quot;available&quot;</span>, <span class="string">&quot;2&quot;</span>: <span class="string">&quot;Unavailable&quot;</span>&#125;</span><br><span class="line">                <span class="comment">#if len(hostId) == 0:</span></span><br><span class="line">                <span class="comment">#    print &quot;HostID : %s\t HostName : %s\t Status :\33[32m%s\33[0m \t Available :\33[31m%s\33[0m&quot; % (</span></span><br><span class="line">                <span class="comment">#        host[&#x27;hostid&#x27;], host[&#x27;name&#x27;], status[host[&#x27;status&#x27;]], available[host[&#x27;available&#x27;]])</span></span><br><span class="line">                <span class="comment">#else:</span></span><br><span class="line">                <span class="comment">#    print &quot;HostID : %s\t HostName : %s\t Status :\33[32m%s\33[0m \t Available :\33[31m%s\33[0m&quot; % (</span></span><br><span class="line">                <span class="comment">#        host[&#x27;hostid&#x27;], host[&#x27;name&#x27;], status[host[&#x27;status&#x27;]], available[host[&#x27;available&#x27;]])</span></span><br><span class="line">                host_dict[<span class="string">&#x27;name&#x27;</span>]=host[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">                host_dict[<span class="string">&#x27;status&#x27;</span>]=status[host[<span class="string">&#x27;status&#x27;</span>]]</span><br><span class="line">                host_dict[<span class="string">&#x27;available&#x27;</span>]=available[host[<span class="string">&#x27;available&#x27;</span>]]</span><br><span class="line">                <span class="keyword">return</span> host_dict</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hostid_get_hostip</span>(<span class="params">self, hostId=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">            <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;hostinterface.get&quot;</span>,</span><br><span class="line">            <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">                <span class="string">&quot;filter&quot;</span>: &#123;<span class="string">&quot;hostid&quot;</span>: hostId&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">        request = urllib2.Request(self.url, data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;reason&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;We failed to reach a server.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Reason: &#x27;</span>, e.reason</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;code&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;The server could not fulfill the request.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Error code: &#x27;</span>, e.code</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            <span class="comment"># print response</span></span><br><span class="line">            result.close()</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;\033[041m hostid \033[0m is not exist&quot;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">            <span class="comment">#print &quot;主机数量: \33[31m%s\33[0m&quot; % (len(response[&#x27;result&#x27;]))</span></span><br><span class="line">            <span class="keyword">for</span> hostip <span class="keyword">in</span> response[<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                <span class="comment">#print hostip</span></span><br><span class="line">                <span class="comment">#if len(hostip) == 0:</span></span><br><span class="line">                <span class="comment">#    print &quot;HostID : %s\t HostIp : %s \t Port : %s &quot; % (hostip[&#x27;hostid&#x27;], hostip[&#x27;ip&#x27;], hostip[&#x27;port&#x27;])</span></span><br><span class="line">                <span class="comment">#else:</span></span><br><span class="line">                <span class="comment">#    print &quot;HostID : %s\t HostIp :\33[32m%s\33[0m \t Port :\33[31m%s\33[0m&quot; % (</span></span><br><span class="line">                <span class="comment">#        hostip[&#x27;hostid&#x27;], hostip[&#x27;ip&#x27;], hostip[&#x27;port&#x27;])</span></span><br><span class="line">                <span class="keyword">return</span> hostip[<span class="string">&#x27;ip&#x27;</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">host_get</span>(<span class="params">self,hostName=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        data=json.dumps(&#123;</span><br><span class="line">                <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;method&quot;</span>: <span class="string">&quot;host.get&quot;</span>,</span><br><span class="line">                <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                          <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">                          <span class="comment">#&quot;filter&quot;:&#123;&quot;host&quot;:&quot;&quot;&#125;</span></span><br><span class="line">                          <span class="string">&quot;filter&quot;</span>:&#123;<span class="string">&quot;host&quot;</span>:hostName&#125;</span><br><span class="line">                          &#125;,</span><br><span class="line">                <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">                &#125;)</span><br><span class="line">        request = urllib2.Request(self.url,data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;reason&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;We failed to reach a server.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Reason: &#x27;</span>, e.reason</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;code&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;The server could not fulfill the request.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Error code: &#x27;</span>, e.code</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            <span class="comment">#print reqponse</span></span><br><span class="line">            result.close()</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;\033[041m %s \033[0m is not exist&quot;</span> % hostName</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;主机数量: \033[31m%s\033[0m&quot;</span>%(<span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]))</span><br><span class="line">            <span class="keyword">for</span> host <span class="keyword">in</span> response[<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                status=&#123;<span class="string">&quot;0&quot;</span>:<span class="string">&quot;OK&quot;</span>,<span class="string">&quot;1&quot;</span>:<span class="string">&quot;Disabled&quot;</span>&#125;</span><br><span class="line">                available=&#123;<span class="string">&quot;0&quot;</span>:<span class="string">&quot;Unknown&quot;</span>,<span class="string">&quot;1&quot;</span>:<span class="string">&quot;available&quot;</span>,<span class="string">&quot;2&quot;</span>:<span class="string">&quot;Unavailable&quot;</span>&#125;</span><br><span class="line">                <span class="comment">#print host</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(hostName)==<span class="number">0</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;HostID : %s\t HostName : %s\t HostIp : %s\t Status :%s \t Available :%s&quot;</span>%(host[<span class="string">&#x27;hostid&#x27;</span>],host[<span class="string">&#x27;name&#x27;</span>],self.hostid_get_hostip(hostId=host[<span class="string">&#x27;hostid&#x27;</span>]),status[host[<span class="string">&#x27;status&#x27;</span>]],available[host[<span class="string">&#x27;available&#x27;</span>]])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;HostID : %s\t HostName : %s\t HostIp : %s\t Status :\033[32m%s\033[0m \t Available :\033[31m%s\033[0m&quot;</span>%(host[<span class="string">&#x27;hostid&#x27;</span>],host[<span class="string">&#x27;name&#x27;</span>],self.hostid_get_hostip(hostId=host[<span class="string">&#x27;hostid&#x27;</span>]),status[host[<span class="string">&#x27;status&#x27;</span>]],available[host[<span class="string">&#x27;available&#x27;</span>]])</span><br><span class="line">                    <span class="keyword">return</span> host[<span class="string">&#x27;hostid&#x27;</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hostip_get</span>(<span class="params">self, hostIp=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">            <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;hostinterface.get&quot;</span>,</span><br><span class="line">            <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">                <span class="string">&quot;filter&quot;</span>: &#123;<span class="string">&quot;ip&quot;</span>: hostIp&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">        request = urllib2.Request(self.url, data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;reason&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;We failed to reach a server.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Reason: &#x27;</span>, e.reason</span><br><span class="line">            <span class="keyword">elif</span> <span class="built_in">hasattr</span>(e, <span class="string">&#x27;code&#x27;</span>):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;The server could not fulfill the request.&#x27;</span></span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Error code: &#x27;</span>, e.code</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            <span class="comment"># print response</span></span><br><span class="line">            result.close()</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;\033[041m hostip \033[0m is not exist&quot;</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;主机数量: \33[31m%s\33[0m&quot;</span> % (<span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]))</span><br><span class="line">            <span class="keyword">for</span> hostip <span class="keyword">in</span> response[<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                host = self.hostid_get_hostname(hostip[<span class="string">&#x27;hostid&#x27;</span>])</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(hostip) == <span class="number">0</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;HostID : %s\t HostName : %s\t HostIp : %s\t Status :\33[32m%s\33[0m \t Available :\33[31m%s\33[0m&quot;</span>%(hostip[<span class="string">&#x27;hostid&#x27;</span>],host[<span class="string">&#x27;name&#x27;</span>],hostip[<span class="string">&#x27;ip&#x27;</span>],host[<span class="string">&#x27;status&#x27;</span>],host[<span class="string">&#x27;available&#x27;</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;HostID : %s\t HostName : %s\t HostIp : %s\t Status :\33[32m%s\33[0m \t Available :\33[31m%s\33[0m&quot;</span>%(hostip[<span class="string">&#x27;hostid&#x27;</span>],host[<span class="string">&#x27;name&#x27;</span>],hostip[<span class="string">&#x27;ip&#x27;</span>],host[<span class="string">&#x27;status&#x27;</span>],host[<span class="string">&#x27;available&#x27;</span>])</span><br><span class="line">                    <span class="keyword">return</span> hostip[<span class="string">&#x27;hostid&#x27;</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hostgroup_get</span>(<span class="params">self, hostgroupName=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">                           <span class="string">&quot;jsonrpc&quot;</span>:<span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;method&quot;</span>:<span class="string">&quot;hostgroup.get&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;params&quot;</span>:&#123;</span><br><span class="line">                                     <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">                                     <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">                                                <span class="string">&quot;name&quot;</span>: hostgroupName</span><br><span class="line">                                                &#125;</span><br><span class="line">                                     &#125;,</span><br><span class="line">                           <span class="string">&quot;auth&quot;</span>:self.user_login(),</span><br><span class="line">                           <span class="string">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line">                           &#125;)</span><br><span class="line"> </span><br><span class="line">        request = urllib2.Request(self.url,data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Error as &quot;</span>, e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># result.read()</span></span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="comment">#print response()</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;\033[041m %s \033[0m is not exist&quot;</span> % hostgroupName</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">for</span> group <span class="keyword">in</span> response[<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                <span class="keyword">if</span>  <span class="built_in">len</span>(hostgroupName)==<span class="number">0</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;hostgroup:  \033[31m%s\033[0m \tgroupid : %s&quot;</span> %(group[<span class="string">&#x27;name&#x27;</span>],group[<span class="string">&#x27;groupid&#x27;</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;hostgroup:  \033[31m%s\033[0m\tgroupid : %s&quot;</span> %(group[<span class="string">&#x27;name&#x27;</span>],group[<span class="string">&#x27;groupid&#x27;</span>])</span><br><span class="line">                    self.hostgroupID = group[<span class="string">&#x27;groupid&#x27;</span>]</span><br><span class="line">            <span class="keyword">return</span> group[<span class="string">&#x27;groupid&#x27;</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">template_get</span>(<span class="params">self,templateName=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">                           <span class="string">&quot;jsonrpc&quot;</span>:<span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;method&quot;</span>: <span class="string">&quot;template.get&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                                      <span class="string">&quot;output&quot;</span>: <span class="string">&quot;extend&quot;</span>,</span><br><span class="line">                                      <span class="string">&quot;filter&quot;</span>: &#123;</span><br><span class="line">                                                 <span class="string">&quot;name&quot;</span>:templateName</span><br><span class="line">                                                 &#125;</span><br><span class="line">                                      &#125;,</span><br><span class="line">                           <span class="string">&quot;auth&quot;</span>:self.user_login(),</span><br><span class="line">                           <span class="string">&quot;id&quot;</span>:<span class="number">1</span>,</span><br><span class="line">                           &#125;)</span><br><span class="line"> </span><br><span class="line">        request = urllib2.Request(self.url, data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Error as &quot;</span>, e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="comment">#print response</span></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> <span class="built_in">len</span>(response[<span class="string">&#x27;result&#x27;</span>]):</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;\033[041m %s \033[0m is not exist&quot;</span> % templateName</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">for</span> template <span class="keyword">in</span> response[<span class="string">&#x27;result&#x27;</span>]:</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(templateName)==<span class="number">0</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;template : %s \t id : %s&quot;</span> % (template[<span class="string">&#x27;name&#x27;</span>], template[<span class="string">&#x27;templateid&#x27;</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    self.templateID = response[<span class="string">&#x27;result&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;templateid&#x27;</span>]</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&quot;Template Name :%s&quot;</span>%templateName</span><br><span class="line">                    <span class="keyword">return</span> response[<span class="string">&#x27;result&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;templateid&#x27;</span>]</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">hostgroup_create</span>(<span class="params">self,hostgroupName</span>):</span><br><span class="line">        <span class="keyword">if</span> self.hostgroup_get(hostgroupName):</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;hostgroup  \033[42m%s\033[0m is exist !&quot;</span> % hostgroupName</span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">                          <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                          <span class="string">&quot;method&quot;</span>: <span class="string">&quot;hostgroup.create&quot;</span>,</span><br><span class="line">                          <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                          <span class="string">&quot;name&quot;</span>: hostgroupName</span><br><span class="line">                          &#125;,</span><br><span class="line">                          <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">                          <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">                          &#125;)</span><br><span class="line">        request=urllib2.Request(self.url,data)</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Error as &quot;</span>, e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;添加主机组:%s  hostgroupID : %s&quot;</span>%(hostgroupName,self.hostgroup_get(hostgroupName))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">host_create</span>(<span class="params">self, hostIp, hostgroupName, templateName, hostName</span>):</span><br><span class="line">        <span class="keyword">if</span> self.host_get(hostName) <span class="keyword">or</span> self.hostip_get(hostIp):</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;该主机已经添加!&quot;</span></span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line">        group_list=[]</span><br><span class="line">        template_list=[]</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> hostgroupName.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">            var = &#123;&#125;</span><br><span class="line">            var[<span class="string">&#x27;groupid&#x27;</span>] = self.hostgroup_get(i)</span><br><span class="line">            group_list.append(var)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> templateName.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">            var=&#123;&#125;</span><br><span class="line">            var[<span class="string">&#x27;templateid&#x27;</span>]=self.template_get(i)</span><br><span class="line">            template_list.append(var)</span><br><span class="line"> </span><br><span class="line">        data = json.dumps(&#123;</span><br><span class="line">                           <span class="string">&quot;jsonrpc&quot;</span>:<span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;method&quot;</span>:<span class="string">&quot;host.create&quot;</span>,</span><br><span class="line">                           <span class="string">&quot;params&quot;</span>:&#123;</span><br><span class="line">                                     <span class="string">&quot;host&quot;</span>: hostName,</span><br><span class="line">                                     <span class="string">&quot;interfaces&quot;</span>: [</span><br><span class="line">                                     &#123;</span><br><span class="line">                                     <span class="string">&quot;type&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                                     <span class="string">&quot;main&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                                     <span class="string">&quot;useip&quot;</span>: <span class="number">1</span>,</span><br><span class="line">                                     <span class="string">&quot;ip&quot;</span>: hostIp,</span><br><span class="line">                                     <span class="string">&quot;dns&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">                                     <span class="string">&quot;port&quot;</span>: <span class="string">&quot;10050&quot;</span></span><br><span class="line">                                      &#125;</span><br><span class="line">                                     ],</span><br><span class="line">                                   <span class="string">&quot;groups&quot;</span>: group_list,</span><br><span class="line">                                   <span class="string">&quot;templates&quot;</span>: template_list,</span><br><span class="line">                                     &#125;,</span><br><span class="line">                           <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">                           <span class="string">&quot;id&quot;</span>:<span class="number">1</span></span><br><span class="line">        &#125;)</span><br><span class="line">        request = urllib2.Request(self.url, data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;add host : %s id :%s&quot;</span> % (hostIp, hostName)</span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Error as &quot;</span>, e</span><br><span class="line">        <span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;\033[041m 主机添加有误，请检查模板正确性或主机是否添加重复 !\033[0m&quot;</span>,e</span><br><span class="line">            <span class="built_in">print</span> response</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">host_disable</span>(<span class="params">self,hostip</span>):</span><br><span class="line">        data=json.dumps(&#123;</span><br><span class="line">                <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;method&quot;</span>: <span class="string">&quot;host.update&quot;</span>,</span><br><span class="line">                <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">                <span class="string">&quot;hostid&quot;</span>: self.host_get(hostip),</span><br><span class="line">                <span class="string">&quot;status&quot;</span>: <span class="number">1</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">                &#125;)</span><br><span class="line">        request = urllib2.Request(self.url,data)</span><br><span class="line">        <span class="comment">#opener = urllib2.build_opener(urllib2.HTTPBasicAuthHandler(TerminalPassword()))</span></span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">                request.add_header(key, self.header[key])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">            <span class="comment">#result = opener.open(request)</span></span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Error as &quot;</span>, e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;------------主机现在状态------------&#x27;</span></span><br><span class="line">            <span class="built_in">print</span> self.host_get(hostip)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">host_enable</span>(<span class="params">self,hostip</span>):</span><br><span class="line">        data=json.dumps(&#123;</span><br><span class="line">            <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;method&quot;</span>: <span class="string">&quot;host.update&quot;</span>,</span><br><span class="line">            <span class="string">&quot;params&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;hostid&quot;</span>: self.host_get(hostip),</span><br><span class="line">            <span class="string">&quot;status&quot;</span>: <span class="number">0</span></span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">            <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">            &#125;)</span><br><span class="line">        request = urllib2.Request(self.url,data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">            <span class="comment">#result = opener.open(request)</span></span><br><span class="line">        <span class="keyword">except</span> URLError <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Error as &quot;</span>, e</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            response = json.loads(result.read())</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;------------主机现在状态------------&#x27;</span></span><br><span class="line">            <span class="built_in">print</span> self.host_get(hostip)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">host_delete</span>(<span class="params">self,hostNames</span>):</span><br><span class="line">        hostid_list=[]</span><br><span class="line">        <span class="keyword">for</span> hostName <span class="keyword">in</span> hostNames.split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">            hostid = self.host_get(hostName=hostName)</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> hostid:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;主机 \033[041m %s\033[0m  删除失败 !&quot;</span> % hostName</span><br><span class="line">                sys.exit()</span><br><span class="line">            hostid_list.append(hostid)</span><br><span class="line"> </span><br><span class="line">        data=json.dumps(&#123;</span><br><span class="line">                <span class="string">&quot;jsonrpc&quot;</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">                <span class="string">&quot;method&quot;</span>: <span class="string">&quot;host.delete&quot;</span>,</span><br><span class="line">                <span class="string">&quot;params&quot;</span>: hostid_list,</span><br><span class="line">                <span class="string">&quot;auth&quot;</span>: self.user_login(),</span><br><span class="line">                <span class="string">&quot;id&quot;</span>: <span class="number">1</span></span><br><span class="line">                &#125;)</span><br><span class="line"> </span><br><span class="line">        request = urllib2.Request(self.url,data)</span><br><span class="line">        <span class="keyword">for</span> key <span class="keyword">in</span> self.header:</span><br><span class="line">            request.add_header(key, self.header[key])</span><br><span class="line"> </span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            result = urllib2.urlopen(request)</span><br><span class="line">            result.close()</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;主机 \033[041m %s\033[0m  已经删除 !&quot;</span> % hostName</span><br><span class="line">        <span class="keyword">except</span> Exception,e:</span><br><span class="line">            <span class="built_in">print</span>  e</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    zabbix=zabbix_api()</span><br><span class="line">    parser=argparse.ArgumentParser(description=<span class="string">&#x27;zabbix api &#x27;</span>,usage=<span class="string">&#x27;%(prog)s [options]&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-H&#x27;</span>,<span class="string">&#x27;--host&#x27;</span>,nargs=<span class="string">&#x27;?&#x27;</span>,dest=<span class="string">&#x27;listhost&#x27;</span>,default=<span class="string">&#x27;host&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;查询主机&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-G&#x27;</span>,<span class="string">&#x27;--group&#x27;</span>,nargs=<span class="string">&#x27;?&#x27;</span>,dest=<span class="string">&#x27;listgroup&#x27;</span>,default=<span class="string">&#x27;group&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;查询主机组&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-T&#x27;</span>,<span class="string">&#x27;--template&#x27;</span>,nargs=<span class="string">&#x27;?&#x27;</span>,dest=<span class="string">&#x27;listtemp&#x27;</span>,default=<span class="string">&#x27;template&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;查询模板信息&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-A&#x27;</span>,<span class="string">&#x27;--add-group&#x27;</span>,nargs=<span class="number">1</span>,dest=<span class="string">&#x27;addgroup&#x27;</span>,<span class="built_in">help</span>=<span class="string">&#x27;添加主机组&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-C&#x27;</span>,<span class="string">&#x27;--add-host&#x27;</span>,dest=<span class="string">&#x27;addhost&#x27;</span>,nargs=<span class="number">4</span>,metavar=(<span class="string">&#x27;192.168.2.1&#x27;</span>, <span class="string">&#x27;groupname&#x27;</span>, <span class="string">&#x27;Template01,Template02&#x27;</span>, <span class="string">&#x27;hostName&#x27;</span>),<span class="built_in">help</span>=<span class="string">&#x27;添加主机,多个主机组或模板使用逗号&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-d&#x27;</span>,<span class="string">&#x27;--disable&#x27;</span>,dest=<span class="string">&#x27;disablehost&#x27;</span>,nargs=<span class="string">&#x27;+&#x27;</span>,metavar=(<span class="string">&#x27;sh-aa-01&#x27;</span>),<span class="built_in">help</span>=<span class="string">&#x27;禁用主机,填写主机名，多个主机名之间用逗号&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-e&#x27;</span>,<span class="string">&#x27;--enable&#x27;</span>,dest=<span class="string">&#x27;enablehost&#x27;</span>,nargs=<span class="number">1</span>,metavar=(<span class="string">&#x27;sh-aa-01&#x27;</span>),<span class="built_in">help</span>=<span class="string">&#x27;开启主机&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-D&#x27;</span>,<span class="string">&#x27;--delete&#x27;</span>,dest=<span class="string">&#x27;deletehost&#x27;</span>,nargs=<span class="string">&#x27;+&#x27;</span>,metavar=(<span class="string">&#x27;sh-aa-01&#x27;</span>),<span class="built_in">help</span>=<span class="string">&#x27;删除主机,多个主机之间用逗号&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-v&#x27;</span>,<span class="string">&#x27;--version&#x27;</span>, action=<span class="string">&#x27;version&#x27;</span>, version=<span class="string">&#x27;%(prog)s 1.0&#x27;</span>)</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) == <span class="number">1</span>:</span><br><span class="line">        <span class="comment">#print parser.print_help()</span></span><br><span class="line">        <span class="comment">#print zabbix.host_get(hostName=&#x27;bbb&#x27;)</span></span><br><span class="line">        <span class="comment">#print zabbix.hostip_get(hostIp=&#x27;127.0.0.1&#x27;)</span></span><br><span class="line">        <span class="comment">#print zabbix.hostid_get_hostname(hostId=&#x27;10108&#x27;)</span></span><br><span class="line">        <span class="comment">#print zabbix.hostid_get_hostid(hostId=&#x27;10105&#x27;)</span></span><br><span class="line">        <span class="comment">#print zabbix.hostgroup_get(hostgroupName=&#x27;Linux servers&#x27;)</span></span><br><span class="line">        <span class="comment">#print zabbix.hostgroup_get(hostgroupName=&#x27;aaa&#x27;)</span></span><br><span class="line">        <span class="comment"># ...</span></span><br><span class="line">        <span class="built_in">print</span> zabbix.host_delete(<span class="string">&#x27;hz-aaa-02&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        args = parser.parse_args()</span><br><span class="line">        <span class="keyword">if</span> args.listhost != <span class="string">&#x27;host&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> args.listhost:</span><br><span class="line">                zabbix.host_get(args.listhost)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                zabbix.host_get()</span><br><span class="line">        <span class="keyword">if</span> args.listgroup != <span class="string">&#x27;group&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> args.listgroup:</span><br><span class="line">                zabbix.hostgroup_get(args.listgroup)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                zabbix.hostgroup_get()</span><br><span class="line">        <span class="keyword">if</span> args.listtemp != <span class="string">&#x27;template&#x27;</span>:</span><br><span class="line">            <span class="keyword">if</span> args.listtemp:</span><br><span class="line">                zabbix.template_get(args.listtemp)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                zabbix.template_get()</span><br><span class="line">        <span class="keyword">if</span> args.addgroup:</span><br><span class="line">            zabbix.hostgroup_create(args.addgroup[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">if</span> args.addhost:</span><br><span class="line">            zabbix.host_create(args.addhost[<span class="number">0</span>], args.addhost[<span class="number">1</span>], args.addhost[<span class="number">2</span>], args.addhost[<span class="number">3</span>])</span><br><span class="line">        <span class="keyword">if</span> args.disablehost:</span><br><span class="line">            zabbix.host_disable(args.disablehost)</span><br><span class="line">        <span class="keyword">if</span> args.deletehost:</span><br><span class="line">            zabbix.host_delete(args.deletehost[<span class="number">0</span>])</span><br></pre></td></tr></table></figure>

<h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a><strong>用法</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&gt; python zbx_tool.py -h</span><br><span class="line">usage: zbx_tool.py [options]</span><br><span class="line"> </span><br><span class="line">zabbix api</span><br><span class="line"> </span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --<span class="built_in">help</span>            show this <span class="built_in">help</span> message and <span class="built_in">exit</span></span><br><span class="line">  -H [LISTHOST], --host [LISTHOST]</span><br><span class="line">                        查询主机</span><br><span class="line">  -G [LISTGROUP], --group [LISTGROUP]</span><br><span class="line">                        查询主机组</span><br><span class="line">  -T [LISTTEMP], --template [LISTTEMP]</span><br><span class="line">                        查询模板信息</span><br><span class="line">  -A ADDGROUP, --add-group ADDGROUP</span><br><span class="line">                        添加主机组</span><br><span class="line">  -C 192.168.2.1 groupname Template01,Template02 hostName, --add-host 192.168.2.1 groupname Template01,Template02 hostName</span><br><span class="line">                        添加主机,多个主机组或模板使用逗号</span><br><span class="line">  -d sh-aa-01 [sh-aa-01 ...], --<span class="built_in">disable</span> sh-aa-01 [sh-aa-01 ...]</span><br><span class="line">                        禁用主机,填写主机名，多个主机名之间</span><br><span class="line">                        ¨逗号</span><br><span class="line">  -e sh-aa-01, --<span class="built_in">enable</span> sh-aa-01</span><br><span class="line">                        开启主机</span><br><span class="line">  -D sh-aa-01 [sh-aa-01 ...], --delete sh-aa-01 [sh-aa-01 ...]</span><br><span class="line">                        删除主机,多个主机之间用逗号</span><br><span class="line">  -v, --version         show program<span class="string">&#x27;s version number and exit</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux主机安全检测脚本和初始化脚本</title>
    <url>/2024/03/04/Linux%E4%B8%BB%E6%9C%BA%E5%AE%89%E5%85%A8%E6%A3%80%E6%B5%8B%E8%84%9A%E6%9C%AC%E5%92%8C%E5%88%9D%E5%A7%8B%E5%8C%96%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<h4 id="一-主机安全检查脚本"><a href="#一-主机安全检查脚本" class="headerlink" title="[一] 主机安全检查脚本"></a>[一] 主机安全检查脚本</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>bash</span><br><span class="line">##<span class="title class_">Filename</span>:     <span class="title class_">CentOS</span>_Check_Script.<span class="property">sh</span></span><br><span class="line">##<span class="title class_">Description</span>:  <span class="title class_">Security</span> detection script</span><br><span class="line"></span><br><span class="line">echo <span class="string">&quot;##########################################################################&quot;</span></span><br><span class="line">echo <span class="string">&quot;#                                                                        #&quot;</span></span><br><span class="line">echo <span class="string">&quot;#                         health check script                            #&quot;</span></span><br><span class="line">echo <span class="string">&quot;#                                                                        #&quot;</span></span><br><span class="line">echo <span class="string">&quot;#警告:本脚本只是一个检查的操作,未对服务器做任何修改,管理员可以根据此报告 #&quot;</span></span><br><span class="line">echo <span class="string">&quot;#进行相应的安全整改                                                      #&quot;</span></span><br><span class="line">echo <span class="string">&quot;##########################################################################&quot;</span></span><br><span class="line">echo <span class="string">&quot; &quot;</span></span><br><span class="line">#read -p <span class="string">&quot;=====================Are You Ready,Please press enter==================&quot;</span></span><br><span class="line">echo <span class="string">&quot; &quot;</span></span><br><span class="line">echo <span class="string">&quot;##########################################################################&quot;</span></span><br><span class="line">echo <span class="string">&quot;#                                                                        #&quot;</span></span><br><span class="line">echo <span class="string">&quot;#                               主机安全检测                             #&quot;</span></span><br><span class="line">echo <span class="string">&quot;#                                                                        #&quot;</span></span><br><span class="line">echo <span class="string">&quot;##########################################################################&quot;</span></span><br><span class="line">echo <span class="string">&quot; &quot;</span></span><br><span class="line">echo <span class="string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;系统基本信息&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span></span><br><span class="line">hostname=$(uname -n)</span><br><span class="line">system=$(cat /etc/os-release | grep <span class="string">&quot;^NAME&quot;</span> | awk -F\<span class="string">&quot; &#x27;&#123;print $2&#125;&#x27;)</span></span><br><span class="line"><span class="string">version=$(cat /etc/redhat-release | awk &#x27;&#123;print $4$5&#125;&#x27;)</span></span><br><span class="line"><span class="string">kernel=$(uname -r)</span></span><br><span class="line"><span class="string">platform=$(uname -p)</span></span><br><span class="line"><span class="string">address=$(ip addr | grep inet | grep -v &quot;</span>inet6<span class="string">&quot; | grep -v &quot;</span><span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">&quot; | awk &#x27;&#123; print $2; &#125;&#x27; | tr &#x27;\n&#x27; &#x27;\t&#x27; )</span></span><br><span class="line"><span class="string">cpumodel=$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq)</span></span><br><span class="line"><span class="string">cpu=$(cat /proc/cpuinfo | grep &#x27;processor&#x27; | sort | uniq | wc -l)</span></span><br><span class="line"><span class="string">machinemodel=$(dmidecode | grep &quot;</span><span class="title class_">Product</span> <span class="title class_">Name</span><span class="string">&quot; | sed &#x27;s/^[ \t]*//g&#x27; | tr &#x27;\n&#x27; &#x27;\t&#x27; )</span></span><br><span class="line"><span class="string">date=$(date)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;</span>主机名:           $hostname<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统名称:         $system<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统版本:         $version<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>内核版本:         $kernel<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统类型:         $platform<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>本机<span class="variable constant_">IP</span>地址:       $address<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="variable constant_">CPU</span>型号:          $cpumodel<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span><span class="variable constant_">CPU</span>核数:          $cpu<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>机器型号:         $machinemodel<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统时间:         $date<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;资源使用情况&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">summemory=$(free -h |grep &quot;</span><span class="title class_">Mem</span>:<span class="string">&quot; | awk &#x27;&#123;print $2&#125;&#x27;)</span></span><br><span class="line"><span class="string">freememory=$(free -h |grep &quot;</span><span class="title class_">Mem</span>:<span class="string">&quot; | awk &#x27;&#123;print $4&#125;&#x27;)</span></span><br><span class="line"><span class="string">usagememory=$(free -h |grep &quot;</span><span class="title class_">Mem</span>:<span class="string">&quot; | awk &#x27;&#123;print $3&#125;&#x27;)</span></span><br><span class="line"><span class="string">uptime=$(uptime | awk &#x27;&#123;print $2&quot;</span> <span class="string">&quot;$3&quot;</span> <span class="string">&quot;$4&quot;</span> <span class="string">&quot;$5&#125;&#x27; | sed &#x27;s/,$//g&#x27;)</span></span><br><span class="line"><span class="string">loadavg=$(uptime | awk &#x27;&#123;print $9&quot;</span> <span class="string">&quot;$10&quot;</span> <span class="string">&quot;$11&quot;</span> <span class="string">&quot;$12&quot;</span> <span class="string">&quot;$13&#125;&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">echo &quot;</span>总内存大小:           $summemory<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>已使用内存大小:       $usagememory<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>可使用内存大小:       $freememory<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统运行时间:         $uptime<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统负载:             $loadavg<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>内存状态:<span class="string">&quot;</span></span><br><span class="line"><span class="string">vmstat 2 5</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>僵尸进程:<span class="string">&quot;</span></span><br><span class="line"><span class="string">ps -ef | grep zombie | grep -v grep</span></span><br><span class="line"><span class="string">if [ $? == 1 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;无僵尸进程<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;有僵尸进程------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>耗<span class="variable constant_">CPU</span>最多的进程:<span class="string">&quot;</span></span><br><span class="line"><span class="string">ps auxf |sort -nr -k 3 |head -5</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>耗内存最多的进程:<span class="string">&quot;</span></span><br><span class="line"><span class="string">ps auxf |sort -nr -k 4 |head -5</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>环境变量:<span class="string">&quot;</span></span><br><span class="line"><span class="string">env</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>路由表:<span class="string">&quot;</span></span><br><span class="line"><span class="string">route -n</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>监听端口:<span class="string">&quot;</span></span><br><span class="line"><span class="string">netstat -tunlp</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>当前建立的连接:<span class="string">&quot;</span></span><br><span class="line"><span class="string">netstat -n | awk &#x27;/^tcp/ &#123;++S[$NF]&#125; END &#123;for(a in S) print a, S[a]&#125;&#x27;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>开机启动的服务:<span class="string">&quot;</span></span><br><span class="line"><span class="string">systemctl list-unit-files | grep enabled</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;系统用户情况&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>活动用户:<span class="string">&quot;</span></span><br><span class="line"><span class="string">w | tail -n +2</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>系统所有用户:<span class="string">&quot;</span></span><br><span class="line"><span class="string">cut -d: -f1,2,3,4 /etc/passwd</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>系统所有组:<span class="string">&quot;</span></span><br><span class="line"><span class="string">cut -d: -f1,2,3 /etc/group</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>当前用户的计划任务:<span class="string">&quot;</span></span><br><span class="line"><span class="string">crontab -l</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;身份鉴别安全&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">grep -i &quot;</span>^password.*requisite.*pam_cracklib.<span class="property">so</span><span class="string">&quot; /etc/pam.d/system-auth  &gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;密码复杂度:已设置<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    grep -i &quot;</span>pam_pwquality\.<span class="property">so</span><span class="string">&quot; /etc/pam.d/system-auth &gt; /dev/null</span></span><br><span class="line"><span class="string">    if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">	echo &quot;</span>&gt;&gt;&gt;密码复杂度:已设置<span class="string">&quot;</span></span><br><span class="line"><span class="string">    else</span></span><br><span class="line"><span class="string">	echo &quot;</span>&gt;&gt;&gt;密码复杂度:未设置,请加固密码--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">    fi</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">awk -F&quot;</span>:<span class="string">&quot; &#x27;&#123;if($2!~/^!|^*/)&#123;print &quot;</span>&gt;&gt;&gt;(<span class="string">&quot;$1&quot;</span>)<span class="string">&quot; &quot;</span> 是一个未被锁定的账户,请管理员检查是否是可疑账户--------[需调整]<span class="string">&quot;&#125;&#125;&#x27; /etc/shadow</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">more /etc/login.defs | grep -E &quot;</span><span class="variable constant_">PASS_MAX_DAYS</span><span class="string">&quot; | grep -v &quot;</span>#<span class="string">&quot; |awk -F&#x27; &#x27;  &#x27;&#123;if($2!=90)&#123;print &quot;</span>&gt;&gt;&gt;密码过期天数是<span class="string">&quot;$2&quot;</span>天,请管理员改成<span class="number">90</span>天------[需调整]<span class="string">&quot;&#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">grep -i &quot;</span>^auth.*required.*pam_tally2.<span class="property">so</span>.*$<span class="string">&quot; /etc/pam.d/sshd  &gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;登入失败处理:已开启<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;登入失败处理:未开启,请加固登入失败锁定功能----------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;访问控制安全&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统中存在以下非系统默认用户:<span class="string">&quot;</span></span><br><span class="line"><span class="string">more /etc/passwd |awk -F &quot;</span>:<span class="string">&quot; &#x27;&#123;if($3&gt;500)&#123;print &quot;</span>&gt;&gt;&gt;<span class="regexp">/etc/</span>passwd里面的<span class="string">&quot;$1 &quot;</span>的<span class="variable constant_">UID</span>为<span class="string">&quot;$3&quot;</span>，该账户非系统默认账户，请管理员确认是否为可疑账户--------[需调整]<span class="string">&quot;&#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统特权用户:<span class="string">&quot;</span></span><br><span class="line"><span class="string">awk -F: &#x27;$3==0 &#123;print $1&#125;&#x27; /etc/passwd</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统中空口令账户:<span class="string">&quot;</span></span><br><span class="line"><span class="string">awk -F: &#x27;($2==&quot;</span>!!<span class="string">&quot;) &#123;print $1&quot;</span>该账户为空口令账户，请管理员确认是否为新增账户，如果为新建账户，请配置密码-------[需调整]<span class="string">&quot;&#125;&#x27; /etc/shadow</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;安全审计&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>正常情况下登录到本机<span class="number">30</span>天内的所有用户的历史记录:<span class="string">&quot;</span></span><br><span class="line"><span class="string">last | head -n 30</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>查看syslog日志审计服务是否开启:<span class="string">&quot;</span></span><br><span class="line"><span class="string">if service rsyslog status | egrep &quot;</span> active \(running<span class="string">&quot;;then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;经分析,syslog服务已开启<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;经分析,syslog服务未开启，建议通过service rsyslog start开启日志审计功能---------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>查看syslog日志是否开启外发:<span class="string">&quot;</span></span><br><span class="line"><span class="string">if more /etc/rsyslog.conf | egrep &quot;</span>@...\.|@..\.|@.\.|\*.\* @...\.|\*\.\* @..\.|\*\.\* @.\.<span class="string">&quot;;then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;经分析,客户端syslog日志已开启外发--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;经分析,客户端syslog日志未开启外发---------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>审计的要素和审计日志:<span class="string">&quot;</span></span><br><span class="line"><span class="string">more /etc/rsyslog.conf  | grep -v &quot;</span>^[$|#]<span class="string">&quot; | grep -v &quot;</span>^$<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统中关键文件修改时间:<span class="string">&quot;</span></span><br><span class="line"><span class="string">ls -ltr /bin/ls /bin/login /etc/passwd  /bin/ps /etc/shadow|awk &#x27;&#123;print &quot;</span>&gt;&gt;&gt;文件名：<span class="string">&quot;$9&quot;</span>  <span class="string">&quot;&quot;</span>最后修改时间：<span class="string">&quot;$6&quot;</span> <span class="string">&quot;$7&quot;</span> <span class="string">&quot;$8&#125;&#x27;</span></span><br><span class="line"><span class="string">echo &quot;</span></span><br><span class="line">###############################################################################################</span><br><span class="line">#   ls文件:是存储ls命令的功能函数,被删除以后,就无法执行ls命令                                 #</span><br><span class="line">#   login文件:login是控制用户登录的文件,一旦被篡改或删除,系统将无法切换用户或登陆用户         #</span><br><span class="line">#   /etc/passwd是一个文件,主要是保存用户信息                                                  #</span><br><span class="line">#   /bin/ps 进程查看命令功能支持文件,文件损坏或被更改后,无法正常使用ps命令                    #</span><br><span class="line">#   /etc/shadow是/etc/passwd的影子文件,密码存放在该文件当中,并且只有root用户可读              #</span><br><span class="line">###############################################################################################<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>检查重要日志文件是否存在:<span class="string">&quot;</span></span><br><span class="line"><span class="string">log_secure=/var/log/secure</span></span><br><span class="line"><span class="string">log_messages=/var/log/messages</span></span><br><span class="line"><span class="string">log_cron=/var/log/cron</span></span><br><span class="line"><span class="string">log_boot=/var/log/boot.log</span></span><br><span class="line"><span class="string">log_dmesg=/var/log/dmesg</span></span><br><span class="line"><span class="string">if [ -e &quot;</span>$log_secure<span class="string">&quot; ]; then</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/secure日志文件存在<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/secure日志文件不存在------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ -e &quot;</span>$log_messages<span class="string">&quot; ]; then</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/messages日志文件存在<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/messages日志文件不存在------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ -e &quot;</span>$log_cron<span class="string">&quot; ]; then</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/cron日志文件存在<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/cron日志文件不存在--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ -e &quot;</span>$log_boot<span class="string">&quot; ]; then</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/boot.<span class="property">log</span>日志文件存在<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/boot.<span class="property">log</span>日志文件不存在--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">if [ -e &quot;</span>$log_dmesg<span class="string">&quot; ]; then</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/dmesg日志文件存在<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo  &quot;</span>&gt;&gt;&gt;<span class="regexp">/var/</span>log/dmesg日志文件不存在--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;剩余信息保护&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>分区情况:<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>如果磁盘空间利用率过高，请及时调整---------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">df -h</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>可用块设备信息:<span class="string">&quot;</span></span><br><span class="line"><span class="string">lsblk</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>文件系统信息:<span class="string">&quot;</span></span><br><span class="line"><span class="string">more /etc/fstab  | grep -v &quot;</span>^#<span class="string">&quot; | grep -v &quot;</span>^$<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;入侵防范安全&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>系统入侵行为:<span class="string">&quot;</span></span><br><span class="line"><span class="string">more /var/log/secure |grep refused</span></span><br><span class="line"><span class="string">if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>有入侵行为，请分析处理--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;无入侵行为<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>用户错误登入列表:<span class="string">&quot;</span></span><br><span class="line"><span class="string">lastb | head &gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? == 1 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;无用户错误登入列表<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;用户错误登入--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">    lastb | head </span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>ssh暴力登入信息:<span class="string">&quot;</span></span><br><span class="line"><span class="string">more /var/log/secure | grep  &quot;</span><span class="title class_">Failed</span><span class="string">&quot; &gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? == 1 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;无ssh暴力登入信息<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    more /var/log/secure|awk &#x27;/Failed/&#123;print $(NF-3)&#125;&#x27;|sort|uniq -c|awk &#x27;&#123;print &quot;</span>&gt;&gt;&gt;登入失败的<span class="variable constant_">IP</span>和尝试次数: <span class="string">&quot;$2&quot;</span>=<span class="string">&quot;$1&quot;</span>次---------[需调整]<span class="string">&quot;;&#125;&#x27;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;恶意代码防范&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>检查是否安装病毒软件:<span class="string">&quot;</span></span><br><span class="line"><span class="string">crontab -l | grep clamscan.sh &gt; /dev/null</span></span><br><span class="line"><span class="string">if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;已安装<span class="title class_">ClamAV</span>杀毒软件<span class="string">&quot;</span></span><br><span class="line"><span class="string">  crontab -l | grep freshclam.sh &gt; /dev/null</span></span><br><span class="line"><span class="string">  if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;已部署定时更新病毒库<span class="string">&quot;</span></span><br><span class="line"><span class="string">  fi</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;未安装<span class="title class_">ClamAV</span>杀毒软件,请部署杀毒软件加固主机防护--------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span> <span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;资源控制安全&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>查看是否开启了xinetd服务:<span class="string">&quot;</span></span><br><span class="line"><span class="string">if ps -elf |grep xinet |grep -v &quot;</span>grep xinet<span class="string">&quot;;then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;xinetd服务正在运行，请检查是否可以把xinetd服务关闭--------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;xinetd服务未开启-------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>查看是否开启了ssh服务:<span class="string">&quot;</span></span><br><span class="line"><span class="string">if service sshd status | grep -E &quot;</span>listening on|active \(running\)<span class="string">&quot;; then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;<span class="variable constant_">SSH</span>服务已开启<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;<span class="variable constant_">SSH</span>服务未开启--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>查看是否开启了<span class="title class_">Telnet</span>-<span class="title class_">Server</span>服务:<span class="string">&quot;</span></span><br><span class="line"><span class="string">if more /etc/xinetd.d/telnetd 2&gt;&amp;1|grep -E &quot;</span>disable=no<span class="string">&quot;; then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;<span class="title class_">Telnet</span>-<span class="title class_">Server</span>服务已开启<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;<span class="title class_">Telnet</span>-<span class="title class_">Server</span>服务未开启--------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">ps axu | grep iptables | grep -v grep || ps axu | grep firewalld | grep -v grep </span></span><br><span class="line"><span class="string">if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;防火墙已启用<span class="string">&quot;</span></span><br><span class="line"><span class="string">iptables -nvL --line-numbers</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;防火墙未启用--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo  &quot;</span>查看系统<span class="variable constant_">SSH</span>远程访问设置策略(host.<span class="property">deny</span>拒绝列表):<span class="string">&quot;</span></span><br><span class="line"><span class="string">if more /etc/hosts.deny | grep -E &quot;</span>sshd<span class="string">&quot;; then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;远程访问策略已设置--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;远程访问策略未设置--------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>查看系统<span class="variable constant_">SSH</span>远程访问设置策略(hosts.<span class="property">allow</span>允许列表):<span class="string">&quot;</span></span><br><span class="line"><span class="string">if more /etc/hosts.allow | grep -E &quot;</span>sshd<span class="string">&quot;; then</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;远程访问策略已设置--------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">  echo &quot;</span>&gt;&gt;&gt;远程访问策略未设置--------[无需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>当hosts.<span class="property">allow</span>和host.<span class="property">deny</span>相冲突时,以hosts.<span class="property">allow</span>设置为准<span class="string">&quot;</span></span><br><span class="line"><span class="string">echo &quot;</span>=============================dividing line================================<span class="string">&quot;</span></span><br><span class="line"><span class="string">grep -i &quot;</span><span class="variable constant_">TMOUT</span><span class="string">&quot; /etc/profile /etc/bashrc</span></span><br><span class="line"><span class="string">if [ $? == 0 ];then</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;已设置登入超时限制<span class="string">&quot;</span></span><br><span class="line"><span class="string">else</span></span><br><span class="line"><span class="string">    echo &quot;</span>&gt;&gt;&gt;未设置登入超时限制,请设置,设置方法:在/etc/profile或者/etc/bashrc里面添加参数<span class="variable constant_">TMOUT</span>=<span class="number">600</span> --------[需调整]<span class="string">&quot;</span></span><br><span class="line"><span class="string">fi</span></span><br><span class="line"><span class="string">echo &quot;</span>&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;end&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;<span class="string">&quot;</span></span><br></pre></td></tr></table></figure>

<h4 id="二-主机初始化脚本"><a href="#二-主机初始化脚本" class="headerlink" title="[二] 主机初始化脚本"></a>[二] 主机初始化脚本</h4><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/usr/</span>bin/env bash</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">PATH</span>=<span class="regexp">/usr/</span>local/<span class="attr">sbin</span>:<span class="regexp">/usr/</span>local/<span class="attr">bin</span>:<span class="regexp">/sbin:/</span><span class="attr">bin</span>:<span class="regexp">/usr/</span><span class="attr">sbin</span>:<span class="regexp">/usr/</span><span class="attr">bin</span>:<span class="regexp">/root/</span>bin</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">RGB_DANGER</span>=<span class="string">&#x27;\033[31;1m&#x27;</span></span><br><span class="line"><span class="variable constant_">RGB_WAIT</span>=<span class="string">&#x27;\033[37;2m&#x27;</span></span><br><span class="line"><span class="variable constant_">RGB_SUCCESS</span>=<span class="string">&#x27;\033[32m&#x27;</span></span><br><span class="line"><span class="variable constant_">RGB_WARNING</span>=<span class="string">&#x27;\033[33;1m&#x27;</span></span><br><span class="line"><span class="variable constant_">RGB_INFO</span>=<span class="string">&#x27;\033[36;1m&#x27;</span></span><br><span class="line"><span class="variable constant_">RGB_END</span>=<span class="string">&#x27;\033[0m&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="variable constant_">CHECK_CENTOS</span>=$( cat /etc/redhat-release|sed -r <span class="string">&#x27;s/.* ([0-9]+)\..*/\1/&#x27;</span> )</span><br><span class="line"><span class="variable constant_">CHECK_RAM</span>=$( cat /proc/meminfo | grep <span class="string">&quot;MemTotal&quot;</span> | awk -F<span class="string">&quot; &quot;</span> <span class="string">&#x27;&#123;ram=$2/1000000&#125;&#123;printf(&quot;%.0f&quot;,ram)&#125;&#x27;</span> )</span><br><span class="line"></span><br><span class="line"><span class="variable constant_">LOCK</span>=<span class="regexp">/var/</span>log/init_centos7_record.<span class="property">log</span></span><br><span class="line"></span><br><span class="line"><span class="title function_">tool_info</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo -e <span class="string">&quot;=========================================================================================&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;                              Init CentOS 7 Script                                       &quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;=========================================================================================&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">check_root</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">if</span> [[ $EUID -ne <span class="number">0</span> ]]; then</span><br><span class="line">        echo -e <span class="string">&quot;$&#123;RGB_DANGER&#125;This script must be run as root!$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">        exit <span class="number">1</span></span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">check_lock</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> [ ! -f <span class="string">&quot;$LOCK&quot;</span> ];then</span><br><span class="line">        touch $LOCK</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        echo -e <span class="string">&quot;$&#123;RGB_DANGER&#125;Detects that the initialization is complete and does not need to be initialized any further!$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">        exit <span class="number">1</span></span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">check_os</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;$&#123;CHECK_CENTOS&#125;&quot;</span> != <span class="string">&#x27;7&#x27;</span> ]; then</span><br><span class="line">        echo -e <span class="string">&quot;$&#123;RGB_DANGER&#125;This script must be run in CentOS 7!$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">        exit <span class="number">1</span></span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">remote_login</span>(<span class="params"></span>)&#123;</span><br><span class="line">    echo <span class="string">&quot;#########################################################################################&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;\033[1;31m	   4、Set Remote Login Configuration(SSH)	\033[0m&quot;</span></span><br><span class="line">    echo <span class="string">&quot;#########################################################################################&quot;</span></span><br><span class="line">#set <span class="title class_">Protocol</span> <span class="number">2</span></span><br><span class="line">    echo &gt;&gt; <span class="regexp">/etc/</span>ssh/sshd_config</span><br><span class="line">    grep -i <span class="string">&#x27;^Protocol&#x27;</span> /etc/ssh/sshd_config &gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">    <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">        sed -i <span class="string">&#x27;s/^Protocol.*$/Protocol 2/g&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">        <span class="keyword">if</span> [ $? != <span class="number">0</span> ];then</span><br><span class="line">            echo -e <span class="string">&quot;\033[31;5m	    [##Error##]: Cannot to set Protocol to &#x27;2&#x27;	    \033[0m&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            echo -e <span class="string">&quot;\033[37;5m	    [Success: Set SSH Protocol to 2]	    \033[0m&quot;</span></span><br><span class="line">         fi</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&#x27;Protocol 2&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>ssh/sshd_config</span><br><span class="line">        echo -e <span class="string">&quot;\033[37;5m	    [Success: Set SSH Protocol to 2]	    \033[0m&quot;</span></span><br><span class="line">    fi</span><br><span class="line">    </span><br><span class="line">	grep -i <span class="string">&#x27;^PermitRootLogin no&#x27;</span> /etc/ssh/sshd_config &gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">	<span class="keyword">if</span> [ $? == <span class="number">1</span> ];then</span><br><span class="line">            grep -i <span class="string">&#x27;.*PermitRootLogin yes&#x27;</span> /etc/ssh/sshd_config &gt;<span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">            <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">                sed -i <span class="string">&#x27;s/.*PermitRootLogin yes/PermitRootLogin no/g&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">                <span class="keyword">if</span> [ $? != <span class="number">0</span> ];then</span><br><span class="line">                    echo -e <span class="string">&quot;\033[31;5m	[##Error##]cannot to set PermitRootLogin to &#x27;no&#x27;	\033[0m&quot;</span></span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">        	    echo -e <span class="string">&quot;\033[37;5m	    Disable root remote login[Success]	    \033[0m&quot;</span></span><br><span class="line">        	    restart_flag=<span class="number">0</span></span><br><span class="line">                fi</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                echo <span class="string">&#x27;PermitRootLogin no&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>ssh/sshd_config</span><br><span class="line">        	echo -e <span class="string">&quot;\033[37;5m	    Disable root remote login[Success]	    \033[0m&quot;</span></span><br><span class="line">                restart_flag=<span class="number">0</span></span><br><span class="line">            fi</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	    echo -e <span class="string">&quot;\033[37;5m	    Already disable root remote login	\033[0m&quot;</span></span><br><span class="line">	fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">create_user</span>(<span class="params"></span>)&#123;</span><br><span class="line">    echo <span class="string">&quot;#########################################################################################&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;\033[1;31m	   3、Create openroot account	\033[0m&quot;</span></span><br><span class="line">    echo <span class="string">&quot;#########################################################################################&quot;</span></span><br><span class="line">    read -p <span class="string">&quot;Be sure to create an openroot account?[y/n]:&quot;</span></span><br><span class="line">    <span class="keyword">case</span> $REPLY <span class="keyword">in</span> </span><br><span class="line">    y)</span><br><span class="line">	grep -i <span class="string">&#x27;openroot&#x27;</span> /etc/passwd</span><br><span class="line">        <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">	    echo -e <span class="string">&quot;\033[1;31m		An openroot account has been created	\033[0m&quot;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">	    read -p <span class="string">&quot;Please enter your password:&quot;</span> <span class="variable constant_">PASSWD</span></span><br><span class="line">	    useradd -g root openroot;echo <span class="string">&quot;$PASSWD&quot;</span> | passwd --stdin openroot  &gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">	    <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">		echo -e <span class="string">&quot;\033[1;31m	openroot account created successfully	    \033[0m&quot;</span></span><br><span class="line">		grep -i <span class="string">&quot;openroot&quot;</span> /etc/sudoers</span><br><span class="line">		<span class="keyword">if</span> [ $? != <span class="number">0</span> ];then</span><br><span class="line">		    chmod u+w /etc/sudoers &gt; <span class="regexp">/dev/</span><span class="literal">null</span> </span><br><span class="line">		    sed -i <span class="string">&#x27;/^root.*ALL=(ALL).*$/a\openroot  ALL=(ALL)       NOPASSWD:ALL&#x27;</span> /etc/sudoers &gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">		    <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">			echo -e <span class="string">&quot;\033[37;5m	    [Permissions set success]	\033[0m&quot;</span></span><br><span class="line">		    <span class="keyword">else</span></span><br><span class="line">			echo -e <span class="string">&quot;\033[31;5m	    [Permissions set failed]	\033[0m&quot;</span></span><br><span class="line">		    fi</span><br><span class="line">		    chmod u-w /etc/sudoers &gt; <span class="regexp">/dev/</span><span class="literal">null</span> </span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		    echo -e <span class="string">&quot;\033[1;31m	    Permissions have already been set	    \033[0m&quot;</span></span><br><span class="line">		fi</span><br><span class="line">	    <span class="keyword">else</span></span><br><span class="line">		echo -e <span class="string">&quot;\033[1;31m	    openroot account created failed	    \033[0m&quot;</span></span><br><span class="line">		exit <span class="number">1</span> </span><br><span class="line">	    fi</span><br><span class="line">	fi</span><br><span class="line">	;;</span><br><span class="line">    n)</span><br><span class="line">	;;</span><br><span class="line">    *)</span><br><span class="line">	create_user</span><br><span class="line">    esac</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">###########################文件备份############################</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">backup</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span> [ ! -x <span class="string">&quot;backup&quot;</span> ]; then</span><br><span class="line">    mkdir backup</span><br><span class="line">    <span class="keyword">if</span> [ -f /etc/pam.<span class="property">d</span>/system-auth ];then</span><br><span class="line">        cp /etc/pam.<span class="property">d</span>/system-auth backup/system-auth.<span class="property">bak</span></span><br><span class="line">    elif [ -f /etc/pam.<span class="property">d</span>/common-password ];then</span><br><span class="line">        cp /etc/pam.<span class="property">d</span>/common-password backup/common-password.<span class="property">bak</span></span><br><span class="line">    fi</span><br><span class="line">    <span class="keyword">if</span> [ -f ~<span class="regexp">/.ssh/</span>authorized_keys ];then</span><br><span class="line">        cp ~<span class="regexp">/.ssh/</span>authorized_keys backup/authorized_keys.<span class="property">bak</span></span><br><span class="line">    fi</span><br><span class="line">    cp /etc/pam.<span class="property">d</span>/sshd backup/sshd.<span class="property">bak</span></span><br><span class="line">    cp /etc/sudoers backup/sudoers.<span class="property">bak</span></span><br><span class="line">    cp /etc/ssh/sshd_config backup/sshd_config.<span class="property">bak</span></span><br><span class="line">    cp /etc/profile backup/profile.<span class="property">bak</span></span><br><span class="line">    cp /etc/pam.<span class="property">d</span>/su backup/su.<span class="property">bak</span></span><br><span class="line">    cp /etc/security/limits.<span class="property">conf</span> backup/limits.<span class="property">conf</span>.<span class="property">bak</span></span><br><span class="line">    cp /etc/sysctl.<span class="property">conf</span>  backup/sysctl.<span class="property">conf</span>.<span class="property">bak</span></span><br><span class="line">    cp /etc/login.<span class="property">defs</span> backup/login.<span class="property">defs</span>.<span class="property">bak</span></span><br><span class="line">    echo -e <span class="string">&quot;###########################################################################################&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;\033[1;31m     Auto backup successfully        \033[0m&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;###########################################################################################&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    echo -e <span class="string">&quot;###########################################################################################&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;\033[1;31mBackup file already exist, to avoid overwriting these files, backup will not perform again\033[0m &quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;###########################################################################################&quot;</span></span><br><span class="line">fi</span><br><span class="line">&#125;</span><br><span class="line">###########################执行备份############################</span><br><span class="line"></span><br><span class="line">###########################文件还原############################</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">recover</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="keyword">if</span> [ -f backup/system-auth.<span class="property">bak</span> ];then</span><br><span class="line">    cp -rf backup/system-auth.<span class="property">bak</span> /etc/pam.<span class="property">d</span>/system-auth</span><br><span class="line">elif [ -f backup/common-password.<span class="property">bak</span> ];then</span><br><span class="line">    cp -rf backup/common-password.<span class="property">bak</span> /etc/pam.<span class="property">d</span>/common-password</span><br><span class="line">fi</span><br><span class="line"><span class="keyword">if</span> [ -f backup/authorized_keys.<span class="property">bak</span> ];then</span><br><span class="line">    cp -rf backup/authorized_keys.<span class="property">bak</span> ~<span class="regexp">/.ssh/</span>authorized_keys</span><br><span class="line">fi</span><br><span class="line">    cp -rf backup/sshd.<span class="property">bak</span> /etc/pam.<span class="property">d</span>/sshd</span><br><span class="line">    cp -rf backup/sudoers.<span class="property">bak</span> /etc/sudoers</span><br><span class="line">    cp -rf backup/sshd_config.<span class="property">bak</span> /etc/ssh/sshd_config</span><br><span class="line">    cp -rf backup/profile.<span class="property">bak</span> /etc/profile</span><br><span class="line">    cp -rf backup/limits.<span class="property">conf</span>.<span class="property">bak</span> /etc/security/limits.<span class="property">conf</span></span><br><span class="line">    cp -rf backup/sysctl.<span class="property">conf</span>.<span class="property">bak</span> /etc/sysctl.<span class="property">conf</span> </span><br><span class="line">    cp -rf backup/login.<span class="property">defs</span>.<span class="property">bak</span> /etc/login.<span class="property">defs</span></span><br><span class="line">    source /etc/profile</span><br><span class="line">    cp -rf backup/su.<span class="property">bak</span> /etc/pam.<span class="property">d</span>/su</span><br><span class="line">    restart_flag=<span class="number">0</span></span><br><span class="line">    echo -e <span class="string">&quot;\033[1;31m    8、 Recover success  \033[0m&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">new_swap</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= swap =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;$&#123;CHECK_RAM&#125;&quot;</span> -le <span class="string">&#x27;2&#x27;</span> ]; then</span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    dd <span class="keyword">if</span>=<span class="regexp">/dev/</span>zero <span class="keyword">of</span>=/swapfile bs=<span class="number">1024</span> count=<span class="number">1048576</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    chmod <span class="number">600</span> /swapfile &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    mkswap /swapfile &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    swapon /swapfile &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo <span class="string">&#x27;/swapfile swap swap defaults 0 0&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>fstab</span><br><span class="line">    echo <span class="string">&#x27;# Swap&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    echo <span class="string">&#x27;vm.swappiness = 10&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    sysctl -p &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    sysctl -n vm.<span class="property">swappiness</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    echo -e <span class="string">&quot;$&#123;RGB_SUCCESS&#125;Skip, no configuration needed$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">open_bbr</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= bbr =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    echo <span class="string">&quot;# BBR&quot;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    echo <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    echo <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    sysctl -p &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    sysctl -n net.<span class="property">ipv4</span>.<span class="property">tcp_congestion_control</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    lsmod | grep bbr &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">disable_software</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= selinux firewalld =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    setenforce <span class="number">0</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    sed -i <span class="string">&#x27;s/^SELINUX=.*$/SELINUX=disabled/&#x27;</span> /etc/selinux/config</span><br><span class="line">    systemctl disable firewalld.<span class="property">service</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line"> systemctl stop firewalld.<span class="property">service</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">time_zone</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= time zone =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    rm -rf /etc/localtime &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ln -sf /usr/share/zoneinfo/<span class="title class_">Asia</span>/<span class="title class_">Shanghai</span> /etc/localtime &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ls -ln /etc/localtime &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">custom_profile</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= custom profile =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    cat &gt; <span class="regexp">/etc/</span>profile.<span class="property">d</span>/centos7init.<span class="property">sh</span> &lt;&lt; <span class="variable constant_">EOF</span></span><br><span class="line"><span class="title class_">PS1</span>=<span class="string">&quot;\[\e[37;40m\][\[\e[32;40m\]\u\[\e[37;40m\]@\h \[\e[35;40m\]\W\[\e[0m\]]\\\\$ &quot;</span></span><br><span class="line"><span class="variable constant_">GREP_OPTIONS</span>=<span class="string">&quot;--color=auto&quot;</span></span><br><span class="line">alias l=<span class="string">&#x27;ls -AFhlt&#x27;</span></span><br><span class="line">alias grep=<span class="string">&#x27;grep --color&#x27;</span></span><br><span class="line">alias egrep=<span class="string">&#x27;egrep --color&#x27;</span></span><br><span class="line">alias fgrep=<span class="string">&#x27;fgrep --color&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="variable constant_">HISTTIMEFORMAT</span>=<span class="string">&quot;%Y-%m-%d %H:%M:%S  &quot;</span></span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line">    cat /etc/profile.<span class="property">d</span>/centos7init.<span class="property">sh</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">adjust_ulimit</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= adjust ulimit =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sed -i <span class="string">&#x27;/^# End of file/,$d&#x27;</span> /etc/security/limits.<span class="property">conf</span></span><br><span class="line">    cat &gt;&gt; <span class="regexp">/etc/</span>security/limits.<span class="property">conf</span> &lt;&lt;<span class="variable constant_">EOF</span></span><br><span class="line"># <span class="title class_">End</span> <span class="keyword">of</span> file</span><br><span class="line">* soft core unlimited</span><br><span class="line">* hard core unlimited</span><br><span class="line">* soft nproc <span class="number">1000000</span></span><br><span class="line">* hard nproc <span class="number">1000000</span></span><br><span class="line">* soft nofile <span class="number">1000000</span></span><br><span class="line">* hard nofile <span class="number">1000000</span></span><br><span class="line">root soft core unlimited</span><br><span class="line">root hard core unlimited</span><br><span class="line">root soft nproc <span class="number">1000000</span></span><br><span class="line">root hard nproc <span class="number">1000000</span></span><br><span class="line">root soft nofile <span class="number">1000000</span></span><br><span class="line">root hard nofile <span class="number">1000000</span></span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line">    cat /etc/security/limits.<span class="property">conf</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">kernel_optimum</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= kernel optimum =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    [ ! -e <span class="string">&quot;/etc/sysctl.conf_bak&quot;</span> ] &amp;&amp; <span class="regexp">/bin/m</span>v /etc/sysctl.<span class="property">conf</span>&#123;,_bak&#125;</span><br><span class="line">    cat &gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span> &lt;&lt; <span class="variable constant_">EOF</span></span><br><span class="line"># <span class="title class_">Controls</span> source route verification</span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">default</span>.<span class="property">rp_filter</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">ip_nonlocal_bind</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">ip_forward</span> = <span class="number">0</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">all</span>.<span class="property">accept_redirects</span> = <span class="number">0</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">all</span>.<span class="property">accept_source_route</span> = <span class="number">0</span> </span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">default</span>.<span class="property">accept_source_route</span> = <span class="number">0</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">icmp_echo_ignore_broadcasts</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">all</span>.<span class="property">log_martians</span> = <span class="number">1</span> </span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">default</span>.<span class="property">log_martians</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">all</span>.<span class="property">promote_secondaries</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">conf</span>.<span class="property">default</span>.<span class="property">promote_secondaries</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">Controls</span> the use <span class="keyword">of</span> <span class="variable constant_">TCP</span> syncookies</span><br><span class="line"># <span class="title class_">Number</span> <span class="keyword">of</span> pid_max</span><br><span class="line">kernel.<span class="property">core_uses_pid</span> = <span class="number">1</span></span><br><span class="line">kernel.<span class="property">pid_max</span> = <span class="number">1000000</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_syncookies</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">Controls</span> the maximum size <span class="keyword">of</span> a message, <span class="keyword">in</span> bytes</span><br><span class="line"># <span class="title class_">Controls</span> the <span class="keyword">default</span> maxmimum size <span class="keyword">of</span> a mesage queue</span><br><span class="line"># <span class="title class_">Controls</span> the maximum shared segment size, <span class="keyword">in</span> bytes</span><br><span class="line"># <span class="title class_">Controls</span> the maximum number <span class="keyword">of</span> shared memory segments, <span class="keyword">in</span> pages</span><br><span class="line">kernel.<span class="property">msgmnb</span> = <span class="number">65536</span></span><br><span class="line">kernel.<span class="property">msgmax</span> = <span class="number">65536</span></span><br><span class="line">kernel.<span class="property">shmmax</span> = <span class="number">68719476736</span></span><br><span class="line">kernel.<span class="property">shmall</span> = <span class="number">4294967296</span></span><br><span class="line">kernel.<span class="property">sysrq</span> = <span class="number">1</span></span><br><span class="line">kernel.<span class="property">softlockup_panic</span> = <span class="number">1</span></span><br><span class="line">kernel.<span class="property">printk</span> = <span class="number">5</span></span><br><span class="line"></span><br><span class="line"># <span class="variable constant_">TCP</span> kernel paramater</span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_mem</span> = <span class="number">94500000</span> <span class="number">915000000</span> <span class="number">927000000</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_rmem</span> = <span class="number">4096</span> <span class="number">87380</span> <span class="number">4194304</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_wmem</span> = <span class="number">4096</span> <span class="number">16384</span> <span class="number">4194304</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_window_scaling</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_sack</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"># <span class="title class_">Socket</span> buffer</span><br><span class="line">net.<span class="property">core</span>.<span class="property">wmem_default</span> = <span class="number">8388608</span></span><br><span class="line">net.<span class="property">core</span>.<span class="property">rmem_default</span> = <span class="number">8388608</span></span><br><span class="line">net.<span class="property">core</span>.<span class="property">rmem_max</span> = <span class="number">16777216</span></span><br><span class="line">net.<span class="property">core</span>.<span class="property">wmem_max</span> = <span class="number">16777216</span></span><br><span class="line">net.<span class="property">core</span>.<span class="property">netdev_max_backlog</span> = <span class="number">32768</span></span><br><span class="line">net.<span class="property">core</span>.<span class="property">somaxconn</span> = <span class="number">65535</span></span><br><span class="line">net.<span class="property">core</span>.<span class="property">optmem_max</span> = <span class="number">81920</span></span><br><span class="line"></span><br><span class="line"># <span class="variable constant_">TCP</span> conn</span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_max_syn_backlog</span> = <span class="number">262144</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_syn_retries</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_retries1</span> = <span class="number">3</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_retries2</span> = <span class="number">15</span></span><br><span class="line"></span><br><span class="line"># <span class="variable constant_">TCP</span> conn reuse</span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_timestamps</span> = <span class="number">0</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_tw_reuse</span> = <span class="number">1</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_fin_timeout</span> = <span class="number">5</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_max_tw_buckets</span> = <span class="number">7000</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_max_orphans</span> = <span class="number">3276800</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_synack_retries</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"># keepalive conn</span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_keepalive_time</span> = <span class="number">300</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_keepalive_intvl</span> = <span class="number">30</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">tcp_keepalive_probes</span> = <span class="number">3</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">ip_local_port_range</span> = <span class="number">1024</span> <span class="number">65535</span></span><br><span class="line"></span><br><span class="line">net.<span class="property">ipv6</span>.<span class="property">neigh</span>.<span class="property">default</span>.<span class="property">gc_thresh3</span> = <span class="number">4096</span></span><br><span class="line">net.<span class="property">ipv4</span>.<span class="property">neigh</span>.<span class="property">default</span>.<span class="property">gc_thresh3</span> = <span class="number">4096</span></span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line">    sysctl -p &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    cat /etc/sysctl.<span class="property">conf</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">updatedb_optimum</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= updatedb optimum =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sed -i <span class="string">&#x27;s,media,media /data,&#x27;</span> /etc/updatedb.<span class="property">conf</span></span><br><span class="line">    cat /etc/updatedb.<span class="property">conf</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">open_ipv6</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= open ipv6 =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    echo <span class="string">&#x27;# IPV6&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    echo <span class="string">&#x27;net.ipv6.conf.all.disable_ipv6=0&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    echo <span class="string">&#x27;net.ipv6.conf.default.disable_ipv6=0&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    echo <span class="string">&#x27;net.ipv6.conf.lo.disable_ipv6=0&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>sysctl.<span class="property">conf</span></span><br><span class="line">    sysctl -p &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    cat /etc/sysctl.<span class="property">conf</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">disable_cad</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= disable cad =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    systemctl mask ctrl-alt-del.<span class="property">target</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">remove_users</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= remove users =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> u <span class="keyword">in</span> adm lp sync shutdown halt mail operator games ftp </span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    userdel $&#123;u&#125; &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    done</span><br><span class="line">    cut -d : -f <span class="number">1</span> /etc/passwd &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> g <span class="keyword">in</span> adm lp mail games ftp </span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    groupdel $&#123;g&#125; &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    done</span><br><span class="line">    cat /etc/group &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">sys_permissions</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= sys permissions =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    chmod <span class="number">644</span> /etc/passwd &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    chmod <span class="number">644</span> /etc/group &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    chmod <span class="number">000</span> /etc/shadow &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    chmod <span class="number">000</span> /etc/gshadow &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ls -la /etc/passwd &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ls -la /etc/group &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ls -la /etc/shadow &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    ls -la /etc/gshadow &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">password_policy</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= password policy =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sed -i <span class="string">&#x27;s/^PASS_MAX_DAYS.*$/PASS_MAX_DAYS   90/&#x27;</span> /etc/login.<span class="property">defs</span></span><br><span class="line">    sed -i <span class="string">&#x27;s/^PASS_MIN_DAYS.*$/PASS_MIN_DAYS   10/&#x27;</span> /etc/login.<span class="property">defs</span></span><br><span class="line">    cat /etc/login.<span class="property">defs</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    cat &gt;&gt;<span class="regexp">/etc/</span>security/pwquality.<span class="property">conf</span> &lt;&lt; <span class="variable constant_">EOF</span></span><br><span class="line">minlen = <span class="number">8</span> </span><br><span class="line">dcredit = -<span class="number">1</span></span><br><span class="line">ucredit = -<span class="number">1</span></span><br><span class="line">ocredit = -<span class="number">1</span></span><br><span class="line">lcredit = -<span class="number">1</span></span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">change_useradd</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= change useradd =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sed -i <span class="string">&#x27;s/^INACTIVE.*$/INACTIVE=180/&#x27;</span> /etc/<span class="keyword">default</span>/useradd</span><br><span class="line">    cat /etc/<span class="keyword">default</span>/useradd &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">sec_ssh</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= sec ssh =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sed -i <span class="string">&#x27;s/UseDNS.*$/UseDNS no/&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&#x27;s/^#LoginGraceTime.*$/LoginGraceTime 60/&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&#x27;s/^#PermitEmptyPasswords.*$/PermitEmptyPasswords no/&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&#x27;s/^#PubkeyAuthentication.*$/PubkeyAuthentication yes/&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&#x27;s/^#MaxAuthTries.*$/MaxAuthTries 3/&#x27;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&quot;s/#ClientAliveInterval 0/ClientAliveInterval 300/g&quot;</span> /etc/ssh/sshd_config </span><br><span class="line">    sed -i <span class="string">&quot;s/#ClientAliveCountMax 3/ClientAliveCountMax 3/g&quot;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&quot;s/X11Forwarding yes/X11Forwarding no/g&quot;</span> /etc/ssh/sshd_config</span><br><span class="line">    sed -i <span class="string">&quot;s/#Banner none/Banner \/etc\/issue.net/g&quot;</span> /etc/ssh/sshd_config</span><br><span class="line">    echo <span class="string">&quot;Authorized users only. All activity may be monitored and reported.&quot;</span>&gt;<span class="regexp">/etc/i</span>ssue.<span class="property">net</span></span><br><span class="line">    systemctl restart sshd.<span class="property">service</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    cat /etc/ssh/sshd_config &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">timeout_config</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= timeout config =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    echo <span class="string">&quot;export TMOUT=1800&quot;</span> &gt;&gt; <span class="regexp">/etc/</span>profile.<span class="property">d</span>/centos7init.<span class="property">sh</span></span><br><span class="line">    cat /etc/profile.<span class="property">d</span>/centos7init.<span class="property">sh</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#######################配置系统历史命令操作记录和定时帐户自动登出时间################################</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">set_history_tmout</span>(<span class="params"></span>)&#123;</span><br><span class="line">    echo <span class="string">&quot;#########################################################################################&quot;</span></span><br><span class="line">    echo -e <span class="string">&quot;\033[1;31m	    5、set history and timeout	\033[0m&quot;</span></span><br><span class="line">    echo <span class="string">&quot;#########################################################################################&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	#history_size</span><br><span class="line">        grep -i <span class="string">&quot;^HISTSIZE=&quot;</span> /etc/profile &gt;<span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">        <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">	#history记录保留一万条</span><br><span class="line">            sed -i <span class="string">&quot;s/^HISTSIZE=.*$/HISTSIZE=10000/g&quot;</span> /etc/profile</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            echo <span class="string">&#x27;HISTSIZE=10000&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>profile</span><br><span class="line">        fi</span><br><span class="line">        echo -e <span class="string">&quot;\033[1;31m	    HISTSIZE has been set to 10000	    \033[0m&quot;</span></span><br><span class="line">	#history_format</span><br><span class="line">        grep -i <span class="string">&quot;^export HISTTIMEFORMAT=&quot;</span> /etc/profile &gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">        <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">            sed -i <span class="string">&#x27;s/^export HISTTIMEFORMAT=.*$/export HISTTIMEFORMAT=&quot;%F %T `whoami`&quot;/g&#x27;</span> /etc/profile</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            echo <span class="string">&#x27;export HISTTIMEFORMAT=&quot;%F %T `whoami` &quot;&#x27;</span> &gt;&gt; <span class="regexp">/etc/</span>profile</span><br><span class="line">        fi</span><br><span class="line">        echo -e <span class="string">&#x27;\033[1;31m	    HISTTIMEFORMAT has been set to &quot;Number-Time-User-Command&quot;	    \033[0m&#x27;</span></span><br><span class="line">	#<span class="variable constant_">TIME_OUT</span></span><br><span class="line">        #read -p <span class="string">&quot;set shell TMOUT?[300-600]seconds:&quot;</span> tmout </span><br><span class="line">	#: $&#123;<span class="attr">tmout</span>:=<span class="number">600</span>&#125;</span><br><span class="line">        grep -i <span class="string">&quot;^TMOUT=&quot;</span> /etc/profile	&gt; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line">        <span class="keyword">if</span> [ $? == <span class="number">0</span> ];then</span><br><span class="line">            sed -i <span class="string">&quot;s/^TMOUT=.*$/TMOUT=600/g&quot;</span> /etc/profile</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            echo <span class="string">&quot;TMOUT=600&quot;</span> &gt;&gt; <span class="regexp">/etc/</span>profile</span><br><span class="line">        fi</span><br><span class="line">        source /etc/profile</span><br><span class="line">	echo -e <span class="string">&quot;\033[37;5m	    [Success]	    \033[0m&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">lockout_policy</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo <span class="string">&quot;============= lockout policy =============&quot;</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -en <span class="string">&quot;$&#123;RGB_WAIT&#125;Configuring...$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    [ ! -e <span class="string">&quot;/etc/pam.d/system-auth_bak&quot;</span> ] &amp;&amp; <span class="regexp">/bin/m</span>v /etc/pam.<span class="property">d</span>/system-auth&#123;,_bak&#125;</span><br><span class="line">    cat &gt; <span class="regexp">/etc/</span>pam.<span class="property">d</span>/system-auth &lt;&lt; <span class="variable constant_">EOF</span></span><br><span class="line">auth        required                                     pam_env.<span class="property">so</span></span><br><span class="line">auth        required                                     pam_faillock.<span class="property">so</span> preauth silent audit deny=<span class="number">3</span> unlock_time=<span class="number">900</span></span><br><span class="line">auth        required                                     pam_faildelay.<span class="property">so</span> delay=<span class="number">2000000</span></span><br><span class="line">auth        [<span class="keyword">default</span>=<span class="number">1</span> ignore=ignore success=ok]         pam_succeed_if.<span class="property">so</span> uid &gt;= <span class="number">1000</span> quiet</span><br><span class="line">auth        [<span class="keyword">default</span>=<span class="number">1</span> ignore=ignore success=ok]         pam_localuser.<span class="property">so</span></span><br><span class="line">auth        sufficient                                   pam_unix.<span class="property">so</span> nullok try_first_pass</span><br><span class="line">auth        [<span class="keyword">default</span>=die]                                pam_faillock.<span class="property">so</span>  authfail  audit  deny=<span class="number">3</span>  unlock_time=<span class="number">900</span></span><br><span class="line">auth        requisite                                    pam_succeed_if.<span class="property">so</span> uid &gt;= <span class="number">1000</span> quiet_success</span><br><span class="line">auth        sufficient                                   pam_sss.<span class="property">so</span> forward_pass</span><br><span class="line">auth        required                                     pam_deny.<span class="property">so</span></span><br><span class="line"></span><br><span class="line">account     required                                     pam_unix.<span class="property">so</span></span><br><span class="line">account     sufficient                                   pam_localuser.<span class="property">so</span></span><br><span class="line">account     sufficient                                   pam_succeed_if.<span class="property">so</span> uid &lt; <span class="number">1000</span> quiet</span><br><span class="line">account     [<span class="keyword">default</span>=bad success=ok user_unknown=ignore] pam_sss.<span class="property">so</span></span><br><span class="line">account     required                                     pam_permit.<span class="property">so</span></span><br><span class="line">account     required                                     pam_faillock.<span class="property">so</span></span><br><span class="line"></span><br><span class="line">password    requisite                                    pam_pwquality.<span class="property">so</span> try_first_pass local_users_only</span><br><span class="line">password    sufficient                                   pam_unix.<span class="property">so</span> sha512 shadow nullok try_first_pass use_authtok</span><br><span class="line">password    sufficient                                   pam_sss.<span class="property">so</span> use_authtok</span><br><span class="line">password    required                                     pam_deny.<span class="property">so</span></span><br><span class="line"></span><br><span class="line">session     optional                                     pam_keyinit.<span class="property">so</span> revoke</span><br><span class="line">session     required                                     pam_limits.<span class="property">so</span></span><br><span class="line">-session    optional                                     pam_systemd.<span class="property">so</span></span><br><span class="line">session     [success=<span class="number">1</span> <span class="keyword">default</span>=ignore]                   pam_succeed_if.<span class="property">so</span> service <span class="keyword">in</span> crond quiet use_uid</span><br><span class="line">session     required                                     pam_unix.<span class="property">so</span></span><br><span class="line">session     optional                                     pam_sss.<span class="property">so</span></span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line">    [ ! -e <span class="string">&quot;/etc/pam.d/password-auth_bak&quot;</span> ] &amp;&amp; <span class="regexp">/bin/m</span>v /etc/pam.<span class="property">d</span>/password-auth&#123;,_bak&#125;</span><br><span class="line">    cat &gt; <span class="regexp">/etc/</span>pam.<span class="property">d</span>/password-auth &lt;&lt; <span class="variable constant_">EOF</span></span><br><span class="line">auth        required                                     pam_env.<span class="property">so</span></span><br><span class="line">auth        required                                     pam_faillock.<span class="property">so</span> preauth silent audit deny=<span class="number">3</span> unlock_time=<span class="number">900</span></span><br><span class="line">auth        required                                     pam_faildelay.<span class="property">so</span> delay=<span class="number">2000000</span></span><br><span class="line">auth        [<span class="keyword">default</span>=<span class="number">1</span> ignore=ignore success=ok]         pam_succeed_if.<span class="property">so</span> uid &gt;= <span class="number">1000</span> quiet</span><br><span class="line">auth        [<span class="keyword">default</span>=<span class="number">1</span> ignore=ignore success=ok]         pam_localuser.<span class="property">so</span></span><br><span class="line">auth        sufficient                                   pam_unix.<span class="property">so</span> nullok try_first_pass</span><br><span class="line">auth        [<span class="keyword">default</span>=die]                                pam_faillock.<span class="property">so</span>  authfail  audit  deny=<span class="number">3</span>  unlock_time=<span class="number">900</span></span><br><span class="line">auth        requisite                                    pam_succeed_if.<span class="property">so</span> uid &gt;= <span class="number">1000</span> quiet_success</span><br><span class="line">auth        sufficient                                   pam_sss.<span class="property">so</span> forward_pass</span><br><span class="line">auth        required                                     pam_deny.<span class="property">so</span></span><br><span class="line"></span><br><span class="line">account     required                                     pam_unix.<span class="property">so</span></span><br><span class="line">account     sufficient                                   pam_localuser.<span class="property">so</span></span><br><span class="line">account     sufficient                                   pam_succeed_if.<span class="property">so</span> uid &lt; <span class="number">1000</span> quiet</span><br><span class="line">account     [<span class="keyword">default</span>=bad success=ok user_unknown=ignore] pam_sss.<span class="property">so</span></span><br><span class="line">account     required                                     pam_permit.<span class="property">so</span></span><br><span class="line">account     required                                     pam_faillock.<span class="property">so</span></span><br><span class="line"></span><br><span class="line">password    requisite                                    pam_pwquality.<span class="property">so</span> try_first_pass local_users_only</span><br><span class="line">password    sufficient                                   pam_unix.<span class="property">so</span> sha512 shadow nullok try_first_pass use_authtok</span><br><span class="line">password    sufficient                                   pam_sss.<span class="property">so</span> use_authtok</span><br><span class="line">password    required                                     pam_deny.<span class="property">so</span></span><br><span class="line"></span><br><span class="line">session     optional                                     pam_keyinit.<span class="property">so</span> revoke</span><br><span class="line">session     required                                     pam_limits.<span class="property">so</span></span><br><span class="line">-session    optional                                     pam_systemd.<span class="property">so</span></span><br><span class="line">session     [success=<span class="number">1</span> <span class="keyword">default</span>=ignore]                   pam_succeed_if.<span class="property">so</span> service <span class="keyword">in</span> crond quiet use_uid</span><br><span class="line">session     required                                     pam_unix.<span class="property">so</span></span><br><span class="line">session     optional                                     pam_sss.<span class="property">so</span></span><br><span class="line"><span class="variable constant_">EOF</span></span><br><span class="line">    systemctl restart sshd.<span class="property">service</span> &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    cat /etc/pam.<span class="property">d</span>/etc/pam.<span class="property">d</span>/system-auth &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    cat /etc/pam.<span class="property">d</span>/password-auth &gt;&gt; $&#123;<span class="variable constant_">LOCK</span>&#125; <span class="number">2</span>&gt;&amp;<span class="number">1</span></span><br><span class="line">    echo -e <span class="string">&quot;\r$&#123;RGB_SUCCESS&#125;Configuration Success$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#<span class="title function_">reboot_os</span>(<span class="params"></span>) &#123;</span><br><span class="line">#    echo -e <span class="string">&quot;\n$&#123;RGB_WARNING&#125;Please restart the server and see if the services start up fine.$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">#    echo -en <span class="string">&quot;$&#123;RGB_WARNING&#125;Do you want to restart OS ? [y/n]: $&#123;RGB_END&#125;&quot;</span></span><br><span class="line">#    <span class="keyword">while</span> :; <span class="keyword">do</span></span><br><span class="line">#        read <span class="variable constant_">REBOOT_STATUS</span></span><br><span class="line">#        <span class="keyword">if</span> [[ ! <span class="string">&quot;$&#123;REBOOT_STATUS&#125;&quot;</span> =~ ^[y,n]$ ]]; then</span><br><span class="line">#            echo -en <span class="string">&quot;$&#123;RGB_DANGER&#125;Input error, please only input &#x27;y&#x27; or &#x27;n&#x27;: $&#123;RGB_END&#125;&quot;</span></span><br><span class="line">#        <span class="keyword">else</span></span><br><span class="line">#            <span class="keyword">break</span></span><br><span class="line">#        fi</span><br><span class="line">#    done</span><br><span class="line">#    [ <span class="string">&quot;$&#123;REBOOT_STATUS&#125;&quot;</span> == <span class="string">&#x27;y&#x27;</span> ] &amp;&amp; reboot</span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>(<span class="params"></span>) &#123;</span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;1/18 : Start Init CentOS7 Script $&#123;RGB_END&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;2/18 : Customize the profile (color and alias)$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    custom_profile</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;3/18 : Time zone adjustment$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">#    time_zone</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;4/18 : Disable selinux and firewalld$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">#    disable_software</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;5/18 : Disable Ctrl+Alt+Del$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    disable_cad</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;6/18 : Kernel parameter optimization$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">   # kernel_optimum</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;7/18 : The updatedb optimization$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    updatedb_optimum</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;8/18 : Adding swap space$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">   # new_swap</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;9/18 : Adjustment of ulimit$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    adjust_ulimit</span><br><span class="line">    </span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;10/18 : Enable tcp bbr congestion control algorithm$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    #open_bbr</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;11/18 : Enable IPV6$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    #open_ipv6</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;12/18 : Remove unnecessary users and user groups from the system$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    remove_users</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;13/18 : System permissions for sensitive files$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sys_permissions</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;14/18 : Modify Account Password Survival Policy$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    password_policy</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;15/18 : Maximum number of days an account is valid after password expiration strategy$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">#    change_useradd</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;16/18 : Secure configuration of SSH$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    sec_ssh</span><br><span class="line">    remote_login</span><br><span class="line">    #create_user</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;17/18 : Timeout Auto-Logout Configuration$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    #timeout_config</span><br><span class="line">    set_history_tmout</span><br><span class="line"></span><br><span class="line">    echo -e <span class="string">&quot;\n$&#123;RGB_INFO&#125;18/18 : Configure account login failure lockout policy$&#123;RGB_END&#125;&quot;</span></span><br><span class="line">    lockout_policy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#clear</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> $1 <span class="keyword">in</span></span><br><span class="line">     all)</span><br><span class="line">        backup</span><br><span class="line">	tool_info</span><br><span class="line">	check_root</span><br><span class="line">	check_os</span><br><span class="line">#	check_lock</span><br><span class="line">     	main</span><br><span class="line">      	 ;;</span><br><span class="line"></span><br><span class="line">     recover)</span><br><span class="line">     	 recover</span><br><span class="line">     	 ;;</span><br><span class="line">     *)</span><br><span class="line">      echo <span class="string">&quot;输入错误&quot;</span></span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux设置防火墙只允许特定IP访问指定端口</title>
    <url>/2024/03/11/Linux%E8%AE%BE%E7%BD%AE%E9%98%B2%E7%81%AB%E5%A2%99%E5%8F%AA%E5%85%81%E8%AE%B8%E7%89%B9%E5%AE%9AIP%E8%AE%BF%E9%97%AE%E6%8C%87%E5%AE%9A%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<h3 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h3><h4 id="1、目的"><a href="#1、目的" class="headerlink" title="1、目的"></a>1、目的</h4><p>　　服务器A使用端口1521，只有允许指定IP应用才可以访问，其它未经允许服务器ip地址无法正常访问。</p>
<h4 id="2、方法步骤"><a href="#2、方法步骤" class="headerlink" title="2、方法步骤"></a>2、方法步骤</h4><ul>
<li>启用防火墙。</li>
<li>检查端口与关闭端口访问。</li>
<li>添加设置特定ip访问特定端口。</li>
</ul>
<p>3、注意事项</p>
<p>　　启用防火墙的时候，一定要注意，如果是远程访问的话，一定要先添加远程端口的规则，否则将导致无法远程到该服务器上。如果出现该问题，看是否有其他同一段服务器，采用ssh ip方式进行登录，进行调整。</p>
<h3 id="二、启用防火墙"><a href="#二、启用防火墙" class="headerlink" title="二、启用防火墙"></a>二、启用防火墙</h3><p>　　首先查看防火墙是否开启</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看防火墙状态</span><br><span class="line">systemctl status firewalld</span><br><span class="line">#开启防火墙</span><br><span class="line">systemctl start firewalld</span><br><span class="line">#开机启动</span><br><span class="line">systemctl enable firewalld</span><br></pre></td></tr></table></figure>

<h3 id="三、检查端口与关闭端口访问"><a href="#三、检查端口与关闭端口访问" class="headerlink" title="三、检查端口与关闭端口访问"></a>三、检查端口与关闭端口访问</h3><p>1、确保端口关闭。如果已开放则关闭端口。此处端口如果开放，是所有ip都可以进行访问。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查询打开的端口</span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>

<p>2、关闭端口，如果端口未开启则无需关闭。  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#关闭端口1521</span><br><span class="line">firewall-cmd --zone=public --remove-port=1521/tcp --permanent</span><br><span class="line">#重新载入一下防火墙设置，使设置生效</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#查询打开的端口</span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure>

<h3 id="四、开方IP地址与端口"><a href="#四、开方IP地址与端口" class="headerlink" title="四、开方IP地址与端口"></a>四、开方IP地址与端口</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#允许ip192.168.1.1访问1521端口</span><br><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.1.1&quot; port protocol=&quot;tcp&quot; port=&quot;1521&quot; accept&quot;</span><br><span class="line">#重新载入一下防火墙设置，使设置生效</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#查看已设置规则</span><br><span class="line">firewall-cmd --zone=public --list-rich-rules</span><br></pre></td></tr></table></figure>

<h3 id="五、其他常用"><a href="#五、其他常用" class="headerlink" title="五、其他常用"></a>五、其他常用</h3><p>1、查看防火墙清单</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看所有已开放的临时端口　　</span><br><span class="line">firewall-cmd --list-all</span><br><span class="line">#查看防火墙状态</span><br><span class="line">systemctl status firewalld</span><br><span class="line">#打开防火墙</span><br><span class="line">systemctl start firewalld</span><br><span class="line">#重启防火墙 </span><br><span class="line">systemctl reload firewalld</span><br></pre></td></tr></table></figure>

<p>2、开放或限制端口（端口开放，所有ip都可以访问）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#开放1521端口</span><br><span class="line">#firewall-cmd --zone=public --add-port=1521/tcp --permanent</span><br><span class="line">#重新载入一下防火墙设置，使设置生效</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#通过如下命令查看1521是否生效</span><br><span class="line">firewall-cmd --zone=public --query-port=1521/tcp</span><br><span class="line">#系统打开的所有端口</span><br><span class="line">firewall-cmd --zone=public --list-ports</span><br><span class="line">#关掉刚刚打开的1521端口</span><br><span class="line">firewall-cmd --zone=public --remove-port=1521/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>3、批量开放或限制端口<br>　　批量开放端口，如从1001到1005这之间的端口我们全部要打开</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=1001-1005/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>　　批量限制端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=public --remove-port=1001-1005/tcp --permanent</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>4、开放或限制ip（设置规则）<br>　　开放IP为192.168.1.1的地址允许访问1521端口</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.1.1&quot; port protocol=&quot;tcp&quot; port=&quot;1521&quot; accept&quot;</span><br><span class="line">firewall-cmd --reload</span><br><span class="line">#查看已经设置的规则　</span><br><span class="line">firewall-cmd --zone=public --list-rich-rules</span><br></pre></td></tr></table></figure>

<p>　　限制IP为192.168.1.1的地址禁止访问1521端口即禁止访问机器</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.1.1&quot; port protocol=&quot;tcp&quot; port=&quot;1521&quot; reject&quot;</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>　　删除原设置规则</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --remove-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;192.168.1.1&quot; port protocol=&quot;tcp&quot; port=&quot;1521&quot; accept&quot;</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>5、如设置未生效，可尝试直接编辑规则文件，删掉原来的设置规则，重新载入一下防火墙即可  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vi /etc/firewalld/zones/public.xml</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux服务器配置外网代理</title>
    <url>/2024/03/11/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE%E5%A4%96%E7%BD%91%E4%BB%A3%E7%90%86/</url>
    <content><![CDATA[<h4 id="1、添加配置到-etc-profile文件"><a href="#1、添加配置到-etc-profile文件" class="headerlink" title="1、添加配置到&#x2F;etc&#x2F;profile文件"></a>1、添加配置到&#x2F;etc&#x2F;profile文件</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">export http_proxy=&quot;http://10.138.231.201:3128&quot;</span><br><span class="line">export https_proxy=&quot;https://10.138.231.201:3128&quot;</span><br><span class="line">export ftp_proxy=&quot;ftp://10.138.231.201:3128&quot;</span><br><span class="line">export socks_proxy=&quot;socks://10.138.231.201:3128&quot;</span><br></pre></td></tr></table></figure>

<h4 id="2、执行命令生效"><a href="#2、执行命令生效" class="headerlink" title="2、执行命令生效"></a>2、执行命令生效</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>如何在多个端口上运行SSH服务</title>
    <url>/2024/03/11/%E5%A6%82%E4%BD%95%E5%9C%A8%E5%A4%9A%E4%B8%AA%E7%AB%AF%E5%8F%A3%E4%B8%8A%E8%BF%90%E8%A1%8CSSH%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p>SSH（Secure Shell）是一种用于安全远程访问和管理服务器的协议。默认情况下，SSH服务器在Linux系统上使用22号端口进行通信。但是，有时我们可能需要在多个端口上运行SSH服务器，以满足特定的需求或增强服务器的安全性。</p>
<p>以下介绍如何在Linux系统上配置和运行多个SSH服务器端口。</p>
<h3 id="步骤1：编辑SSH服务器配置文件"><a href="#步骤1：编辑SSH服务器配置文件" class="headerlink" title="步骤1：编辑SSH服务器配置文件"></a>步骤1：编辑SSH服务器配置文件</h3><p>首先，我们需要编辑SSH服务器的配置文件<code>/etc/ssh/sshd_config</code>。使用文本编辑器（如<code>vi</code>或<code>nano</code>）打开该文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure>

<p>在配置文件中，找到以下行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">Port 22</span></span><br></pre></td></tr></table></figure>

<p>将其注释掉（在行的前面添加<code>#</code>符号），然后在下面添加以下行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Port 22</span><br><span class="line">Port 2222</span><br></pre></td></tr></table></figure>

<p>在这个示例中，我们添加了一个新的端口2222。您可以根据需要添加更多的端口。确保选择的端口未被其他服务使用并且未被防火墙阻塞。</p>
<p>保存并关闭文件。</p>
<h3 id="步骤2：重新启动SSH服务器"><a href="#步骤2：重新启动SSH服务器" class="headerlink" title="步骤2：重新启动SSH服务器"></a>步骤2：重新启动SSH服务器</h3><p>在编辑完配置文件后，我们需要重新启动SSH服务器以使更改生效。使用以下命令重启SSH服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart sshd</span><br></pre></td></tr></table></figure>

<h3 id="步骤3：配置防火墙"><a href="#步骤3：配置防火墙" class="headerlink" title="步骤3：配置防火墙"></a>步骤3：配置防火墙</h3><p>如果您的Linux系统上启用了防火墙（如iptables或firewalld），您需要配置防火墙以允许新的SSH端口通过。以下是一些示例命令：</p>
<h4 id="iptables防火墙"><a href="#iptables防火墙" class="headerlink" title="iptables防火墙"></a>iptables防火墙</h4><p>如果您使用的是iptables防火墙，可以使用以下命令允许新的SSH端口：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo iptables -A INPUT -p tcp --dport 2222 -j ACCEPT</span><br><span class="line">sudo service iptables save</span><br></pre></td></tr></table></figure>

<h4 id="firewalld防火墙"><a href="#firewalld防火墙" class="headerlink" title="firewalld防火墙"></a>firewalld防火墙</h4><p>如果您使用的是firewalld防火墙，可以使用以下命令允许新的SSH端口：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --zone=public --add-port=2222/tcp --permanent</span><br><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure>

<p>确保将上述命令中的端口号替换为您在步骤1中添加的实际端口。</p>
<h3 id="步骤4：验证SSH服务器的多个端口"><a href="#步骤4：验证SSH服务器的多个端口" class="headerlink" title="步骤4：验证SSH服务器的多个端口"></a>步骤4：验证SSH服务器的多个端口</h3><p>完成上述步骤后，您可以验证SSH服务器是否在多个端口上正常运行。使用以下命令检查SSH服务器的状态：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo systemctl status sshd</span><br></pre></td></tr></table></figure>

<p>如果一切正常，您将看到SSH服务器正在运行并监听在22号端口和其他您添加的端口上。</p>
<h3 id="连接到SSH服务器的不同端口"><a href="#连接到SSH服务器的不同端口" class="headerlink" title="连接到SSH服务器的不同端口"></a>连接到SSH服务器的不同端口</h3><p>现在，您可以使用SSH客户端连接到SSH服务器的不同端口。在连接时，需要指定您希望连接的端口号。以下是一些示例命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh user@server_ip -p 22</span><br></pre></td></tr></table></figure>

<p>这是连接到SSH服务器默认端口22的命令。如果您希望连接到添加的其他端口（例如2222），可以使用以下命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh user@server_ip -p 2222</span><br></pre></td></tr></table></figure>

<p>将上述命令中的<code>user</code>替换为您的用户名，<code>server_ip</code>替换为您的服务器IP地址，<code>2222</code>替换为您添加的实际端口号。</p>
<h3 id="安全注意事项"><a href="#安全注意事项" class="headerlink" title="安全注意事项"></a>安全注意事项</h3><p>在配置和使用多个SSH服务器端口时，请注意以下安全注意事项：</p>
<ol>
<li><strong>使用强密码</strong>：确保为SSH用户设置强密码，以增加[身份验证]的安全性。</li>
<li><strong>防火墙限制</strong>：确保仅允许必要的IP地址访问SSH服务器端口，并将不必要的端口阻止。</li>
<li><strong>禁用SSH root登录</strong>：禁止使用root用户直接登录SSH，使用普通用户登录后再切换到root用户。</li>
<li><strong>SSH密钥认证</strong>：考虑使用SSH密钥对进行身份验证，以提供更高的安全性。</li>
<li><strong>更新和升级</strong>：定期更新和升级您的SSH服务器以获取最新的安全补丁。</li>
</ol>
<p>遵循这些安全最佳实践可以帮助您保护SSH服务器免受潜在的安全威胁。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>本文详细介绍了如何在Linux系统中配置和运行多个SSH服务器端口。通过编辑SSH服务器配置文件、重新启动SSH服务、配置防火墙和使用适当的SSH连接命令，您可以在不同的端口上同时运行SSH服务器。这种配置可以提高服务器的安全性，并允许您在特定需求下使用不同的SSH端口。</p>
<p>请确保在配置和使用多个SSH端口时遵循安全最佳实践，以保护您的系统免受潜在的安全风险。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>SkyWalking使用详解</title>
    <url>/2024/03/11/SkyWalking%E4%BD%BF%E7%94%A8%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="1-1-简介"><a href="#1-1-简介" class="headerlink" title="1.1 简介"></a>1.1 简介</h2><p><code>skywalking</code> 是一个优秀的国产开源框架，2015年由个人吴晟（华为开发者）开源 ， 2017年加入<code>Apache</code>孵化器。短短两年就被<code>Apache</code>收入麾下，实力可见一斑。</p>
<p><code>skywalking</code>支持<code>dubbo</code>，<code>SpringCloud</code>，<code>SpringBoot</code>集成，代码无侵入，通信方式采用<code>GRPC</code>，性能较好，实现方式是<code>java</code>探针，支持告警，支持<code>JVM</code>监控，支持全局调用统计等等，功能较完善。</p>
<h2 id="1-2-如何选择"><a href="#1-2-如何选择" class="headerlink" title="1.2 如何选择"></a>1.2 如何选择</h2><p><code>Skywalking</code>相比于<code>zipkin</code>还是有很大的优势的，如下：</p>
<ul>
<li><p><code>skywalking</code>采用字节码增强的技术实现代码无侵入，<code>zipKin</code>代码侵入性比较高  </p>
</li>
<li><p><code>skywalking</code>功能比较丰富，报表统计，UI界面更加人性化</p>
</li>
</ul>
<h2 id="1-3-Skywalking架构"><a href="#1-3-Skywalking架构" class="headerlink" title="1.3 Skywalking架构"></a>1.3 Skywalking架构</h2><p><code>skywalking</code>和<code>zipkin</code>一样，也分为服务端和客户端，服务端负责收集日志数据并且展示，架构如下：<br><img src="/images/1710147079-4f2258e112578b8ad2e16981bbb89d46.png" alt="图片"></p>
<p>上述架构图中主要分为四个部分，如下：</p>
<ul>
<li>上面的<code>Agent</code>：负责收集日志数据，并且传递给中间的<code>OAP服务器</code></li>
<li>中间的<code>OAP</code>：负责接收 <code>Agent</code> 发送的 <code>Tracing</code> 和 <code>Metric</code> 的数据信息，然后进行分析(<code>Analysis Core</code>) ，存储到外部存储器( <code>Storage</code> )，最终提供查询( <code>Query</code> )功能。</li>
<li>左面的<code>UI</code>：负责提供<code>web</code>控制台，查看链路，查看各种指标，性能等等。</li>
<li>右面<code>Storage</code>：负责数据的存储，支持多种存储类型。</li>
</ul>
<p>看了架构图之后，思路很清晰了，<code>Agent</code>负责收集日志传输数据，通过<code>GRPC</code>的方式传递给<code>OAP</code>进行分析并且存储到数据库中，最终通过UI界面将分析的统计报表、服务依赖、拓扑关系图展示出来。</p>
<h2 id="1-4-服务端搭建"><a href="#1-4-服务端搭建" class="headerlink" title="1.4 服务端搭建"></a>1.4 服务端搭建</h2><p><code>skywalking</code>同样是通过<code>jar</code>包方式启动，需要下载jar包，地址：<a href="https://skywalking.apache.org/downloads/">https://skywalking.apache.org/downloads/</a></p>
<h3 id="1-4-1-下载安装包"><a href="#1-4-1-下载安装包" class="headerlink" title="1.4.1 下载安装包"></a>1.4.1 下载安装包</h3><p>选择V9.5.0这个版本，如下图：<br><img src="/images/1710147079-08ef03ab0b56230e265cdb4354cd2b50.png" alt="在这里插入图片描述"><br>解压之后完整目录如下图：<br><img src="/images/1710147079-ac241156cc207bda44b5428f57e04b1b.png" alt="在这里插入图片描述"><br>重要的目录结构分析如下：</p>
<ul>
<li><code>agent</code>：客户端需要指定的目录，其中有一个jar，就是负责和客户端整合收集日志<br><code>skywalking8.7.0</code>之后的版本，<code>agent</code>的相关代码被抽离出skywalking当中，需要自行下载<code>agent</code>，从官网下载与之相对应的：<a href="https://skywalking.apache.org/downloads/">https://skywalking.apache.org/downloads/</a></li>
<li><code>bin</code>：服务端启动的脚本</li>
<li><code>config</code>：一些配置文件的目录</li>
<li><code>logs</code>：oap服务的日志目录</li>
<li><code>oap-libs</code>：oap所需的依赖目录</li>
<li><code>webapp</code>：UI服务的目录</li>
</ul>
<h3 id="1-4-2-配置修改"><a href="#1-4-2-配置修改" class="headerlink" title="1.4.2 配置修改"></a>1.4.2 配置修改</h3><p>启动之前需要对配置文件做一些修改，修改如下：</p>
<h4 id="1-4-2-1-config-application-yml"><a href="#1-4-2-1-config-application-yml" class="headerlink" title="1.4.2.1 config&#x2F;application.yml"></a>1.4.2.1 config&#x2F;application.yml</h4><p>这个是<code>oap</code>服务的配置文件，需要修改注册中心为<code>nacos</code>，如下图：<br><img src="/images/1710147079-50497ee93750df3770c7866f9a9a2a74.png" alt="图片"></p>
<ul>
<li>配置①：修改默认注册中心选择<code>nacos</code>，这样就不用在启动参数中指定了。</li>
<li>配置②：修改<code>nacos</code>的相关配置</li>
</ul>
<h4 id="1-4-2-2-webapp-webapp-yml"><a href="#1-4-2-2-webapp-webapp-yml" class="headerlink" title="1.4.2.2 webapp&#x2F;webapp.yml"></a>1.4.2.2 webapp&#x2F;webapp.yml</h4><p>这个是UI服务的配置文件，其中有一个<code>server.port</code>配置，是UI服务的端口，默认<code>8080</code>，将其改成8888，避免端口冲突，如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">serverPort:</span> <span class="string">$&#123;SW_SERVER_PORT:-8888&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-4-3-启动服务"><a href="#1-4-3-启动服务" class="headerlink" title="1.4.3 启动服务"></a>1.4.3 启动服务</h3><p>启动命令在<code>/bin</code>目录下，这里需要启动两个服务，如下：</p>
<ul>
<li><code>oap服务</code>：对应的启动脚本<code>oapService.bat</code>，Linux下对应的后缀是<code>sh</code></li>
<li><code>UI服务</code>：对应的启动脚本<code>webappService.bat</code>，Linux下对应的后缀是<code>sh</code></li>
</ul>
<p>当然还有一个<code>startup.bat</code>启动文件，可以直接启动上述两个服务，我们可以直接使用这个脚本，直接双击，将会弹出两个窗口则表示启动成功，如下图：<br><img src="/images/1710147079-57562d8347e64cbe39cd4f71c35d9b8f.png" alt="图片"></p>
<p>此时直接访问：<a href="http://localhost:8888/%EF%BC%8C%E7%9B%B4%E6%8E%A5%E8%BF%9B%E5%85%A5UI%E7%AB%AF%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A">http://localhost:8888/，直接进入UI端，如下图：</a><br><img src="/images/1710147079-661c029404ba520ec0de251fffc3516c.png" alt="在这里插入图片描述"></p>
<h2 id="1-5-客户端搭建"><a href="#1-5-客户端搭建" class="headerlink" title="1.5 客户端搭建"></a>1.5 客户端搭建</h2><p>客户端也就是单个微服务，由于<code>Skywalking</code>采用字节码增强技术，因此对于微服务无代码侵入，只要是普通的微服务即可，不需要引入什么依赖。</p>
<p>想要传输数据必须借助<code>skywalking</code>提供的<code>agent</code>，只需要在启动参数指定即可，命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">-javaagent:D:\SoftWare\Tools\SkyWalking\skywalking-agent\skywalking-agent.jar</span><br><span class="line">-Dskywalking.agent.service_name=skywalking-product-service</span><br><span class="line">-Dskywalking.collector.backend_service=127.0.0.1:11800</span><br></pre></td></tr></table></figure>

<p>上述命令解析如下：</p>
<ul>
<li><code>-javaagent</code>：指定<code>skywalking</code>中的<code>agent</code>中的<code>skywalking-agent.jar</code>的路径</li>
<li><code>-Dskywalking.agent.service_name</code>：指定在<code>skywalking</code>中的服务名称，一般是微服务的<code>spring.application.name</code></li>
<li><code>-Dskywalking.collector.backend_service</code>：指定<code>oap</code>服务绑定的地址，如果是本地，由于<code>oap</code>服务默认的端口是<code>11800</code>，因此只需要配置为<code>127.0.0.1:11800</code></li>
</ul>
<p><code>注意</code>：<code>agent</code>的<code>jar</code>包路径不能包含中文，不能有空格，否则运行不成功。</p>
<h2 id="1-6-数据持久化"><a href="#1-6-数据持久化" class="headerlink" title="1.6 数据持久化"></a>1.6 数据持久化</h2><p>只要服务端重启之后，这些链路追踪数据将会丢失了，因为<code>skywalking</code>默认持久化的方式是存储在内存中。<br>当然这里也是可以通过插拔方式的替换掉存储中间件，企业中往往是使用<code>ES</code>存储，这里介绍一下MySQL的方式存储</p>
<h3 id="1-6-1-修改配置文件"><a href="#1-6-1-修改配置文件" class="headerlink" title="1.6.1 修改配置文件"></a>1.6.1 修改配置文件</h3><p>修改 <code>config/application.yml</code> 文件中的存储方式，总共需要修改两处地方。</p>
<p>修改默认的存储方式为mysql，如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">storage:</span></span><br><span class="line">  <span class="attr">selector:</span> <span class="string">$&#123;SW_STORAGE:mysql&#125;</span></span><br></pre></td></tr></table></figure>

<p>修改Mysql相关的信息，比如用户名、密码等，如下图：<br><img src="/images/1710147079-ed8833dd958746ddfc990f2e22da8a16.png" alt="图片"></p>
<h3 id="1-6-2-添加MySQL的jdbc依赖"><a href="#1-6-2-添加MySQL的jdbc依赖" class="headerlink" title="1.6.2 添加MySQL的jdbc依赖"></a>1.6.2 添加MySQL的jdbc依赖</h3><p>默认的 <code>oap</code> 中是没有<code>jdbc</code>驱动依赖，因此需要我们手动添加一下，只需要将驱动的jar放在<code>oap-libs</code>文件夹中，如下图：</p>
<p><img src="/images/1710147079-13cc432beff8116283f64f538ec3980b.png" alt="图片"><br>好了，已经配置完成，启动服务端，在<code>skywalking</code>这个数据库中将会自动创建表，如下图：</p>
<p><img src="/images/1710147079-09505e89c2ee580d663c5bf7ebb8a341.png" alt="图片"></p>
<h2 id="1-7-日志监控"><a href="#1-7-日志监控" class="headerlink" title="1.7 日志监控"></a>1.7 日志监控</h2><p>在<code>skywalking</code>的<code>UI</code>端有一个日志的模块，用于收集客户端的日志，默认是没有数据的，那么需要如何将日志数据传输到<code>skywalking</code>中呢？</p>
<p>日志框架的种类很多，比较出名的有log4j，logback，log4j2，那么就以<code>logback</code>为例子介绍一下如何配置，官方文档如下：</p>
<blockquote>
<p>log4j：<a href="https://skywalking.apache.org/docs/skywalking-java/v8.8.0/en/setup/service-agent/java-agent/application-toolkit-log4j-1.x/">https://skywalking.apache.org/docs/skywalking-java/v8.8.0/en/setup/service-agent/java-agent/application-toolkit-log4j-1.x/</a><br>log4j2：<a href="https://skywalking.apache.org/docs/skywalking-java/v8.8.0/en/setup/service-agent/java-agent/application-toolkit-log4j-2.x/">https://skywalking.apache.org/docs/skywalking-java/v8.8.0/en/setup/service-agent/java-agent/application-toolkit-log4j-2.x/</a><br>logback：<a href="https://skywalking.apache.org/docs/skywalking-java/v8.8.0/en/setup/service-agent/java-agent/application-toolkit-logback-1.x/">https://skywalking.apache.org/docs/skywalking-java/v8.8.0/en/setup/service-agent/java-agent/application-toolkit-logback-1.x/</a></p>
</blockquote>
<h3 id="1-7-1-添加依赖"><a href="#1-7-1-添加依赖" class="headerlink" title="1.7.1 添加依赖"></a>1.7.1 添加依赖</h3><p>根据官方文档，需要先添加依赖，如下：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 如果想在项目代码中获取链路TraceId，则需要引入此依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.skywalking<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apm-toolkit-trace<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 自定义功能相关, 比如自定义tag --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.skywalking<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apm-toolkit-opentracing<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- skywalking 日志记录 logback插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.skywalking<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apm-toolkit-logback-1.x<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.8.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="1-7-2-添加配置文件"><a href="#1-7-2-添加配置文件" class="headerlink" title="1.7.2 添加配置文件"></a>1.7.2 添加配置文件</h3><p>新建一个<code>logback-spring.xml</code>放在<code>resource</code>目录下，配置如下：  </p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">&quot;true&quot;</span> <span class="attr">scanPeriod</span>=<span class="string">&quot; 5 seconds&quot;</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--控制台日志打印--&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- with the MDC, set %X&#123;tid&#125; in Pattern --&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- MDC是什么：MDC采用Map的方式存储上下文，线程独立的，子线程会从父线程拷贝上下文 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;stdout&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.ConsoleAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%X&#123;tid&#125;] [%thread] %-5level %logger&#123;36&#125; -%msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--skywalking日志上报--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;grpc-log&quot;</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.log.GRPCLogClientAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.mdc.TraceIdMDCPatternLogbackLayout&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%X&#123;tid&#125;] [%thread] %-5level %logger&#123;36&#125; -%msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--日志文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">&quot;fileAppender&quot;</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.FileAppender&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>./logs/gateway-all.log<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoder</span> <span class="attr">class</span>=<span class="string">&quot;ch.qos.logback.core.encoder.LayoutWrappingEncoder&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">layout</span> <span class="attr">class</span>=<span class="string">&quot;org.apache.skywalking.apm.toolkit.log.logback.v1.x.TraceIdPatternLogbackLayout&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>[%sw_ctx] [%level] %d&#123;yyyy-MM-dd HH:mm:ss.SSS&#125; [%thread] %logger:%line - %msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">layout</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;stdout&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;grpc-log&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">&quot;fileLogger&quot;</span> <span class="attr">level</span>=<span class="string">&quot;INFO&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">&quot;fileAppender&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">logger</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><code>注意</code>：如果<code>agent</code>和<code>oap</code>服务不在同一台服务器上，需要在<code>/agent/config/agent.config</code>配置文件末尾添加如下配置：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">plugin.toolkit.log.grpc.reporter.server_host=$&#123;SW_GRPC_LOG_SERVER_HOST:10.10.10.1&#125;</span><br><span class="line">plugin.toolkit.log.grpc.reporter.server_port=$&#123;SW_GRPC_LOG_SERVER_PORT:11800&#125;</span><br><span class="line">plugin.toolkit.log.grpc.reporter.max_message_size=$&#123;SW_GRPC_LOG_MAX_MESSAGE_SIZE:10485760&#125;</span><br><span class="line">plugin.toolkit.log.grpc.reporter.upstream_timeout=$&#123;SW_GRPC_LOG_GRPC_UPSTREAM_TIMEOUT:30&#125;</span><br></pre></td></tr></table></figure>

<p>配置分析如下：</p>
<table>
<thead>
<tr>
<th>配置名</th>
<th>解释</th>
<th>默认值</th>
</tr>
</thead>
<tbody><tr>
<td>plugin.toolkit.log.transmit_formatted</td>
<td>是否以格式化的格式传输记录的数据</td>
<td>TRUE</td>
</tr>
<tr>
<td>plugin.toolkit.log.grpc.reporter.server_host</td>
<td>指定要向其报告日志数据的grpc服务器的主机</td>
<td>127.0.0.1</td>
</tr>
<tr>
<td>plugin.toolkit.log.grpc.reporter.server_port</td>
<td>指定要向其报告日志数据的grpc服务器的端口</td>
<td>11800</td>
</tr>
<tr>
<td>plugin.toolkit.log.grpc.reporter.max_message_size</td>
<td>指定grpc客户端要报告的日志数据的最大大小</td>
<td>10485760</td>
</tr>
<tr>
<td>plugin.toolkit.log.grpc.reporter.upstream_timeout</td>
<td>客户端向上游发送数据时将超市多长时间，单位：秒</td>
<td>30</td>
</tr>
</tbody></table>
<h2 id="1-8-性能剖析"><a href="#1-8-性能剖析" class="headerlink" title="1.8 性能剖析"></a>1.8 性能剖析</h2><p><code>skywalking</code>在性能剖析方面真的是非常强大，提供到基于堆栈的分析结果，能够让运维人员一眼定位到问题。</p>
<p>假如一个&#x2F;order&#x2F;list接口有超时，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> List&lt;Order&gt; <span class="title function_">list</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException&#123;</span><br><span class="line">	Thread.sleep(<span class="number">2000</span>);</span><br><span class="line">	<span class="keyword">return</span> LongStream.of(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>).mapToObj(id-&gt;<span class="keyword">new</span> <span class="title class_">Order</span>(id,<span class="number">20231000L</span>,<span class="string">&quot;test&quot;</span>,<span class="string">&quot;test&quot;</span>)).collect(Collectors.toList());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>上述代码中休眠了2秒，看看如何在<code>skywalking</code> 中定位这个问题。</p>
<p>在性能剖析模块-&gt;新建任务-&gt;选择服务、填写端点、监控时间，操作如下图：<br><img src="/images/1710147079-10471af65ab13ccff95d4ac7725fd627.png" alt="图片"></p>
<p>上图中选择了最大采样数为5，则直接访问5次：<a href="http://localhost:1003/order/list%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%89%E6%8B%A9%E8%BF%99%E4%B8%AA%E4%BB%BB%E5%8A%A1%E5%B0%86%E4%BC%9A%E5%87%BA%E7%8E%B0%E7%9B%91%E6%8E%A7%E5%88%B0%E7%9A%84%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%9A">http://localhost:1003/order/list，然后选择这个任务将会出现监控到的数据，如下图：</a></p>
<p><img src="/images/1710147079-336eb39939a9e94ce4741ac02dfb3e21.png" alt="图片"></p>
<p>上图中可以看到{GET}&#x2F;order&#x2F;list这个接口上耗费了2秒以上，因此选择这个接口点击分析，可以看到详细的堆栈信息，如下图：</p>
<p><img src="/images/1710147079-1c49472c75b924cbe77c909f9de4bb3d.png" alt="图片"><br>如何定位到睡眠2秒钟的那一行代码呢？直接往下翻，如下图：<br><img src="/images/1710147079-1a96780ac94a6e471c2a018feecdcda9.png" alt="图片"></p>
<p>是不是很清楚了，在OrderController这个接口线程睡眠了两秒……..</p>
<h2 id="1-9-监控告警"><a href="#1-9-监控告警" class="headerlink" title="1.9 监控告警"></a>1.9 监控告警</h2><p>对于服务的异常信息，比如接口有较长延迟，<code>skywalking</code>也做出了告警功能，如下图：<br><img src="/images/1710147079-c39811116bfc6f3416a7744cb38f36d9.png" alt="图片"></p>
<p><code>skywalking</code>中有一些默认的告警规则，如下：</p>
<ul>
<li>最近3分钟内服务的平均响应时间超过1秒</li>
<li>最近2分钟服务成功率低于80%</li>
<li>最近3分钟90%服务响应时间超过1秒</li>
<li>最近2分钟内服务实例的平均响应时间超过1秒</li>
</ul>
<p>当然除了以上四种，随着<code>Skywalking</code>不断迭代也会新增其他规则，这些规则的配置在<code>config/alarm-settings.yml</code>配置文件中，如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Sample alarm rules.</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="comment"># Rule unique name, must be ended with `_rule`.</span></span><br><span class="line">  <span class="attr">service_resp_time_rule:</span></span><br><span class="line">    <span class="attr">metrics-name:</span> <span class="string">service_resp_time</span></span><br><span class="line">    <span class="attr">op:</span> <span class="string">&quot;&gt;&quot;</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">period:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">silence-period:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">Response</span> <span class="string">time</span> <span class="string">of</span> <span class="string">service</span> &#123;<span class="string">name</span>&#125; <span class="string">is</span> <span class="string">more</span> <span class="string">than</span> <span class="string">1000ms</span> <span class="string">in</span> <span class="number">3</span> <span class="string">minutes</span> <span class="string">of</span> <span class="string">last</span> <span class="number">10</span> <span class="string">minutes.</span></span><br><span class="line">  <span class="attr">service_sla_rule:</span></span><br><span class="line">    <span class="comment"># Metrics value need to be long, double or int</span></span><br><span class="line">    <span class="attr">metrics-name:</span> <span class="string">service_sla</span></span><br><span class="line">    <span class="attr">op:</span> <span class="string">&quot;&lt;&quot;</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">8000</span></span><br><span class="line">    <span class="comment"># The length of time to evaluate the metrics</span></span><br><span class="line">    <span class="attr">period:</span> <span class="number">10</span></span><br><span class="line">    <span class="comment"># How many times after the metrics match the condition, will trigger alarm</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line">    <span class="comment"># How many times of checks, the alarm keeps silence after alarm triggered, default as same as period.</span></span><br><span class="line">    <span class="attr">silence-period:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">Successful</span> <span class="string">rate</span> <span class="string">of</span> <span class="string">service</span> &#123;<span class="string">name</span>&#125; <span class="string">is</span> <span class="string">lower</span> <span class="string">than</span> <span class="number">80</span><span class="string">%</span> <span class="string">in</span> <span class="number">2</span> <span class="string">minutes</span> <span class="string">of</span> <span class="string">last</span> <span class="number">10</span> <span class="string">minutes</span></span><br><span class="line">  <span class="attr">service_resp_time_percentile_rule:</span></span><br><span class="line">    <span class="comment"># Metrics value need to be long, double or int</span></span><br><span class="line">    <span class="attr">metrics-name:</span> <span class="string">service_percentile</span></span><br><span class="line">    <span class="attr">op:</span> <span class="string">&quot;&gt;&quot;</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">1000</span><span class="string">,1000,1000,1000,1000</span></span><br><span class="line">    <span class="attr">period:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">3</span></span><br><span class="line">    <span class="attr">silence-period:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">Percentile</span> <span class="string">response</span> <span class="string">time</span> <span class="string">of</span> <span class="string">service</span> &#123;<span class="string">name</span>&#125; <span class="string">alarm</span> <span class="string">in</span> <span class="number">3</span> <span class="string">minutes</span> <span class="string">of</span> <span class="string">last</span> <span class="number">10</span> <span class="string">minutes,</span> <span class="string">due</span> <span class="string">to</span> <span class="string">more</span> <span class="string">than</span> <span class="string">one</span> <span class="string">condition</span> <span class="string">of</span> <span class="string">p50</span> <span class="string">&gt;</span> <span class="number">1000</span><span class="string">,</span> <span class="string">p75</span> <span class="string">&gt;</span> <span class="number">1000</span><span class="string">,</span> <span class="string">p90</span> <span class="string">&gt;</span> <span class="number">1000</span><span class="string">,</span> <span class="string">p95</span> <span class="string">&gt;</span> <span class="number">1000</span><span class="string">,</span> <span class="string">p99</span> <span class="string">&gt;</span> <span class="number">1000</span></span><br><span class="line">  <span class="attr">service_instance_resp_time_rule:</span></span><br><span class="line">    <span class="attr">metrics-name:</span> <span class="string">service_instance_resp_time</span></span><br><span class="line">    <span class="attr">op:</span> <span class="string">&quot;&gt;&quot;</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">period:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">silence-period:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">Response</span> <span class="string">time</span> <span class="string">of</span> <span class="string">service</span> <span class="string">instance</span> &#123;<span class="string">name</span>&#125; <span class="string">is</span> <span class="string">more</span> <span class="string">than</span> <span class="string">1000ms</span> <span class="string">in</span> <span class="number">2</span> <span class="string">minutes</span> <span class="string">of</span> <span class="string">last</span> <span class="number">10</span> <span class="string">minutes</span></span><br><span class="line">  <span class="attr">database_access_resp_time_rule:</span></span><br><span class="line">    <span class="attr">metrics-name:</span> <span class="string">database_access_resp_time</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">op:</span> <span class="string">&quot;&gt;&quot;</span></span><br><span class="line">    <span class="attr">period:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">Response</span> <span class="string">time</span> <span class="string">of</span> <span class="string">database</span> <span class="string">access</span> &#123;<span class="string">name</span>&#125; <span class="string">is</span> <span class="string">more</span> <span class="string">than</span> <span class="string">1000ms</span> <span class="string">in</span> <span class="number">2</span> <span class="string">minutes</span> <span class="string">of</span> <span class="string">last</span> <span class="number">10</span> <span class="string">minutes</span></span><br><span class="line">  <span class="attr">endpoint_relation_resp_time_rule:</span></span><br><span class="line">    <span class="attr">metrics-name:</span> <span class="string">endpoint_relation_resp_time</span></span><br><span class="line">    <span class="attr">threshold:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">op:</span> <span class="string">&quot;&gt;&quot;</span></span><br><span class="line">    <span class="attr">period:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">count:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">message:</span> <span class="string">Response</span> <span class="string">time</span> <span class="string">of</span> <span class="string">endpoint</span> <span class="string">relation</span> &#123;<span class="string">name</span>&#125; <span class="string">is</span> <span class="string">more</span> <span class="string">than</span> <span class="string">1000ms</span> <span class="string">in</span> <span class="number">2</span> <span class="string">minutes</span> <span class="string">of</span> <span class="string">last</span> <span class="number">10</span> <span class="string">minutes</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="attr">webhooks:</span></span><br><span class="line"><span class="comment">#  - http://127.0.0.1/notify/</span></span><br><span class="line"><span class="comment">#  - http://127.0.0.1/go-wechat/</span></span><br></pre></td></tr></table></figure>

<p>每个规则都由相同的属性组成，这些属性的含义如下图：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>metrics-name</td>
<td>oal脚本中度量名称</td>
</tr>
<tr>
<td>threshold</td>
<td>阈值，与metrics-name和下面的比较符号相匹配</td>
</tr>
<tr>
<td>op</td>
<td>比较操作符号，可以设定&gt;，&lt;，&#x3D;</td>
</tr>
<tr>
<td>period</td>
<td>多久检查一次当前的指标数据是否符合告警规则，单位：分钟</td>
</tr>
<tr>
<td>count</td>
<td>达到多少次后，发送告警消息</td>
</tr>
<tr>
<td>silence-period</td>
<td>在多久之内，忽略相同告警信息</td>
</tr>
<tr>
<td>message</td>
<td>告警消息内容</td>
</tr>
<tr>
<td>include-names</td>
<td>本规则告警生效服务列表</td>
</tr>
</tbody></table>
<p>如果想要调整默认的规则，比如监控返回的信息，监控的参数等等，只需要改动上述配置文件中的参数即可。<br>当然除了以上默认的几种规则，<code>skywalking</code>还适配了一些钩子（<code>webhooks</code>）。其实就是相当于一个回调，一旦触发了上述规则告警，<code>skywalking</code>则会调用配置的<code>webhook</code>，这样开发者就可以定制一些处理方法，比如发送邮件、微信、钉钉通知运维人员处理。</p>
<p>当然这个钩子也是有些规则的，如下：</p>
<ul>
<li>POST请求</li>
<li>application&#x2F;json 接收数据</li>
<li>接收的参数必须是AlarmMessage中指定的参数。</li>
</ul>
<p><code>注意</code>：<code>AlarmMessage</code> 这个类随着<code>skywalking</code> 版本的迭代可能出现不同，一定要到对应版本源码中去找到这个类，拷贝其中的属性。这个类在源码的路径：org.apache.skywalking.oap.server.core.alarm，如下图：</p>
<p><img src="/images/1710147079-82f721bbf043ca9baa6ec309c9871487.png" alt="图片"></p>
<p>新建一个告警模块：skywalking-alarm1004，其中利用<code>webhook</code>定义一个接口，如下：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/alarm&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlarmController</span>&#123;</span><br><span class="line">	<span class="comment">// skywalking回调触发方法</span></span><br><span class="line">	<span class="meta">@PostMapping(&quot;/receive&quot;)</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">receive</span><span class="params">(<span class="meta">@RequestBody</span> List&lt;AlarmMessage&gt; list)</span>&#123;</span><br><span class="line">		<span class="comment">//todo 此处可以填写发送邮件，微信，钉钉</span></span><br><span class="line">		log.info(<span class="string">&quot;------------------&quot;</span>);</span><br><span class="line">		log.info(JSON.toJSONString(list));</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>接口定制完成后，只需要在<code>config/alarm-settings.yml</code>配置文件中添加这个钩子，如下图：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">webhooks:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">http://127.0.0.1:1004/alarm/receive</span></span><br><span class="line"><span class="comment">#  - http://127.0.0.1/go-wechat/</span></span><br></pre></td></tr></table></figure>

<p>好了，这就已经配置完成了，测试也很简单，还是调用上面案例中的睡眠两秒的接口：<a href="http://localhost:1003/order/list%EF%BC%8C%E5%A4%9A%E8%B0%83%E7%94%A8%E5%87%A0%E6%AC%A1%EF%BC%8C%E5%88%99%E4%BC%9A%E8%A7%A6%E5%8F%91%E5%91%8A%E8%AD%A6%EF%BC%8C%E6%8E%A7%E5%88%B6%E5%8F%B0%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97%E5%A6%82%E4%B8%8B%EF%BC%9A">http://localhost:1003/order/list，多调用几次，则会触发告警，控制台打印日志如下：</a><br><img src="/images/1710147079-3d4d94b105337527d0a50a664a43af79.png" alt="图片"></p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux查询top5 cpu使用率的进程并将其相关信息推送至pushgateway</title>
    <url>/2024/03/12/Linux%E6%9F%A5%E8%AF%A2top5-cpu%E4%BD%BF%E7%94%A8%E7%8E%87%E7%9A%84%E8%BF%9B%E7%A8%8B%E5%B9%B6%E5%B0%86%E5%85%B6%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF%E6%8E%A8%E9%80%81%E8%87%B3pushgateway/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">author lijintao</span></span><br><span class="line"></span><br><span class="line">counter=0</span><br><span class="line">server_ip=`ip -o route get to 8.8.8.8 | sed -n &#x27;s/.*src \([0-9.]\+\).*/\1/p&#x27;`</span><br><span class="line">PUSHGATEWAY_URL=&quot;http://10.250.5.15:32555/metrics/job/cpu_top/instance/$server_ip&quot;</span><br><span class="line"></span><br><span class="line">ps -eo user,pid,pcpu,pmem,args --sort=-pcpu | head -n 6 | grep -v &#x27;COMMAND&#x27; | while read -r line;do</span><br><span class="line">        user=$(echo &quot;$line&quot; | awk &#x27;&#123;print $1&#125;&#x27;)</span><br><span class="line">        pid=$(echo &quot;$line&quot; | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">        pcpu=$(echo &quot;$line&quot; | awk &#x27;&#123;print $3&#125;&#x27;)</span><br><span class="line">        pmem=$(echo &quot;$line&quot; | awk &#x27;&#123;print $4&#125;&#x27;)</span><br><span class="line">        command=$(echo &quot;$line&quot; | cut -d&#x27;/&#x27; -f2-)</span><br><span class="line">        ((counter+=1))</span><br><span class="line">        cat &lt;&lt;-EOF | curl --data-binary @- $PUSHGATEWAY_URL/cputop/$counter</span><br><span class="line">        # cputop</span><br><span class="line">        cputop&#123;ctop=&quot;$counter&quot;,ip=&quot;$server_ip&quot;,user=&quot;$user&quot;,pid=&quot;$pid&quot;,pcpu=&quot;$pcpu&quot;,pmem=&quot;$pmem&quot;,command=&quot;/$command&quot;&#125; 1</span><br><span class="line">EOF</span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>日志监控之Loki工具</title>
    <url>/2024/03/12/%E6%97%A5%E5%BF%97%E7%9B%91%E6%8E%A7%E4%B9%8BLoki%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h2 id="1-1-引言"><a href="#1-1-引言" class="headerlink" title="1.1 引言"></a>1.1 引言</h2><p><code>Loki</code> 是一个轻量级的日志收集、分析的应用，采用的是<code>promtail</code>的方式来获取日志内容并送到loki里面进行存储，最终在<code>grafana</code>的<code>datasource</code>里面添加数据源进行日志的展示、查询。</p>
<p>官方文档：<a href="https://kubernetes.io/docs/concepts/security/pod-security-policy">https://kubernetes.io/docs/concepts/security/pod-security-policy</a></p>
<p><code>loki</code>的持久化存储支持<code>azure、gcs、s3、swift、local</code>这5中类型，其中常用的是<code>s3、local</code>。另外，它还支持很多种日志搜集类型，像最常用的<code>logstash、fluentbit</code>也在官方支持的列表中。</p>
<p>优点：</p>
<ul>
<li>支持的客户端，如<code>Promtail，Fluentbit，Fluentd，Vector，Logstash和Grafana Agent</code></li>
<li>首选代理<code>Promtail</code>，可以多来源提取日志，包括本地日志文件，<code>systemd，Windows</code>事件日志，<code>Docker</code>日志记录驱动程序等</li>
<li>没有日志格式要求，包括<code>JSON，XML，CSV，logfmt</code>，非结构化文本</li>
<li>使用与查询指标相同的语法查询日志</li>
<li>日志查询时允许动态筛选和转换日志行</li>
<li>可以轻松地计算日志中的需要的指标</li>
<li>引入时的最小索引意味着您可以在查询时动态地对日志进行切片和切块，以便在出现新问题时回答它们</li>
<li>云原生支持，使用<code>Prometheus</code>形式抓取数据</li>
</ul>
<p>各日志收集组件简单对比</p>
<table>
<thead>
<tr>
<th>名称</th>
<th>安装的组件</th>
<th>优点</th>
</tr>
</thead>
<tbody><tr>
<td>ELK&#x2F;EFK</td>
<td>elasticsearch、logstash， kibana、filebeat、kafka&#x2F;redis</td>
<td>支持自定义grok正则解析复杂日志内容；dashboard支持主富的可视化展示</td>
</tr>
<tr>
<td>Loki</td>
<td>grafana、loki、promtail</td>
<td>占用资源小；grafana原生支持；查询速度快</td>
</tr>
</tbody></table>
<h2 id="1-2-Loki工作方式"><a href="#1-2-Loki工作方式" class="headerlink" title="1.2 Loki工作方式"></a>1.2 Loki工作方式</h2><h3 id="1-2-1-日志解析格式"><a href="#1-2-1-日志解析格式" class="headerlink" title="1.2.1 日志解析格式"></a>1.2.1 日志解析格式</h3><p><img src="/images/1710231105-75fd1137dc7b14a9a7a4d3a81411514a.png" alt="图片"><br>从上面的图中我们可以看到，它在解析日志的时候是以<code>index</code>为主的，<code>index</code>包括时间戳和<code>pod</code>的部分<code>label</code>（其他<code>label</code>为<code>filename</code>、<code>containers</code>等），其余的是日志内容。具体查询效果如下：<br><img src="/images/1710231105-6551f7a9da0e30dc51697776f87527c7.png" alt="在这里插入图片描述"><br><code>&#123;app=&quot;loki&quot;,namespace=&quot;kube-public&quot;&#125;</code>为索引<br><img src="/images/1710231105-827e70450946f6f3497959dc1842ce89.png" alt="在这里插入图片描述"></p>
<h3 id="1-2-2-日志搜集架构模式"><a href="#1-2-2-日志搜集架构模式" class="headerlink" title="1.2.2 日志搜集架构模式"></a>1.2.2 日志搜集架构模式</h3><p><img src="/images/1710231105-9f1dab8878e9628ba52d303e4e0c4eda.png" alt="在这里插入图片描述"><br>在使用过程中，官方推荐使用<code>promtail</code>做为<code>agent</code>以<code>DaemonSet</code>方式部署在<code>kubernetes</code>的<code>worker</code>节点上搜集日志。另外也可以用上面提到的其他日志收集工具来收取，这篇文章在结尾处会附上其他工具的配置方式。</p>
<h3 id="1-2-3-Loki部署模式"><a href="#1-2-3-Loki部署模式" class="headerlink" title="1.2.3 Loki部署模式"></a>1.2.3 Loki部署模式</h3><p><code>Loki</code>由许多组件微服务构建而成，微服务组件有5个。在这5个里面添加缓存用来把数据放起来加快查询。数据放在共享存储里面配置<code>memberlist_config</code>部分并在实例之间共享状态，将<code>Loki</code>进行无限横向扩展。</p>
<p>在配置完<code>memberlist_config</code>部分后采用轮询的方式查找数据。为了使用方便官方把所有的微服务编译成一个二进制，可以通过命令行参数<code>-target</code>控制，支持<code>all、read、write</code>，我们在部署时根据日志量的大小可以指定不同模式</p>
<ul>
<li><code>all</code>（读写模式）<br>服务启动后，我们做的数据查询、数据写入都是来自这一个节点<br><img src="/images/1710231105-3b322018d5889ef0d117280c07afb17f.png" alt="在这里插入图片描述"></li>
<li><code>read/write</code>（读写分离模式）<br>在读写分离模式下运行时<code>fronted-query</code>查询会将流量转发到<code>read</code>节点上。读节点上保留了<code>querier、ruler、fronted</code>，写节点上保留了<code>distributor、ingester</code><br><img src="/images/1710231105-3c45360b6ac526915280952fab6aa362.png" alt="在这里插入图片描述"></li>
<li>微服务模式运行<br>微服务模式运行下，通过不同的配置参数启动为不同的角色，每一个进程都引用它的目标角色服务。<br><img src="/images/1710231105-4f4b33cda11626f4e77dec3946930de7.png" alt="在这里插入图片描述"></li>
</ul>
<table>
<thead>
<tr>
<th>组件名称</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>分发器&#x2F;调度器(distributor)</td>
<td>验证数据合规:数据排序; hash一致性， QPS限制， 转发，数据副本保证不丢失</td>
</tr>
<tr>
<td>收集器(ingester)</td>
<td>时间戳排序: 文件系统支持: WAL预写</td>
</tr>
<tr>
<td>查询前端 (query frontend)</td>
<td>提供页面操作，向后端存储发出数据查询；查询队列 (query-queueing) 能够防止大数据量查询时触发0OM；查询分割 (query-split) 可以分割大批量查询最后进行数据聚台</td>
</tr>
<tr>
<td>查询器Querier</td>
<td>使用loggl语言在后端存储中查询日志</td>
</tr>
<tr>
<td>缓存</td>
<td>将查询到的日志缓存起来共后续使用，如果数据不完整重新查询缺失的数据</td>
</tr>
</tbody></table>
<h2 id="1-3-服务端部署"><a href="#1-3-服务端部署" class="headerlink" title="1.3 服务端部署"></a>1.3 服务端部署</h2><p>在部署之前需要准备好一个k8s集群才行哦</p>
<table>
<thead>
<tr>
<th>应用</th>
<th>镜像</th>
</tr>
</thead>
<tbody><tr>
<td>loki</td>
<td>grafana&#x2F;loki:2.5.0</td>
</tr>
<tr>
<td>promtail</td>
<td>grafana&#x2F;promtail:2.5.0</td>
</tr>
</tbody></table>
<h3 id="1-3-1-AllInOne部署模式"><a href="#1-3-1-AllInOne部署模式" class="headerlink" title="1.3.1 AllInOne部署模式"></a>1.3.1 AllInOne部署模式</h3><h4 id="1-3-1-1-k8s部署"><a href="#1-3-1-1-k8s部署" class="headerlink" title="1.3.1.1 k8s部署"></a>1.3.1.1 k8s部署</h4><p>我们从github上下载的程序是没有配置文件的，需要提前将文件准备一份。这里提供了一份完整的<code>allInOne</code>配置文件，部分内容进行了优化。</p>
<p>配置文件内容如下所示</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">auth_enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">target:</span> <span class="string">all</span></span><br><span class="line"><span class="attr">ballast_bytes:</span> <span class="number">20480</span></span><br><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">grpc_listen_port:</span> <span class="number">9095</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">3100</span></span><br><span class="line">  <span class="attr">graceful_shutdown_timeout:</span> <span class="string">20s</span></span><br><span class="line">  <span class="attr">grpc_listen_address:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">  <span class="attr">grpc_listen_network:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">  <span class="attr">grpc_server_max_concurrent_streams:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">grpc_server_max_recv_msg_size:</span> <span class="number">4194304</span></span><br><span class="line">  <span class="attr">grpc_server_max_send_msg_size:</span> <span class="number">4194304</span></span><br><span class="line">  <span class="attr">http_server_idle_timeout:</span> <span class="string">2m</span></span><br><span class="line">  <span class="attr">http_listen_address:</span> <span class="string">&quot;0.0.0.0&quot;</span></span><br><span class="line">  <span class="attr">http_listen_network:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">  <span class="attr">http_server_read_timeout:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">http_server_write_timeout:</span> <span class="string">20s</span></span><br><span class="line">  <span class="attr">log_source_ips_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># http_path_prefix如果需要更改，在推送日志的时候前缀都需要加指定的内容</span></span><br><span class="line">  <span class="comment"># http_path_prefix: &quot;/&quot;</span></span><br><span class="line">  <span class="attr">register_instrumentation:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">log_format:</span> <span class="string">json</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">info</span></span><br><span class="line"><span class="attr">distributor:</span></span><br><span class="line">  <span class="attr">ring:</span></span><br><span class="line">    <span class="attr">heartbeat_timeout:</span> <span class="string">3s</span></span><br><span class="line">    <span class="attr">kvstore:</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">collectors/</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">memberlist</span></span><br><span class="line">      <span class="comment"># 需要提前创建好consul集群</span></span><br><span class="line">    <span class="comment">#   consul:</span></span><br><span class="line">    <span class="comment">#     http_client_timeout: 20s</span></span><br><span class="line">    <span class="comment">#     consistent_reads: true</span></span><br><span class="line">    <span class="comment">#     host: 127.0.0.1:8500</span></span><br><span class="line">    <span class="comment">#     watch_burst_size: 2</span></span><br><span class="line">    <span class="comment">#     watch_rate_limit: 2</span></span><br><span class="line"><span class="attr">querier:</span></span><br><span class="line">  <span class="attr">engine:</span></span><br><span class="line">    <span class="attr">max_look_back_period:</span> <span class="string">20s</span> </span><br><span class="line">    <span class="attr">timeout:</span> <span class="string">3m0s</span> </span><br><span class="line">  <span class="attr">extra_query_delay:</span> <span class="string">100ms</span> </span><br><span class="line">  <span class="attr">max_concurrent:</span> <span class="number">10</span> </span><br><span class="line">  <span class="attr">multi_tenant_queries_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">query_ingester_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">query_ingesters_within:</span> <span class="string">3h0m0s</span></span><br><span class="line">  <span class="attr">query_store_only:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">query_timeout:</span> <span class="string">5m0s</span></span><br><span class="line">  <span class="attr">tail_max_duration:</span> <span class="string">1h0s</span></span><br><span class="line"><span class="attr">query_scheduler:</span></span><br><span class="line">  <span class="attr">max_outstanding_requests_per_tenant:</span> <span class="number">2048</span></span><br><span class="line">  <span class="attr">grpc_client_config:</span></span><br><span class="line">    <span class="attr">max_recv_msg_size:</span> <span class="number">104857600</span></span><br><span class="line">    <span class="attr">max_send_msg_size:</span> <span class="number">16777216</span></span><br><span class="line">    <span class="attr">grpc_compression:</span> <span class="string">gzip</span></span><br><span class="line">    <span class="attr">rate_limit:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">rate_limit_burst:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">backoff_on_ratelimits:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">backoff_config:</span></span><br><span class="line">      <span class="attr">min_period:</span> <span class="string">50ms</span></span><br><span class="line">      <span class="attr">max_period:</span> <span class="string">15s</span></span><br><span class="line">      <span class="attr">max_retries:</span> <span class="number">5</span> </span><br><span class="line">  <span class="attr">use_scheduler_ring:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scheduler_ring:</span></span><br><span class="line">    <span class="attr">kvstore:</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">memberlist</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">&quot;collectors/&quot;</span></span><br><span class="line">    <span class="attr">heartbeat_period:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">heartbeat_timeout:</span> <span class="string">1m0s</span></span><br><span class="line">    <span class="comment"># 默认第一个网卡的名称</span></span><br><span class="line">    <span class="comment"># instance_interface_names</span></span><br><span class="line">    <span class="comment"># instance_addr: 127.0.0.1</span></span><br><span class="line">    <span class="comment"># 默认server.grpc-listen-port</span></span><br><span class="line">    <span class="attr">instance_port:</span> <span class="number">9095</span></span><br><span class="line"><span class="attr">frontend:</span></span><br><span class="line">  <span class="attr">max_outstanding_per_tenant:</span> <span class="number">4096</span></span><br><span class="line">  <span class="attr">querier_forget_delay:</span> <span class="string">1h0s</span></span><br><span class="line">  <span class="attr">compress_responses:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">log_queries_longer_than:</span> <span class="string">2m0s</span></span><br><span class="line">  <span class="attr">max_body_size:</span> <span class="number">104857600</span></span><br><span class="line">  <span class="attr">query_stats_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">scheduler_dns_lookup_period:</span> <span class="string">10s</span> </span><br><span class="line">  <span class="attr">scheduler_worker_concurrency:</span> <span class="number">15</span></span><br><span class="line"><span class="attr">query_range:</span></span><br><span class="line">  <span class="attr">align_queries_with_step:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">cache_results:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">parallelise_shardable_queries:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">max_retries:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">results_cache:</span></span><br><span class="line">    <span class="attr">cache:</span></span><br><span class="line">      <span class="attr">enable_fifocache:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">default_validity:</span> <span class="string">30s</span> </span><br><span class="line">      <span class="attr">background:</span></span><br><span class="line">        <span class="attr">writeback_buffer:</span> <span class="number">10000</span></span><br><span class="line">      <span class="attr">redis:</span></span><br><span class="line">        <span class="attr">endpoint:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:6379</span></span><br><span class="line">        <span class="attr">timeout:</span> <span class="string">1s</span></span><br><span class="line">        <span class="attr">expiration:</span> <span class="string">0s</span> </span><br><span class="line">        <span class="attr">db:</span> <span class="number">9</span></span><br><span class="line">        <span class="attr">pool_size:</span> <span class="number">128</span> </span><br><span class="line">        <span class="attr">password:</span> <span class="string">1521Qyx6^</span></span><br><span class="line">        <span class="attr">tls_enabled:</span> <span class="literal">false</span></span><br><span class="line">        <span class="attr">tls_insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">idle_timeout:</span> <span class="string">10s</span> </span><br><span class="line">        <span class="attr">max_connection_age:</span> <span class="string">8h</span></span><br><span class="line"><span class="attr">ruler:</span></span><br><span class="line">  <span class="attr">enable_api:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_sharding:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">alertmanager_refresh_interval:</span> <span class="string">1m</span></span><br><span class="line">  <span class="attr">disable_rule_group_label:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">evaluation_interval:</span> <span class="string">1m0s</span></span><br><span class="line">  <span class="attr">flush_period:</span> <span class="string">3m0s</span></span><br><span class="line">  <span class="attr">for_grace_period:</span> <span class="string">20m0s</span></span><br><span class="line">  <span class="attr">for_outage_tolerance:</span> <span class="string">1h0s</span></span><br><span class="line">  <span class="attr">notification_queue_capacity:</span> <span class="number">10000</span></span><br><span class="line">  <span class="attr">notification_timeout:</span> <span class="string">4s</span></span><br><span class="line">  <span class="attr">poll_interval:</span> <span class="string">10m0s</span></span><br><span class="line">  <span class="attr">query_stats_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">remote_write:</span></span><br><span class="line">    <span class="attr">config_refresh_period:</span> <span class="string">10s</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">resend_delay:</span> <span class="string">2m0s</span></span><br><span class="line">  <span class="attr">rule_path:</span> <span class="string">/rulers</span></span><br><span class="line">  <span class="attr">search_pending_for:</span> <span class="string">5m0s</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">local:</span></span><br><span class="line">      <span class="attr">directory:</span> <span class="string">/data/loki/rulers</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">configdb</span></span><br><span class="line">  <span class="attr">sharding_strategy:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">wal_cleaner:</span></span><br><span class="line">    <span class="attr">period:</span>  <span class="string">240h</span></span><br><span class="line">    <span class="attr">min_age:</span> <span class="string">12h0m0s</span></span><br><span class="line">  <span class="attr">wal:</span></span><br><span class="line">    <span class="attr">dir:</span> <span class="string">/data/loki/ruler_wal</span></span><br><span class="line">    <span class="attr">max_age:</span> <span class="string">4h0m0s</span></span><br><span class="line">    <span class="attr">min_age:</span> <span class="string">5m0s</span></span><br><span class="line">    <span class="attr">truncate_frequency:</span> <span class="string">1h0m0s</span></span><br><span class="line">  <span class="attr">ring:</span></span><br><span class="line">    <span class="attr">kvstore:</span></span><br><span class="line">      <span class="attr">store:</span> <span class="string">memberlist</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">&quot;collectors/&quot;</span></span><br><span class="line">    <span class="attr">heartbeat_period:</span> <span class="string">5s</span></span><br><span class="line">    <span class="attr">heartbeat_timeout:</span> <span class="string">1m0s</span></span><br><span class="line">    <span class="comment"># instance_addr: &quot;127.0.0.1&quot;</span></span><br><span class="line">    <span class="comment"># instance_id: &quot;miyamoto.en0&quot;</span></span><br><span class="line">    <span class="comment"># instance_interface_names: [&quot;en0&quot;,&quot;lo0&quot;]</span></span><br><span class="line">    <span class="attr">instance_port:</span> <span class="number">9500</span></span><br><span class="line">    <span class="attr">num_tokens:</span> <span class="number">100</span></span><br><span class="line"><span class="attr">ingester_client:</span></span><br><span class="line">  <span class="attr">pool_config:</span></span><br><span class="line">    <span class="attr">health_check_ingesters:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">client_cleanup_period:</span> <span class="string">10s</span> </span><br><span class="line">    <span class="attr">remote_timeout:</span> <span class="string">3s</span></span><br><span class="line">  <span class="attr">remote_timeout:</span> <span class="string">5s</span> </span><br><span class="line"><span class="attr">ingester:</span></span><br><span class="line">  <span class="attr">autoforget_unhealthy:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">chunk_encoding:</span> <span class="string">gzip</span></span><br><span class="line">  <span class="attr">chunk_target_size:</span> <span class="number">1572864</span></span><br><span class="line">  <span class="attr">max_transfer_retries:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">sync_min_utilization:</span> <span class="number">3.5</span></span><br><span class="line">  <span class="attr">sync_period:</span> <span class="string">20s</span></span><br><span class="line">  <span class="attr">flush_check_period:</span> <span class="string">30s</span> </span><br><span class="line">  <span class="attr">flush_op_timeout:</span> <span class="string">10m0s</span></span><br><span class="line">  <span class="attr">chunk_retain_period:</span> <span class="string">1m30s</span></span><br><span class="line">  <span class="attr">chunk_block_size:</span> <span class="number">262144</span></span><br><span class="line">  <span class="attr">chunk_idle_period:</span> <span class="string">1h0s</span></span><br><span class="line">  <span class="attr">max_returned_stream_errors:</span> <span class="number">20</span></span><br><span class="line">  <span class="attr">concurrent_flushes:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">index_shards:</span> <span class="number">32</span></span><br><span class="line">  <span class="attr">max_chunk_age:</span> <span class="string">2h0m0s</span></span><br><span class="line">  <span class="attr">query_store_max_look_back_period:</span> <span class="string">3h30m30s</span></span><br><span class="line">  <span class="attr">wal:</span></span><br><span class="line">    <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">dir:</span> <span class="string">/data/loki/wal</span> </span><br><span class="line">    <span class="attr">flush_on_shutdown:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">checkpoint_duration:</span> <span class="string">15m</span></span><br><span class="line">    <span class="attr">replay_memory_ceiling:</span> <span class="string">2GB</span></span><br><span class="line">  <span class="attr">lifecycler:</span></span><br><span class="line">    <span class="attr">ring:</span></span><br><span class="line">      <span class="attr">kvstore:</span></span><br><span class="line">        <span class="attr">store:</span> <span class="string">memberlist</span></span><br><span class="line">        <span class="attr">prefix:</span> <span class="string">&quot;collectors/&quot;</span></span><br><span class="line">      <span class="attr">heartbeat_timeout:</span> <span class="string">30s</span> </span><br><span class="line">      <span class="attr">replication_factor:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">num_tokens:</span> <span class="number">128</span></span><br><span class="line">    <span class="attr">heartbeat_period:</span> <span class="string">5s</span> </span><br><span class="line">    <span class="attr">join_after:</span> <span class="string">5s</span> </span><br><span class="line">    <span class="attr">observe_period:</span> <span class="string">1m0s</span></span><br><span class="line">    <span class="comment"># interface_names: [&quot;en0&quot;,&quot;lo0&quot;]</span></span><br><span class="line">    <span class="attr">final_sleep:</span> <span class="string">10s</span> </span><br><span class="line">    <span class="attr">min_ready_duration:</span> <span class="string">15s</span></span><br><span class="line"><span class="attr">storage_config:</span></span><br><span class="line">  <span class="attr">boltdb:</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">/data/loki/boltdb</span> </span><br><span class="line">  <span class="attr">boltdb_shipper:</span></span><br><span class="line">    <span class="attr">active_index_directory:</span> <span class="string">/data/loki/active_index</span></span><br><span class="line">    <span class="attr">build_per_tenant_index:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">cache_location:</span> <span class="string">/data/loki/cache</span> </span><br><span class="line">    <span class="attr">cache_ttl:</span> <span class="string">48h</span></span><br><span class="line">    <span class="attr">resync_interval:</span> <span class="string">5m</span></span><br><span class="line">    <span class="attr">query_ready_num_days:</span> <span class="number">5</span></span><br><span class="line">    <span class="attr">index_gateway_client:</span></span><br><span class="line">      <span class="attr">grpc_client_config:</span></span><br><span class="line">  <span class="attr">filesystem:</span></span><br><span class="line">    <span class="attr">directory:</span> <span class="string">/data/loki/chunks</span></span><br><span class="line"><span class="attr">chunk_store_config:</span></span><br><span class="line">  <span class="attr">chunk_cache_config:</span></span><br><span class="line">    <span class="attr">enable_fifocache:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">default_validity:</span> <span class="string">30s</span></span><br><span class="line">    <span class="attr">background:</span></span><br><span class="line">      <span class="attr">writeback_buffer:</span> <span class="number">10000</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="number">192.168</span><span class="number">.3</span><span class="number">.56</span><span class="string">:6379</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">1s</span></span><br><span class="line">      <span class="attr">expiration:</span> <span class="string">0s</span> </span><br><span class="line">      <span class="attr">db:</span> <span class="number">8</span> </span><br><span class="line">      <span class="attr">pool_size:</span> <span class="number">128</span> </span><br><span class="line">      <span class="attr">password:</span> <span class="string">1521Qyx6^</span></span><br><span class="line">      <span class="attr">tls_enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">tls_insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">idle_timeout:</span> <span class="string">10s</span> </span><br><span class="line">      <span class="attr">max_connection_age:</span> <span class="string">8h</span></span><br><span class="line">    <span class="attr">fifocache:</span></span><br><span class="line">      <span class="attr">ttl:</span> <span class="string">1h</span></span><br><span class="line">      <span class="attr">validity:</span> <span class="string">30m0s</span></span><br><span class="line">      <span class="attr">max_size_items:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">max_size_bytes:</span> <span class="string">500MB</span></span><br><span class="line">  <span class="attr">write_dedupe_cache_config:</span></span><br><span class="line">    <span class="attr">enable_fifocache:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">default_validity:</span> <span class="string">30s</span> </span><br><span class="line">    <span class="attr">background:</span></span><br><span class="line">      <span class="attr">writeback_buffer:</span> <span class="number">10000</span></span><br><span class="line">    <span class="attr">redis:</span></span><br><span class="line">      <span class="attr">endpoint:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span><span class="string">:6379</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="string">1s</span></span><br><span class="line">      <span class="attr">expiration:</span> <span class="string">0s</span> </span><br><span class="line">      <span class="attr">db:</span> <span class="number">7</span></span><br><span class="line">      <span class="attr">pool_size:</span> <span class="number">128</span> </span><br><span class="line">      <span class="attr">password:</span> <span class="string">1521Qyx6^</span></span><br><span class="line">      <span class="attr">tls_enabled:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">tls_insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">idle_timeout:</span> <span class="string">10s</span> </span><br><span class="line">      <span class="attr">max_connection_age:</span> <span class="string">8h</span></span><br><span class="line">    <span class="attr">fifocache:</span></span><br><span class="line">      <span class="attr">ttl:</span> <span class="string">1h</span></span><br><span class="line">      <span class="attr">validity:</span> <span class="string">30m0s</span></span><br><span class="line">      <span class="attr">max_size_items:</span> <span class="number">2000</span></span><br><span class="line">      <span class="attr">max_size_bytes:</span> <span class="string">500MB</span></span><br><span class="line">  <span class="attr">cache_lookups_older_than:</span> <span class="string">10s</span> </span><br><span class="line"><span class="comment"># 压缩碎片索引</span></span><br><span class="line"><span class="attr">compactor:</span></span><br><span class="line">  <span class="attr">shared_store:</span> <span class="string">filesystem</span></span><br><span class="line">  <span class="attr">shared_store_key_prefix:</span> <span class="string">index/</span></span><br><span class="line">  <span class="attr">working_directory:</span> <span class="string">/data/loki/compactor</span></span><br><span class="line">  <span class="attr">compaction_interval:</span> <span class="string">10m0s</span></span><br><span class="line">  <span class="attr">retention_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">retention_delete_delay:</span> <span class="string">2h0m0s</span></span><br><span class="line">  <span class="attr">retention_delete_worker_count:</span> <span class="number">150</span></span><br><span class="line">  <span class="attr">delete_request_cancel_period:</span> <span class="string">24h0m0s</span></span><br><span class="line">  <span class="attr">max_compaction_parallelism:</span> <span class="number">2</span></span><br><span class="line">  <span class="comment"># compactor_ring:</span></span><br><span class="line"><span class="attr">frontend_worker:</span></span><br><span class="line">  <span class="attr">match_max_concurrent:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">parallelism:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">dns_lookup_duration:</span> <span class="string">5s</span> </span><br><span class="line"><span class="comment"># runtime_config 这里没有配置任何信息</span></span><br><span class="line"><span class="comment"># runtime_config:</span></span><br><span class="line"><span class="attr">common:</span></span><br><span class="line">  <span class="attr">storage:</span></span><br><span class="line">    <span class="attr">filesystem:</span></span><br><span class="line">      <span class="attr">chunks_directory:</span> <span class="string">/data/loki/chunks</span></span><br><span class="line">      <span class="attr">fules_directory:</span> <span class="string">/data/loki/rulers</span></span><br><span class="line">  <span class="attr">replication_factor:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">persist_tokens:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># instance_interface_names: [&quot;en0&quot;,&quot;eth0&quot;,&quot;ens33&quot;]</span></span><br><span class="line"><span class="attr">analytics:</span></span><br><span class="line">  <span class="attr">reporting_enabled:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">limits_config:</span></span><br><span class="line">  <span class="attr">ingestion_rate_strategy:</span> <span class="string">global</span></span><br><span class="line">  <span class="attr">ingestion_rate_mb:</span> <span class="number">100</span></span><br><span class="line">  <span class="attr">ingestion_burst_size_mb:</span> <span class="number">18</span></span><br><span class="line">  <span class="attr">max_label_name_length:</span> <span class="number">2096</span></span><br><span class="line">  <span class="attr">max_label_value_length:</span> <span class="number">2048</span></span><br><span class="line">  <span class="attr">max_label_names_per_series:</span> <span class="number">60</span></span><br><span class="line">  <span class="attr">enforce_metric_name:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">max_entries_limit_per_query:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">reject_old_samples:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">reject_old_samples_max_age:</span> <span class="string">168h</span></span><br><span class="line">  <span class="attr">creation_grace_period:</span> <span class="string">20m0s</span></span><br><span class="line">  <span class="attr">max_global_streams_per_user:</span> <span class="number">5000</span></span><br><span class="line">  <span class="attr">unordered_writes:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">max_chunks_per_query:</span> <span class="number">200000</span></span><br><span class="line">  <span class="attr">max_query_length:</span> <span class="string">721h</span></span><br><span class="line">  <span class="attr">max_query_parallelism:</span> <span class="number">64</span> </span><br><span class="line">  <span class="attr">max_query_series:</span> <span class="number">700</span></span><br><span class="line">  <span class="attr">cardinality_limit:</span> <span class="number">100000</span></span><br><span class="line">  <span class="attr">max_streams_matchers_per_query:</span> <span class="number">1000</span> </span><br><span class="line">  <span class="attr">max_concurrent_tail_requests:</span> <span class="number">10</span> </span><br><span class="line">  <span class="attr">ruler_evaluation_delay_duration:</span> <span class="string">3s</span> </span><br><span class="line">  <span class="attr">ruler_max_rules_per_rule_group:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">ruler_max_rule_groups_per_tenant:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">retention_period:</span> <span class="string">700h</span></span><br><span class="line">  <span class="attr">per_tenant_override_period:</span> <span class="string">20s</span> </span><br><span class="line">  <span class="attr">max_cache_freshness_per_query:</span> <span class="string">2m0s</span></span><br><span class="line">  <span class="attr">max_queriers_per_tenant:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">per_stream_rate_limit:</span> <span class="string">6MB</span></span><br><span class="line">  <span class="attr">per_stream_rate_limit_burst:</span> <span class="string">50MB</span></span><br><span class="line">  <span class="attr">max_query_lookback:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">ruler_remote_write_disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">min_sharding_lookback:</span> <span class="string">0s</span></span><br><span class="line">  <span class="attr">split_queries_by_interval:</span> <span class="string">10m0s</span></span><br><span class="line">  <span class="attr">max_line_size:</span> <span class="string">30mb</span></span><br><span class="line">  <span class="attr">max_line_size_truncate:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">max_streams_per_user:</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># memberlist_conig模块配置gossip用于在分发服务器、摄取器和查询器之间发现和连接。</span></span><br><span class="line"><span class="comment"># 所有三个组件的配置都是唯一的，以确保单个共享环。</span></span><br><span class="line"><span class="comment"># 至少定义了1个join_members配置后，将自动为分发服务器、摄取器和ring 配置memberlist类型的kvstore</span></span><br><span class="line"><span class="attr">memberlist:</span></span><br><span class="line">  <span class="attr">randomize_node_name:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">stream_timeout:</span> <span class="string">5s</span> </span><br><span class="line">  <span class="attr">retransmit_factor:</span> <span class="number">4</span></span><br><span class="line">  <span class="attr">join_members:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&#x27;loki-memberlist&#x27;</span></span><br><span class="line">  <span class="attr">abort_if_cluster_join_fails:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">advertise_addr:</span> <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">  <span class="attr">advertise_port:</span> <span class="number">7946</span></span><br><span class="line">  <span class="attr">bind_addr:</span> [<span class="string">&quot;0.0.0.0&quot;</span>]</span><br><span class="line">  <span class="attr">bind_port:</span> <span class="number">7946</span></span><br><span class="line">  <span class="attr">compression_enabled:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">dead_node_reclaim_time:</span> <span class="string">30s</span></span><br><span class="line">  <span class="attr">gossip_interval:</span> <span class="string">100ms</span></span><br><span class="line">  <span class="attr">gossip_nodes:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">gossip_to_dead_nodes_time:</span> <span class="number">3</span></span><br><span class="line">  <span class="comment"># join:</span></span><br><span class="line">  <span class="attr">leave_timeout:</span> <span class="string">15s</span></span><br><span class="line">  <span class="attr">left_ingesters_timeout:</span> <span class="string">3m0s</span> </span><br><span class="line">  <span class="attr">max_join_backoff:</span> <span class="string">1m0s</span></span><br><span class="line">  <span class="attr">max_join_retries:</span> <span class="number">5</span></span><br><span class="line">  <span class="attr">message_history_buffer_bytes:</span> <span class="number">4096</span></span><br><span class="line">  <span class="attr">min_join_backoff:</span> <span class="string">2s</span></span><br><span class="line">  <span class="comment"># node_name: miyamoto</span></span><br><span class="line">  <span class="attr">packet_dial_timeout:</span> <span class="string">5s</span></span><br><span class="line">  <span class="attr">packet_write_timeout:</span> <span class="string">5s</span> </span><br><span class="line">  <span class="attr">pull_push_interval:</span> <span class="string">100ms</span></span><br><span class="line">  <span class="attr">rejoin_interval:</span> <span class="string">10s</span></span><br><span class="line">  <span class="attr">tls_enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tls_insecure_skip_verify:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">schema_config:</span></span><br><span class="line">  <span class="attr">configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">from:</span> <span class="string">&quot;2020-10-24&quot;</span></span><br><span class="line">    <span class="attr">index:</span></span><br><span class="line">      <span class="attr">period:</span> <span class="string">24h</span></span><br><span class="line">      <span class="attr">prefix:</span> <span class="string">index_</span></span><br><span class="line">    <span class="attr">object_store:</span> <span class="string">filesystem</span></span><br><span class="line">    <span class="attr">schema:</span> <span class="string">v11</span></span><br><span class="line">    <span class="attr">store:</span> <span class="string">boltdb-shipper</span></span><br><span class="line">    <span class="attr">chunks:</span></span><br><span class="line">      <span class="attr">period:</span> <span class="string">168h</span></span><br><span class="line">    <span class="attr">row_shards:</span> <span class="number">32</span></span><br><span class="line"><span class="attr">table_manager:</span></span><br><span class="line">  <span class="attr">retention_deletes_enabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">retention_period:</span> <span class="string">0s</span></span><br><span class="line">  <span class="attr">throughput_updates_disabled:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">poll_interval:</span> <span class="string">3m0s</span></span><br><span class="line">  <span class="attr">creation_grace_period:</span> <span class="string">20m</span></span><br><span class="line">  <span class="attr">index_tables_provisioning:</span></span><br><span class="line">    <span class="attr">provisioned_write_throughput:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">provisioned_read_throughput:</span> <span class="number">500</span></span><br><span class="line">    <span class="attr">inactive_write_throughput:</span> <span class="number">4</span></span><br><span class="line">    <span class="attr">inactive_read_throughput:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">inactive_write_scale_lastn:</span> <span class="number">50</span> </span><br><span class="line">    <span class="attr">enable_inactive_throughput_on_demand_mode:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">enable_ondemand_throughput_mode:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">inactive_read_scale_lastn:</span> <span class="number">10</span> </span><br><span class="line">    <span class="attr">write_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="comment"># role_arn:</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">    <span class="attr">inactive_write_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">    <span class="attr">read_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">    <span class="attr">inactive_read_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">  <span class="attr">chunk_tables_provisioning:</span></span><br><span class="line">    <span class="attr">enable_inactive_throughput_on_demand_mode:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">enable_ondemand_throughput_mode:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">provisioned_write_throughput:</span> <span class="number">1000</span></span><br><span class="line">    <span class="attr">provisioned_read_throughput:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">inactive_write_throughput:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">inactive_write_scale_lastn:</span> <span class="number">50</span></span><br><span class="line">    <span class="attr">inactive_read_throughput:</span> <span class="number">300</span></span><br><span class="line">    <span class="attr">inactive_read_scale_lastn:</span> <span class="number">10</span></span><br><span class="line">    <span class="attr">write_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">    <span class="attr">inactive_write_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">    <span class="attr">read_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line">    <span class="attr">inactive_read_scale:</span></span><br><span class="line">      <span class="attr">enabled:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">target:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">out_cooldown:</span> <span class="number">1800</span></span><br><span class="line">      <span class="attr">min_capacity:</span> <span class="number">3000</span></span><br><span class="line">      <span class="attr">max_capacity:</span> <span class="number">6000</span></span><br><span class="line">      <span class="attr">in_cooldown:</span> <span class="number">1800</span></span><br><span class="line"><span class="attr">tracing:</span></span><br><span class="line">  <span class="attr">enabled:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p><code>注意</code>：</p>
<ul>
<li><code>ingester.lifecycler.ring.replication_factor</code> 的值在单实例的情况下为1</li>
<li><code>ingester.lifecycler.min_ready_duration</code>的值为15s，在启动后默认会显示15秒将状态变为<code>ready</code><br><img src="/images/1710231105-8808690f2f3ab3a15589e7ed487e0ffb.png" alt="在这里插入图片描述"></li>
<li><code>memberlist.node_name</code>的值可以不用设置，默认是当前主机的名称</li>
<li><code>memberlist.join_members</code>是一个列表，在有多个实例的情况下需要添加各个节点的<code>主机名/IP地址</code>。在<code>k8s</code>里面可以设置成一个service绑定到<code>StatefulSets</code></li>
<li><code>query_range.results_cache.cache.enable_fifocache</code>建议设置为false，我这里设置成了true</li>
<li><code>instance_interface_names</code>是一个列表，默认的为<code>[&quot;en0&quot;,&quot;eth0&quot;]</code>，可以根据需要设置对应的网卡名称，一般不需要进行特殊设置。</li>
</ul>
<h4 id="1-3-1-2-创建configmap"><a href="#1-3-1-2-创建configmap" class="headerlink" title="1.3.1.2 创建configmap"></a>1.3.1.2 创建configmap</h4><p>将上面的内容写入到一个文件——&gt;<code>loki-all.yaml</code>，把它作为一个<code>configmap</code>写入<code>k8s</code>集群。可以使用如下命令创建：</p>
<blockquote>
<p>kubectl create configmap –from-file .&#x2F;loki-all.yaml loki-all</p>
</blockquote>
<p>可以通过命令查看到已经创建好的<code>configmap</code>，具体操作详见下图<br><img src="/images/1710231105-9dd332128a8caca053226057979b4175.png" alt="在这里插入图片描述"></p>
<h4 id="1-3-1-3-创建持久化存储"><a href="#1-3-1-3-创建持久化存储" class="headerlink" title="1.3.1.3 创建持久化存储"></a>1.3.1.3 创建持久化存储</h4><p>在k8s里面我们的数据是需要进行持久化的。<code>Loki</code>收集起来的日志信息对于业务来说是至关重要的，因此需要在容器重启的时候日志能够保留下来。<br>那么就需要用到<code>pv、pvc</code>，后端存储可以使用<code>nfs、glusterfs、hostPath、azureDisk、cephfs</code>等20种支持类型，这里因为没有对应的环境就采用了<code>hostPath</code>方式。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">hostPath:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/glusterfs/loki</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">DirectoryOrCreate</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolumeClaim</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteMany</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">    <span class="attr">requests:</span></span><br><span class="line">      <span class="attr">storage:</span> <span class="string">1Gi</span></span><br><span class="line">  <span class="attr">volumeName:</span> <span class="string">loki</span></span><br></pre></td></tr></table></figure>

<h4 id="1-3-1-4-创建应用"><a href="#1-3-1-4-创建应用" class="headerlink" title="1.3.1.4 创建应用"></a>1.3.1.4 创建应用</h4><p>准备好k8s的<code>StatefulSet</code>部署文件后就可以直接在集群里面创建应用了。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">loki</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">podManagementPolicy:</span> <span class="string">OrderedReady</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">loki</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">http-metrics</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">loki</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">args:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">-config.file=/etc/loki/loki-all.yaml</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">grafana/loki:2.5.0</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/ready</span></span><br><span class="line">            <span class="attr">port:</span> <span class="string">http-metrics</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">45</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">3100</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">http-metrics</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9095</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">grpc</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">7946</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">memberlist-port</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/ready</span></span><br><span class="line">            <span class="attr">port:</span> <span class="string">http-metrics</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">45</span></span><br><span class="line">          <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">500m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">500Mi</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/etc/loki</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">mountPath:</span> <span class="string">/data</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">storage</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">fsGroup:</span> <span class="number">10001</span></span><br><span class="line">        <span class="attr">runAsGroup:</span> <span class="number">10001</span></span><br><span class="line">        <span class="attr">runAsNonRoot:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">runAsUser:</span> <span class="number">10001</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">loki</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">loki</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">emptyDir:</span> &#123;&#125;</span><br><span class="line">        <span class="attr">name:</span> <span class="string">tmp</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">        <span class="attr">configMap:</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">persistentVolumeClaim:</span></span><br><span class="line">          <span class="attr">claimName:</span> <span class="string">loki</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">storage</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki-memberlist</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">loki-memberlist</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">7946</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">7946</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">kubepi.org/name:</span> <span class="string">loki</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">loki</span></span><br><span class="line">      <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">      <span class="attr">port:</span> <span class="number">3100</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">3100</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">kubepi.org/name:</span> <span class="string">loki</span></span><br></pre></td></tr></table></figure>

<p>在上面的配置文件中我添加了一些<code>pod</code>级别的安全策略，这些安全策略还有集群级别的<code>PodSecurityPolicy</code>，防止因为漏洞的原因造成集群的整个崩溃</p>
<h4 id="1-3-1-5-验证部署结果"><a href="#1-3-1-5-验证部署结果" class="headerlink" title="1.3.1.5 验证部署结果"></a>1.3.1.5 验证部署结果</h4><p><img src="/images/1710231105-8b054274339565a2578b7c700339bb88.png" alt="在这里插入图片描述"></p>
<p>当看到上面的<code>Running</code>状态时可以通过API的方式看一下分发器是不是正常工作，当显示<code>Active</code>时正常才会正常分发日志流到收集器（<code>ingester</code>）<br><img src="/images/1710231105-12187d4e6077955d40170a37ec3eb721.png" alt="在这里插入图片描述"></p>
<h3 id="1-3-2-裸机部署"><a href="#1-3-2-裸机部署" class="headerlink" title="1.3.2 裸机部署"></a>1.3.2 裸机部署</h3><p>将<code>loki</code>放到系统的<code>/bin/</code>目录下，准备<code>grafana-loki.service</code>控制文件重载系统服务列表</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Grafana Loki Log Ingester</span><br><span class="line">Documentation=https://grafana.com/logs/</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/bin/loki --config.file /etc/loki/loki-all.yaml</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s TERM $MAINPID</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>重载系统列表命令，可以直接系统自动管理服务：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动服务</span></span><br><span class="line">systemctl start grafana-loki</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止服务</span></span><br><span class="line">systemctl stop grafana-loki</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重载应用</span></span><br><span class="line">systemctl reload grafana-loki</span><br></pre></td></tr></table></figure>

<h2 id="1-4-Promtail部署"><a href="#1-4-Promtail部署" class="headerlink" title="1.4 Promtail部署"></a>1.4 Promtail部署</h2><p>部署客户端收集日志时也需要创建一个配置文件，按照上面创建服务端的步骤创建。不同的是需要把日志内容<code>push</code>到服务端</p>
<h3 id="1-4-1-k8s部署"><a href="#1-4-1-k8s部署" class="headerlink" title="1.4.1 k8s部署"></a>1.4.1 k8s部署</h3><h4 id="1-4-1-1-创建配置文件"><a href="#1-4-1-1-创建配置文件" class="headerlink" title="1.4.1.1 创建配置文件"></a>1.4.1.1 创建配置文件</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">log_level:</span> <span class="string">info</span></span><br><span class="line">  <span class="attr">http_listen_port:</span> <span class="number">3101</span></span><br><span class="line"><span class="attr">clients:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">http://loki:3100/loki/api/v1/push</span></span><br><span class="line"><span class="attr">positions:</span></span><br><span class="line">  <span class="attr">filename:</span> <span class="string">/run/promtail/positions.yaml</span></span><br><span class="line"><span class="attr">scrape_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">job_name:</span> <span class="string">kubernetes-pods</span></span><br><span class="line">    <span class="attr">pipeline_stages:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">cri:</span> &#123;&#125;</span><br><span class="line">    <span class="attr">kubernetes_sd_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">role:</span> <span class="string">pod</span></span><br><span class="line">    <span class="attr">relabel_configs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_controller_name</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">([0-9a-z-.]+?)(-[0-9a-f]&#123;8,10&#125;)?</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__tmp_controller_name</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_label_app_kubernetes_io_name</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_label_app</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__tmp_controller_name</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_name</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">^;*([^;]+)(;.*)?$</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">app</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_label_app_kubernetes_io_instance</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_label_release</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">^;*([^;]+)(;.*)?$</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">instance</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">source_labels:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_label_app_kubernetes_io_component</span></span><br><span class="line">          <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_label_component</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="string">^;*([^;]+)(;.*)?$</span></span><br><span class="line">        <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">component</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_node_name</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">node_name</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_namespace</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">namespace</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">$1</span></span><br><span class="line">        <span class="attr">separator:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">namespace</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">app</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">job</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_name</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">pod</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_container_name</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">container</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">/var/log/pods/*$1/*.log</span></span><br><span class="line">        <span class="attr">separator:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_uid</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_container_name</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__path__</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">action:</span> <span class="string">replace</span></span><br><span class="line">        <span class="attr">regex:</span> <span class="literal">true</span><span class="string">/(.*)</span></span><br><span class="line">        <span class="attr">replacement:</span> <span class="string">/var/log/pods/*$1/*.log</span></span><br><span class="line">        <span class="attr">separator:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">source_labels:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_annotation_kubernetes_io_config_hash</span></span><br><span class="line">        <span class="bullet">-</span> <span class="string">__meta_kubernetes_pod_container_name</span></span><br><span class="line">        <span class="attr">target_label:</span> <span class="string">__path__</span></span><br></pre></td></tr></table></figure>

<p>用上面的内容创建一个configMap，方法同上</p>
<h4 id="1-4-1-2-创建DaemonSet文件"><a href="#1-4-1-2-创建DaemonSet文件" class="headerlink" title="1.4.1.2 创建DaemonSet文件"></a>1.4.1.2 创建DaemonSet文件</h4><p><code>Promtail</code>是一个无状态应用不需要进行持久化存储只需要部署到集群里面就可以了，还是同样的准备<code>DaemonSets</code>创建文件。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">promtail</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/instance:</span> <span class="string">promtail</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">promtail</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/version:</span> <span class="number">2.5</span><span class="number">.0</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/instance:</span> <span class="string">promtail</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">promtail</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/instance:</span> <span class="string">promtail</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">promtail</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">promtail</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/run/promtail</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">containers</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/var/lib/docker/containers</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pods</span></span><br><span class="line">          <span class="attr">hostPath:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/var/log/pods</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">promtail</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">docker.io/grafana/promtail:2.3.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">&#x27;-config.file=/etc/promtail/promtail.yaml&#x27;</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http-metrics</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">3101</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">HOSTNAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">spec.nodeName</span></span><br><span class="line">          <span class="attr">volumeMounts:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/etc/promtail</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">run</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/run/promtail</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">containers</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/lib/docker/containers</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pods</span></span><br><span class="line">              <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">              <span class="attr">mountPath:</span> <span class="string">/var/log/pods</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/ready</span></span><br><span class="line">              <span class="attr">port:</span> <span class="string">http-metrics</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">            <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">false</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Always</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">promtail</span></span><br><span class="line">      <span class="attr">serviceAccount:</span> <span class="string">promtail</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/master</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">node-role.kubernetes.io/control-plane</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">Exists</span></span><br><span class="line">          <span class="attr">effect:</span> <span class="string">NoSchedule</span></span><br></pre></td></tr></table></figure>

<h4 id="1-4-1-3-创建promtail应用"><a href="#1-4-1-3-创建promtail应用" class="headerlink" title="1.4.1.3 创建promtail应用"></a>1.4.1.3 创建promtail应用</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -f promtail.yaml</span><br></pre></td></tr></table></figure>

<p>使用上面这个命令创建后就可以看到服务已经创建好了。接下来就是在<code>Grafana</code>里面添加<code>DataSource</code>查看数据了。<br><img src="/images/1710231105-c2a99b4a7075887536cd3a47cbf8a334.png" alt="在这里插入图片描述"></p>
<h3 id="1-4-2-裸机部署"><a href="#1-4-2-裸机部署" class="headerlink" title="1.4.2 裸机部署"></a>1.4.2 裸机部署</h3><p>如果是裸机部署的情况下，需要对上面的配置文件做一下稍微的改动，更改<code>clients</code>的地址就可以，文件存放到<code>/etc/loki/</code>下，例如改成：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">clients:</span><br><span class="line">  - url: http://ipaddress:port/loki/api/v1/push</span><br></pre></td></tr></table></figure>

<p>添加系统开机启动配置，service配置文件存放位置<code>/usr/lib/systemd/system/loki-promtail.service</code>内容如下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Grafana Loki Log Ingester</span><br><span class="line">Documentation=https://grafana.com/logs/</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">ExecStart=/bin/promtail --config.file /etc/loki/loki-promtail.yaml</span><br><span class="line">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class="line">ExecStop=/bin/kill -s TERM $MAINPID</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>

<p>启动方式同上面服务端部署内容</p>
<h2 id="1-5-数据源"><a href="#1-5-数据源" class="headerlink" title="1.5 数据源"></a>1.5 数据源</h2><p>添加数据源，具体步骤: <code>Grafana-&gt;Setting-&gt;DataSources-&gt;AddDataSource-&gt;Loki</code></p>
<p><code>注意</code>：<code>http</code>的<code>URL</code>地址，应用、服务部署在哪个<code>namespace</code>下，就需要指定它的<code>FQDN</code>地址，它的格式是<code>ServiceName.namespace</code>。如果默认在<code>default</code>下、创建的端口号是3100，就需要填写为<a href="http://loki:3100，这里为什么不写IP地址而写成服务的名字，是因为在k8s集群里面有个dns服务器会自动解析这个地址。">http://loki:3100，这里为什么不写IP地址而写成服务的名字，是因为在k8s集群里面有个dns服务器会自动解析这个地址。</a><br><img src="/images/1710231105-d2c84ee2d12d042cf335d1b87c64fad8.png" alt="在这里插入图片描述"></p>
<p>查找日志信息<br><img src="/images/1710231105-6942365c0fd33faaccb388502905453c.png" alt="在这里插入图片描述"></p>
<h2 id="1-6-其他客户端配置"><a href="#1-6-其他客户端配置" class="headerlink" title="1.6 其他客户端配置"></a>1.6 其他客户端配置</h2><h3 id="1-6-1-Logstash作为日志收集客户端"><a href="#1-6-1-Logstash作为日志收集客户端" class="headerlink" title="1.6.1 Logstash作为日志收集客户端"></a>1.6.1 Logstash作为日志收集客户端</h3><p>在启动<code>Logstash</code>后我们需要安装一个插件，可以通过这个命令安装<code>loki</code>的输出插件，安装完成之后可以在<code>logstash</code>的<code>output</code>中添加信息。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">bin/logstash-plugin install logstash-output-loki</span><br></pre></td></tr></table></figure>

<p>添加配置进行测试<br>完整的<code>logstash</code>配置信息，可以参考官网给出的内容<code>LogstashConfigFile</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">  loki &#123;</span><br><span class="line">    [url =&gt; &quot;&quot; | default = none | required=true]</span><br><span class="line">    [tenant_id =&gt; string | default = nil | required=false]</span><br><span class="line">    [message_field =&gt; string | default = &quot;message&quot; | required=false]</span><br><span class="line">    [include_fields =&gt; array | default = [] | required=false]</span><br><span class="line">    [batch_wait =&gt; number | default = 1(s) | required=false]</span><br><span class="line">    [batch_size =&gt; number | default = 102400(bytes) | required=false]</span><br><span class="line">    [min_delay =&gt; number | default = 1(s) | required=false]</span><br><span class="line">    [max_delay =&gt; number | default = 300(s) | required=false]</span><br><span class="line">    [retries =&gt; number | default = 10 | required=false]</span><br><span class="line">    [username =&gt; string | default = nil | required=false]</span><br><span class="line">    [password =&gt; secret | default = nil | required=false]</span><br><span class="line">    [cert =&gt; path | default = nil | required=false]</span><br><span class="line">    [key =&gt; path | default = nil| required=false]</span><br><span class="line">    [ca_cert =&gt; path | default = nil | required=false]</span><br><span class="line">    [insecure_skip_verify =&gt; boolean | default = false | required=false]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>或者采用<code>logstash</code>的<code>http</code>输出模块，配置如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">output &#123;</span><br><span class="line">    http &#123;</span><br><span class="line">        format =&gt; &quot;json&quot;</span><br><span class="line">        http_method =&gt; &quot;post&quot;</span><br><span class="line">        content_type =&gt; &quot;application/json&quot;</span><br><span class="line">        connect_timeout =&gt; 10</span><br><span class="line">        url =&gt; &quot;http://loki:3100/loki/api/v1/push&quot;</span><br><span class="line">        message =&gt; &#x27;&quot;message&quot;:&quot;%&#123;message&#125;&quot;&#125;&#x27;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-7-Helm安装"><a href="#1-7-Helm安装" class="headerlink" title="1.7 Helm安装"></a>1.7 Helm安装</h2><p>如果想简便安装的话，可以采用<code>helm</code>来安装。<code>helm</code>将所有的安装步骤都进行了封装，简化了安装步骤。</p>
<p>对于想详细了解k8s的人来说，helm不太适合。因为它封装后自动执行，<code>k8s</code>管理员不知道各组件之间是如何依赖的，可能会造成误区。</p>
<p>废话不多说，下面开始helm安装：</p>
<ul>
<li>添加repo源<br><code>helm repo add grafana https://grafana.github.io/helm-charts</code></li>
<li>更新源<br><code>helm repo update</code></li>
<li>部署<br>默认配置<br><code>helm upgrade --install loki grafana/loki-simple-scalable</code><br>自定义namespace<br><code>helm upgrade --install loki --namespace=loki grafana/loki-simple-scalable</code><br>自定义配置信息<br><code>helm upgrade --install loki grafana/loki-simple-scalable --set &quot;key1=val1,key2=val2,...&quot;</code></li>
</ul>
<h2 id="1-8-故障解决方案"><a href="#1-8-故障解决方案" class="headerlink" title="1.8 故障解决方案"></a>1.8 故障解决方案</h2><h3 id="1-8-1-502-BadGateWay"><a href="#1-8-1-502-BadGateWay" class="headerlink" title="1.8.1 502 BadGateWay"></a>1.8.1 502 BadGateWay</h3><p>loki的地址填写不正确<br>在k8s里面，地址填写错误造成了502。检查一下loki的地址是否是以下内容：</p>
<blockquote>
<p><a href="http://lokiservicename/">http://LokiServiceName</a><br><a href="http://lokiservicename.namespace/">http://LokiServiceName.namespace</a><br><a href="http://lokiservicename.namespace/">http://LokiServiceName.namespace</a>:ServicePort</p>
</blockquote>
<p><code>grafana和loki</code>在不同的节点上，检查一下节点间网络通信状态、防火墙策略</p>
<h3 id="1-8-2-Ingester-not-ready-instance-xx-9095-in-state-JOINING"><a href="#1-8-2-Ingester-not-ready-instance-xx-9095-in-state-JOINING" class="headerlink" title="1.8.2 Ingester not ready: instance xx:9095 in state JOINING"></a>1.8.2 Ingester not ready: instance xx:9095 in state JOINING</h3><p>耐心等待一会，因为是<code>allInOne</code>模式程序启动需要一定的时间。</p>
<h3 id="1-8-3-too-many-unhealthy-instances-in-the-ring"><a href="#1-8-3-too-many-unhealthy-instances-in-the-ring" class="headerlink" title="1.8.3 too many unhealthy instances in the ring"></a>1.8.3 too many unhealthy instances in the ring</h3><p>将<code>ingester.lifecycler.replication_factor</code>改为1，是因为这个设置不正确造成的。这个在启动的时候会设置为多个复制源，但当前只部署了一个所以在查看<code>label</code>的时候提示这个</p>
<h3 id="1-8-4-Data-source-connected"><a href="#1-8-4-Data-source-connected" class="headerlink" title="1.8.4 Data source connected"></a>1.8.4 Data source connected</h3><p>Data source connected, but no labels received. Verify that Loki and Promtail is configured properly</p>
<ul>
<li><code>promtail</code>无法将收集到的日志发送给loki，许可检查一下<code>promtail</code>的输出是不是正常</li>
<li><code>promtail</code>在loki还没有准备就绪的时候把日志发送过来了，但loki没有接收到。如果需要重新接收日志，需要删除positions.yaml文件，具体路径可以用find查找一下位置</li>
<li><code>promtail</code>忽略了目标日志文件或者配置文件错误造成的无法正常启动</li>
<li><code>promtail</code>无法在指定的位置发现日志文件</li>
</ul>
]]></content>
      <categories>
        <category>Logs</category>
      </categories>
      <tags>
        <tag>Logs</tag>
      </tags>
  </entry>
  <entry>
    <title>Mysql一键部署脚本</title>
    <url>/2024/03/13/Mysql%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">#!<span class="regexp">/bin/</span>bash</span><br><span class="line">#<span class="comment">/*</span></span><br><span class="line"><span class="comment">#* @Author: xxx</span></span><br><span class="line"><span class="comment">#* @Date:   2023-05-10 10:20:37</span></span><br><span class="line"><span class="comment">#* @Last Modified by:   xxx</span></span><br><span class="line"><span class="comment">#* @Last Modified time: 2023-10-27 11:09:24</span></span><br><span class="line"><span class="comment">#*/</span></span><br><span class="line">################必读,非常重要##############</span><br><span class="line">#提前创建<span class="variable constant_">FTP</span>服务器将对应安装包、对应的my.<span class="property">cnf</span>、serice-example.<span class="property">sh</span>、<span class="variable constant_">PERCONA_TOOLKIT</span>包和<span class="variable constant_">PERCONA_XTRABACKUP</span>包</span><br><span class="line">#提前配置yum源，脚本执行时需要安装备份包，理论上脚本使用<span class="title class_">CentOS</span>,其余的操作系统使用需要调整。</span><br><span class="line">#数据库初始化时使用的不区分大小参数</span><br><span class="line">#脚本创建监控账号，在创建双主架构由于存在监控账号会报错&amp;更改密码会导致密码更换。</span><br><span class="line">#脚本对数据库并发做了优化，是基于作者(<span class="title class_">Nortrom</span>)理解自己做的，有不同看法欢迎优化修正。</span><br><span class="line">#innodb_buffer_cache大约占用物理内存总大小<span class="number">50</span>%多，并且更改了默认内存管理方式，使用jemalloc方式，此方式有一定的适用范围。</span><br><span class="line">#安装包统一下载*.<span class="property">tar</span>.<span class="property">xz</span>的包，例如:mysql-<span class="number">8.0</span><span class="number">.32</span>-linux-glibc2<span class="number">.12</span>-x86_64.<span class="property">tar</span>.<span class="property">xz</span>。</span><br><span class="line">#由于脚本测试环境空间紧张，全脚本未进行空间提前检查，务必包含根目录和安装部署空间分别大约5G空间。</span><br><span class="line">#<span class="number">2023</span>-<span class="number">10</span>-<span class="number">27</span>的新增慢日志查询功能存在若发生重启则部分日志会写到配置文件中默认的路径。</span><br><span class="line">###################################################################</span><br><span class="line">#新装失败清理命令参考:</span><br><span class="line">#rm -rf $INSTALL_BASE_DIR</span><br><span class="line">#rm -rf $INSTALL_REAL_DIR</span><br><span class="line">#rm -f /tmp/$MYSQL_INSTALL_PACKAGE</span><br><span class="line">#rm -rf /tmp/$MYSQL_VERSION</span><br><span class="line">#sh new_deploy8032ln.<span class="property">sh</span> --install_base_dir=<span class="regexp">/usr/</span>local/mysql1 --install_real_dir=<span class="regexp">/data/my</span>sql1 --instance_name=lh --port=<span class="number">3200</span> --server_id=<span class="number">9</span> --replica_ip=<span class="number">192.168</span><span class="number">.56</span><span class="number">.106</span> --source_ip=<span class="number">192.168</span><span class="number">.56</span><span class="number">.106</span> --source_port=<span class="number">3400</span></span><br><span class="line">######脚本变量######</span><br><span class="line"><span class="variable constant_">JOB_NAME</span>=<span class="string">&quot;deploy8034ln.sh&quot;</span></span><br><span class="line"><span class="variable constant_">CONFIGURE_FILE</span>=<span class="string">&quot;my8034.cnf&quot;</span></span><br><span class="line"><span class="variable constant_">MYSQL_VERSION</span>=<span class="string">&quot;mysql-8.0.34-linux-glibc2.12-x86_64&quot;</span></span><br><span class="line"><span class="variable constant_">MYSQL_INSTALL_PACKAGE</span>=$MYSQL_VERSION<span class="string">&quot;.tar.xz&quot;</span></span><br><span class="line"><span class="variable constant_">FTP_ADRESS</span>=<span class="string">&quot;10.250.4.102&quot;</span></span><br><span class="line"><span class="variable constant_">FTP_USER</span>=<span class="string">&quot;ftpuser&quot;</span></span><br><span class="line"><span class="variable constant_">FTP_PASSWORD</span>=<span class="string">&quot;E2wx3Q#A4r@v&quot;</span></span><br><span class="line"><span class="variable constant_">SLOWQUERY_COLLECT_FIAG</span>=<span class="number">0</span></span><br><span class="line"><span class="variable constant_">ADD_FLAG</span>=<span class="number">0</span></span><br><span class="line">#若<span class="variable constant_">MONITOR_USER</span>为空即<span class="variable constant_">MONITOR_USER</span>=<span class="string">&quot;&quot;</span>,将不执行创建监控账号以及配置防火墙。</span><br><span class="line"><span class="variable constant_">MONITOR_USER</span>=<span class="string">&quot;bmc&quot;</span></span><br><span class="line"><span class="variable constant_">MONITOR_PASSWD</span>=<span class="string">&quot;46&#125;_7e71D2&quot;</span></span><br><span class="line"><span class="variable constant_">MONITOR_USER_IP</span>=<span class="string">&quot;10.250.5.%&quot;</span></span><br><span class="line"><span class="variable constant_">MONITOR_IP_IPTABLES</span>=<span class="string">&quot;10.250.5.0/24&quot;</span></span><br><span class="line">#若<span class="variable constant_">REPLICA_IP</span>为空，则不执行主从账号创建</span><br><span class="line"><span class="variable constant_">MASTER_USER</span>=<span class="string">&quot;repluser&quot;</span></span><br><span class="line"><span class="variable constant_">MASTER_PASSWORD</span>=<span class="string">&quot;Repluser@123&quot;</span></span><br><span class="line">#####传参变量########</span><br><span class="line"><span class="variable constant_">INSTALL_BASE_DIR</span>=<span class="string">&quot;/usr/local/mysql&quot;</span></span><br><span class="line"><span class="variable constant_">INSTALL_REAL_DIR</span>=<span class="string">&quot;/usr/local/mysql&quot;</span></span><br><span class="line"><span class="variable constant_">INSTANCE_NAME</span>=<span class="string">&quot;example&quot;</span></span><br><span class="line"><span class="variable constant_">PASSWORD</span>=<span class="string">&quot;example&quot;</span></span><br><span class="line"><span class="variable constant_">PORT</span>=<span class="string">&quot;3306&quot;</span></span><br><span class="line"><span class="variable constant_">SERVER_ID</span>=<span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="variable constant_">REPLICA_IP</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="variable constant_">SOURCE_IP</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="variable constant_">SOURCE_PORT</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="variable constant_">EXPIRE_DAY</span>=<span class="string">&quot;30&quot;</span></span><br><span class="line"><span class="variable constant_">LOCAL_IPADDR</span>=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="variable constant_">ADD_MYSQL_DIR</span>=<span class="string">&quot;/usr/local/mysql&quot;</span></span><br><span class="line">####非<span class="title class_">Centos</span>源的包####</span><br><span class="line"><span class="variable constant_">PERCONA_TOOLKIT</span>=<span class="string">&quot;percona-toolkit-3.5.5-1.el7.x86_64.rpm&quot;</span></span><br><span class="line"><span class="variable constant_">PERCONA_XTRABACKUP</span>=<span class="string">&quot;percona-xtrabackup-80-8.0.34-29.1.el7.x86_64.rpm&quot;</span></span><br><span class="line">########slow_query_database######</span><br><span class="line"><span class="variable constant_">SLOWQUERY_DB_HOST</span>=<span class="string">&quot;10.250.5.145&quot;</span></span><br><span class="line"><span class="variable constant_">SLOWQUERY_DB_PORT</span>=<span class="string">&quot;3400&quot;</span></span><br><span class="line"><span class="variable constant_">SLOWQUERY_DB_USER</span>=<span class="string">&quot;slowlog_user&quot;</span></span><br><span class="line"><span class="variable constant_">SLOWQUERY_DB_PASSWORD</span>=<span class="string">&quot;LcYbZ#1ovNGb&quot;</span></span><br><span class="line"><span class="variable constant_">SLOWQUERY_DB_DATABASE</span>=<span class="string">&quot;archery&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">usage ()&#123;</span><br><span class="line"></span><br><span class="line">        echo <span class="string">&quot;Usage:sh 基本名字.sh [OPTION]</span></span><br><span class="line"><span class="string">        --install_base_dir=xxxxx        指定数据库的安装路径,默认：/usr/local/mysql</span></span><br><span class="line"><span class="string">        --install_real_dir=xxxxx        指定数据库的实际软件安装路径,例如：/data/mysql</span></span><br><span class="line"><span class="string">        --instance_name=xxxx            指定实例名称</span></span><br><span class="line"><span class="string">        --port=xxxx                     指定端口名称,默认3306</span></span><br><span class="line"><span class="string">        --server_id=xxxx                指定server_id,默认1</span></span><br><span class="line"><span class="string">        --local_ipaddr=xxx.xxx.xxx.xxx  慢日志收集的标志位，若输入则执行慢日志收集，输入时请保证IP地址信息准确以便查询</span></span><br><span class="line"><span class="string">        --expire_day=xxxx               配置慢日志收集自动删除清除慢日志，默认30天</span></span><br><span class="line"><span class="string">        --replica_ip=xxx.xxx.xxx.xxx    指定备库IP地址,可选,务必保证正确</span></span><br><span class="line"><span class="string">        --source_ip=xxx.xxx.xxx.xxx     指定主库IP地址,可选,务必保证正确</span></span><br><span class="line"><span class="string">        --source_port=xxxx              指定主库端口号,可选,务必保证正确</span></span><br><span class="line"><span class="string">        --add_mysql_dir=xxxxxx          新增mysql实例,指定mysql程序路径&quot;</span></span><br><span class="line">        exit</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -n <span class="string">&quot;$INSTANCE_NAME&quot;</span> ]</span><br><span class="line">then </span><br><span class="line">        echo -e <span class="string">&quot;\nWarning :At last specify instance name\n&quot;</span></span><br><span class="line">        usage</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#生成随机密码</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">random_pass</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable constant_">MATRIX</span>=<span class="string">&quot;0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz&quot;</span></span><br><span class="line">        <span class="variable constant_">LENGTH</span>=<span class="string">&quot;16&quot;</span></span><br><span class="line"><span class="keyword">while</span> [ <span class="string">&quot;$&#123;n:=1&#125;&quot;</span> -le <span class="string">&quot;$LENGTH&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="variable constant_">PASS</span>=<span class="string">&quot;$PASS$&#123;MATRIX:$(($RANDOM%$&#123;#MATRIX&#125;)):1&#125;&quot;</span></span><br><span class="line">        <span class="keyword">let</span> n+=<span class="number">1</span></span><br><span class="line">done</span><br><span class="line">        <span class="variable constant_">PASSWORD</span>=$PASS<span class="string">&quot;#9Mt&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">random_pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#解析传入参数</span><br><span class="line"><span class="keyword">for</span> arg <span class="keyword">do</span></span><br><span class="line">        #echo $arg</span><br><span class="line">        val=<span class="string">`echo &quot;$arg&quot; | sed -e &#x27;s;^--[^=]*=;;&#x27;`</span></span><br><span class="line">        optname=<span class="string">`echo &quot;$arg&quot; | sed -e &#x27;s/^\(--[^=]*\)=.*$/\1/&#x27;`</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;$arg&quot;</span> <span class="keyword">in</span></span><br><span class="line">                --install_base_dir=*) <span class="variable constant_">INSTALL_BASE_DIR</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">                --install_real_dir=*) <span class="variable constant_">INSTALL_REAL_DIR</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">                --instance_name=*) <span class="variable constant_">INSTANCE_NAME</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">                --port=*) <span class="variable constant_">PORT</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">				--server_id=*) <span class="variable constant_">SERVER_ID</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">				--replica_ip=*) <span class="variable constant_">REPLICA_IP</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">				--source_ip=*) <span class="variable constant_">SOURCE_IP</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">				--source_port=*) <span class="variable constant_">SOURCE_PORT</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">                --add_mysql_dir=*) <span class="variable constant_">ADD_MYSQL_DIR</span>=<span class="string">&quot;$val&quot;</span> <span class="variable constant_">ADD_FLAG</span>=<span class="number">1</span> ;;</span><br><span class="line">                --expire_day=*) <span class="variable constant_">EXPIRE_DAY</span>=<span class="string">&quot;$val&quot;</span> ;;</span><br><span class="line">                --local_ipaddr=*) <span class="variable constant_">LOCAL_IPADDR</span>=<span class="string">&quot;$val&quot;</span> <span class="variable constant_">SLOWQUERY_COLLECT_FIAG</span>=<span class="number">1</span> ;;</span><br><span class="line">        esac</span><br><span class="line">        done</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;$INSTANCE_NAME&quot;</span> == <span class="string">&quot;example&quot;</span> ]</span><br><span class="line">then</span><br><span class="line">        echo -e <span class="string">&quot;Warning:Please specify instance name\n&quot;</span></span><br><span class="line">        usage</span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">yum -y install lsof</span><br><span class="line">lsof -<span class="attr">i</span>:$PORT</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ $? -eq <span class="number">0</span> ]</span><br><span class="line">then</span><br><span class="line">        echo -e <span class="string">&quot;\nWarning: the port $PORT has been used,please specify \n&quot;</span></span><br><span class="line">        usage</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#create user <span class="keyword">if</span> not exists</span><br><span class="line">user=mysql</span><br><span class="line">egrep <span class="string">&quot;^$user&quot;</span> /etc/passwd &gt;&amp; <span class="regexp">/dev/</span><span class="literal">null</span></span><br><span class="line"><span class="keyword">if</span> [ $? -ne <span class="number">0</span> ]</span><br><span class="line">then</span><br><span class="line">    useradd $user</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#安装部分包，使用<span class="title class_">CentOS</span>。</span><br><span class="line">#yum -y install gcc gcc-c++ perl make kernel-headers kernel-devel</span><br><span class="line">#yum -y install perl-<span class="title class_">Data</span>-<span class="title class_">Dumper</span></span><br><span class="line">yum -y install libaio </span><br><span class="line">yum -y install bc screen</span><br><span class="line">#yum -y install jemalloc</span><br><span class="line">#下载定制包</span><br><span class="line">wget --ftp-user=$FTP_USER --ftp-password=$FTP_PASSWORD <span class="attr">ftp</span>:<span class="comment">//$FTP_ADRESS:/$PERCONA_TOOLKIT -P ./</span></span><br><span class="line">wget --ftp-user=$FTP_USER --ftp-password=$FTP_PASSWORD <span class="attr">ftp</span>:<span class="comment">//$FTP_ADRESS:/$PERCONA_XTRABACKUP -P ./</span></span><br><span class="line"></span><br><span class="line">#检查定制包及安装</span><br><span class="line"><span class="keyword">if</span> [ -e ./$PERCONA_TOOLKIT ]</span><br><span class="line">then  </span><br><span class="line">        yum -y install $PERCONA_TOOLKIT</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&quot;$PERCONA_TOOLKIT not exist,please check&quot;</span></span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -e ./$PERCONA_XTRABACKUP ]</span><br><span class="line">then  </span><br><span class="line">        yum -y install $PERCONA_XTRABACKUP</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">&quot;$PERCONA_XTRABACKUP not exist,please check&quot;</span></span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#判断文件是否存在/usr/bin/jemalloc.<span class="property">sh</span>####</span><br><span class="line">#<span class="keyword">function</span> <span class="title function_">ld_preload</span>(<span class="params"></span>) &#123;</span><br><span class="line">#<span class="variable constant_">FILE_JEMALLOC</span>=<span class="regexp">/usr/</span>bin/jemalloc.<span class="property">sh</span></span><br><span class="line">#<span class="keyword">if</span> [[ -e <span class="string">&quot;$FILE_JEMALLOC&quot;</span> ]]</span><br><span class="line">#then</span><br><span class="line">#        cd /usr/bin/</span><br><span class="line">#        source jemalloc.<span class="property">sh</span></span><br><span class="line">#		echo -e <span class="string">&quot;\n source\n&quot;</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">#        echo -e <span class="string">&quot;\n不存在\n&quot;</span></span><br><span class="line">#		exit</span><br><span class="line">#fi</span><br><span class="line"></span><br><span class="line">#判断env|grep <span class="variable constant_">LD_PRELOAD</span>是否有输出</span><br><span class="line">#env|grep <span class="variable constant_">LD_PRELOAD</span></span><br><span class="line">#<span class="keyword">if</span> [ $? -eq <span class="number">0</span> ]</span><br><span class="line">#then</span><br><span class="line">#        echo -e <span class="string">&quot;\nenv is Ok!\n&quot;</span></span><br><span class="line">#<span class="keyword">else</span></span><br><span class="line">#        echo -e <span class="string">&quot;\nWarning: env-LD_PRELOAD is not exit,please check!\n&quot;</span></span><br><span class="line">#		exit</span><br><span class="line">#fi</span><br><span class="line">#a=<span class="string">`env|grep LD_PRELOAD`</span></span><br><span class="line">#<span class="variable constant_">LD_PRELOAD</span>=$&#123;a#*=&#125;</span><br><span class="line">#&#125;</span><br><span class="line">#ld_preload</span><br><span class="line">#echo $LD_PRELOAD</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">######并发参数优化######</span><br><span class="line"><span class="variable constant_">MEMTOTAL</span>=<span class="string">`awk &#x27;($1 == &quot;MemTotal:&quot;)&#123;print $2/1048576&#125;&#x27; /proc/meminfo`</span></span><br><span class="line"><span class="variable constant_">INT_MEMTOTAL</span>=<span class="string">`echo &quot;scale=0;$MEMTOTAL/1&quot;|bc -l`</span></span><br><span class="line"><span class="variable constant_">BUFFERCACHE</span>=<span class="string">`echo &quot;scale=0;$INT_MEMTOTAL/2/1&quot;|bc -l`</span></span><br><span class="line"><span class="keyword">if</span> [ $BUFFERCACHE -le <span class="number">2</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="variable constant_">INSTANCES_NUM</span>=<span class="number">1</span></span><br><span class="line">elif [ $BUFFERCACHE -gt <span class="number">2</span> ] &amp;&amp; [ $BUFFERCACHE -le <span class="number">4</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="variable constant_">INSTANCES_NUM</span>=<span class="number">2</span></span><br><span class="line">elif [ $BUFFERCACHE -gt <span class="number">4</span> ] &amp;&amp; [ $BUFFERCACHE -le <span class="number">8</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="variable constant_">INSTANCES_NUM</span>=<span class="number">4</span></span><br><span class="line">elif [ $BUFFERCACHE -gt <span class="number">8</span> ] &amp;&amp; [ $BUFFERCACHE -le <span class="number">16</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="variable constant_">INSTANCES_NUM</span>=<span class="number">8</span></span><br><span class="line">elif [ $BUFFERCACHE -gt <span class="number">16</span> ] &amp;&amp; [ $BUFFERCACHE -le <span class="number">32</span> ]</span><br><span class="line">then</span><br><span class="line">        <span class="variable constant_">INSTANCES_NUM</span>=<span class="number">16</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="variable constant_">INSTANCES_NUM</span>=<span class="number">32</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#######<span class="variable constant_">COU</span>核心 并发能力#########</span><br><span class="line"><span class="variable constant_">CPUNUM</span>=<span class="string">`grep -c &quot;model name&quot; /proc/cpuinfo`</span></span><br><span class="line"><span class="variable constant_">CPU_N</span>=<span class="string">`echo &quot;scale=0;$CPUNUM/3/1&quot;|bc -l`</span></span><br><span class="line"><span class="keyword">if</span> [ $CPUNUM -gt <span class="number">4</span> ]</span><br><span class="line">then</span><br><span class="line">        </span><br><span class="line">		<span class="variable constant_">READ_NUM</span>=$((<span class="number">2</span>*<span class="variable constant_">CPU_N</span>))</span><br><span class="line">		<span class="variable constant_">WRITE_NUM</span>=$((<span class="variable constant_">CPUNUM</span>-<span class="variable constant_">READ_NUM</span>))</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        <span class="variable constant_">READ_NUM</span>=<span class="number">4</span></span><br><span class="line">		<span class="variable constant_">WRITE_NUM</span>=<span class="number">4</span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##########<span class="variable constant_">BUFFER_POOL_SIZE</span>###########</span><br><span class="line"><span class="variable constant_">MEM_TOTAL</span>=<span class="string">`awk &#x27;($1 == &quot;MemTotal:&quot;)&#123;print $2&#125;&#x27; /proc/meminfo`</span></span><br><span class="line"><span class="variable constant_">MULTI</span>=<span class="string">`echo &quot;scale=0;$MEM_TOTAL/(2*128*1024*$INSTANCES_NUM)&quot;|bc -l`</span></span><br><span class="line"><span class="variable constant_">BUFFER_SIZE</span>=$[($MULTI+<span class="number">1</span>)*(<span class="number">128</span>*<span class="number">1024</span>*$INSTANCES_NUM)*<span class="number">1024</span>]</span><br><span class="line"></span><br><span class="line">#新搭建mysql**************************************************</span><br><span class="line"></span><br><span class="line"><span class="title function_">install_new_mysql</span>(<span class="params"></span>) &#123;</span><br><span class="line">#检查路径&amp;&amp;判断文件</span><br><span class="line"><span class="keyword">if</span> [  -d <span class="string">&quot;$INSTALL_BASE_DIR&quot;</span> ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;$INSTALL_BASE_DIR has already exist,can&#x27;t deploy mysql&quot;</span></span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [  -d <span class="string">&quot;$INSTALL_REAL_DIR&quot;</span> ]</span><br><span class="line">then</span><br><span class="line">        echo<span class="string">&quot; $INSTALL_REAL_DIR has already exist,can&#x27;t deploy mysql&quot;</span></span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ -e /tmp/$MYSQL_INSTALL_PACKAGE ]</span><br><span class="line">then</span><br><span class="line">        echo <span class="string">&quot;already exist /tmp/$MYSQL_INSTALL_PACKAGE,pleas check&quot;</span></span><br><span class="line">        exit</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#创建路径</span><br><span class="line">mkdir -p $INSTALL_REAL_DIR  &amp;&amp; ln -s $INSTALL_REAL_DIR $INSTALL_BASE_DIR</span><br><span class="line">#mkdir -p $INSTALL_REAL_DIR</span><br><span class="line"></span><br><span class="line">#部署mysql文件,包括my.<span class="property">cnf</span>和serice-example文件</span><br><span class="line"></span><br><span class="line">wget --ftp-user=$FTP_USER --ftp-password=$FTP_PASSWORD <span class="attr">ftp</span>:<span class="comment">//$FTP_ADRESS:/$MYSQL_INSTALL_PACKAGE -P /tmp/</span></span><br><span class="line">tar -xvf /tmp/$MYSQL_INSTALL_PACKAGE -C  /tmp</span><br><span class="line">mv /tmp/$MYSQL_VERSION<span class="comment">/* $INSTALL_REAL_DIR</span></span><br><span class="line"><span class="comment">wget --ftp-user=$FTP_USER --ftp-password=$FTP_PASSWORD ftp://$FTP_ADRESS:/service-example.sh -P /$INSTALL_REAL_DIR</span></span><br><span class="line"><span class="comment">chown -R mysql:mysql $INSTALL_REAL_DIR</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#创建实例数据文件路径</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -d &quot;$INSTALL_BASE_DIR/data/$INSTANCE_NAME&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        echo &quot;$INSTALL_BASE_DIR/data/$INSTANCE_NAME has already exist.&quot;</span></span><br><span class="line"><span class="comment">        exit</span></span><br><span class="line"><span class="comment">else </span></span><br><span class="line"><span class="comment">        mkdir $INSTALL_BASE_DIR/data  </span></span><br><span class="line"><span class="comment">        mkdir $INSTALL_BASE_DIR/data/$INSTANCE_NAME</span></span><br><span class="line"><span class="comment">		$INSTALL_BASE_DIR/bin/mysqld --initialize-insecure --user=mysql --basedir=$INSTALL_BASE_DIR --datadir=$INSTALL_BASE_DIR/data/$INSTANCE_NAME --lower-case-table-names=1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        chown -R mysql:mysql $INSTALL_BASE_DIR/data/$INSTANCE_NAME</span></span><br><span class="line"><span class="comment">#拷贝个配置文件</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">mkdir $INSTALL_BASE_DIR/data/$INSTANCE_NAME/logfile</span></span><br><span class="line"><span class="comment">touch $INSTALL_BASE_DIR/data/$INSTANCE_NAME/logfile/mysql.err</span></span><br><span class="line"><span class="comment">wget --ftp-user=$FTP_USER --ftp-password=$FTP_PASSWORD ftp://$FTP_ADRESS:/$CONFIGURE_FILE -P $INSTALL_BASE_DIR/data</span></span><br><span class="line"><span class="comment">mv $INSTALL_BASE_DIR/data/$CONFIGURE_FILE $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#生成service-example文件内容。</span></span><br><span class="line"><span class="comment">if [ -e &quot;$INSTALL_BASE_DIR/service-example.sh&quot; ]</span></span><br><span class="line"><span class="comment">then  </span></span><br><span class="line"><span class="comment">        cp $INSTALL_BASE_DIR/service-example.sh $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo &quot;$INSTALL_BASE_DIR/service-example.sh not exist,please check&quot;</span></span><br><span class="line"><span class="comment">        exit</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">chown -R mysql:mysql $INSTALL_REAL_DIR</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#替换bin中脚本内容</span></span><br><span class="line"><span class="comment">sed -i &quot;s;cmdPath=.*;cmdPath=\&quot;$INSTALL_BASE_DIR/bin\&quot;;g&quot; $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">sed -i &quot;s;myPath=.*;myPath=\&quot;$INSTALL_BASE_DIR/data/$INSTANCE_NAME\&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">sed -i &quot;s;softPath=.*;softPath=\&quot;$INSTALL_BASE_DIR\&quot;;g&quot; $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">sed -i &quot;s;socketfile=.*;socketfile=\&quot;/tmp/mysql-$INSTANCE_NAME.sock\&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">chown mysql:mysql $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">chmod 750 $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#修改配置文件路径信息、端口信息</span></span><br><span class="line"><span class="comment">sed -i &quot;s/example/$INSTANCE_NAME/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s;/usr/local/mysql/;$INSTALL_BASE_DIR/;g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s;^port.*;port            = $PORT;g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#替换内存管理机制#</span></span><br><span class="line"><span class="comment">#sed -i &quot;s;LD_PRELOAD;$LD_PRELOAD;g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#修改读写参数和缓存池数量#</span></span><br><span class="line"><span class="comment">sed -i &quot;s/READ_NUM/$READ_NUM/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s/WRITE_NUM/$WRITE_NUM/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s/INSTANCES_NUM/$INSTANCES_NUM/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#修改server_id##</span></span><br><span class="line"><span class="comment">sed -i &quot;s/SERVER_NUM/$SERVER_ID/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#修改buffer_size###</span></span><br><span class="line"><span class="comment">sed -i &quot;s/BUFFER_SIZE/$BUFFER_SIZE/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#启动mysql实例</span></span><br><span class="line"><span class="comment">#HOST_NAME=`echo $HOSTNAME`</span></span><br><span class="line"><span class="comment">cd $INSTALL_BASE_DIR/bin &amp;&amp; sh service-$INSTANCE_NAME.sh start</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">while [ ! -e /tmp/mysql-$INSTANCE_NAME.sock ]</span></span><br><span class="line"><span class="comment">do</span></span><br><span class="line"><span class="comment">    echo &quot;starting mysql...&quot; </span></span><br><span class="line"><span class="comment">    sleep 1</span></span><br><span class="line"><span class="comment">done</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;select user,host from mysql.user;&quot;</span></span><br><span class="line"><span class="comment">#$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;create user &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27; IDENTIFIED BY &#x27;$MONITOR_PASSWD&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">#$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;GRANT PROCESS, SHOW DATABASES, REPLICATION CLIENT, SHOW VIEW ON *.* TO &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">if [ -n &quot;$REPLICA_IP&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;create user &#x27;repluser&#x27;@&#x27;$REPLICA_IP&#x27; identified by &#x27;Repluser@123&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;grant replication slave on *.* to &#x27;repluser&#x27;@&#x27;$REPLICA_IP&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;alter user &#x27;$repluser&#x27;@&#x27;$REPLICA_IP&#x27; password expire never;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">		#iptables -I INPUT -s $REPLICA_IP -p tcp --dport $PORT -j ACCEPT</span></span><br><span class="line"><span class="comment">        firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;$REPLICA_IP&quot; port protocol=&quot;tcp&quot; port=&quot;$PORT&quot; accept&quot;</span></span><br><span class="line"><span class="comment">        firewall-cmd --reload</span></span><br><span class="line"><span class="comment">        #iptables-save</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo -e &quot;\n There is not replica node\n&quot;</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -n &quot;$SOURCE_IP&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -h$SOURCE_IP -urepluser -pRepluser@123 -P$SOURCE_PORT -e &quot;select 1 from dual;&quot; &gt;/dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="comment">		if [ $? == 0 ] ;then</span></span><br><span class="line"><span class="comment">		    $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;CHANGE MASTER TO MASTER_HOST=&#x27;$SOURCE_IP&#x27;,MASTER_USER=&#x27;$MASTER_USER&#x27;,MASTER_PASSWORD=&#x27;$MASTER_PASSWORD&#x27;,MASTER_PORT=$SOURCE_PORT,master_auto_position=1;&quot;</span></span><br><span class="line"><span class="comment">			$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;start slave;&quot;</span></span><br><span class="line"><span class="comment">			$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;show slave status\G;&quot;</span></span><br><span class="line"><span class="comment">		else</span></span><br><span class="line"><span class="comment">		    echo -e &quot;\nCan&#x27;t connect the source node!&quot;</span></span><br><span class="line"><span class="comment">			echo -e &quot;Manually run:CHANGE MASTER TO MASTER_HOST=&#x27;$SOURCE_IP&#x27;,MASTER_USER=$MASTER_USER,MASTER_PASSWORD=$MASTER_PASSWORD,MASTER_PORT=$SOURCE_PORT,master_auto_position=1;&quot;</span></span><br><span class="line"><span class="comment">			echo -e &quot;Manually run:start slave;\n&quot;</span></span><br><span class="line"><span class="comment">		fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo -e &quot;\n There is not source node\n&quot;</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -n &quot;$MONITOR_USER&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;create user &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27; IDENTIFIED BY &#x27;$MONITOR_PASSWD&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;GRANT PROCESS, SHOW DATABASES, REPLICATION CLIENT, SHOW VIEW ON *.* TO &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;alter user &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27; WITH MAX_USER_CONNECTIONS 3;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;alter user &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27; password expire never;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        #搭配监控使用的</span></span><br><span class="line"><span class="comment">		#iptables -I INPUT -s $MONITOR_IP_IPTABLES -p tcp --dport $PORT -j ACCEPT</span></span><br><span class="line"><span class="comment">        firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;$MONITOR_IP_IPTABLES&quot; port protocol=&quot;tcp&quot; port=&quot;$PORT&quot; accept&quot;</span></span><br><span class="line"><span class="comment">        firewall-cmd --reload</span></span><br><span class="line"><span class="comment">        #iptables-save</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;select user,host from mysql.user;&quot;</span></span><br><span class="line"><span class="comment">$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;alter user &#x27;root&#x27;@&#x27;localhost&#x27; password expire never;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">$INSTALL_BASE_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;$PASSWORD&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">sed -i &quot;s;my_pass=\&quot;\&quot;;my_pass=&quot;$PASSWORD&quot;;g&quot; $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#####配置慢日志收集功能########</span></span><br><span class="line"><span class="comment">if [ $SLOWQUERY_COLLECT_FIAG -eq 1 ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;my_port=\&quot;\&quot;;my_port=&quot;$PORT&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;local_ipaddr=\&quot;\&quot;;local_ipaddr=&quot;$LOCAL_IPADDR&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;expire_day=\&quot;\&quot;;expire_day=&quot;$EXPIRE_DAY&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;archery_db_host=\&quot;\&quot;;archery_db_host=&quot;$SLOWQUERY_DB_HOST&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;archery_db_port=\&quot;\&quot;;archery_db_port=&quot;$SLOWQUERY_DB_PORT&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;archery_db_user=\&quot;\&quot;;archery_db_user=&quot;$SLOWQUERY_DB_USER&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;archery_db_password=\&quot;\&quot;;archery_db_password=&quot;$SLOWQUERY_DB_PASSWORD&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        sed -i &quot;s;archery_db_database=\&quot;\&quot;;archery_db_database=&quot;$SLOWQUERY_DB_DATABASE&quot;;g&quot;  $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">        (crontab -u mysql -l ; echo &quot;1 0 * * * sh $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh switch_slowlog &gt;&gt;/tmp/switch_slowlog.log&quot;) | crontab -u mysql -</span></span><br><span class="line"><span class="comment">        (crontab -u mysql -l ; echo &quot;0 * * * * sh $INSTALL_BASE_DIR/bin/service-$INSTANCE_NAME.sh report_slowlog &gt;&gt;/tmp/report_slowlog.log&quot;) | crontab -u mysql -</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">echo &quot;Congratulations! Mysql has installed successfully~&quot;</span></span><br><span class="line"><span class="comment">echo &quot;Login command: $INSTALL_BASE_DIR/bin/mysql -uroot -p$PASSWORD -S /tmp/mysql-$INSTANCE_NAME.sock&quot;</span></span><br><span class="line"><span class="comment">echo &quot;Please contact user to confirm how to configure the firewall!&quot;</span></span><br><span class="line"><span class="comment">echo &quot;firewall-cmd --zone=public --add-port=$PORT/tcp --permanent&quot;</span></span><br><span class="line"><span class="comment">echo &quot;firewall-cmd --reload&quot;</span></span><br><span class="line"><span class="comment">echo &quot;list crontab for mysql,please check:&quot;</span></span><br><span class="line"><span class="comment">crontab -u mysql -l</span></span><br><span class="line"><span class="comment">rm -f /tmp/$MYSQL_INSTALL_PACKAGE</span></span><br><span class="line"><span class="comment">rm -rf /tmp/$MYSQL_VERSION</span></span><br><span class="line"><span class="comment">cd ~</span></span><br><span class="line"><span class="comment">rm -f ./$JOB_NAME</span></span><br><span class="line"><span class="comment">rm -f ./$PERCONA_TOOLKIT</span></span><br><span class="line"><span class="comment">rm -f ./$PERCONA_XTRABACKUP</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#搭建mysql完成</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#新增mysql 实例</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">add_mysql_instance()&#123;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -d $ADD_MYSQL_DIR ]</span></span><br><span class="line"><span class="comment">then </span></span><br><span class="line"><span class="comment">        if [ -d &quot;$ADD_MYSQL_DIR/bin&quot; ] &amp;&amp; [ -d &quot;$ADD_MYSQL_DIR/data&quot; ] &amp;&amp; [ -d &quot;$ADD_MYSQL_DIR/include&quot; ]</span></span><br><span class="line"><span class="comment">            then</span></span><br><span class="line"><span class="comment">                echo &quot;check dir ok&quot;</span></span><br><span class="line"><span class="comment">            else</span></span><br><span class="line"><span class="comment">                echo &quot;please check dir $ADD_MYSQL_DIR has mysql&quot;</span></span><br><span class="line"><span class="comment">                exit</span></span><br><span class="line"><span class="comment">        fi</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo &quot;$ADD_MYSQL_DIR not exist,plesse check&quot;</span></span><br><span class="line"><span class="comment">        exit</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -d &quot;$ADD_MYSQL_DIR/data/$INSTANCE_NAME&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        echo &quot;$ADD_MYSQL_DIR/data/$INSTANCE_NAME has already exist.&quot;</span></span><br><span class="line"><span class="comment">        exit</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        mkdir $ADD_MYSQL_DIR/data/$INSTANCE_NAME</span></span><br><span class="line"><span class="comment">		chown -R mysql:mysql $ADD_MYSQL_DIR/data/$INSTANCE_NAME</span></span><br><span class="line"><span class="comment">		$INSTALL_REAL_DIR/bin/mysqld --initialize-insecure --user=mysql --basedir=$ADD_MYSQL_DIR --datadir=$ADD_MYSQL_DIR/data/$INSTANCE_NAME --lower-case-table-names=1</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">        </span></span><br><span class="line"><span class="comment">#拷贝个配置文件</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">mkdir $ADD_MYSQL_DIR/data/$INSTANCE_NAME/logfile</span></span><br><span class="line"><span class="comment">mkdir $ADD_MYSQL_DIR/data/$INSTANCE_NAME/bin #add liuhao</span></span><br><span class="line"><span class="comment">touch $INSTALL_REAL_DIR/data/$INSTANCE_NAME/logfile/mysql.err</span></span><br><span class="line"><span class="comment">wget --ftp-user=$FTP_USER --ftp-password=$FTP_PASSWORD ftp://$FTP_ADRESS:/$CONFIGURE_FILE -P $ADD_MYSQL_DIR/data</span></span><br><span class="line"><span class="comment">mv $ADD_MYSQL_DIR/data/$CONFIGURE_FILE $ADD_MYSQL_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">chown -R mysql:mysql $ADD_MYSQL_DIR/data/$INSTANCE_NAME</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#生成service-example文件内容。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -e &quot;$ADD_MYSQL_DIR/service-example.sh&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        cp $ADD_MYSQL_DIR/service-example.sh $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo &quot;$ADD_MYSQL_DIR/bin/service-example.sh not exist,please check&quot;</span></span><br><span class="line"><span class="comment">        exit</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment">#替换bin中脚本内容</span></span><br><span class="line"><span class="comment">sed -i &quot;s;cmdPath=.*;cmdPath=\&quot;$ADD_MYSQL_DIR/bin\&quot;;g&quot; $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">sed -i &quot;s;myPath=.*;myPath=\&quot;$ADD_MYSQL_DIR/data/$INSTANCE_NAME\&quot;;g&quot;  $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">sed -i &quot;s;softPath=.*;softPath=\&quot;$ADD_MYSQL_DIR\&quot;;g&quot; $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">sed -i &quot;s;socketfile=.*;socketfile=\&quot;/tmp/mysql-$INSTANCE_NAME.sock\&quot;;g&quot;  $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">chown mysql:mysql $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">chmod 750 $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#替换配置文件内容</span></span><br><span class="line"><span class="comment">sed -i &quot;s/example/$INSTANCE_NAME/g&quot; $ADD_MYSQL_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s;/usr/local/mysql/;$ADD_MYSQL_DIR/;g&quot; $ADD_MYSQL_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s;^port.*;port            = $PORT;g&quot; $ADD_MYSQL_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#替换内存管理机制#</span></span><br><span class="line"><span class="comment">#sed -i &quot;s;LD_PRELOAD;$LD_PRELOAD;g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#修改读写参数和缓存池数量#</span></span><br><span class="line"><span class="comment">sed -i &quot;s/READ_NUM/$READ_NUM/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s/WRITE_NUM/$WRITE_NUM/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">sed -i &quot;s/INSTANCES_NUM/$INSTANCES_NUM/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#修改server_id##</span></span><br><span class="line"><span class="comment">sed -i &quot;s/SERVER_NUM/$SERVER_ID/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment">#修改buffer_size###</span></span><br><span class="line"><span class="comment">sed -i &quot;s/BUFFER_SIZE/$BUFFER_SIZE/g&quot; $INSTALL_BASE_DIR/data/$INSTANCE_NAME/my.cnf</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#启动mysql实例</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">cd $ADD_MYSQL_DIR/bin &amp;&amp; sh service-$INSTANCE_NAME.sh start</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">while [ ! -e /tmp/mysql-$INSTANCE_NAME.sock ]</span></span><br><span class="line"><span class="comment">do</span></span><br><span class="line"><span class="comment">    echo &quot;starting mysql...&quot; </span></span><br><span class="line"><span class="comment">    sleep 1</span></span><br><span class="line"><span class="comment">done</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;select user,host from mysql.user&quot;</span></span><br><span class="line"><span class="comment">#$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;create user &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27; IDENTIFIED BY &#x27;$MONITOR_PASSWD&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">#$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;GRANT PROCESS, SHOW DATABASES, REPLICATION CLIENT, SHOW VIEW ON *.* TO &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">if [ -n &quot;$REPLICA_IP&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        $ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;create user &#x27;repluser&#x27;@&#x27;$REPLICA_IP&#x27; identified by &#x27;Repluser@123&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;grant replication slave on *.* to &#x27;repluser&#x27;@&#x27;$REPLICA_IP&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">		#iptables -I INPUT -s $REPLICA_IP -p tcp --dport $PORT -j ACCEPT</span></span><br><span class="line"><span class="comment">        firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;$REPLICA_IP&quot; port protocol=&quot;tcp&quot; port=&quot;$PORT&quot; accept&quot;</span></span><br><span class="line"><span class="comment">        firewall-cmd --reload</span></span><br><span class="line"><span class="comment">        #iptables-save</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo -e &quot;\n There is not replica node\n&quot;</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -n &quot;$SOURCE_IP&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        $ADD_MYSQL_DIR/bin/mysql -h$SOURCE_IP -urepluser -pRepluser@123 -P$SOURCE_PORT -e &quot;select 1 from dual;&quot; &gt;/dev/null 2&gt;&amp;1</span></span><br><span class="line"><span class="comment">		if [ $? == 0 ] ;then</span></span><br><span class="line"><span class="comment">		    $ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;CHANGE MASTER TO MASTER_HOST=&#x27;$SOURCE_IP&#x27;,MASTER_USER=&#x27;$MASTER_USER&#x27;,MASTER_PASSWORD=&#x27;$MASTER_PASSWORD&#x27;,MASTER_PORT=$SOURCE_PORT,master_auto_position=1;&quot;</span></span><br><span class="line"><span class="comment">			$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;start slave;&quot;</span></span><br><span class="line"><span class="comment">			$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;show slave status\G;&quot;</span></span><br><span class="line"><span class="comment">		else</span></span><br><span class="line"><span class="comment">		    echo -e &quot;\n Can&#x27;t connect the source node!&quot;</span></span><br><span class="line"><span class="comment">			echo -e &quot;Manually runCHANGE MASTER TO MASTER_HOST=&#x27;$SOURCE_IP&#x27;,MASTER_USER=&#x27;$MASTER_USER&#x27;,MASTER_PASSWORD=&#x27;$MASTER_PASSWORD&#x27;,MASTER_PORT=$SOURCE_PORT,master_auto_position=1;&quot;</span></span><br><span class="line"><span class="comment">			echo -e &quot;Manually run:start slave;\n&quot;</span></span><br><span class="line"><span class="comment">			</span></span><br><span class="line"><span class="comment">		fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        echo -e &quot;\n There is not source node\n&quot;</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ -n &quot;$MONITOR_USER&quot; ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        $ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;create user &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27; IDENTIFIED BY &#x27;$MONITOR_PASSWD&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        $ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;GRANT PROCESS, SHOW DATABASES, REPLICATION CLIENT, SHOW VIEW ON *.* TO &#x27;$MONITOR_USER&#x27;@&#x27;$MONITOR_USER_IP&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment">        #搭配监控使用的</span></span><br><span class="line"><span class="comment">        #iptables -I INPUT -s $MONITOR_IP_IPTABLES -p tcp --dport $PORT -j ACCEPT</span></span><br><span class="line"><span class="comment">        firewall-cmd --permanent --add-rich-rule=&quot;rule family=&quot;ipv4&quot; source address=&quot;$MONITOR_IP_IPTABLES&quot; port protocol=&quot;tcp&quot; port=&quot;$PORT&quot; accept&quot;</span></span><br><span class="line"><span class="comment">        firewall-cmd --reload</span></span><br><span class="line"><span class="comment">        #iptables-save</span></span><br><span class="line"><span class="comment">fi</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;select user,host from mysql.user&quot;</span></span><br><span class="line"><span class="comment">$ADD_MYSQL_DIR/bin/mysql -uroot -S /tmp/mysql-$INSTANCE_NAME.sock -e &quot;SET SQL_LOG_BIN = 0;alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;$PASSWORD&#x27;;SET SQL_LOG_BIN = 1;&quot;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">sed -i &quot;s;my_pass=\&quot;\&quot;;my_pass=&quot;$PASSWORD&quot;;g&quot; $ADD_MYSQL_DIR/bin/service-$INSTANCE_NAME.sh</span></span><br><span class="line"><span class="comment">echo &quot;Congratulations! Mysql has installed successfully~&quot;</span></span><br><span class="line"><span class="comment">echo &quot;Login command: $ADD_MYSQL_DIR/bin/mysql -uroot -p$PASSWORD -S /tmp/mysql-$INSTANCE_NAME.sock&quot;</span></span><br><span class="line"><span class="comment">echo &quot;Please contact user to confirm how to configure the firewall!&quot;</span></span><br><span class="line"><span class="comment">echo &quot;firewall-cmd --zone=public --add-port=$PORT/tcp --permanent&quot;</span></span><br><span class="line"><span class="comment">echo &quot;firewall-cmd --reload&quot;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">############新增mysql 实例完成########################</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">if [ $ADD_FLAG -eq 0 ]</span></span><br><span class="line"><span class="comment">then</span></span><br><span class="line"><span class="comment">        install_new_mysql</span></span><br><span class="line"><span class="comment">else</span></span><br><span class="line"><span class="comment">        add_mysql_instance</span></span><br><span class="line"><span class="comment">fi</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>网络设备sflow配置</title>
    <url>/2024/03/13/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87sflow%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="juniper-sflow"><a href="#juniper-sflow" class="headerlink" title="juniper sflow"></a>juniper sflow</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">junos 18.1以上版本支持sflow</span><br><span class="line"></span><br><span class="line">#sflow采集器地址</span><br><span class="line">set protocols sflow collector 10.204.32.46 udp-port 5600</span><br><span class="line"></span><br><span class="line">#配置采集流量接口，该接口不能为vlan接口、聚合接口</span><br><span class="line">set protocols sflow interfaces ge-0/0/0.0</span><br><span class="line"></span><br><span class="line">#设置采集频率</span><br><span class="line">set protocols sflow polling-interval 60</span><br><span class="line"></span><br><span class="line">#设置取样比，1:1000</span><br><span class="line">set protocols sflow sample-rate ingress 4096</span><br><span class="line">set protocols sflow sample-rate egress 4096</span><br><span class="line"></span><br><span class="line">#设置sflow源地址</span><br><span class="line">set protocols sflow source-ip 192.168.11.130</span><br><span class="line">#设置agent-id 地址</span><br><span class="line">set protocols sflow agent-id 192.168.11.130</span><br><span class="line"></span><br><span class="line">----------------------------------</span><br><span class="line">#验证命令</span><br><span class="line">user@switch&gt; show sflow</span><br><span class="line">sFlow            : Enabled</span><br><span class="line">Sample rate      : 1:1000</span><br><span class="line">Sample limit     : 300 packets/second</span><br><span class="line">Polling interval	: 20 seconds</span><br><span class="line"></span><br><span class="line">user@switch&gt; show sflow interface</span><br><span class="line">Interface		Status		  Sample rate		Sample limit		Polling-interval</span><br><span class="line">ge-0/0/0.0		Enabled	 	  1000			300	 	        20 </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">user@switch&gt; show sflow collector</span><br><span class="line">Collector address		  UDP-port		No of samples</span><br><span class="line">10.204.32.46						5600			    1000				</span><br><span class="line">100.204.32.76						3400			    1000</span><br></pre></td></tr></table></figure>

<h2 id="juniper-cflowd"><a href="#juniper-cflowd" class="headerlink" title="juniper cflowd"></a>juniper cflowd</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">set services flow- monitoring</span><br><span class="line">set interfaces ge-0/0/0 unit 0 family inet sampling input</span><br><span class="line">set interfaces ge-0/0/0 unit 0 family inet sampling output</span><br><span class="line">set forwarding-options sampling input rate 1000</span><br><span class="line">set forwarding-options sampling input run-length 0</span><br><span class="line">set forwarding-options sampling input max-packets-per-second 2000</span><br><span class="line">set forwarding-options sampling family inet output flow-server 192.168.11.105 port 2055</span><br><span class="line">set forwarding-options sampling family inet output flow-server 192.168.11.105 source-address 192.168.11.106</span><br><span class="line">set forwarding-options sampling family inet output flow-server 192.168.11.105 version 5</span><br></pre></td></tr></table></figure>

<h2 id="juniper-netflow"><a href="#juniper-netflow" class="headerlink" title="juniper netflow"></a>juniper netflow</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">set firewall filter netflow term netflow then sample</span><br><span class="line">set firewall filter netflow term netflow then accept</span><br><span class="line"></span><br><span class="line">set interfaces xe-1/0/0 unit 0 family inet filter input netflow</span><br><span class="line">set interfaces xe-1/0/0 unit 0 family inet filter output netflow</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">set forwarding-options sampling family inet input rate 1000</span><br><span class="line">set forwarding-options sampling family inet input run-length 0</span><br><span class="line"></span><br><span class="line">set forwarding-options sampling family inet output flow-server 1.1.1.1 version 5</span><br><span class="line">set forwarding-options sampling family inet output flow-server 1.1.1.1 port 3055</span><br><span class="line">set forwarding-options sampling family inet output flow-server 1.1.1.1 no-local-dump</span><br><span class="line">set forwarding-options sampling family inet output flow-server 1.1.1.1 source-address 192.168.1.1</span><br><span class="line"></span><br><span class="line">set forwarding-options sampling family inet output flow-server 1.1.1.1 autonomous-system-type origin</span><br></pre></td></tr></table></figure>

<h2 id="华三-h3c-sflow"><a href="#华三-h3c-sflow" class="headerlink" title="华三 h3c sflow"></a>华三 h3c sflow</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">(1)      配置sFlow Agent和sFlow Collector信息</span><br><span class="line">#设置agent IP，可配置为loopback地址</span><br><span class="line">[Device] sflow agent ip 3.3.3.1</span><br><span class="line"></span><br><span class="line"># 配置sFlow Collector信息：sFlow Collector编号为1，IP地址为3.3.3.2，端口号保持缺省值6343，可修改，描述信息为netserver。</span><br><span class="line">[Device] sflow collector 1 ip 3.3.3.2 description netserver</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(2)      配置Counter采样</span><br><span class="line"></span><br><span class="line"># 在Ten-GigabitEthernet1/0/1接口上开启Counter采样功能并配置Counter采样的时间间隔为120秒。</span><br><span class="line"></span><br><span class="line">[Device] interface ten-gigabitethernet 1/0/1</span><br><span class="line"></span><br><span class="line">[Device-Ten-GigabitEthernet1/0/1] sflow counter interval 60</span><br><span class="line"></span><br><span class="line"># 在Ten-GigabitEthernet1/0/1接口上经过Counter采样后，sFlow Agent输出sFlow报文的目的sFlow Collector编号为1。</span><br><span class="line"></span><br><span class="line">[Device-Ten-GigabitEthernet1/0/1] sflow counter collector 1</span><br><span class="line"></span><br><span class="line">(3)      配置sFlow采样</span><br><span class="line"></span><br><span class="line"># 在Ten-GigabitEthernet1/0/1上开启Flow采样功能并配置Flow采样的采样模式为随机采样，Flow采样的报文采样率为32768。</span><br><span class="line"></span><br><span class="line">[Device-Ten-GigabitEthernet1/0/1] sflow sampling-mode random</span><br><span class="line"></span><br><span class="line">[Device-Ten-GigabitEthernet1/0/1] sflow sampling-rate 4096</span><br><span class="line"></span><br><span class="line"># 在Ten-GigabitEthernet1/0/1接口上经过Flow采样后，sFlow Agent输出sFlow报文的目的sFlow Collector编号为1。</span><br><span class="line"></span><br><span class="line">[Device-Ten-GigabitEthernet1/0/1] sflow flow collector 1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#查看sflow配置信息</span><br><span class="line">&lt;Device&gt; display sflow</span><br><span class="line"></span><br><span class="line">#可选配置，设置sflow源地址</span><br><span class="line">	</span><br><span class="line">sflow source 3.3.3.1</span><br></pre></td></tr></table></figure>

<h2 id="锐捷-ruijie-sflow"><a href="#锐捷-ruijie-sflow" class="headerlink" title="锐捷 ruijie sflow"></a>锐捷 ruijie sflow</h2><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">Ruijie(config)# sflow agent address 192.168.1.1</span><br><span class="line">Ruijie(config)# sflow sampling-rate 8192</span><br><span class="line">Ruijie(config)# sflow counter interval 60</span><br><span class="line">Ruijie(config)# sflow collector 1 destination 192.168.3.100 6343 source address 192.168.1.1</span><br><span class="line">Ruijie(config)# interface TenGigabitEthernet 0/1</span><br><span class="line">Ruijie(config-if-TenGigabitEthernet 0/1)# sflow flow collector 1</span><br><span class="line">Ruijie(config-if-TenGigabitEthernet 0/1)# sflow counter collector 1</span><br><span class="line">Ruijie(config-if-TenGigabitEthernet 0/1)# sflow enable</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>开源网络流量分析系统-ElastiFlow部署</title>
    <url>/2024/03/13/%E5%BC%80%E6%BA%90%E7%BD%91%E7%BB%9C%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90%E7%B3%BB%E7%BB%9F-ElastiFlow%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="ElastiFlow介绍"><a href="#ElastiFlow介绍" class="headerlink" title="ElastiFlow介绍"></a>ElastiFlow介绍</h2><p>ElastiFlow目前为开源的流量分析系统，可接收netflow、sflow和ipfix，同类商业软件参考solarwinds NTA</p>
<p><img src="/images/1710314159-0985c0de9fc9d9a20472a1e29921011d.webp"></p>
<h2 id="前置条件：安装docker和docker-compose"><a href="#前置条件：安装docker和docker-compose" class="headerlink" title="前置条件：安装docker和docker-compose"></a>前置条件：安装docker和docker-compose</h2><p>docker：（yum -y install docker-ce）</p>
<p>docker-compose：（pip3 install docker-compose -i <a href="https://link.zhihu.com/?target=http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a> –trusted-host <a href="http://pypi.aliyun.com)/">http://pypi.aliyun.com）</a></p>
<h2 id="准备时间校对文件"><a href="#准备时间校对文件" class="headerlink" title="准备时间校对文件"></a>准备时间校对文件</h2><p>未配置可能导致Discover界面中的timestamp参数慢8小时</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span> &gt;/etc/timezone</span><br></pre></td></tr></table></figure>

<p><img src="/images/1710314159-11be3e4a7e71dfd6e9562927f226acee.webp"></p>
<h2 id="准备docker-compose-yml文件"><a href="#准备docker-compose-yml文件" class="headerlink" title="准备docker-compose.yml文件"></a>准备docker-compose.yml文件</h2><p>使用docker-compose.yml部署，注意此文件需要单独放在业务文件盘符中，放置&#x2F;目录存放容器数据过大导致无法存储netflow数据。如：新建&#x2F;data文件夹，mount挂载新盘sdb</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">&#x27;2.2&#x27;</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="comment"># ElasticSearch容器相关定义内容，做收集流的数据库</span></span><br><span class="line">  <span class="attr">elasticsearch:</span></span><br><span class="line">    <span class="comment"># 镜像名称</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elastic/elasticsearch:7.8.1</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">environment:</span>  <span class="comment"># ES设置，这里并没有做集群</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">discovery.type=single-node</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">node.name=netdevops_es</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">cluster.name=netdevops_es_cluster</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">network.host=0.0.0.0</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">bootstrap.memory_lock=true</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;ES_JAVA_OPTS=-Xms4g -Xmx4g&quot;</span>   <span class="comment"># 资源控制，这里给了4g内存，可以根据自己的设备性能进行调整</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/usr/share/elasticsearch/data</span>  <span class="comment"># 数据持久化</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span>   <span class="comment"># 调整容器内的时间</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elastiflow_net</span>   <span class="comment"># 设置连接的网络</span></span><br><span class="line">    <span class="attr">ports:</span>   <span class="comment"># 端口映射</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9200:9200&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;9300:9300&quot;</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">      <span class="attr">nofile:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">65536</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">65536</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"><span class="comment"># 定义kibana容器，做最终的图形化界面呈现</span></span><br><span class="line">  <span class="attr">kibana:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">elastic/kibana:7.8.1</span></span><br><span class="line">    <span class="attr">privileged:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">SERVER_NAME=netdevops_kibana</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ELASTICSEARCH_URL=http://elasticsearch:9200</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">PATH_DATA=/usr/share/kibana/data</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">NODE_OPTIONS=&quot;--max_old_space_size=4096&quot;</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/usr/share/kibana/data</span>  <span class="comment"># 数据持久化</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elastiflow_net</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;5601:5601&quot;</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;elasticsearch&quot;</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">  <span class="comment"># 通过elastiflow做netflow流量收集</span></span><br><span class="line">  <span class="attr">elastiflow-logstash:</span></span><br><span class="line">    <span class="comment"># 镜像名称</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">robcowart/elastiflow-logstash:4.0.1</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">elastiflow-logstash</span></span><br><span class="line">    <span class="attr">volumes:</span>   <span class="comment"># 同步时间</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/timezone:/etc/timezone:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elasticsearch</span></span><br><span class="line">    <span class="attr">networks:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">elastiflow_net</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;2055:2055/udp&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;6343:6343/udp&quot;</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">&quot;4739:4739/udp&quot;</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="comment"># JVM Heap size - this MUST be at least 3GB (4GB preferred)</span></span><br><span class="line">      <span class="attr">LS_JAVA_OPTS:</span> <span class="string">&#x27;-Xms4g -Xmx4g&#x27;</span>  <span class="comment"># 调整内存</span></span><br><span class="line"></span><br><span class="line">      <span class="comment"># ElastiFlow global configuration</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_AGENT_ID:</span> <span class="string">elastiflow</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_GEOIP_CACHE_SIZE:</span> <span class="number">16384</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_GEOIP_LOOKUP:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_ASN_LOOKUP:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_OUI_LOOKUP:</span> <span class="string">&#x27;false&#x27;</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_POPULATE_LOGS:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_KEEP_ORIG_DATA:</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_DEFAULT_APPID_SRCTYPE:</span> <span class="string">&#x27;__UNKNOWN&#x27;</span></span><br><span class="line">      <span class="comment"># 定义数据的地址和端口</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_ES_HOST:</span> <span class="string">&#x27;elasticsearch:9200&#x27;</span></span><br><span class="line">      <span class="comment">#ELASTIFLOW_ES_USER: &#x27;elastic&#x27;</span></span><br><span class="line">      <span class="comment">#ELASTIFLOW_ES_PASSWD: &#x27;changeme&#x27;</span></span><br><span class="line">      <span class="comment">#支持的三种流收集</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_NETFLOW_IPV4_PORT:</span> <span class="number">2055</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_NETFLOW_UDP_WORKERS:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_NETFLOW_UDP_QUEUE_SIZE:</span> <span class="number">4096</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_NETFLOW_UDP_RCV_BUFF:</span> <span class="number">33554432</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">ELASTIFLOW_SFLOW_IPV4_PORT:</span> <span class="number">6343</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_SFLOW_UDP_WORKERS:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_SFLOW_UDP_QUEUE_SIZE:</span> <span class="number">4096</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_SFLOW_UDP_RCV_BUFF:</span> <span class="number">33554432</span></span><br><span class="line"></span><br><span class="line">      <span class="attr">ELASTIFLOW_IPFIX_UDP_IPV4_PORT:</span> <span class="number">4739</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_IPFIX_UDP_WORKERS:</span> <span class="number">2</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_IPFIX_UDP_QUEUE_SIZE:</span> <span class="number">4096</span></span><br><span class="line">      <span class="attr">ELASTIFLOW_IPFIX_UDP_RCV_BUFF:</span> <span class="number">33554432</span></span><br><span class="line">    <span class="attr">ulimits:</span></span><br><span class="line">      <span class="attr">memlock:</span></span><br><span class="line">        <span class="attr">soft:</span> <span class="number">-1</span></span><br><span class="line">        <span class="attr">hard:</span> <span class="number">-1</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line"></span><br><span class="line"><span class="attr">networks:</span></span><br><span class="line">  <span class="attr">elastiflow_net:</span></span><br><span class="line">    <span class="attr">driver:</span> <span class="string">bridge</span></span><br></pre></td></tr></table></figure>

<h2 id="部署elasticflow"><a href="#部署elasticflow" class="headerlink" title="部署elasticflow"></a>部署elasticflow</h2><p>进入docker-compose.yml目录下使用如下命令部署容器：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /data</span><br><span class="line"><span class="comment">#通过docker-compose部署应用</span></span><br><span class="line">docker-compose up -d</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看容器状态</span></span><br><span class="line">docker-compose ps</span><br><span class="line">docker ps</span><br><span class="line"></span><br><span class="line"><span class="comment">#扩展了解命令</span></span><br><span class="line"><span class="comment">#进入容器命令行</span></span><br><span class="line">docker <span class="built_in">exec</span> -it -u root 8e3dd7826a33 /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止应用，应用数据保存</span></span><br><span class="line">docker-compose stop</span><br><span class="line"></span><br><span class="line"><span class="comment">#停止并删除应用，应用数据不保存</span></span><br><span class="line">docker-compose down</span><br></pre></td></tr></table></figure>

<p>等待少许时间后，通过游览器，输入网站进入图形化界面，浏览器输入服务器IP:5601，进入kibana</p>
<p><img src="/images/1710314159-d73310deb83478e542cb5b183e95fc57.svg"></p>
<h2 id="网络设备配置netflow和sflow"><a href="#网络设备配置netflow和sflow" class="headerlink" title="网络设备配置netflow和sflow"></a>网络设备配置netflow和sflow</h2><p>参考文章</p>
<p><a href="https://jintaocool.github.io/2024/03/13/%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87sflow%E9%85%8D%E7%BD%AE/">网络设备sflow配置</a></p>
<h2 id="创建Kibana索引模式"><a href="#创建Kibana索引模式" class="headerlink" title="创建Kibana索引模式"></a>创建Kibana索引模式</h2><p><img src="/images/1710314159-5093f97f6203e1fc6794f64fa860b0f7.svg"></p>
<p><img src="/images/1710314159-b97196dfaac00c4eba2610000128f769.svg"></p>
<p><img src="/images/1710314159-8483645fb230085f9df644554bc11790.svg"></p>
<p><img src="/images/1710314159-24ee6c20a04a19835ec8fbf9ff8ae1b3.svg"></p>
<h2 id="导入官方dashboards模板"><a href="#导入官方dashboards模板" class="headerlink" title="导入官方dashboards模板"></a>导入官方dashboards模板</h2><p>（elastiflow.kibana.7.8.x.ndjson）导入完成后，可以在界面中看到多个dashboards信息。</p>
<p><img src="/images/1710314159-74c2aa45861484257f739a48f07f51c7.svg"></p>
<h2 id="查看Overview信息"><a href="#查看Overview信息" class="headerlink" title="查看Overview信息"></a>查看Overview信息</h2><p><img src="/images/1710314159-71933b7945e39950d8b5a7ee2b2fe0ee.svg"></p>
<p><img src="/images/1710314159-cc960a0d0f66d7d836ec095bb2954391.svg"></p>
<h2 id="优化内核参数"><a href="#优化内核参数" class="headerlink" title="优化内核参数"></a>优化内核参数</h2><p>netflow、sflow为udp数据，调整服务器udp接收缓存相关参数</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"></span><br><span class="line">#网卡设备将请求放入队列的长度，默认1000，可选</span><br><span class="line">net.core.netdev_max_backlog=262144</span><br><span class="line"></span><br><span class="line">#udp缓冲区大小</span><br><span class="line">net.ipv4.udp_rmem_min=131072</span><br><span class="line">net.ipv4.udp_mem=2097152 4194304 8388608</span><br></pre></td></tr></table></figure>

<h2 id="删除ES历史数据—供参考"><a href="#删除ES历史数据—供参考" class="headerlink" title="删除ES历史数据—供参考"></a>删除ES历史数据—供参考</h2><p>查询当前历史文件</p>
<p>curl -XGET <a href="http://0.0.0.0:9200//_cat/indics">http://0.0.0.0:9200/\_cat/indics</a>‘ | grep 2022.12.*</p>
<p>删除历史文件</p>
<p>curl -XDELETE <a href="http://0.0.0.0:9200/elastiflow-4.0.1-2022.12./">http://0.0.0.0:9200/elastiflow-4.0.1-2022.12.\</a>*</p>
<p><img src="/images/1710314159-deef31184056cad43281d36dc57e86f8.svg"></p>
<h2 id="参考资料："><a href="#参考资料：" class="headerlink" title="参考资料："></a><strong>参考资料：</strong></h2><p>视频教程：<a href="https://link.zhihu.com/?target=https://www.bilibili.com/video/BV1HK4y1p7a8">https://www.bilibili.com/video/BV1HK4y1p7a8</a></p>
<p>代码地址：<a href="https://link.zhihu.com/?target=https://gitee.com/qytang/ElasticFlow">https://gitee.com/qytang/ElasticFlow</a></p>
<p>官方文档：<a href="https://link.zhihu.com/?target=https://docs.elastiflow.com/docs/">https://docs.elastiflow.com/docs/</a></p>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>ELK ElasticFlow数据流分析图和部署</title>
    <url>/2024/03/13/ELK-ElasticFlow%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90%E5%9B%BE%E5%92%8C%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h2 id="一、ELK-ElasticFlow介绍和分析图"><a href="#一、ELK-ElasticFlow介绍和分析图" class="headerlink" title="一、ELK ElasticFlow介绍和分析图"></a>一、ELK ElasticFlow介绍和分析图</h2><h3 id="1、ElasticFlow的目的"><a href="#1、ElasticFlow的目的" class="headerlink" title="1、ElasticFlow的目的"></a>1、ElasticFlow的目的</h3><p>ElasticFlow利用sFlow等技术来收集网络中有关流量的信息，集流量收集、分析、报告于一体，深入了解流量与带宽的占用情况等用户最关心的问题，为全面了解企业的网络活动，合理有效分配和规划网络带宽提供科学的依据，保证企业的关键业务应用畅通运行。小结目的<strong>1、确定带宽使用者以及情况；****2、网络的流量&amp;协议可视化能力、调查问题的根源</strong></p>
<h3 id="2、ElasticFlow分析图"><a href="#2、ElasticFlow分析图" class="headerlink" title="2、ElasticFlow分析图"></a>2、ElasticFlow分析图</h3><h4 id="2-1-Overview（总揽）"><a href="#2-1-Overview（总揽）" class="headerlink" title="2.1 Overview（总揽）"></a>2.1 Overview（总揽）</h4><p>图里发现10.88.3.1承担了28%的流量，追踪发现3.1是一个无线控制器，简单分析得知局域网的流量<strong>有线占据72%无线占据28%</strong></p>
<p><img src="/images/1710314786-2bc8a6c1998d304c002c293f9a3fb18a.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知"></p>
<h4 id="2-2-Top-N（排行）"><a href="#2-2-Top-N（排行）" class="headerlink" title="2.2 Top-N（排行）"></a>2.2 Top-N（排行）</h4><p>通过挖掘POP3接收SMTP发送Email协议情况、SSH判断连接servers是否符合情况和客户端流量</p>
<p><img src="/images/1710314786-8435447038016beb4e5608979abe8b71.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_02"></p>
<h4 id="2-3-Threats（威胁）"><a href="#2-3-Threats（威胁）" class="headerlink" title="2.3 Threats（威胁）"></a>2.3 Threats（威胁）</h4><p>接入TALOS团队对IP信誉进行评估</p>
<p><img src="/images/1710314786-0c224cf6683e2b1af3e286a88787144b.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_03"></p>
<h4 id="2-4-Flows（流）"><a href="#2-4-Flows（流）" class="headerlink" title="2.4 Flows（流）"></a>2.4 Flows（流）</h4><p>已知局域网10.88.35.15是台FTP服务器，通过flows得知今天谁访问过，<strong>统计周期内流量大小情况</strong></p>
<p><img src="/images/1710314786-5a6f49d07e83d370aed29f48295d6ca8.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_04"></p>
<p>已知局域网10.88.35.4是台AD服务器，通过flows得知与其交互情况，感知局域网的威胁</p>
<p><img src="/images/1710314786-7f34c2c7deca13077dfabc245ce462b2.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_05"></p>
<h4 id="2-5-Geo-IP（地理知识产权）"><a href="#2-5-Geo-IP（地理知识产权）" class="headerlink" title="2.5 Geo IP（地理知识产权）"></a>2.5 Geo IP（地理知识产权）</h4><p>目标地址的世界地理位置</p>
<p><img src="/images/1710314786-b804a1b3263dfd9c5b4a544b7273ea9a.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_06"></p>
<h4 id="2-6-AS-Traffic（自治系统流量）"><a href="#2-6-AS-Traffic（自治系统流量）" class="headerlink" title="2.6 AS Traffic（自治系统流量）"></a>2.6 AS Traffic（自治系统流量）</h4><p><img src="/images/1710314786-6178aa536322efea9834195ab4244115.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_07"></p>
<h4 id="2-7-Exporters（网络接口流量）"><a href="#2-7-Exporters（网络接口流量）" class="headerlink" title="2.7 Exporters（网络接口流量）"></a>2.7 Exporters（网络接口流量）</h4><p>分析设备接口和总背板吞吐情况，<strong>入口Ingress Interfaces (bits&#x2F;s)、出口Egress Interfaces (bits&#x2F;s)</strong></p>
<p><img src="/images/1710314786-d162aad75fbdb174b51011a94c490da7.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_08"></p>
<h4 id="2-8-Traffic-Details（流量详细图）"><a href="#2-8-Traffic-Details（流量详细图）" class="headerlink" title="2.8 Traffic Details（流量详细图）"></a>2.8 Traffic Details（流量详细图）</h4><p>通过查看SSH协议判断servers和状态、通过查看3389审计远程主机合法性。<strong>统计周期时间轴流量情况</strong></p>
<p><img src="/images/1710314786-b2af1d83da3a72e582df7016b012c751.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_09"></p>
<h4 id="2-9-Flows-Records（流记录）"><a href="#2-9-Flows-Records（流记录）" class="headerlink" title="2.9 Flows Records（流记录）"></a>2.9 Flows Records（流记录）</h4><p>Flows的时间流水</p>
<p><img src="/images/1710314786-7365b7d1df71110c3d54c83b141384e9.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_10"></p>
<h2 id="二、ELK-ElasticFlow部署"><a href="#二、ELK-ElasticFlow部署" class="headerlink" title="二、ELK ElasticFlow部署"></a>二、ELK ElasticFlow部署</h2><h3 id="1、jdk环境和其他工具准备"><a href="#1、jdk环境和其他工具准备" class="headerlink" title="1、jdk环境和其他工具准备"></a>1、jdk环境和其他工具准备</h3><p>yum install java-openjdk-devel java-openjdk -y    # jdk<br>java -version<br>yum install git unzip net-tools lrzsz -y</p>
<h3 id="2、下载elk安装包并安装"><a href="#2、下载elk安装包并安装" class="headerlink" title="2、下载elk安装包并安装"></a>2、下载elk安装包并安装</h3><p># 创建安装包和日志的存放目录<br>mkdir -p &#x2F;home&#x2F;apps&#x2F;elk<br>mkdir -p &#x2F;data&#x2F;elk<br>cd &#x2F;home&#x2F;apps&#x2F;elk<br># 下载安装包<br>wget <a href="https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch/-7.8.1/-x86/_64.rpm">https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch\-7.8.1\-x86\_64.rpm</a><br>wget <a href="https://artifacts.elastic.co/downloads/kibana/kibana/-7.8.1/-x86/_64.rpm">https://artifacts.elastic.co/downloads/kibana/kibana\-7.8.1\-x86\_64.rpm</a><br>wget <a href="https://artifacts.elastic.co/downloads/logstash/logstash/-7.8.1.rpm">https://artifacts.elastic.co/downloads/logstash/logstash\-7.8.1.rpm</a><br># 安装<br>rpm -ivh elasticsearch-7.8.1-x86_64.rpm kibana-7.8.1-x86_64.rpm logstash-7.8.1.rpm<br># 加入systemd管理，使其开机自启<br>systemctl daemon-reload<br>systemctl enable elasticsearch.service<br>systemctl enable kibana.service<br>systemctl enable logstash.service</p>
<h3 id="3、修改配置文件"><a href="#3、修改配置文件" class="headerlink" title="3、修改配置文件"></a>3、修改配置文件</h3><p>vim &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml</p>
<p>检查配置文件关键配置如下,<strong>通过esc+dG批量删除且粘贴下述内容</strong></p>
<p>[root@testhost elk]# grep -v “^$\|^#” &#x2F;etc&#x2F;elasticsearch&#x2F;elasticsearch.yml<br>cluster.name: elastiflow<br>node.name: elastiflow<br>path.data: &#x2F;data&#x2F;elk&#x2F;elasticsearch<br>path.logs: &#x2F;var&#x2F;log&#x2F;elasticsearch<br>bootstrap.memory_lock: true<br>network.host: 0.0.0.0<br>http.port: 9200<br>action.destructive_requires_name: true<br>indices.query.bool.max_clause_count: 8192<br>search.max_buckets: 250000<br>discovery.type: single-node</p>
<p>修改es的jvm配置</p>
<p>​<code>​vim /etc/elasticsearch/jvm.options​</code>​检查配置文件关键配置如下</p>
<p>-Xms4g<br>-Xmx4g</p>
<p>修改kibana配置文件​<code>​vim /etc/kibana/kibana.yml​</code>​</p>
<p>server.host: “0.0.0.0”<br>elasticsearch.hosts: [“<a href="http://localhost:9200"\]">http://localhost:9200&quot;\]</a></p>
<h3 id="4、启动服务"><a href="#4、启动服务" class="headerlink" title="4、启动服务"></a>4、启动服务</h3><p>顺序启动</p>
<p>systemctl restart elasticsearch.service<br>systemctl status elasticsearch.service<br>systemctl restart kibana.service<br>systemctl status kibana.service</p>
<h3 id="5、安装logstash-plugin"><a href="#5、安装logstash-plugin" class="headerlink" title="5、安装logstash plugin"></a>5、安装logstash plugin</h3><p>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-codec-sflow<br>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-codec-netflow<br>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-input-udp<br>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-input-tcp<br>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-filter-dns<br>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-filter-geoip<br>&#x2F;usr&#x2F;share&#x2F;logstash&#x2F;bin&#x2F;logstash-plugin install logstash-filter-translate</p>
<h3 id="6、logstash中的elastiflow模块下载部署"><a href="#6、logstash中的elastiflow模块下载部署" class="headerlink" title="6、logstash中的elastiflow模块下载部署"></a>6、logstash中的elastiflow模块下载部署</h3><p>git clone <a href="https://github.com/robcowart/elastiflow.git">https://github.com/robcowart/elastiflow.git</a><br>wget <a href="https://github.com/robcowart/elastiflow/archive/master.zip">https://github.com/robcowart/elastiflow/archive/master.zip</a><br>unzip master.zip<br>cp -a &#x2F;home&#x2F;apps&#x2F;elk&#x2F;elastiflow-master&#x2F;logstash&#x2F;elastiflow&#x2F;. &#x2F;etc&#x2F;logstash&#x2F;elastiflow&#x2F;<br>cp -a &#x2F;home&#x2F;apps&#x2F;elk&#x2F;elastiflow-master&#x2F;logstash.service.d&#x2F;. &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;logstash.service.d&#x2F;<br>sz &#x2F;home&#x2F;apps&#x2F;elk&#x2F;elastiflow-master&#x2F;kibana&#x2F;elastiflow.kibana.7.8.x.ndjson    # 把kibana模板保存到宿主机，后面步骤需要在kibana页面中导入此模板文件</p>
<p>修改logstash jvm配置文件​<code>​vim /etc/logstash/jvm.options​</code>​（此项很重要，需要把jvm堆改大，否则logstash启动会报OOM）</p>
<p>[root@testhost elk]# grep -v “^$\|^#” &#x2F;etc&#x2F;logstash&#x2F;jvm.options<br>-Xms4g<br>-Xmx4g<br>-XX:+UseConcMarkSweepGC<br>-XX:CMSInitiatingOccupancyFraction=75<br>-XX:+UseCMSInitiatingOccupancyOnly<br>-Djava.awt.headless=true<br>-Dfile.encoding=UTF-8<br>-Djruby.compile.invokedynamic=true<br>-Djruby.jit.threshold=0<br>-Djruby.regexp.interruptible=true<br>-XX:+HeapDumpOnOutOfMemoryError<br>-Djava.security.egd=file:&#x2F;dev&#x2F;urandom<br>-Dlog4j2.isThreadContextMapInheritable=true</p>
<p>修改管道配置文件​<code>​vim /etc/logstash/pipelines.yml​</code>​</p>
<p># This file is where you define your pipelines. You can define multiple.<br># For more information on multiple pipelines, see the documentation:<br>#   <a href="https://www.elastic.co/guide/en/logstash/current/multiple-pipelines.html">https://www.elastic.co/guide/en/logstash/current/multiple-pipelines.html</a>  </p>
<p>#- pipeline.id: main<br>#  path.config: “&#x2F;etc&#x2F;logstash&#x2F;conf.d&#x2F;*.conf”  </p>
<p>- pipeline.id: elastiflow<br>  path.config: “&#x2F;etc&#x2F;logstash&#x2F;elastiflow&#x2F;conf.d&#x2F;*.conf”</p>
<p>执行logstash系统脚本​<code>​/usr/share/logstash/bin/system-install​</code>​启动logstash并设置开机自启</p>
<p>systemctl daemon-reload<br>systemctl enable logstash<br>systemctl start logstash.service</p>
<h3 id="7、其他测试项"><a href="#7、其他测试项" class="headerlink" title="7、其他测试项"></a>7、其他测试项</h3><p>systemctl stop firewalld.service<br>systemctl disable firewalld.service  </p>
<p># 临时禁用selinux<br>setenforce 0</p>
<p>测试es：curl <a href="http://0.0.0.0:9200/">http://0.0.0.0:9200</a></p>
<p><img src="/images/1710314786-be1f80233c07a097e381b34613cbbfc9.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_11"></p>
<p>检查端口：netstat -antupl |grep java</p>
<p><img src="/images/1710314786-f679dd0d7e697cb6017596a79253cac5.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_12"></p>
<p>检查日志：tailf &#x2F;var&#x2F;log&#x2F;logstash&#x2F;logstash-plain.log</p>
<p><img src="/images/1710314786-9dc63ed43b7b465173be57e39b94c680.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_13"></p>
<p>elasticflow各协议的端口查看：</p>
<p>grep -i sflow &#x2F;etc&#x2F;systemd&#x2F;system&#x2F;logstash.service.d&#x2F;elastiflow.conf    # 只查看sflow相关端口和配置</p>
<p><img src="/images/1710314786-4f19617754b2b0cd25b430daf1e06d25.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_14"></p>
<h3 id="8、kibana配置"><a href="#8、kibana配置" class="headerlink" title="8、kibana配置"></a>8、kibana配置</h3><p>浏览器打开http:&#x2F;&#x2F;{此处输入部署服务器地址}:5601</p>
<p><img src="/images/1710314786-0a84c1dc26135e99844fb8bd4eb9c407.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_15"></p>
<p>导入第六步kibana模板</p>
<p><img src="/images/1710314786-8ec3e11c91fe23b07e9f72eb7b966b59.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_16"></p>
<p>高级设置</p>
<p><img src="/images/1710314786-6c8f8c482c770c7da5eb5a6e54666ba2.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_17"></p>
<p>过滤器是否默认具有全局状态(被固定)</p>
<p><img src="/images/1710314786-05a5f439af80ce8c4b56c29d7e8f5fdc.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_18"></p>
<p>URL有时会变得太大，一些浏览器无法处理。为了解决这个问题，我们正在测试将部分URL存储在会话存储中是否有帮助</p>
<p><img src="/images/1710314786-bb681050c99a4b961f242e43ea48bd59.png" alt="   ELK ElasticFlow数据流分析图和部署_网络可视化_19"></p>
<h2 id="三、交换机配置（H3C）"><a href="#三、交换机配置（H3C）" class="headerlink" title="三、交换机配置（H3C）"></a>三、交换机配置（H3C）</h2><p><img src="/images/1710314786-7ce1f571fd9f3ce6e2f3c43ac3590591.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_20"></p>
<p># 全局sflow配置<br>sflow agent ip X.X.X.X  #此处我不确定配置网关接口是否可行，实际情况我通过loopback来实现，比较安全<br>sflow source ip X.X.X.X  #可选项，缺省情况下，设备使用路由决定的源IP地址作为sFlow报文的源IP地址<br>sflow collector 1 ip X.X.X.X{应为ElasticFlow地址} description “TestCollector”<br>sflow sampling-rate 1000  </p>
<p># 接口下应用sflow配置（int G&amp;H&amp;X&amp;T）<br>sflow flow collector 1<br>sflow sampling-rate 1000<br>sflow counter collector 1<br>sflow counter interval 60  </p>
<p># 查看sflow状态<br>&lt;H3C&gt;dis sflow</p>
<p><img src="/images/1710314786-76340ab347e6dfd8e30f6a2c81fb377c.png" alt="   ELK ElasticFlow数据流分析图和部署_流量安全感知_21"></p>
]]></content>
      <categories>
        <category>ELK</category>
      </categories>
      <tags>
        <tag>ELK</tag>
      </tags>
  </entry>
  <entry>
    <title>node_exporter一键部署并注册consul脚本</title>
    <url>/2024/03/18/node-exporter%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%B9%B6%E6%B3%A8%E5%86%8Cconsul%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="26f567db1fd067e8d03f76a19cb630bb678544b856c4496bb2c3321aca864279"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>exporter</category>
      </categories>
      <tags>
        <tag>exporter</tag>
      </tags>
  </entry>
  <entry>
    <title>windows_exporter一键部署并注册consul脚本</title>
    <url>/2024/03/18/windows-exporter%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%B9%B6%E6%B3%A8%E5%86%8Cconsul%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="171d5be8a9d0c7363597317acd728b8dd02c884be6aae8610dd273751061aa15"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>exporter</category>
      </categories>
      <tags>
        <tag>exporter</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux中CPU利用率计算逻辑</title>
    <url>/2024/03/21/Linux%E4%B8%ADCPU%E5%88%A9%E7%94%A8%E7%8E%87%E8%AE%A1%E7%AE%97%E9%80%BB%E8%BE%91/</url>
    <content><![CDATA[<p>在线上服务器观察线上服务运行状态的时候，绝大多数人都是喜欢先用 top 命令看看当前系统的整体 cpu 利用率。例如，随手拿来的一台机器，top 命令显示的利用率信息如下</p>
<p><img src="/images/1711009539-8b3be9dbf85f41f0c53df88734d77061.png" alt="image-20230817165721078"></p>
<p>这个输出结果说简单也简单，说复杂也不是那么容易就能全部搞明白的。例如：</p>
<p>问题 1：top 输出的利用率信息是如何计算出来的，它精确吗？<br>问题 2：ni 这一列是 nice，它输出的是 cpu 在处理啥时的开销？<br>问题 3：wa 代表的是 io wait，那么这段时间中 cpu 到底是忙碌还是空闲？</p>
<p>今天我们对 cpu 利用率统计进行深入的学习。通过今天的学习，你不但能了解 cpu 利用率统计实现细节，还能 nice、io wait 等指标有更深入的理解。</p>
<p>区别于以往的文章，今天我们不直接进入 Linux 实现，而是先从自己的思考开始！</p>
<h2 id="一、先思考一下"><a href="#一、先思考一下" class="headerlink" title="一、先思考一下"></a>一、先思考一下</h2><p>抛开 Linux 的实现先不谈，如果有如下需求，有一个四核服务器，上面跑了四个进程。</p>
<p><img src="/images/1711009539-c6585ec6fcd1a4ee06d9ae396619f568.png" alt="image-20230817165757849"></p>
<p>让你来设计计算整个系统 cpu 利用率的这个需求，支持像 top 命令这样的输出，满足以下要求：</p>
<ul>
<li>cpu 使用率要尽可能地准确</li>
<li>要能地体现秒级瞬时 cpu 状态</li>
</ul>
<p>可以先停下来阅读思考几分钟。</p>
<p><img src="/images/1711009539-3a6f895befbd41a81fb41a85cf346dfe.png" alt="image-20230817165818774"></p>
<p>好，思考结束。经过思考你会发现，这个看起来很简单的需求，实际还是有点小复杂的。</p>
<p>其中一个思路是把所有进程的执行时间都加起来，然后再除以系统执行总时间*4。</p>
<p><img src="/images/1711009539-99ff6e0aaaecdf14a6dd5c54ad1f0b39.png" alt="image-20230817165840560"></p>
<p>这个思路是没问题的，用这种方法统计很长一段时间内的 cpu 利用率是可以的，统计也足够的准确。</p>
<p>但只要用过 top 你就知道 top 输出的 cpu 利用率并不是长时间不变的，而是默认 3 秒为单位会动态更新一下（这个时间间隔可以使用 -d 设置）。我们的这个方案体现总利用率可以，体现这种瞬时的状态就难办了。你可能会想到那我也 3 秒算一次不就行了？但这个 3 秒的时间从哪个点开始呢。粒度很不好控制。</p>
<p>上一个思路问题核心就是如何解决瞬时问题。提到瞬时状态，你可能就又来思路了。那我就用瞬时采样去看，看看当前有几个核在忙。四个核中如果有两个核在忙，那利用率就是 50%。</p>
<p>这个思路思考的方向也是正确的，但是问题有两个：</p>
<ul>
<li>你算出的数字都是 25% 的整数倍</li>
<li>这个瞬时值会导致 cpu 使用率显示的剧烈震荡。</li>
</ul>
<p>比如下图：</p>
<p><img src="/images/1711009539-3e27ed279383a6bab5f5bbcb8b984423.png" alt="image-20230817165902169"></p>
<p>在 t1 的瞬时状态看来，系统的 cpu 利用率毫无疑问就是 100%，但在 t2 时间看来，使用率又变成 0% 了。思路方向是对的，但显然这种粗暴的计算无法像 top 命令一样优雅地工作。</p>
<p>我们再改进一下它，把上面两个思路结合起来，可能就能解决我们的问题了。在采样上，我们把周期定的细一些，但在计算上我们把周期定的粗一些。</p>
<p>我们引入采用周期的概念，定时比如每 1 毫秒采样一次。如果采样的瞬时，cpu 在运行，就将这 1 ms 记录为使用。这时会得出一个瞬时的 cpu 使用率，把它都存起来。</p>
<p><img src="/images/1711009539-865483c7073c025a6778ac66049429b3.png" alt="image-20230817165925081"></p>
<p>在统计 3 秒内的 cpu 使用率的时候，比如上图中的 t1 和 t2 这段时间范围。那就把这段时间内的所有瞬时值全加一下，取个平均值。这样就能解决上面的问题了，统计相对准确，避免了瞬时值剧烈震荡且粒度过粗（只能以 25 %为单位变化）的问题了。</p>
<p>可能有同学会问了，假如 cpu 在两次采样中间发生变化了呢，如下图这种情况。</p>
<p><img src="/images/1711009539-e40734aa2b2aa70e58f735dc7d6988cb.png" alt="image-20230817165943991"></p>
<p>在当前采样点到来的时候，进程 A 其实刚执行完，有一点点时间没有既没被上一个采样点统计到，本次也统计不到。对于进程 B，其实只开始了一小段时间，把 1 ms 全记上似乎有点多记了。</p>
<p>确实会存在这个问题，但因为我们的采样是 1 ms 一次，而我们实际查看使用的时候最少也有是秒级别地用，会包括有成千上万个采样点的信息，所以这种误差并不会影响我们对全局的把握。</p>
<p>事实上，Linux 也就是这样来统计系统 cpu 利用率的。虽然可能会有误差，但作为一项统计数据使用已经是足够了的。在实现上，Linux 是将所有的瞬时值都累加到某一个数据上的，而不是真的存了很多份的瞬时数据。</p>
<p>接下来就让我们进入 Linux 来查看它对系统 cpu 利用率统计的具体实现。</p>
<h2 id="二、top-命令使用数据在哪儿"><a href="#二、top-命令使用数据在哪儿" class="headerlink" title="二、top 命令使用数据在哪儿"></a>二、top 命令使用数据在哪儿</h2><p>上一节我们说的 Linux 在实现上是将瞬时值都累加到某一个数据上的，这个值是内核通过 &#x2F;proc&#x2F;stat 伪文件来对用户态暴露。Linux 在计算系统 cpu 利用率的时候用的就是它。</p>
<p>整体上看，top 命令工作的内部细节如下图所示。</p>
<p><img src="/images/1711009539-19feef3af32a003f84b864df79fa99d8.png" alt="image-20230817170014945"></p>
<ul>
<li>top 命令访问 &#x2F;proc&#x2F;stat 获取各项 cpu 利用率使用值</li>
<li>内核调用 stat_open 函数来处理对 &#x2F;proc&#x2F;stat 的访问</li>
<li>内核访问的数据来源于 kernel_cpustat 数组，并汇总</li>
<li>打印输出给用户态</li>
</ul>
<p>接下来我们把每一步都展开来详细看看。</p>
<p>通过使用 strace 跟踪 top 命令的各种系统调用，可以看的到它对该文件的调用。</p>
<p>通过使用 strace 跟踪 top 命令的各种系统调用，可以看的到它对该文件的调用。</p>
<figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"># strace top</span><br><span class="line">...</span><br><span class="line"><span class="function"><span class="title">openat</span><span class="params">(AT_FDCWD, <span class="string">&quot;/proc/stat&quot;</span>, O_RDONLY)</span> = 4</span></span><br><span class="line"><span class="function"><span class="title">openat</span><span class="params">(AT_FDCWD, <span class="string">&quot;/proc/2351514/stat&quot;</span>, O_RDONLY)</span> = 8</span></span><br><span class="line"><span class="function"><span class="title">openat</span><span class="params">(AT_FDCWD, <span class="string">&quot;/proc/2393539/stat&quot;</span>, O_RDONLY)</span> = 8</span></span><br><span class="line"><span class="function">...</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>除了 &#x2F;proc&#x2F;stat 外，还有各个进程细分的 &#x2F;proc&#x2F;{pid}&#x2F;stat，是用来计算各个进程的 cpu 利用率时使用的。</p>
</blockquote>
<p>内核为各个伪文件都定义了处理函数，&#x2F;proc&#x2F;stat 文件的处理方法是 proc_stat_operations。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:fs/proc/stat.c</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">int</span> __init <span class="title">proc_stat_init</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="built_in">proc_create</span>(<span class="string">&quot;stat&quot;</span>, <span class="number">0</span>, <span class="literal">NULL</span>, &amp;proc_stat_operations);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">const</span> <span class="keyword">struct</span> <span class="title class_">file_operations</span> proc_stat_operations = &#123;</span><br><span class="line"> .open  = stat_open,</span><br><span class="line"> ...</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>

<p>proc_stat_operations 中包含了该文件时对应的操作方法。当打开 &#x2F;proc&#x2F;stat 文件的时候，stat_open 就会被调用到。stat_open 依次调用 single_open_size，show_stat 来输出数据内容。我们来看看它的代码：</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:fs/proc/stat.c</span></span><br><span class="line"><span class="keyword">static</span> int <span class="title function_ invoke__">show_stat</span>(<span class="keyword">struct</span> <span class="title class_">seq_file</span> *p, void *v)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="type">u64</span> user, nice, system, idle, iowait, irq, softirq, steal;</span><br><span class="line"></span><br><span class="line"> for_each_possible_cpu(i) &#123;</span><br><span class="line">  <span class="keyword">struct</span> <span class="title class_">kernel_cpustat</span> *kcs = &amp;<span class="title function_ invoke__">kcpustat_cpu</span>(i);</span><br><span class="line"></span><br><span class="line">  user += kcs<span class="punctuation">-&gt;</span>cpustat[CPUTIME_USER];</span><br><span class="line">  nice += kcs<span class="punctuation">-&gt;</span>cpustat[CPUTIME_NICE];</span><br><span class="line">  system += kcs<span class="punctuation">-&gt;</span>cpustat[CPUTIME_SYSTEM];</span><br><span class="line">  idle += <span class="title function_ invoke__">get_idle_time</span>(kcs, i);</span><br><span class="line">  iowait += <span class="title function_ invoke__">get_iowait_time</span>(kcs, i);</span><br><span class="line">  irq += kcs<span class="punctuation">-&gt;</span>cpustat[CPUTIME_IRQ];</span><br><span class="line">  softirq += kcs<span class="punctuation">-&gt;</span>cpustat[CPUTIME_SOFTIRQ];</span><br><span class="line">  ...</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//转换成节拍数并打印出来</span></span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot;cpu  &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(user));</span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(nice));</span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(system));</span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(idle));</span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(iowait));</span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(irq));</span><br><span class="line"> <span class="title function_ invoke__">seq_put_decimal_ull</span>(p, <span class="string">&quot; &quot;</span>, <span class="title function_ invoke__">nsec_to_clock_t</span>(softirq));</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在上面的代码中，for_each_possible_cpu 是在遍历存储着 cpu 使用率数据的 kcpustat_cpu 变量。该变量是一个 percpu 变量，它为每一个逻辑核都准备了一个数组元素。里面存储着当前核所对应各种事件，包括 user、nice、system、idel、iowait、irq、softirq 等。</p>
<p>在这个循环中，将每一个核的每种使用率都加起来。最后通过 seq_put_decimal_ull 将这些数据输出出来。</p>
<p><img src="/images/1711009539-590f055ee535d1df9ba9d26a777a4f6b.png" alt="image-20230817170106537"></p>
<p>注意，在内核中实际每个时间记录的是纳秒数，但是在输出的时候统一都转化成了节拍单位。至于节拍单位多长，下一节我们介绍。总之， &#x2F;proc&#x2F;stat 的输出是从 kernel_cpustat 这个 percpu 变量中读取出来的。</p>
<p>我们接着再看看这个变量中的数据是何时加进来的。</p>
<h2 id="三、统计数据怎么来的"><a href="#三、统计数据怎么来的" class="headerlink" title="三、统计数据怎么来的"></a>三、统计数据怎么来的</h2><p>前面我们提到内核是以采样的方式来统计 cpu 使用率的。这个采样周期依赖的是 Linux 时间子系统中的定时器。</p>
<p>Linux 内核每隔固定周期会发出 timer interrupt (IRQ 0)，这有点像乐谱中的节拍的概念。每隔一段时间，就打出一个拍子，Linux 就响应之并处理一些事情。</p>
<p><img src="/images/1711009539-33be6685a3c0c8e6b5ef1735d1d1631b.png" alt="image-20230817170134046"></p>
<p>一个节拍的长度是多长时间，是通过 CONFIG_HZ 来定义的。它定义的方式是每一秒有几次 timer interrupts。不同的系统中这个节拍的大小可能不同，通常在 1 ms 到 10 ms 之间。可以在自己的 Linux config 文件中找到它的配置。</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># grep ^CONFIG_HZ /boot/config-5.4.56.bsk.10-amd64</span></span><br><span class="line"><span class="attr">CONFIG_HZ</span>=<span class="number">1000</span></span><br></pre></td></tr></table></figure>

<p>从上述结果中可以看出，我的机器的每秒要打出 1000 次节拍。也就是每 1 ms 一次。</p>
<p>每次当时间中断到来的时候，都会调用 update_process_times 来更新系统时间。更新后的时间都存储在我们前面提到的 percpu 变量 kcpustat_cpu 中。</p>
<p><img src="/images/1711009539-7cbb24c6c59695e3ee0013ca0cf7fae8.png" alt="image-20230817170159851"></p>
<p>我们来详细看下汇总过程 update_process_times 的源码，它位于 kernel&#x2F;time&#x2F;timer.c 文件中。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:kernel/time/timer.c</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">update_process_times</span><span class="params">(<span class="type">int</span> user_tick)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">struct</span> <span class="title class_">task_struct</span> *p = current;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//进行时间累积处理</span></span><br><span class="line"> <span class="built_in">account_process_tick</span>(p, user_tick);</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>这个函数的参数 user_tick 值得是采样的瞬间是处于内核态还是用户态。接下来调用 account_process_tick。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:kernel/sched/cputime.c</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">account_process_tick</span><span class="params">(<span class="keyword">struct</span> task_struct *p, <span class="type">int</span> user_tick)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> cputime = TICK_NSEC;</span><br><span class="line"> ...</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (user_tick)</span><br><span class="line">  <span class="comment">//3.1 统计用户态时间</span></span><br><span class="line">  <span class="built_in">account_user_time</span>(p, cputime);</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> ((p != rq-&gt;idle) || (<span class="built_in">irq_count</span>() != HARDIRQ_OFFSET))</span><br><span class="line">  <span class="comment">//3.2 统计内核态时间</span></span><br><span class="line">  <span class="built_in">account_system_time</span>(p, HARDIRQ_OFFSET, cputime);</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="comment">//3.3 统计空闲时间</span></span><br><span class="line">  <span class="built_in">account_idle_time</span>(cputime);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在这个函数中，首先设置 <code>cputime = TICK_NSEC</code>, 一个 TICK_NSEC 的定义是一个节拍所占的纳秒数。接下来根据判断结果分别执行 account_user_time、account_system_time 和 account_idle_time 来统计用户态、内核态和空闲时间。</p>
<h3 id="3-1-用户态时间统计"><a href="#3-1-用户态时间统计" class="headerlink" title="3.1 用户态时间统计"></a>3.1 用户态时间统计</h3><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:kernel/sched/cputime.c</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">account_user_time</span><span class="params">(<span class="keyword">struct</span> task_struct *p, u64 cputime)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="comment">//分两种种情况统计用户态 CPU 的使用情况</span></span><br><span class="line"> <span class="type">int</span> index;</span><br><span class="line"> index = (<span class="built_in">task_nice</span>(p) &gt; <span class="number">0</span>) ? CPUTIME_NICE : CPUTIME_USER;</span><br><span class="line"></span><br><span class="line"> <span class="comment">//将时间累积到 /proc/stat 中</span></span><br><span class="line"> <span class="built_in">task_group_account_field</span>(p, index, cputime);</span><br><span class="line"> ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>account_user_time 函数主要分两种情况统计：</p>
<ul>
<li>如果进程的 nice 值大于 0，那么将会增加到 CPU 统计结构的 nice 字段中。</li>
<li>如果进程的 nice 值小于等于 0，那么增加到 CPU 统计结构的 user 字段中。</li>
</ul>
<p>看到这里，开篇的问题 2 就有答案了，其实用户态的时间不只是 user 字段，nice 也是。之所以要把 nice 分出来，是为了让 Linux 用户更一目了然地看到调过 nice 的进程所占的 cpu 周期有多少。</p>
<p>我们平时如果想要观察系统的用户态消耗的时间的话，应该是将 top 中输出的 user 和 nice 加起来一并考虑，而不是只看 user！</p>
<p>接着调用 task_group_account_field 来把时间加到前面我们用到的 kernel_cpustat 内核变量中。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:kernel/sched/cputime.c</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title">task_group_account_field</span><span class="params">(<span class="keyword">struct</span> task_struct *p, <span class="type">int</span> index,</span></span></span><br><span class="line"><span class="params"><span class="function">      u64 tmp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> __this_cpu_add(kernel_cpustat.cpustat[index], tmp);</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-2-内核态时间统计"><a href="#3-2-内核态时间统计" class="headerlink" title="3.2 内核态时间统计"></a>3.2 内核态时间统计</h3><p>我们再来看内核态时间是如何统计的，找到 account_system_time 的代码。</p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">//file:kernel/sched/cputime.c</span><br><span class="line">void account_system_time(struct task_struct *p, <span class="keyword">int</span> hardirq_offset, u64 cputime)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">if</span> (hardirq_count() - hardirq_offset)</span><br><span class="line">  <span class="keyword">index</span> = CPUTIME_IRQ;</span><br><span class="line"> <span class="keyword">else</span> <span class="keyword">if</span> (in_serving_softir<span class="string">q()</span>)</span><br><span class="line">  <span class="keyword">index</span> = CPUTIME_SOFTIRQ;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  <span class="keyword">index</span> = CPUTIME_SYSTEM;</span><br><span class="line"></span><br><span class="line"> account_system_index_time(p, cputime, <span class="keyword">index</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>内核态的时间主要分 3 种情况进行统计。</p>
<ul>
<li>如果当前处于硬中断执行上下文, 那么统计到 irq 字段中</li>
<li>如果当前处于软中断执行上下文, 那么统计到 softirq 字段中</li>
<li>否则统计到 system 字段中</li>
</ul>
<p>判断好要加到哪个统计项中后，依次调用 account_system_index_time、task_group_account_field 来将这段时间加到内核变量 kernel_cpustat 中</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:kernel/sched/cputime.c</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">void</span> <span class="title">task_group_account_field</span><span class="params">(<span class="keyword">struct</span> task_struct *p, <span class="type">int</span> index,</span></span></span><br><span class="line"><span class="params"><span class="function">      u64 tmp)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line"> __this_cpu_add(kernel_cpustat.cpustat[index], tmp);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-3-空闲时间的累积"><a href="#3-3-空闲时间的累积" class="headerlink" title="3.3 空闲时间的累积"></a>3.3 空闲时间的累积</h3><p>没错，在内核变量 kernel_cpustat 中不仅仅是统计了各种用户态、内核态的使用统计，空闲也一并统计起来了。</p>
<p>如果在采样的瞬间，cpu 既不在内核态也不在用户态的话，就将当前节拍的时间都累加到 idle 中。</p>
<figure class="highlight rust"><table><tr><td class="code"><pre><span class="line"><span class="comment">//file:kernel/sched/cputime.c</span></span><br><span class="line">void <span class="title function_ invoke__">account_idle_time</span>(<span class="type">u64</span> cputime)</span><br><span class="line">&#123;</span><br><span class="line"> <span class="type">u64</span> *cpustat = kcpustat_this_cpu<span class="punctuation">-&gt;</span>cpustat;</span><br><span class="line"> <span class="keyword">struct</span> <span class="title class_">rq</span> *rq = <span class="title function_ invoke__">this_rq</span>();</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span> (<span class="title function_ invoke__">atomic_read</span>(&amp;rq<span class="punctuation">-&gt;</span>nr_iowait) &gt; <span class="number">0</span>)</span><br><span class="line">  cpustat[CPUTIME_IOWAIT] += cputime;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line">  cpustat[CPUTIME_IDLE] += cputime;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在 cpu 空闲的情况下，进一步判断当前是不是在等待 IO（例如磁盘 IO），如果是的话这段空闲时间会加到 iowait 中，否则就加到 idle 中。从这里，我们可以看到 iowait 其实是 cpu 的空闲时间，只不过是在等待 IO 完成而已。</p>
<p>看到这里，开篇问题 3 也有非常明确的答案了，io wait 其实是 cpu 在空闲状态的一项统计，只不过这种状态和 idle 的区别是 cpu 是因为等待 io 而空闲。</p>
<h2 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h2><p>本文深入分析了 Linux 统计系统 CPU 利用率的内部原理。全文的内容可以用如下一张图来汇总：</p>
<p><img src="/images/1711009539-6274d6067ae5f2670aa2a384ab4c388a.png" alt="image-20230817170243041"></p>
<p>Linux 中的定时器会以某个固定节拍，比如 1 ms 一次采样各个 cpu 核的使用情况，然后将当前节拍的所有时间都累加到 user&#x2F;nice&#x2F;system&#x2F;irq&#x2F;softirq&#x2F;io_wait&#x2F;idle 中的某一项上。</p>
<p>top 命令是读取的 &#x2F;proc&#x2F;stat 中输出的 cpu 各项利用率数据，而这个数据在内核中的是根据 kernel_cpustat 来汇总并输出的。</p>
<p>回到开篇问题 1，top 输出的利用率信息是如何计算出来的，它精确吗？</p>
<p>&#x2F;proc&#x2F;stat 文件输出的是某个时间点的各个指标所占用的节拍数。如果想像 top 那样输出一个百分比，计算过程是分两个时间点 t1, t2 分别获取一下 stat 文件中的相关输出，然后经过个简单的算术运算便可以算出当前的 cpu 利用率。</p>
<p>我也提供了一个简单的 shell 代码，你可以把它下载下来，用它来实际查看一下你服务器的 cpu 利用率，我放到我的 github 上了。</p>
<p>Github 地址：<a href="https://github.com/yanfeizhang/coder-kung-fu/blob/main/tests/cpu/test06/cpu_stat.sh">https://github.com/yanfeizhang/coder-kung-fu/blob/main/tests/cpu/test06/cpu_stat.sh</a></p>
<p>再说是否精确。这个统计方法是采样的，只要是采样，肯定就不是百分之百精确。但由于我们查看 cpu 使用率的时候往往都是计算 1 秒甚至更长一段时间的使用情况，这其中会包含很多采样点，所以查看整体情况是问题不大的。</p>
<p>另外从本文，我们也学到了 top 中输出的 cpu 时间项目其实大致可以分为三类：</p>
<p><strong>第****一类：</strong>用户态消耗时间，包括 user 和 nice。如果想看用户态的消耗，要将 user 和 nice 加起来看才对。<br><strong>第二类：</strong>内核态消耗时间，包括 irq、softirq 和 system。<br><strong>第三类：</strong>空闲时间，包括 io_wait 和 idle。其中 io_wait 也是 cpu 的空闲状态，只不过是在等 io 完成而已。如果只是想看 cpu 到底有多闲，应该把 io_wait 和 idle 加起来才对。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>获取Linux主机CPU使用率脚本</title>
    <url>/2024/03/21/%E8%8E%B7%E5%8F%96Linux%E4%B8%BB%E6%9C%BACPU%E4%BD%BF%E7%94%A8%E7%8E%87%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">获取宿主机的 CPU 使用情况</span></span><br><span class="line">function get_host_cpu_usage()&#123;</span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">内核会在/proc/stat中输出整机CPU的使用情况, 例如：<span class="built_in">cat</span> /proc/stat 输出如下</span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">cpu  52635657 657000 57094567 7675992570 422057 0 545206 0 0 0</span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">其中各列中的数值都是从启动到现在的累计和，单位是jiffies</span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">除了第一列外，其余每列的含义分别是：</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 1.user：用户态花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 2.<span class="built_in">nice</span>：用户态在低优先级花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 3.system：系统态花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 4.idel：在空闲任务上花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 5.iowait：等待I/O花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 6.irq：硬中断花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 7.softirq：软中断花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 8.steal：系统处在虚拟化环境中，你的虚拟机被其他虚拟机占用的 CPU 时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 9.guest：运行虚拟机花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash"> 10.guest_nice：运行低优先级虚拟机花费的cpu时间</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">获取宿主机的 CPU 用量的原理，是选择两个时间点，</span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">cpu总时间=user+system+<span class="built_in">nice</span>+idle+iowait+irq+softirq</span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash">cpu_usage=100-(idle2-idle1)/(cpu总时间2-cpu总时1)*100</span></span><br><span class="line"></span><br><span class="line">	T1_CPU_INFO=$(cat /proc/stat | grep -w cpu | awk &#x27;&#123;print $2,$3,$4,$5,$6,$7,$8&#125;&#x27;)</span><br><span class="line">	T1_IDLE=$(echo $T1_CPU_INFO | awk &#x27;&#123;print $4&#125;&#x27;)</span><br><span class="line">	T1_TOTAL=$(echo $T1_CPU_INFO | awk &#x27;&#123;print $1+$2+$3+$4+$5+$6+$7&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">	sleep 10</span><br><span class="line"></span><br><span class="line">	T2_CPU_INFO=$(cat /proc/stat | grep -w cpu | awk &#x27;&#123;print $2,$3,$4,$5,$6,$7,$8&#125;&#x27;)</span><br><span class="line">	T2_IDLE=$(echo $T2_CPU_INFO | awk &#x27;&#123;print $4&#125;&#x27;)</span><br><span class="line">	T2_TOTAL=$(echo $T2_CPU_INFO | awk &#x27;&#123;print $1+$2+$3+$4+$5+$6+$7&#125;&#x27;)</span><br><span class="line"></span><br><span class="line">    CPU_UTILIZATION=`echo $&#123;T1_IDLE&#125; $&#123;T1_TOTAL&#125; $&#123;T2_IDLE&#125; $&#123;T2_TOTAL&#125;| awk &#x27;&#123;printf &quot;%.2f&quot;, (1-($3-$1)/($4-$2))*100&#125;&#x27;`</span><br><span class="line">	echo &quot;Host CPU Utiliztion:$&#123;CPU_UTILIZATION&#125;%&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">get_host_cpu_usage</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix告警推送到Alertmanager脚本</title>
    <url>/2024/03/22/Zabbix%E5%91%8A%E8%AD%A6%E6%8E%A8%E9%80%81%E5%88%B0Alertmanager%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> logging.handlers</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">str_time</span>(<span class="params">s</span>):</span><br><span class="line">    dt = datetime.strptime(s, <span class="string">&#x27;%Y.%m.%d %H:%M:%S&#x27;</span>)</span><br><span class="line">    tm = time.mktime(dt.timetuple())</span><br><span class="line">    ut = datetime.utcfromtimestamp(tm).isoformat() + <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> ut</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) &lt; <span class="number">2</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Require Arguments 1 subject&quot;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置日志</span></span><br><span class="line">log_path = os.path.join(os.path.dirname(os.path.abspath(__file__)), <span class="string">&#x27;logs&#x27;</span>)</span><br><span class="line">log_file = os.path.join(log_path, os.path.basename(__file__).split(<span class="string">&#x27;.&#x27;</span>)[<span class="number">0</span>] + <span class="string">&#x27;.log&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(log_path):</span><br><span class="line">    os.mkdir(log_path)</span><br><span class="line"></span><br><span class="line">logger = logging.getLogger()</span><br><span class="line">handler = logging.handlers.RotatingFileHandler(log_file, maxBytes=(<span class="number">100</span> * <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">8</span>), backupCount=<span class="number">5</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">formatter = logging.Formatter(<span class="string">&#x27;[%(asctime)s] %(levelname)s [%(funcName)s: %(filename)s, %(lineno)d] %(message)s&#x27;</span>,<span class="string">&quot;%Y-%m-%d %H:%M:%S&quot;</span>)</span><br><span class="line">handler.setFormatter(formatter)</span><br><span class="line">logger.addHandler(handler)</span><br><span class="line">logger.setLevel(logging.INFO)</span><br><span class="line"></span><br><span class="line">subject = sys.argv[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">Zabbix 发送的消息体</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#123;TRIGGER.SEVERITY&#125;</span></span><br><span class="line"><span class="string">&#123;HOST.NAME&#125;</span></span><br><span class="line"><span class="string">&#123;HOST.IP&#125;</span></span><br><span class="line"><span class="string">&#123;TRIGGER.HOSTGROUP.NAME&#125;</span></span><br><span class="line"><span class="string">&#123;ITEM.NAME&#125;</span></span><br><span class="line"><span class="string">&#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;</span></span><br><span class="line"><span class="string">&#123;TRIGGER.NAME&#125;</span></span><br><span class="line"><span class="string">&#123;ITEM.NAME&#125;:&#123;ITEM.VALUE&#125;</span></span><br><span class="line"><span class="string">firing/resolved</span></span><br><span class="line"><span class="string">&#123;EVENT.RECOVERY.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">---</span></span><br><span class="line"><span class="string">subject = &quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Average\r</span></span><br><span class="line"><span class="string">putao-zabbix\r</span></span><br><span class="line"><span class="string">172.20.9.24\r</span></span><br><span class="line"><span class="string">Zabbix servers\r</span></span><br><span class="line"><span class="string">Agent ping\r</span></span><br><span class="line"><span class="string">2023.02.22 09:43:30\r</span></span><br><span class="line"><span class="string">Zabbix agent on zabbix is unreachable for 5 minutes\r</span></span><br><span class="line"><span class="string">Agent ping:Up (1)\r</span></span><br><span class="line"><span class="string">resolved\r</span></span><br><span class="line"><span class="string">2023.02.22 10:44:07</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">logging.info(<span class="string">&#x27;[start].....&#x27;</span>)</span><br><span class="line">logging.info(<span class="string">&#x27;[source]: &#x27;</span> + subject)</span><br><span class="line"></span><br><span class="line">data = &#123;<span class="string">&quot;labels&quot;</span>: &#123;&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解析zabbix发送的消息体</span></span><br><span class="line">labels = subject.split(<span class="string">&quot;\r\n&quot;</span>)</span><br><span class="line">data[<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;severity&quot;</span>] = labels[<span class="number">0</span>].strip()</span><br><span class="line">data[<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;ip&quot;</span>] = labels[<span class="number">1</span>].strip()</span><br><span class="line">data[<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;instance&quot;</span>] = labels[<span class="number">2</span>].strip()</span><br><span class="line">data[<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;app&quot;</span>] = labels[<span class="number">3</span>].strip()</span><br><span class="line">data[<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;alertname&quot;</span>] = labels[<span class="number">4</span>].strip()</span><br><span class="line">data[<span class="string">&quot;labels&quot;</span>][<span class="string">&quot;job&quot;</span>] = <span class="string">&quot;zabbix&quot;</span></span><br><span class="line"></span><br><span class="line">data[<span class="string">&quot;annotations&quot;</span>] = &#123;&#125;</span><br><span class="line">data[<span class="string">&quot;annotations&quot;</span>][<span class="string">&quot;summary&quot;</span>] = labels[<span class="number">6</span>].strip()</span><br><span class="line">data[<span class="string">&quot;annotations&quot;</span>][<span class="string">&quot;description&quot;</span>] = labels[<span class="number">7</span>].strip()</span><br><span class="line">data[<span class="string">&#x27;status&#x27;</span>] = labels[<span class="number">8</span>].strip()</span><br><span class="line"></span><br><span class="line">data[<span class="string">&#x27;startsAt&#x27;</span>] = str_time(labels[<span class="number">5</span>].strip())</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> data[<span class="string">&#x27;status&#x27;</span>] == <span class="string">&#x27;resolved&#x27;</span>:</span><br><span class="line">    data[<span class="string">&#x27;endsAt&#x27;</span>] = str_time(labels[<span class="number">9</span>].strip())</span><br><span class="line"></span><br><span class="line">data[<span class="string">&#x27;generatorURL&#x27;</span>] = <span class="string">&quot;http://10.250.5.24:8080/zabbix.php?action=problem.view&amp;ddreset=1&quot;</span></span><br><span class="line"></span><br><span class="line">post_data = json.dumps([data])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 向alertmanager发送请求</span></span><br><span class="line">am_url = <span class="string">&quot;http://10.10.10.10:30779/api/v2/alerts&quot;</span></span><br><span class="line">headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;alertmanager.monitoring.k8s.local&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">logging.info(<span class="string">&#x27;[DATA] %s&#x27;</span> % post_data)</span><br><span class="line"></span><br><span class="line">r = requests.post(am_url, data=post_data, headers=headers)</span><br><span class="line"></span><br><span class="line">logging.info(<span class="string">&#x27;[return] %s&#x27;</span> % r)</span><br><span class="line">logging.info(<span class="string">&#x27;[return] %s&#x27;</span> % r.text)</span><br><span class="line">logging.info(<span class="string">&#x27;[end].....&#x27;</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix飞书告警脚本</title>
    <url>/2024/03/22/Zabbix%E9%A3%9E%E4%B9%A6%E5%91%8A%E8%AD%A6%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python3</span></span><br><span class="line"><span class="comment">#author Lijintao</span></span><br><span class="line"><span class="comment">#time 2020-02-02</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"></span><br><span class="line"><span class="comment">#webhook地址粘贴进url内</span></span><br><span class="line">url = <span class="string">&quot;https://open.feishu.cn/open-apis/bot/v2/hook/1925869c-6098-47d8-ba92-a8c1eb2aa73c&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_message</span>(<span class="params">message</span>):</span><br><span class="line">    payload_message = &#123;</span><br><span class="line">        <span class="string">&quot;msg_type&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">        <span class="string">&quot;content&quot;</span>: &#123;</span><br><span class="line">            <span class="string">&quot;text&quot;</span>: message</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    response = requests.request(<span class="string">&quot;POST&quot;</span>, url, headers=headers, data=json.dumps(payload_message))</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    text = sys.argv[<span class="number">1</span>]</span><br><span class="line">    send_message(text)</span><br></pre></td></tr></table></figure>

<p><img src="/images/1711093562-c970daea199e65d9948b113e187c7245.png"></p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix微信通知脚本</title>
    <url>/2024/03/22/Zabbix%E5%BE%AE%E4%BF%A1%E9%80%9A%E7%9F%A5%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/local/python3/bin/python3</span></span><br><span class="line"><span class="comment">#_*_ coding:utf-8 _*_</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib.response</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> http.cookiejar</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="comment">#import simplejson</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gettoken</span>(<span class="params">corpid,corpsecret</span>):</span><br><span class="line">    gettoken_url = <span class="string">&#x27;https://qyapi.weixin.qq.com/cgi-bin/gettoken?corpid=&#x27;</span> + corpid + <span class="string">&#x27;&amp;corpsecret=&#x27;</span> + corpsecret</span><br><span class="line">    <span class="built_in">print</span> (gettoken_url)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        token_file = urllib.request.urlopen(gettoken_url)</span><br><span class="line">    <span class="keyword">except</span> urllib2.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span> (e.code)</span><br><span class="line">        <span class="built_in">print</span> (e.read().decode(<span class="string">&quot;utf8&quot;</span>))</span><br><span class="line">        sys.exit()</span><br><span class="line">    token_data = token_file.read().decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    token_json = json.loads(token_data)</span><br><span class="line">    token_json.keys()</span><br><span class="line">    token = token_json[<span class="string">&#x27;access_token&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">senddata</span>(<span class="params">access_token,user,subject,content</span>):</span><br><span class="line"></span><br><span class="line">    send_url = <span class="string">&#x27;https://qyapi.weixin.qq.com/cgi-bin/message/send?access_token=&#x27;</span> + access_token</span><br><span class="line">    send_values = &#123;</span><br><span class="line">        <span class="string">&quot;touser&quot;</span>:<span class="string">&quot;john&quot;</span>,   <span class="comment">#企业号中的用户帐号，在zabbix用户Media中配置，如果配置不正常，将按部门发送。</span></span><br><span class="line">        <span class="string">&quot;toparty&quot;</span>:<span class="string">&quot;2&quot;</span>,        <span class="comment">#企业号中的部门id。</span></span><br><span class="line">        <span class="string">&quot;msgtype&quot;</span>:<span class="string">&quot;text&quot;</span>,     <span class="comment">#消息类型。</span></span><br><span class="line">        <span class="string">&quot;agentid&quot;</span>:<span class="string">&quot;1000002&quot;</span>,  <span class="comment">#企业号中的应用id。</span></span><br><span class="line">        <span class="string">&quot;text&quot;</span>:&#123;</span><br><span class="line">            <span class="string">&quot;content&quot;</span>:subject + <span class="string">&#x27;\n&#x27;</span> + content</span><br><span class="line">           &#125;,</span><br><span class="line">        <span class="string">&quot;safe&quot;</span>:<span class="string">&quot;0&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">#    send_data = json.dumps(send_values, ensure_ascii=False)</span></span><br><span class="line">    send_data = json.dumps(send_values, ensure_ascii=<span class="literal">False</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    send_request = urllib.request.Request(send_url, send_data)</span><br><span class="line">    response = json.loads(urllib.request.urlopen(send_request).read())</span><br><span class="line">    <span class="built_in">print</span> (<span class="built_in">str</span>(response))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    user = <span class="built_in">str</span>(sys.argv[<span class="number">1</span>])     <span class="comment">#zabbix传过来的第一个参数</span></span><br><span class="line">    subject = <span class="built_in">str</span>(sys.argv[<span class="number">2</span>])  <span class="comment">#zabbix传过来的第二个参数</span></span><br><span class="line">    content = <span class="built_in">str</span>(sys.argv[<span class="number">3</span>])  <span class="comment">#zabbix传过来的第三个参数</span></span><br><span class="line"></span><br><span class="line">    corpid =  <span class="string">&#x27;ww03b58a0f70f781f55&#x27;</span>     <span class="comment">#企业号的标识（上文中提到获取位置）</span></span><br><span class="line">    corpsecret = <span class="string">&#x27;sLH81WdeeZXo848g15KEDlw9nsUrjVM3VsF-6dU2Nqw&#x27;</span>    <span class="comment">#管理组凭证密钥（上文中提到获取位置）</span></span><br><span class="line">    accesstoken = gettoken(corpid,corpsecret)</span><br><span class="line">    senddata(accesstoken,user,subject,content)</span><br></pre></td></tr></table></figure>

<p><img src="/images/1711093898-7e9b6994ad03645ed1d4e9e1ee6ea0a9.png"></p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Alertmanager API的调用详解</title>
    <url>/2024/03/25/Alertmanager-API%E7%9A%84%E8%B0%83%E7%94%A8%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="【0】解决思路分析"><a href="#【0】解决思路分析" class="headerlink" title="【0】解决思路分析"></a>【0】解决思路分析</h2><p><strong>需求：我需要每天屏蔽某个时间段的某些告警项</strong></p>
<p>　　比如：凌晨4点会异地备份，导致流量报警，我想屏蔽每天4点-4点30分的该告警项</p>
<p><strong>思路：</strong></p>
<p>　　<strong>直接操作是没有这个步骤的，曲线救国吧；</strong></p>
<p>（1）定时任务，每天凌晨四点的 silences</p>
<p>（2）定时任务中使用 alertmanager api 来建设</p>
<h2 id="【1】API"><a href="#【1】API" class="headerlink" title="【1】API"></a>【1】API</h2><p>官网：<a href="https://www.kancloud.cn/pshizhsysu/prometheus/1872669">https://www.kancloud.cn/pshizhsysu/prometheus/1872669</a></p>
<h3 id="API-Version"><a href="#API-Version" class="headerlink" title="API Version"></a>API Version</h3><p>AlertManager有两套API，v1与v2，不过两套API的内部逻辑基本是一致的，调用哪套都没有关系。v1没有相关的文档，不过我们可以找到v2的相关文档。<br>API-v2的swagger文件的链接为：</p>
<p><a href="https://github.com/prometheus/alertmanager/blob/master/api/v2/openapi.yaml">https://github.com/prometheus/alertmanager/blob/master/api/v2/openapi.yaml</a></p>
<p>把这个文件的内容拷贝到 <a href="https://editor.swagger.io/">https://editor.swagger.io</a> 里面，便可以查看API。下面罗列了v2版本的所有API：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Alert</span></span><br><span class="line">GET    /api/v2/alerts</span><br><span class="line">POST   /api/v2/alerts</span><br><span class="line"></span><br><span class="line"><span class="comment"># AlertGroup</span></span><br><span class="line">GET    /api/v2/alerts/groups  </span><br><span class="line"></span><br><span class="line"><span class="comment"># General</span></span><br><span class="line">GET    /api/v2/status</span><br><span class="line"></span><br><span class="line"><span class="comment"># Receiver</span></span><br><span class="line">GET    /api/v2/receivers</span><br><span class="line"></span><br><span class="line"><span class="comment"># Silence</span></span><br><span class="line">GET    /api/v2/silences</span><br><span class="line">POST   /api/v2/silences</span><br><span class="line">GET    /api/v2/silence/&#123;silenceID&#125;</span><br><span class="line">DELETE /api/v2/silence/&#123;silenceID&#125;</span><br></pre></td></tr></table></figure>

<p>其中最重要的是Alert与AlertGroup的那三个API，接下来我们详细地讲解一下</p>
<h3 id="（1-1）获取现有告警信息"><a href="#（1-1）获取现有告警信息" class="headerlink" title="（1.1）获取现有告警信息"></a>（1.1）获取现有告警信息</h3><p>使用其中提供的url：<strong><a href="http://127.0.0.1:9090/api/v1/alerts">http://127.0.0.1:9090/api/v1/alerts</a></strong> ，可以获取到报警的json信息，即可获得json的格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#123;&quot;annotations&quot;:</span><br><span class="line">&#123;&quot;description&quot;:</span><br><span class="line">&quot;localhost:9100 of job exporter has been down for more than 5 minutes.&quot;,</span><br><span class="line">&quot;summary&quot;:&quot;Instance localhost:9100 down&quot;&#125;,</span><br><span class="line">&quot;endsAt&quot;:&quot;2021-11-25T08:13:56.026Z&quot;,</span><br><span class="line">&quot;fingerprint&quot;:&quot;d44e90ffc89b2ea1&quot;,</span><br><span class="line">&quot;receivers&quot;:[&#123;&quot;name&quot;:&quot;mail&quot;&#125;],</span><br><span class="line">&quot;startsAt&quot;:&quot;2021-11-25T07:36:11.026Z&quot;,</span><br><span class="line">&quot;status&quot;:&#123;&quot;inhibitedBy&quot;:[],&quot;silencedBy&quot;:[],&quot;state&quot;:&quot;active&quot;&#125;,</span><br><span class="line">&quot;updatedAt&quot;:&quot;2021-11-25T16:09:56.030+08:00&quot;,</span><br><span class="line">&quot;generatorURL&quot;:&quot;http://localhost.localdomain:9090/graph?g0.expr=up+%3D%3D+0\u0026g0.tab=1&quot;,</span><br><span class="line">&quot;labels&quot;:&#123;&quot;alertname&quot;:&quot;InstanceDown&quot;,&quot;instance&quot;:&quot;localhost:9100&quot;,&quot;job&quot;:&quot;exporter&quot;,&quot;severity&quot;:&quot;page&quot;&#125;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<h3 id="（1-2）手动发送告警信息"><a href="#（1-2）手动发送告警信息" class="headerlink" title="（1.2）手动发送告警信息"></a>（1.2）手动发送告警信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alerts1=&#x27;[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line">       &quot;alertname&quot;: &quot;DiskRunningFull&quot;,</span><br><span class="line">       &quot;dev&quot;: &quot;sda1&quot;,</span><br><span class="line">       &quot;instance&quot;: &quot;example1&quot;</span><br><span class="line">     &#125;,</span><br><span class="line">     &quot;annotations&quot;: &#123;</span><br><span class="line">        &quot;info&quot;: &quot;The disk sda1 is running full&quot;,</span><br><span class="line">        &quot;summary&quot;: &quot;please check the instance example1&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line">       &quot;alertname&quot;: &quot;DiskRunningFull&quot;,</span><br><span class="line">       &quot;dev&quot;: &quot;sdb2&quot;,</span><br><span class="line">       &quot;instance&quot;: &quot;example2&quot;</span><br><span class="line">     &#125;,</span><br><span class="line">     &quot;annotations&quot;: &#123;</span><br><span class="line">        &quot;info&quot;: &quot;The disk sdb2 is running full&quot;,</span><br><span class="line">        &quot;summary&quot;: &quot;please check the instance example2&quot;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line">       &quot;alertname&quot;: &quot;DiskRunningFull&quot;,</span><br><span class="line">       &quot;dev&quot;: &quot;sda1&quot;,</span><br><span class="line">       &quot;instance&quot;: &quot;example3&quot;,</span><br><span class="line">       &quot;severity&quot;: &quot;critical&quot;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;labels&quot;: &#123;</span><br><span class="line">       &quot;alertname&quot;: &quot;DiskRunningFull&quot;,</span><br><span class="line">       &quot;dev&quot;: &quot;sda1&quot;,</span><br><span class="line">       &quot;instance&quot;: &quot;example3&quot;,</span><br><span class="line">       &quot;severity&quot;: &quot;warning&quot;</span><br><span class="line">     &#125;</span><br><span class="line">  &#125;</span><br><span class="line">]&#x27;</span><br><span class="line"></span><br><span class="line">curl -XPOST -d&quot;$alerts1&quot; http://localhost:9093/api/v1/alerts</span><br><span class="line">curl -XPOST -d&quot;$alerts1&quot; http://localhost:9094/api/v1/alerts</span><br><span class="line">curl -XPOST -d&quot;$alerts1&quot; http://localhost:9095/api/v1/alerts</span><br></pre></td></tr></table></figure>

<p>相关具体：编写好的json文件可以使用curl语句进行测试</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -i -k -H &quot;Content-type: application/json&quot; -X POST -d</span><br><span class="line">[&#123;&quot;annotations&quot;:</span><br><span class="line">&#123;&quot;description&quot;:</span><br><span class="line">&quot;localhost:9100 of job exporter has been down for more than 5 minutes.&quot;,</span><br><span class="line">&quot;summary&quot;:&quot;Instance localhost:9100 down&quot;&#125;,</span><br><span class="line">&quot;endsAt&quot;:&quot;2021-11-25T08:13:56.026Z&quot;,</span><br><span class="line">&quot;fingerprint&quot;:&quot;d44e90ffc89b2ea1&quot;,</span><br><span class="line">&quot;receivers&quot;:[&#123;&quot;name&quot;:&quot;mail&quot;&#125;],</span><br><span class="line">&quot;startsAt&quot;:&quot;2021-11-25T07:36:11.026Z&quot;,</span><br><span class="line">&quot;status&quot;:&#123;&quot;inhibitedBy&quot;:[],&quot;silencedBy&quot;:[],&quot;state&quot;:&quot;active&quot;&#125;,</span><br><span class="line">&quot;updatedAt&quot;:&quot;2021-11-25T16:09:56.030+08:00&quot;,</span><br><span class="line">&quot;generatorURL&quot;:&quot;http://localhost.localdomain:9090/graph?g0.expr=up+%3D%3D+0\u0026g0.tab=1&quot;,</span><br><span class="line">&quot;labels&quot;:&#123;&quot;alertname&quot;:&quot;InstanceDown&quot;,&quot;instance&quot;:&quot;localhost:9100&quot;,&quot;job&quot;:&quot;exporter&quot;,&quot;severity&quot;:&quot;page&quot;&#125;</span><br><span class="line">&#125;]</span><br><span class="line">&quot;http://192.168.217.22:9093/api/v1/alerts&quot;</span><br></pre></td></tr></table></figure>

<h3 id="POST-api-v2-alerts"><a href="#POST-api-v2-alerts" class="headerlink" title="POST /api/v2/alerts"></a><code>POST /api/v2/alerts</code></h3><p>Body参数示例如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;<span class="string">&quot;label&quot;</span>: <span class="string">&quot;value&quot;</span>, ...&#125;,</span><br><span class="line">    <span class="string">&quot;annotations&quot;</span>: &#123;<span class="string">&quot;label&quot;</span>: <span class="string">&quot;value&quot;</span>, ...&#125;,</span><br><span class="line">    <span class="string">&quot;generatorURL&quot;</span>: <span class="string">&quot;string&quot;</span>,</span><br><span class="line">    <span class="string">&quot;startsAt&quot;</span>: <span class="string">&quot;2020-01-01T00:00:00.000+08:00&quot;</span>, <span class="comment"># optional</span></span><br><span class="line">    <span class="string">&quot;endsAt&quot;</span>: <span class="string">&quot;2020-01-01T01:00:00.000+08:00&quot;</span> <span class="comment"># optional</span></span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p>Body参数是一个数组，里面是一个个的告警。其中startsAt与endsAt是可选参数，且格式必须是上面的那种，不能是时间戳。</p>
<h3 id="GET-api-v2-alerts"><a href="#GET-api-v2-alerts" class="headerlink" title="GET /api/v2/alerts"></a><code>GET /api/v2/alerts</code></h3><p>Query参数如下，以下参数用来过滤告警</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>默认值</th>
<th>是否必须</th>
<th>其他说明</th>
</tr>
</thead>
<tbody><tr>
<td>active</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>silenced</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>inhibited</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>unprocessed</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>filter</td>
<td>array[string]</td>
<td>无</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>receiver</td>
<td>string</td>
<td>无</td>
<td>optional</td>
<td>-</td>
</tr>
</tbody></table>
<p>其返回值如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="string">&quot;labels&quot;</span>: &#123;<span class="string">&quot;label&quot;</span>: <span class="string">&quot;value&quot;</span>, ...&#125;,</span><br><span class="line">    <span class="string">&quot;annotations&quot;</span>: &#123;<span class="string">&quot;label&quot;</span>: <span class="string">&quot;value&quot;</span>, ...&#125;,</span><br><span class="line">    <span class="string">&quot;generatorURL&quot;</span>: <span class="string">&quot;string&quot;</span>,</span><br><span class="line">    <span class="string">&quot;startsAt&quot;</span>: <span class="string">&quot;2020-01-01T00:00:00.000+08:00&quot;</span>, </span><br><span class="line">    <span class="string">&quot;endsAt&quot;</span>: <span class="string">&quot;2020-01-01T01:00:00.000+08:00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;updatedAt&quot;</span>: <span class="string">&quot;2020-01-01T01:00:00.000+08:00&quot;</span>,</span><br><span class="line">    <span class="string">&quot;fingerprint&quot;</span>: <span class="string">&quot;string&quot;</span></span><br><span class="line">    <span class="string">&quot;receivers&quot;</span>: [&#123;<span class="string">&quot;name&quot;</span>: <span class="string">&quot;string&quot;</span>&#125;, ...],</span><br><span class="line">    <span class="string">&quot;status&quot;</span>: &#123;</span><br><span class="line">      <span class="string">&quot;state&quot;</span>: <span class="string">&quot;active&quot;</span>, <span class="comment"># active, unprocessed, ...</span></span><br><span class="line">      <span class="string">&quot;silencedBy&quot;</span>: [<span class="string">&quot;string&quot;</span>, ...],</span><br><span class="line">      <span class="string">&quot;inhibitedBy&quot;</span>: [<span class="string">&quot;string&quot;</span>, ...]</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<h3 id="GET-api-v2-alerts-groups"><a href="#GET-api-v2-alerts-groups" class="headerlink" title="GET /api/v2/alerts/groups"></a><code>GET /api/v2/alerts/groups</code></h3><p>Query参数如下，以下参数用来过滤告警</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>默认值</th>
<th>是否必须</th>
<th>其他说明</th>
</tr>
</thead>
<tbody><tr>
<td>active</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>silenced</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>inhibited</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>unprocessed</td>
<td>bool</td>
<td>true</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>filter</td>
<td>array[string]</td>
<td>无</td>
<td>optional</td>
<td>-</td>
</tr>
<tr>
<td>receiver</td>
<td>string</td>
<td>无</td>
<td>optional</td>
<td>-</td>
</tr>
</tbody></table>
<p>其返回值如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123; </span><br><span class="line">    &quot;labels&quot;: &#123;&quot;label&quot;: &quot;value&quot;, ...&#125;,</span><br><span class="line">    &quot;receiver&quot;: &#123;&quot;name&quot;: &quot;string&quot;&#125;,  # 注意与alert的receivers的区别</span><br><span class="line">    &quot;alerts&quot;: [alert1, alert2, ...]  # alert的Json结构与 `GET /api/v2/alerts` 返回值中的结构一致</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<p><a href="#_labelTop">回到顶部</a></p>
<h2 id="【2】API使用实践"><a href="#【2】API使用实践" class="headerlink" title="【2】API使用实践"></a>【2】API使用实践</h2><p>参考：<a href="https://www.kancloud.cn/pshizhsysu/prometheus/1874907">https://www.kancloud.cn/pshizhsysu/prometheus/1874907</a></p>
<h3 id="（2-1）基本案例"><a href="#（2-1）基本案例" class="headerlink" title="（2.1）基本案例"></a>（2.1）基本案例</h3><p>构造测试数据：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 构造测试数据</span><br><span class="line"></span><br><span class="line">aa=&#x27;[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;Labels&quot;: &#123;</span><br><span class="line">            &quot;alertname&quot;: &quot;NodeCpuPressure&quot;,</span><br><span class="line">            &quot;IP&quot;: &quot;192.168.2.101&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;Annotations&quot;: &#123;</span><br><span class="line">            &quot;summary&quot;: &quot;NodeCpuPressure, IP: 192.168.2.101, Value: 90%, Threshold: 85%&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;StartsAt&quot;: &quot;2020-02-17T23:00:00.000+08:00&quot;, </span><br><span class="line">        &quot;EndsAt&quot;: &quot;2023-02-18T23:00:00.000+08:00&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]&#x27;</span><br><span class="line"></span><br><span class="line"># 执行 POST</span><br><span class="line">curl http://127.0.0.1:9093/api/v2/alerts -XPOST -H&#x27;Content-Type: application/json&#x27; -d&quot;$aa&quot; </span><br></pre></td></tr></table></figure>

<p> 如果是使用V1版本，可以不用加  <strong>-H’Content-Type: application&#x2F;json’</strong></p>
<p>　　<strong><img src="/images/1711349860-af74ef47af191bc00908adf4b053a0c0.png"></strong></p>
<p> 怎么取消掉？把结束时间修改一下就好了；</p>
<p>我们可以通过  <strong>curl -X GET localhost:9093&#x2F;api&#x2F;v2&#x2F;alerts</strong>  获取</p>
<p>　　<img src="/images/1711349860-e6e31ef0e1e0121dfc1a341229be632d.png"></p>
<p> 然后修改其时间</p>
<p>　　<img src="/images/1711349860-895164c070e0232ec711f67d968741f2.png"></p>
<p> 然后我们在上述的<strong>操作前：</strong></p>
<p>　　活跃且没被静默的 Alert</p>
<p>　　　　<img src="/images/1711349860-13e5383b99fabf29877a5697c9cd969e.png"></p>
<p> 操作后：</p>
<p>　　　　<img src="/images/1711349860-03943a80ce43cc25b68ec4af960dfcf0.png"></p>
<p><a href="#_labelTop">回到顶部</a></p>
<h2 id="【3】最佳实践（定时静默）"><a href="#【3】最佳实践（定时静默）" class="headerlink" title="【3】最佳实践（定时静默）"></a>【3】最佳实践（定时静默）</h2><p>注意，静默条目所生成、显示的时间是UTC时间</p>
<h3 id="（3-1）立马构造出故障的告警信息"><a href="#（3-1）立马构造出故障的告警信息" class="headerlink" title="（3.1）立马构造出故障的告警信息"></a>（3.1）立马构造出故障的告警信息</h3><p>　　<img src="/images/1711349860-9d54e75ae63971d18c70fe01dec7744e.png"></p>
<p> 　　<img src="/images/1711349860-ffb0d646b50cdc01603613501e786d7c.png"></p>
<p>　　<img src="/images/1711349860-7369c2a0dafbf048af1c874bc871d63a.png"></p>
<h3 id="（3-2）构建好静默，获取静默语句"><a href="#（3-2）构建好静默，获取静默语句" class="headerlink" title="（3.2）构建好静默，获取静默语句"></a>（3.2）构建好静默，获取静默语句</h3><p>　　<img src="/images/1711349860-98201952371c9a5c85b5c4d8266e4c0a.png"></p>
<p>　　<img src="/images/1711349860-33d88cf511f076415f5fbdf90425a292.png"></p>
<p>最终结果：</p>
<p>　　<img src="/images/1711349860-081639642bce120a504a063b7dd8dd69.png"></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl &#x27;127.0.0.1:9093/api/v2/silences&#x27; \</span><br><span class="line">  -H &#x27;Connection: keep-alive&#x27; \</span><br><span class="line">  -H &#x27;User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.102 Safari/537.36&#x27; \</span><br><span class="line">  -H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">  -H &#x27;Accept: */*&#x27; \</span><br><span class="line">  -H &#x27;Origin: http://127.0.0.1:9093&#x27; \</span><br><span class="line">  -H &#x27;Referer: http://127.0.0.1:9093/&#x27; \</span><br><span class="line">  -H &#x27;Accept-Language: zh-CN,zh;q=0.9&#x27; \</span><br><span class="line">  -H &#x27;Cookie: grafana_session=a504e4a78501efe7009fa8b7587d5fb4&#x27; \</span><br><span class="line">  --data-raw &#x27;&#123;&quot;matchers&quot;:[&#123;&quot;name&quot;:&quot;alertname&quot;,&quot;value&quot;:&quot;磁盘读吞吐过高&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;instance&quot;,&quot;value&quot;:&quot;127.0.0.1:9182&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;job&quot;,&quot;value&quot;:&quot;测试_win&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;name&quot;,&quot;value&quot;:&quot;测试数据库鸭[47.103.57.124]&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;severity&quot;,&quot;value&quot;:&quot;warning&quot;,&quot;isRegex&quot;:false&#125;],&quot;startsAt&quot;:&quot;2022-03-17T07:44:45.446Z&quot;,&quot;endsAt&quot;:&quot;2022-03-17T09:44:45.446Z&quot;,&quot;createdBy&quot;:&quot;guochaoqun&quot;,&quot;comment&quot;:&quot;tmp&quot;,&quot;id&quot;:null&#125;&#x27; \</span><br><span class="line">  --compressed \</span><br><span class="line">  --insecure</span><br></pre></td></tr></table></figure>

<h3 id="（3-3）使用生成静默规则"><a href="#（3-3）使用生成静默规则" class="headerlink" title="（3.3）使用生成静默规则"></a>（3.3）使用生成静默规则</h3><p>V1方式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -X POST http://127.0.0.1:9093/api/v1/silences -d&#x27;&#123;&quot;matchers&quot;:[&#123;&quot;name&quot;:&quot;alertname&quot;,&quot;value&quot;:&quot;磁盘读吞 吐过高&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;instance&quot;,&quot;value&quot;:&quot;47.103.57.124:9182&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;job&quot;,&quot;value&quot;:&quot;test&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;name&quot;,&quot;value&quot;:&quot;test库[47.103.57.124]&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;severity&quot;,&quot;value&quot;:&quot;warning&quot;,&quot;isRegex&quot;:false&#125;],&quot;startsAt&quot;:&quot;2022-03-17T07:44:45.446Z&quot;,&quot;endsAt&quot;:&quot;2022-03-17T09:44:45.446Z&quot;,&quot;createdBy&quot;:&quot;guochaoqun&quot;,&quot;comment&quot;:&quot;tmp&quot;,&quot;id&quot;:null&#125;&#x27; </span><br></pre></td></tr></table></figure>

<p>V2 方式，就必须要加 -H</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl &#x27;127.0.0.1:9093/api/v2/silences&#x27; \-H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">  --data &#x27;&#123;&quot;matchers&quot;:[&#123;&quot;name&quot;:&quot;alertname&quot;,&quot;value&quot;:&quot;磁盘读吞吐过高&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;instance&quot;,&quot;value&quot;:&quot;127.0.0.1:9182&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;job&quot;,&quot;value&quot;:&quot;测试_win&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;name&quot;,&quot;value&quot;:&quot;测试库[47.103.57.124]&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;severity&quot;,&quot;value&quot;:&quot;warning&quot;,&quot;isRegex&quot;:false&#125;],&quot;startsAt&quot;:&quot;2022-03-17T07:44:45.446Z&quot;,&quot;endsAt&quot;:&quot;2022-03-17T09:44:45.446Z&quot;,&quot;createdBy&quot;:&quot;guochaoqun&quot;,&quot;comment&quot;:&quot;tmp&quot;,&quot;id&quot;:null&#125;&#x27; \</span><br><span class="line">  --compressed \</span><br><span class="line">  --insecure</span><br></pre></td></tr></table></figure>

<p>　　<img src="/images/1711349860-886c6e6c4ad5f99a1cc62064f57bf177.png"></p>
<h3 id="（3-4）自动化脚本"><a href="#（3-4）自动化脚本" class="headerlink" title="（3.4）自动化脚本"></a>（3.4）自动化脚本</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">now_date=`date +%F --date=&quot;-1 day&quot;`</span><br><span class="line">curl &#x27;http://127.0.0.1:9093/api/v2/silences&#x27; \</span><br><span class="line">-H &#x27;Content-Type: application/json&#x27; \</span><br><span class="line">--data &#x27;&#123;&quot;matchers&quot;:[&#123;&quot;name&quot;:&quot;alertname&quot;,&quot;value&quot;:&quot;磁盘读吞吐过高&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;instance&quot;,&quot;value&quot;:&quot;47.103.57.124:9182&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;job&quot;,&quot;value&quot;:&quot;金游世界_win&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;name&quot;,&quot;value&quot;:&quot;8833主库_详细对局[47.103.57.124]&quot;,&quot;isRegex&quot;:false&#125;,&#123;&quot;name&quot;:&quot;severity&quot;,&quot;value&quot;:&quot;warning&quot;,&quot;isRegex&quot;:false&#125;],&quot;startsAt&quot;:&quot;&#x27;$&#123;now_date&#125;&#x27;T20:10:45.446Z&quot;,&quot;endsAt&quot;:&quot;&#x27;$&#123;now_date&#125;&#x27;T20:40:45.446Z&quot;,&quot;createdBy&quot;:&quot;guochaoqun&quot;,&quot;comment&quot;:&quot;tmp&quot;,&quot;id&quot;:null&#125;&#x27; \</span><br><span class="line">--compressed --insecure</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Alertmanager</category>
      </categories>
      <tags>
        <tag>Alertmanager</tag>
      </tags>
  </entry>
  <entry>
    <title>为SkyWalking构建Grafana Dashboard以及PromQL使用介绍</title>
    <url>/2024/03/27/%E4%B8%BASkyWalking%E6%9E%84%E5%BB%BAGrafana-Dashboard%E4%BB%A5%E5%8F%8APromQL%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>Apache SkyWalking 作为分布式系统的应用性能监控工具，提供了对云原生架构下的分布式系统的监控、跟踪、诊断能力。<a href="https://prometheus.io/docs/introduction/overview/#what-is-prometheus">Prometheus</a> 是一个开源系统监控和警报工具包，具有活跃的生态系统。特别是 Prometheus 指标通过 <a href="https://prometheus.io/docs/instrumenting/exporters/#exporters-and-integrations">导出器和集成</a> 得到广泛支持。 <a href="https://prometheus.io/docs/prometheus/latest/querying/basics/#querying-prometheus">PromQL</a> 作为 Prometheus 查询语言，包含一组表达式并公开 HTTP API 以读取指标。</p>
<p><a href="https://opentelemetry.io/ecosystem/integrations/">SkyWalking 支持通过 OpenTelemetry 收集器</a> 摄取 Prometheus 指标，并通过这些指标的聚合计算提供多种系统监控，例如 Linux 监控和 Kubernetes 监控。SkyWalking 已经为用户提供了 <a href="https://skywalking.apache.org/docs/main/next/en/ui/readme/">原生 UI</a> 和 <a href="https://skywalking.apache.org/docs/main/next/en/api/query-protocol/">GraphQL API</a>。但为了提供更广泛的生态整合能力，从 9.4.0 开始，它提供了 PromQL 服务，已经支持 PromQL 的第三方系统或可视化平台（如 Grafana），可以通过它获取指标。SkyWalking 用户在与不同系统集成时将从中受益。</p>
<h2 id="SkyWalking-中的-PromQL-服务是什么？"><a href="#SkyWalking-中的-PromQL-服务是什么？" class="headerlink" title="SkyWalking 中的 PromQL 服务是什么？"></a>SkyWalking 中的 PromQL 服务是什么？</h2><p>PromQL 服务是 SkyWalking 原生 GraphQL 查询之上的查询引擎，具有由 Prometheus 表达式提供支持的附加查询阶段计算能力。它可以接受 PromQL HTTP API 请求，解析 Prometheus 表达式，并在 Prometheus 指标和 SkyWalking 指标之间进行转换。</p>
<p><img src="/images/1711522546-776a63ec599c97b39885b16460874859.png"></p>
<p>PromQL 服务遵循 PromQL 的所有协议和语法，用户可以像使用 PromQL 一样使用它。由于 SkyWalking 在度量分类、格式、存储等方面与 Prometheus 有根本不同，因此 PromQL 服务不必实现完整的 PromQL 功能。<a href="https://skywalking.apache.org/docs/main/next/en/api/promql-service/#promql-service">有关详细信息</a>，请参阅文档。</p>
<h2 id="SkyWalking-基本概念"><a href="#SkyWalking-基本概念" class="headerlink" title="SkyWalking 基本概念"></a>SkyWalking 基本概念</h2><p>以下是用户使用 PromQL 服务需要了解的一些基本概念和与 Prometheus 的区别： Prometheus 指标指定命名格式和结构，实际指标名称和标签由客户端提供商确定，并存储详细信息。用户使用 PromQL 中的表达式聚合和计算指标。与 Prometheus 不同，SkyWalking 的度量机制是围绕以下具有层次结构的核心概念构建的：</p>
<ul>
<li><p>层（Layer）：表示计算机科学中的一个抽象框架，如 Operating System（OS_LINUX 层）、Kubernetes（k8s 层）。该层将是从不同技术检测到的不同服务的所有者。<a href="https://github.com/apache/skywalking/blob/master/oap-server/server-core/src/main/java/org/apache/skywalking/oap/server/core/analysis/Layer.java">可以在此处</a></p>
<p>找到所有层定义。</p>
</li>
<li><p>服务：表示一组 &#x2F; 一组工作负载，它为传入请求提供相同的行为。</p>
</li>
<li><p>服务实例：服务组中的单个工作负载。</p>
</li>
<li><p>端点：传入请求的服务路径。</p>
</li>
<li><p>进程：操作系统进程。在某些场景下，<code>service instance</code> 不是一个进程，比如一个 Kubernetes Pod 可能包含多个进程。</p>
</li>
</ul>
<p>Metric 名称和属性（标签）由 SkyWalking OAP 服务器根据数据源以及 OAL 和 MAL 配置。SkyWalking 提供了对时间序列指标进行下采样（down-sampling），并生成不同时间段数据（分钟、小时、天）的能力。</p>
<p>SkyWalking 指标流如下：</p>
<p><img src="/images/1711522546-685870d2c8d9eb23023376f4505c9579.png"></p>
<h3 id="流量"><a href="#流量" class="headerlink" title="流量"></a>流量</h3><ul>
<li>Service&#x2F;ServiceRelation&#x2F;Instance&#x2F;ServiceInstanceRelation&#x2F;Endpoint&#x2F;EndpointRelation&#x2F;Process&#x2F;ProcessRelation 的元数据。包括名称、层、属性、它们之间的关系等。</li>
</ul>
<h3 id="指标"><a href="#指标" class="headerlink" title="指标"></a>指标</h3><ul>
<li>名称（Name）：指标名称，来自 OAL 和 MAL 的配置。</li>
<li>实体（Entity）：表示指标的归属，用于查询。一个 Entity 根据 <code>Scope</code> 不同会包含如下信息： Scope 代表指标级别，在查询阶段代表 Scope catalog，Scope catalog 为所有的 scope 提供了高维的分类，层次结构。</li>
</ul>
<table>
<thead>
<tr>
<th>Scope</th>
<th>实体信息</th>
</tr>
</thead>
<tbody><tr>
<td>Service</td>
<td>服务（包括图层信息）</td>
</tr>
<tr>
<td>ServiceInstance</td>
<td>服务、服务实例</td>
</tr>
<tr>
<td>Endpoint</td>
<td>服务、端点</td>
</tr>
<tr>
<td>ServiceRelation</td>
<td>服务，目标服务</td>
</tr>
<tr>
<td>ServiceInstanceRelation</td>
<td>服务实例、目标服务实例</td>
</tr>
<tr>
<td>EndpointRelation</td>
<td>端点、目标端点</td>
</tr>
<tr>
<td>Process</td>
<td>服务、服务实例、流程</td>
</tr>
<tr>
<td>ProcessRelation</td>
<td>进程、服务实例、DestProcess</td>
</tr>
</tbody></table>
<ul>
<li>值：</li>
</ul>
<ol>
<li>单值：long</li>
<li>标签值：文本，<code>label1,value1|label2,value2|...</code> ，例如 <code>L2 aggregation,5000 | L1 aggregation,8000</code></li>
</ol>
<ul>
<li>TimeBucket：时间精确到分钟、小时、天</li>
</ul>
<h2 id="如何使用-PromQL-服务"><a href="#如何使用-PromQL-服务" class="headerlink" title="如何使用 PromQL 服务"></a>如何使用 PromQL 服务</h2><h3 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h3><p>PromQL 服务在 v9.4.0 之后默认开启，不需要额外配置。例如，可以使用 OAP 环境变量配置默认端口：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">restHost: $&#123;SW_PROMQL_REST_HOST:0.0.0.0&#125;</span><br><span class="line">restPort: $&#123;SW_PROMQL_REST_PORT:9090&#125;</span><br><span class="line">restContextPath: $&#123;SW_PROMQL_REST_CONTEXT_PATH:/&#125;</span><br><span class="line">restMaxThreads: $&#123;SW_PROMQL_REST_MAX_THREADS:200&#125;</span><br><span class="line">restIdleTimeOut: $&#123;SW_PROMQL_REST_IDLE_TIMEOUT:30000&#125;</span><br><span class="line">restAcceptQueueSize: $&#123;SW_PROMQL_REST_QUEUE_SIZE:0&#125;</span><br></pre></td></tr></table></figure>

<h3 id="使用-Prometheus-表达式"><a href="#使用-Prometheus-表达式" class="headerlink" title="使用 Prometheus 表达式"></a>使用 Prometheus 表达式</h3><p>PromQL 通过 Prometheus 表达式匹配指标。这是一个典型的 Prometheus 指标。</p>
<p><img src="/images/1711522546-9e58c999de935d66f0b4e4c0bc90b855.png"></p>
<p>为了匹配指标，Prometheus 表达式如下：</p>
<p><img src="/images/1711522546-896cfba9767b6d894ef6ff589b5050a3.png"></p>
<p>在 PromQL 服务中，这些保留的标签将被解析为度量名称和实体信息字段以及用于查询的其他标签。映射如下。</p>
<table>
<thead>
<tr>
<th>SkyWalking 概念</th>
<th>Prometheus 表达</th>
</tr>
</thead>
<tbody><tr>
<td>指标名称</td>
<td>指标名称</td>
</tr>
<tr>
<td>层</td>
<td>标签</td>
</tr>
<tr>
<td>服务</td>
<td>标签</td>
</tr>
<tr>
<td>服务实例</td>
<td>标签 &lt;服务实例&gt;</td>
</tr>
<tr>
<td>端点</td>
<td>标签</td>
</tr>
<tr>
<td>……</td>
<td>……</td>
</tr>
</tbody></table>
<p>例如，以下表达式用于匹配查询指标：service_cpm、service_instance_cpm、endpoint_cpm</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service_cpm &#123;service=&#x27;agent::songs&#x27;, layer=&#x27;GENERAL&#x27;&#125;</span><br><span class="line">service_instance_cpm &#123;service=&#x27;agent::songs&#x27;, service_instance=&#x27;agent::songs_instance_1&#x27;, layer=&#x27;GENERAL&#x27;&#125;</span><br><span class="line">endpoint_cpm &#123;service=&#x27;agent::songs&#x27;, endpoint=&#x27;GET:/songs&#x27;, layer=&#x27;GENERAL&#x27;&#125;</span><br></pre></td></tr></table></figure>

<h3 id="典型查询示例"><a href="#典型查询示例" class="headerlink" title="典型查询示例"></a>典型查询示例</h3><p>在这里，我们将 <a href="https://skywalking.apache.org/docs/skywalking-showcase/next/readme/">SkyWalking Showcase</a> 部署作为 Playground 来演示如何使用 PromQL 获取 SkyWalking 指标。</p>
<p><img src="/images/1711522546-71cbfc99362d62a74d4885219f1e9b04.png"></p>
<p>以下示例可用于通过 PromQL 服务查询服务的元数据和指标。</p>
<h3 id="获取指标名称"><a href="#获取指标名称" class="headerlink" title="获取指标名称"></a>获取指标名称</h3><p>查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:9099/api/v1/label/__name__/values</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;meter_mysql_instance_qps&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;service_cpm&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;envoy_cluster_up_rq_active&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;instance_jvm_class_loaded_class_count&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;k8s_cluster_memory_requests&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;meter_vm_memory_used&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;meter_apisix_sv_bandwidth_unmatched&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;meter_vm_memory_total&quot;</span><span class="punctuation">,</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="选择一个指标并获取标签"><a href="#选择一个指标并获取标签" class="headerlink" title="选择一个指标并获取标签"></a>选择一个指标并获取标签</h3><p>查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://localhost:9099/api/v1/labels?match []=service_cpm</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;layer&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;service&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;top_n&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;order&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="从特定层获取服务"><a href="#从特定层获取服务" class="headerlink" title="从特定层获取服务"></a>从特定层获取服务</h3><p>查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:9099/api/v1/series?match []=service_traffic &#123;layer=&#x27;GENERAL&#x27;&#125;&amp;start=1677479336&amp;end=1677479636</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service_traffic&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;agent::songs&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GENERAL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service_traffic&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;agent::recommendation&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GENERAL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service_traffic&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;agent::app&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GENERAL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service_traffic&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;agent::gateway&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GENERAL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span><span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service_traffic&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;agent::frontend&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GENERAL&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h3 id="查询服务的特定指标"><a href="#查询服务的特定指标" class="headerlink" title="查询服务的特定指标"></a>查询服务的特定指标</h3><p>查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1:9099/api/v1/query?query=service_cpm &#123;service=&#x27;agent::songs&#x27;, layer=&#x27;GENERAL&#x27;&#125;</span><br></pre></td></tr></table></figure>

<p>结果：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;success&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;data&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;resultType&quot;</span><span class="punctuation">:</span> <span class="string">&quot;vector&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;result&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">      <span class="punctuation">&#123;</span><span class="attr">&quot;metric&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">          <span class="attr">&quot;__name__&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service_cpm&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;layer&quot;</span><span class="punctuation">:</span> <span class="string">&quot;GENERAL&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;scope&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Service&quot;</span><span class="punctuation">,</span></span><br><span class="line">          <span class="attr">&quot;service&quot;</span><span class="punctuation">:</span> <span class="string">&quot;agent::songs&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span><span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">          <span class="number">1679559960</span><span class="punctuation">,</span></span><br><span class="line">          <span class="string">&quot;6&quot;</span></span><br><span class="line">        <span class="punctuation">]</span></span><br><span class="line">      <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>关于<code>range query</code>和不同的<code>metrics type for query</code> 可以参考 <a href="https://skywalking.apache.org/docs/main/next/en/api/promql-service">这里的</a> 文档。</p>
<h2 id="构建-Grafana-Dashboard"><a href="#构建-Grafana-Dashboard" class="headerlink" title="构建 Grafana Dashboard"></a>构建 Grafana Dashboard</h2><p>从上面我们知道了 PromQL 服务的机制和查询方式，现在我们可以为上面的服务示例构建 Grafana Dashboard。<strong>注</strong>：以下所有配置均基于 Grafana 9.1.0 版本。</p>
<p>SkyWalking Showcase 提供了 <code>General Service</code> 和 <code>Service Mesh</code> 层等 Dashboard 文件，我们可以通过导入 Dashboard JSON 文件快速为层服务创建 Dashboard。</p>
<p>部署 Grafana 应用程序后，请按照以下步骤操作：</p>
<h3 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h3><p>首先，我们需要创建一个数据源： 在数据源配置面板中，选择 <code>Prometheus</code> 并设置 URL 为 OAP 服务器地址，默认端口为 <code>9090</code>。 <code>SkyWalking</code> 如果有多个 Prometheus 数据源，请在此处设置数据源名称。</p>
<p><img src="/images/1711522546-4427454a16c2252fa4f7578cffeaa245.jpg"></p>
<h3 id="导入-Dashboard-文件"><a href="#导入-Dashboard-文件" class="headerlink" title="导入 Dashboard 文件"></a>导入 Dashboard 文件</h3><ol>
<li><p>创建一个名为 <code>SkyWalking</code> 的 Dashboard 文件夹。</p>
<p><img src="/images/1711522546-ff175d741806ea5261e02bc5184f6b3f.jpg"></p>
</li>
<li><p>将 Dashboard 文件导入到 Grafana 中，有两种获取文件的方式：</p>
<ol>
<li>来自 <a href="https://github.com/apache/skywalking-showcase/tree/main/deploy/platform/config/promql/dashboards">SkyWalking Showcase</a></li>
<li>转到 SkyWaking Demo：<a href="https://skywalking.apache.org/#demo">在 Grafana 上预览指标</a>，并将其从 <code>General Service</code> Dashboard 导出。</li>
</ol>
<p><img src="/images/1711522546-9ca6755767185ad3bb46736de9381ed9.jpg"></p>
</li>
<li><p>完毕！现在我们可以看到 Dashboard 正在运行，服务位于下拉列表中，指标显示在面板上。</p>
<p><img src="/images/1711522546-89fcb53315c10ab58cd3d2b6116942f8.jpg"></p>
</li>
</ol>
<p>这是一种简单的构建方式，但是如果我们想要自定义它，我们需要知道它是如何工作的。</p>
<h3 id="Dashboard-的工作原理"><a href="#Dashboard-的工作原理" class="headerlink" title="Dashboard 的工作原理"></a>Dashboard 的工作原理</h3><h3 id="Dashboard-设置"><a href="#Dashboard-设置" class="headerlink" title="Dashboard 设置"></a>Dashboard 设置</h3><p>打开 <code>Settings-Variables</code> 我们可以看到如下变量：</p>
<p><img src="/images/1711522546-6400fe669e5c16d7f611ebeb70cc70eb.jpg"></p>
<p>让我们看看每个变量的作用：</p>
<ol>
<li><p><strong>$DS_SkyWalking</strong></p>
<p>这是一个数据源 ty 变量，它指定了之前定义为 <code>SkyWalking</code> 的 Prometheus 数据源。</p>
<p><img src="/images/1711522546-5ee5fc056f0a2885cf66819702a4afc7.jpg"></p>
</li>
<li><p><strong>$layer</strong></p>
<p>这是一个常量类型，因为在 ‘General Service’ Dashboard 中，所有服务都属于 ‘GENERAL’ 层，因此可以在每个查询中直接使用它们。注意，当您自定义其他层时，必须在 <code>Layer</code> 上面定义该值。</p>
<p><img src="/images/1711522546-5b3782f187b1f4b4753a699a60fb8c0c.jpg"></p>
</li>
<li><p><strong>$service</strong></p>
<p>查询类型变量，为下拉列表获取该层下的所有服务名称。</p>
<p>查询表达式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">label_values (service_traffic &#123;layer=&#x27;$layer&#x27;&#125;, service)</span><br></pre></td></tr></table></figure>

<p>查询表达式将查询 HTTP API <code>/api/v1/series</code>，以获取 <code>$layer</code> 中服务元数据，并根据标签（服务）提取服务名称。</p>
<p><img src="/images/1711522546-46a8b91787686ea08c4dda3661012cf8.jpg"></p>
</li>
<li><p><strong>$service_instance</strong></p>
<p>与 <code>$service</code> 一样，是一个查询变量，用于在下拉列表中选择服务的所有实例。</p>
<p>查询表达式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">label_values (instance_traffic &#123;layer=&#x27;$layer&#x27;, service=&#x27;$service&#x27;&#125;, service_instance)</span><br></pre></td></tr></table></figure>

<p>这里的查询表达式不仅指定了 <code>$layer</code> 还包含 <code>$service</code> 变量，用于关联下拉列表的服务。</p>
</li>
<li><p><strong>$endpoint</strong></p>
<p>与 <code>$service</code> 一样，是一个查询变量，用于在下拉列表中选择服务的所有端点。</p>
<p>查询表达式：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">label_values (endpoint_traffic &#123;layer=&#x27;$layer&#x27;, service=&#x27;$service&#x27;, keyword=&#x27;$endpoint_keyword&#x27;, limit=&#x27;$endpoint_limit&#x27;&#125;, endpoint)</span><br></pre></td></tr></table></figure>

<p>此处的查询表达式指定 <code>$layer</code> 和 <code>$service</code> 用于与下拉列表的服务相关联的。并且还接受 <code>$endpoint_keyword</code> 和 <code>$endpoint_limit</code> 变量作为过滤条件。</p>
</li>
<li><p><strong>$endpoint_keyword</strong></p>
<p>一个文本类型的变量，用户可以输入它来过滤 <code>$endpoint</code> 的返回值。</p>
<p><img src="/images/1711522546-439b95348cb6cf2efa34c6b97b43189a.jpg"></p>
</li>
<li><p><strong>$endpoint_limit</strong></p>
<p>自定义类型，用户可以选择它以限制返回端点的最大数量。</p>
<p><img src="/images/1711522546-f914907cd2b4a25fdfc1f1080c1fa72a.jpg"></p>
</li>
</ol>
<h3 id="Dashboard-配置"><a href="#Dashboard-配置" class="headerlink" title="Dashboard 配置"></a>Dashboard 配置</h3><p>这个 Dashboard 上有几个典型的指标面板，让我们看看它是如何配置的。</p>
<h3 id="普通值指标"><a href="#普通值指标" class="headerlink" title="普通值指标"></a>普通值指标</h3><p>选择 <code>Time series chart</code> 面板 <code>Service Apdex</code> 并单击 <code>edit。</code></p>
<p><img src="/images/1711522546-6704e89b53b4d7828d44afb9b9210223.jpg"></p>
<ol>
<li><p>查询表达式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service_apdex &#123;service=&#x27;$service&#x27;, layer=&#x27;$layer&#x27;&#125; / 10000</span><br></pre></td></tr></table></figure>

<p>指标范围为 <code>Service</code>，添加 <code>service</code> 和 <code>layer</code> 标签用于匹配，label 值使用上面配置的变量。该计算 <code>Divided by 10000</code> 用于匹配结果单位。查询文档可以参考 <a href="https://skywalking.apache.org/docs/main/next/en/api/promql-service/#common-value-metrics">这里</a>。</p>
</li>
<li><p>设置 <code>Query options --&gt; Min interval = 1m</code>，因为 SkyWalking 中的指标最小时间段是 1m。</p>
</li>
<li><p>设置 <code>Connect null values --&gt; AlwaysShow points --&gt; Always</code>，因为当查询间隔大于 1 小时或 1 天时，SkyWalking 返回小时 &#x2F; 天步长指标值。</p>
</li>
</ol>
<h3 id="标签值指标"><a href="#标签值指标" class="headerlink" title="标签值指标"></a>标签值指标</h3><p>选择 <code>Time series chart</code> 面板 <code>Service Response Time Percentile</code> 并单击 <code>edit</code>。</p>
<p><img src="/images/1711522546-83d246d015620cf13553e6840725265d.jpg"></p>
<ol>
<li><p>查询表达式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service_percentile &#123;service=&#x27;$service&#x27;, layer=&#x27;$layer&#x27;, labels=&#x27;0,1,2,3,4&#x27;, relabels=&#x27;P50,P75,P90,P95,P99&#x27;&#125;</span><br></pre></td></tr></table></figure>

<p>指标范围为 <code>Service</code>，添加 <code>service</code> 和 <code>layer</code> 标签用于匹配，label 值使用上面配置的变量。添加 <code>labels=&#39;0,1,2,3,4&#39;</code> 过滤结果标签，并添加 <code>relabels=&#39;P50,P75,P90,P95,P99&#39;</code> 重命名结果标签。查询文档可以参考 <a href="https://skywalking.apache.org/docs/main/next/en/api/promql-service/#labeled-value-metrics">这里</a>。</p>
</li>
<li><p>设置 <code>Query options --&gt; Min interval = 1m</code>，因为 SkyWalking 中的指标最小时间段是 1m。</p>
</li>
<li><p>设置 <code>Connect null values --&gt; AlwaysShow points --&gt; Always</code>，因为当查询间隔 &gt; 1 小时或 1 天时，SkyWalking 返回小时 &#x2F; 天步长指标值。</p>
</li>
<li><p>设置 <code>Legend</code> 为 <code>&#123;&#123;label&#125;&#125;</code> 来展示。</p>
</li>
</ol>
<h3 id="排序指标"><a href="#排序指标" class="headerlink" title="排序指标"></a>排序指标</h3><p>选择 <code>Time series chart</code> 面板 <code>Service Response Time Percentile</code> 并单击 <code>edit</code>。</p>
<p><img src="/images/1711522546-fad5a93f6e82a5fff359257da35561aa.jpg"></p>
<ol>
<li><p>查询表达式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service_instance_cpm &#123;parent_service=&#x27;$service&#x27;, layer=&#x27;$layer&#x27;, top_n=&#x27;10&#x27;, order=&#x27;DES&#x27;&#125;</span><br></pre></td></tr></table></figure>

<p>该表达式用于查询服务下的排序指标，因此添加标签 <code>parent_service</code> 和 <code>layer</code> 进行匹配。添加 <code>top_n=&#39;10&#39;</code> 和 <code>order=&#39;DES&#39;</code> 过滤结果。查询文档可以参考 <a href="https://skywalking.apache.org/docs/main/next/en/api/promql-service/#sort-metrics">这里</a>。</p>
</li>
<li><p>设置 <code>Query options --&gt; Min interval = 1m</code>，因为 SkyWalking 中的指标最小时间段是 1m。</p>
</li>
<li><p>设置 <code>Calculation --&gt; Latest*</code>。</p>
</li>
<li><p>设置 <code>Legend</code> 为 <code>&#123;&#123;service_instance&#125;&#125;</code> 来展示。</p>
</li>
</ol>
<h2 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h2><p>在这篇文章中，我们介绍了 SkyWalking 中的 PromQL 服务是什么以及它的背景。详细介绍了 PromQL 服务的使用方法和 SkyWalking 相关的基本概念，展示了如何使用 PromQL 服务为 SkyWalking 构建 Grafana Dashboard。</p>
<p>未来，将会有更多的集成利用这个协议，比如 CI&#x2F;CD、HPA（缩放）等。</p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux systemd服务脚本-自定义服务</title>
    <url>/2024/03/28/Linux-systemd%E6%9C%8D%E5%8A%A1%E8%84%9A%E6%9C%AC-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<p><strong>Systemd</strong> 是一个系统和服务管理器，也是 Linux 操作系统中最常用的初始化系统之一。它的设计目标是提供更快、更有效、更可靠的系统启动过程，并提供强大的管理和监控服务的能力。本文首先介绍 systemd 服务脚本的基本情况，并通过一个简单的示例带领读者学习如何编写 systemd 服务脚本，实现 Linux 服务的自启动、启动、停止和重启管理。</p>
<h3 id="Systemd-是什么"><a href="#Systemd-是什么" class="headerlink" title="Systemd 是什么"></a>Systemd 是什么</h3><p>Systemd 是 Linux 系统中一个重要的系统和服务管理器，最早是为了代替传统的 SysV 初始化系统（init）而开发的，相较于传统 init，systemd 具有许多优势。例如支持并行启动，可同时启动多个服务，提高系统启动速度；引入了单一进程（PID 1）和 cgroups 技术，可以更好地管理系统和服务进程。目前，许多主流 Linux 发行版都采用了 systemd 作为其默认的初始化系统，包括 Ubuntu、Debian、Fedora、CentOS、Arch Linux 等。</p>
<p>总的来说，使用 systemd 可以更加简单灵活地管理各种系统服务，它提供了统一的命令行工具和配置文件格式，使得对系统和服务的管理更加一致和简化。用户可以通过 <a href="https://getiot.tech/zh/linux-command/systemctl/">systemctl</a> 命令来控制 systemd 系统和管理服务。</p>
<h3 id="service-脚本"><a href="#service-脚本" class="headerlink" title="service 脚本"></a>service 脚本</h3><p>Linux 的 service 脚本一般存放在 <code>/etc/systemd/</code> 和 <code>/usr/lib/systemd</code> 路径下，前者包含着多个 *.target.wants 文件，如 multi-user.target.wants 等；而后者为安装软件生成 service 的目录，一般编写自己的 service 可以放在此目录下。但需要注意的是，位于 &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F; 中服务脚本可能会在下次更新时被覆盖。</p>
<p>无论是 <code>/etc/systemd/</code> 还是 <code>/usr/lib/systemd</code> 目录，其中又包含 system 和 user 目录。前者是系统服务，开机不需要用户登录即可运行的服务；后者是用户服务，需要用户登录后才能运行的服务。</p>
<ul>
<li><strong>&#x2F;etc&#x2F;systemd&#x2F;system&#x2F;</strong></li>
<li><strong>&#x2F;etc&#x2F;systemd&#x2F;user&#x2F;</strong></li>
<li><strong>&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;</strong></li>
<li><strong>&#x2F;usr&#x2F;lib&#x2F;system&#x2F;user&#x2F;</strong></li>
</ul>
<p>服务脚本文件以 .service 结尾，由 Unit、Service 和 Install 三个区块组成，以下是一个 service 脚本样例：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span>   </span><br><span class="line"><span class="attr">Description</span>=test        <span class="comment"># 简单描述服务</span></span><br><span class="line"><span class="attr">After</span>=network.target    <span class="comment"># 描述服务类别，表示本服务需要在network服务启动后在启动</span></span><br><span class="line"><span class="attr">Before</span>=xxx.service      <span class="comment"># 表示需要在某些服务启动之前启动，After和Before字段只涉及启动顺序，不涉及依赖关系</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span> </span><br><span class="line"><span class="attr">Type</span>=forking            <span class="comment"># 设置服务的启动方式</span></span><br><span class="line"><span class="attr">User</span>=USER               <span class="comment"># 设置服务运行的用户</span></span><br><span class="line"><span class="attr">Group</span>=USER              <span class="comment"># 设置服务运行的用户组</span></span><br><span class="line"><span class="attr">WorkingDirectory</span>=/PATH  <span class="comment"># 设置服务运行的路径(cwd)</span></span><br><span class="line"><span class="attr">KillMode</span>=control-group  <span class="comment"># 定义systemd如何停止服务</span></span><br><span class="line"><span class="attr">Restart</span>=<span class="literal">no</span>              <span class="comment"># 定义服务进程退出后，systemd的重启方式，默认是不重启</span></span><br><span class="line"><span class="attr">ExecStart</span>=/start.sh     <span class="comment"># 服务启动命令，命令需要绝对路径（采用sh脚本启动其他进程时Type须为forking）</span></span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span>   </span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target  <span class="comment"># 多用户</span></span><br></pre></td></tr></table></figure>

<h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>service 脚本的参数分为三个区块，各区块作用如下：</p>
<table>
<thead>
<tr>
<th>区块</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>[Unit] 区块</td>
<td>启动顺序与依赖关系</td>
</tr>
<tr>
<td>[Service] 区块</td>
<td>启动行为定义</td>
</tr>
<tr>
<td>[Install] 区块</td>
<td>服务安装定义</td>
</tr>
</tbody></table>
<h3 id="Unit-区块"><a href="#Unit-区块" class="headerlink" title="Unit 区块"></a>Unit 区块</h3><h3 id="服务描述"><a href="#服务描述" class="headerlink" title="服务描述"></a><strong>服务描述</strong></h3><ul>
<li>Description：给出当前服务的简单描述。</li>
<li>Documentation：给出文档位置。</li>
</ul>
<h3 id="启动顺序"><a href="#启动顺序" class="headerlink" title="启动顺序"></a><strong>启动顺序</strong></h3><ul>
<li>After：定义 xxx.service 应该在哪些 target 或 service 服务之后启动，例如网络服务 network.target。</li>
<li>Before：定义 xxx.service 应该在哪些 target 或 service 服务之前启动。</li>
</ul>
<h3 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a><strong>依赖关系</strong></h3><ul>
<li>Wants：表示 xxx.service 与定义的服务存在“弱依赖”关系，即指定的服务启动失败或停止运行不影响 xxx 的运行。</li>
<li>Requires：则表示“强依赖”关系，即指定服务启动失败或异常退出，那么 xxx 也必须退出；反之 xxx 启动则指定服务也会启动。</li>
</ul>
<h3 id="Service-区块"><a href="#Service-区块" class="headerlink" title="Service 区块"></a>Service 区块</h3><h3 id="启动命令"><a href="#启动命令" class="headerlink" title="启动命令"></a><strong>启动命令</strong></h3><ul>
<li>EnvironmentFile：指定当前服务的环境参数文件（路径），如 <code>EnviromentFile=-/etc/sysconfig/xxx</code>，连词号表示抑制错误，即发生错误时，不影响其他命令的执行。</li>
<li>Environment：后面接多个不同的 shell 变量，如 <code>Environment=DATA_DIR=/dir/data</code>。</li>
<li>User：设置服务运行的用户。</li>
<li>Group：设置服务运行的用户组。</li>
<li>WorkingDirectory：设置服务运行的路径。</li>
<li>Exec*：各种与执行相关的命令。</li>
<li>ExecStart：定义启动服务时执行的命令。</li>
<li>ExecStop：定义停止服务时执行的命令。</li>
<li>ExecStartPre：定义启动服务前执行的命令。</li>
<li>ExecStartPost：定义启动服务后执行的命令。</li>
<li>ExecStopPost：定义停止服务后执行的命令。</li>
<li>ExecReload：定义重启服务时执行的命令。</li>
</ul>
<h3 id="启动类型"><a href="#启动类型" class="headerlink" title="启动类型"></a><strong>启动类型</strong></h3><ul>
<li>Type：字段定义启动类型，可以设置的值如下：</li>
<li>simple（默认值）：<code>ExecStart</code> 字段启动的进程为主进程，即直接启动服务进程。</li>
<li>forking：<code>ExecStart</code> 字段将以 <code>fork()</code> 方式启动，此时父进程将会退出，子进程将成为主进程（例如用 shell 脚本启动服务进程）。</li>
<li>oneshot：类似于 <code>simple</code>，但只<strong>执行一次</strong>，systemd 会等它执行完，才启动其他服务。</li>
<li>dbus：类似于 <code>simple</code>，但会等待 D-Bus 信号后启动。</li>
<li>notify：类似于 <code>simple</code>，启动结束后会发出通知信号，然后 systemd 再启动其他服务。</li>
<li>idle：类似于 <code>simple</code>，但是要等到其他任务都执行完，才会启动该服务。一种使用场合是为让该服务的输出，不与其他服务的输出相混合。</li>
<li>RemainAfterExit：设为 <code>yes</code>，表示进程退出以后，服务仍然保持执行。</li>
</ul>
<h3 id="重启行为"><a href="#重启行为" class="headerlink" title="重启行为"></a><strong>重启行为</strong></h3><ul>
<li>KillMode：定义 systemd 如何停止服务，可以设置的值如下：</li>
<li>control-group（default）：当前控制组里面的所有子进程，都会被杀掉。</li>
<li>process：只杀主进程。</li>
<li>mixed：主进程将收到 SIGTERM 信号，子进程收到 SIGKILL 信号。</li>
<li>none：没有进程会被杀掉，只是执行服务的 stop 命令。</li>
<li>Restart：定义了服务退出后，Systemd 的重启方式，可以设置的值如下（对于守护进程，推荐设为 <code>on-failure</code>，对于那些允许发生错误退出的服务，可以设为 <code>on-abnormal</code>）：</li>
<li>no（default）：退出后不会重启。</li>
<li>on-success：只有正常退出时（退出状态码为0），才会重启。</li>
<li>on-failure：非正常退出时（退出状态码非0），包括被信号终止和超时，才会重启。</li>
<li>on-abnormal：只有被信号终止和超时，才会重启。</li>
<li>on-abort：只有在收到没有捕捉到的信号终止时，才会重启。</li>
<li>on-watchdog：超时退出，才会重启。</li>
<li>always：不管是什么退出原因，总是重启。</li>
<li>RestartSec：表示 systemd 重启服务之前，需要等待的秒数。</li>
</ul>
<h3 id="Install-区块"><a href="#Install-区块" class="headerlink" title="Install 区块"></a>Install 区块</h3><p>WantedBy：表示该服务所在的 Target。</p>
<p>Target 的含义是服务组，如 <code>WantedBy=multi-user.target</code> 指的是该服务所属于 <code>multi-user.target</code>。当执行 <code>systemctl enable xxx.service</code> 命令时，<code>xxx.service</code> 的符号链接就会被创建在 <code>/etc/systemd/system/multi-user.target</code> 目录下。</p>
<p>可以通过 <code>systemctl get-default</code> 命令查看系统默认启动的 target，一般为 <code>multi-user</code> 或者是 <code>graphical</code>。因此配置好相应的 WantedBy 字段，可以实现服务的开机启动。</p>
<h3 id="简单示例"><a href="#简单示例" class="headerlink" title="简单示例"></a>简单示例</h3><p>示例代码：<a href="https://github.com/getiot/linux-c/tree/main/service/systemd-example">systemd-example</a></p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><p>下面通过一个简单的示例演示如何编写 systemd 服务脚本。为了更加简单，我们编写一个 example.sh 脚本作为服务程序，该脚本的功能是往 &#x2F;tmp 目录写一个带时间信息的文件，用于验证服务是否被执行。</p>
<p>example.sh 脚本内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The script works. `date`&quot;</span> &gt; /tmp/diditwork.txt</span><br></pre></td></tr></table></figure>

<p>接着，给 example.sh 脚本添加可执行权限，并拷贝到 &#x2F;usr&#x2F;sbin&#x2F; 系统目录。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x example.sh</span><br><span class="line">$ sudo <span class="built_in">cp</span> example.sh /usr/sbin/</span><br></pre></td></tr></table></figure>

<p>尝试执行 <code>example.sh</code>，通过 <code>cat /tmp/diditwork.txt</code> 命令查看是否写入成功。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">The script works. 2023年 08月 20日 星期日 15:08:23 CST</span><br></pre></td></tr></table></figure>

<h3 id="编写服务脚本"><a href="#编写服务脚本" class="headerlink" title="编写服务脚本"></a>编写服务脚本</h3><p>在 &#x2F;etc&#x2F;systemd&#x2F;system 目录中创建一个 example.service 服务单元文件，内容如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=example systemd service unit file.</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">ExecStart</span>=/bin/bash /usr/sbin/example.sh</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>

<p>这样，一个最简单的 systemd 服务脚本就写好了！这里的关键是在 ExecStart 参数中填入 example.sh 脚本的路径。</p>
<h3 id="使脚本生效"><a href="#使脚本生效" class="headerlink" title="使脚本生效"></a>使脚本生效</h3><p>完成服务脚本编写后，需要执行以下命令重新加载所有的 systemd 服务，否则会找不到 example.service 服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p>接着就可以通过 <a href="https://getiot.tech/zh/linux-command/systemctl/">systemctl</a> 命令来控制服务启停，控制命令语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 管理服务 [使能自启动|启动|停止|重启|查看状态]</span></span><br><span class="line">sudo systemctl [<span class="built_in">enable</span>|start|stop|restart|status] xxx.service</span><br></pre></td></tr></table></figure>

<p>现在，执行下面命令启动 example.service 服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start example.service</span><br></pre></td></tr></table></figure>

<p>通过 tmp&#x2F;diditwork.txt 文件检查 example.service 服务是否成功启动。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /tmp/diditwork.txt</span><br><span class="line">The script works. 2023年 08月 20日 星期日 15:45:37 CST</span><br></pre></td></tr></table></figure>

<p>如果你想要在每次重启系统后都自动启动 example.service 服务，则需要执行下面命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> example.service</span><br></pre></td></tr></table></figure>

<h3 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h3><p>想要获得 systemd 服务的完整文档说明，可访问 <a href="https://www.freedesktop.org/software/systemd/man/latest/systemd.service.html">systemd service documentation</a>。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux添加自定义服务（service文件）</title>
    <url>/2024/03/28/Linux%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E6%9C%8D%E5%8A%A1%EF%BC%88service%E6%96%87%E4%BB%B6%EF%BC%89/</url>
    <content><![CDATA[<p>Linux系统中也有“服务”这一说法，通过服务我们可以便捷地管理一些程序功能，也可以作为程序开机自启的一个手段之一。今天我来分享一下如何创建自己简易的Linux服务。</p>
<h2 id="1，新建服务文件"><a href="#1，新建服务文件" class="headerlink" title="1，新建服务文件"></a>1，新建服务文件</h2><p>每一个服务在Linux有它自己的对应的配置文件，这个文件可以通过文本编辑器编辑，扩展名为<code>xxx.servive</code>（xxx为服务名称）。这些文件位于<code>/usr/lib/systemd/system</code>目录下。</p>
<p>在这个目录下新建service文件即可创建我们的服务。文件的内容结构如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=服务描述</span><br><span class="line"><span class="attr">After</span>=服务依赖（再这些服务后启动本服务）</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=服务类型</span><br><span class="line"><span class="attr">ExecStart</span>=启动命令</span><br><span class="line"><span class="attr">ExecStop</span>=终止命令</span><br><span class="line"><span class="attr">ExecReload</span>=重启命令</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=服务安装设置</span><br></pre></td></tr></table></figure>

<p>可见服务配置文件分为<code>[Unit]</code>、<code>[Service]</code>和<code>[Install]</code>三大部分。</p>
<p>一般来说有些值是固定的，没有特殊需要我们直接套用即可。例如<code>[Unit]</code>中<code>After</code>的值一般是：<code>network.target remote-fs.target nss-lookup.target</code>。</p>
<p><code>[Install]</code>的<code>WantedBy</code>一般是<code>multi-user.target</code>。</p>
<p><code>[Service]</code>中是主要内容。</p>
<p>Type的值有以下几个：</p>
<ul>
<li><code>simple</code>：这是默认的值，指定了ExecStart设置后，simple就是默认的Type设置除非指定Type。simple使用ExecStart创建的进程作为服务的主进程，在此设置下systemd会立即启动服务。</li>
<li><code>forking</code>：如果使用了这个值，则ExecStart的脚本启动后会调用fork()函数创建一个进程作为其启动的一部分。当初始化完成，父进程会退出。子进程会继续作为主进程执行。</li>
<li><code>oneshot</code>：类似simple，但是在systemd启动之前，进程就会退出。这是一次性的行为。可能还需要设置RemainAfterExit&#x3D;yes，以便systemd认为j进程退出后仍然处于激活状态。</li>
<li><code>dbus</code>：也和simple很相似，该配置期待或设置一个name值，通过设置BusName&#x3D;设置name即可。</li>
<li><code>notify</code>：同样地，与simple相似的配置。顾名思义，该设置会在守护进程启动的时候发送推送消息。</li>
</ul>
<p>其实常用的就是<code>simple</code>和<code>forking</code>了。一般来说我们的程序是应用程序前台使用就用<code>simple</code>，后台&#x2F;守护进程一般是<code>forking</code>。</p>
<p>然后就是启动&#x2F;停止&#x2F;重启命令，注意这个命令里面调用的程序必须全部使用绝对路径。</p>
<p>例如，我的服务器上的redis的Service配置：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[Unit]</span></span><br><span class="line"><span class="attr">Description</span>=Redis-Server</span><br><span class="line"><span class="attr">After</span>=network.target remote-fs.target nss-lookup.target</span><br><span class="line"></span><br><span class="line"><span class="section">[Service]</span></span><br><span class="line"><span class="attr">Type</span>=forking</span><br><span class="line"><span class="attr">ExecStart</span>=/opt/Redis-<span class="number">6.2</span>.<span class="number">1</span>/redis-server /root/RedisData/redis-conf.conf</span><br><span class="line"><span class="attr">ExecStop</span>=kill -<span class="number">9</span> $(pidof redis-server)</span><br><span class="line"><span class="attr">ExecReload</span>=kill -<span class="number">9</span> $(pidof redis-server) &amp;&amp; /opt/Redis-<span class="number">6.2</span>.<span class="number">1</span>/redis-server /root/RedisData/redis-conf.conf</span><br><span class="line"></span><br><span class="line"><span class="section">[Install]</span></span><br><span class="line"><span class="attr">WantedBy</span>=multi-user.target</span><br></pre></td></tr></table></figure>

<p>因为redis一般作为后台程序运行所以Type填forking。<code>kill -9 $(pidof redis-server)</code>命令的意思是：先用<code>pidof</code>命令获取指定名称进程的pid再把这个结果传给<code>kill</code>命令终止对应进程。平时终止特定名称的进程时也可以这么写。</p>
<p>其实除此之外，service文件还有很多配置项，这里只写出了常用必要的，满足日常需求，其余可以自行搜索学习，这里不再过多赘述。</p>
<h2 id="2，启动-停止-重启我们的服务"><a href="#2，启动-停止-重启我们的服务" class="headerlink" title="2，启动&#x2F;停止&#x2F;重启我们的服务"></a>2，启动&#x2F;停止&#x2F;重启我们的服务</h2><p>刚刚建立好了我们的服务配置，现在就可以使用了！在此之前需要先使用下列命令让系统重新读取所有服务文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p>然后通过以下命令操控服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">service 服务名 start</span><br><span class="line"></span><br><span class="line"><span class="comment"># 终止服务</span></span><br><span class="line">service 服务名 stop</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">service 服务名 restart</span><br></pre></td></tr></table></figure>

<p>那么注意服务名就是我们刚刚创建的服务配置文件service文件的文件名（不包括扩展名），例如我的服务文件是<code>redis-server.service</code>，那么我的服务名是<code>redis-server</code>。</p>
<p>其实我们执行启动服务命令时，就会执行我们刚刚配置文件中<code>ExecStart</code>的值的命令，同样终止、重启会对应执行配置文件中<code>ExecStop</code>、<code>ExecReload</code>的值的命令。</p>
<h2 id="3，启用-禁用开机自启"><a href="#3，启用-禁用开机自启" class="headerlink" title="3，启用&#x2F;禁用开机自启"></a>3，启用&#x2F;禁用开机自启</h2><p>通过以下命令启用&#x2F;禁用开机自启动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 启用开机自启</span></span><br><span class="line">systemctl <span class="built_in">enable</span> 服务名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 禁用开机自启</span></span><br><span class="line">systemctl <span class="built_in">disable</span> 服务名</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux检测文件变化并执行动作的脚本</title>
    <url>/2024/03/28/Linux%E6%A3%80%E6%B5%8B%E6%96%87%E4%BB%B6%E5%8F%98%E5%8C%96%E5%B9%B6%E6%89%A7%E8%A1%8C%E5%8A%A8%E4%BD%9C%E7%9A%84%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">author: Lijintao</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">有时计划任务可能不会执行,与环境变量有很大关系</span></span><br><span class="line">source /etc/profile</span><br><span class="line">source ~/.bash_profile</span><br><span class="line"></span><br><span class="line">nowtime=`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;`</span><br><span class="line"></span><br><span class="line">cd /conf-blackbox-api</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">判断blackbox.yml文件有无改变</span></span><br><span class="line">md5_old=`cat blackbox.md5`</span><br><span class="line">md5_new=`md5sum blackbox.yml |awk &#x27;&#123;print $1&#125;&#x27;`</span><br><span class="line"></span><br><span class="line">if [[ $md5_old != $md5_new ]];then</span><br><span class="line">        echo &quot;md5_old=$md5_old,md5_new=$md5_new&quot; &gt;&gt; /conf-blackbox-api/aliyun_blackbox.log</span><br><span class="line">        #echo &quot;blackbox.yml have new update, will update aliyun_blackbox_exporter&#x27;s config&quot;</span><br><span class="line">        echo &quot;$md5_new&quot; &gt; blackbox.md5</span><br><span class="line">        scp /conf-blackbox-api/blackbox.yml  root@47.104.154.106:/opt/blackbox/blackbox_exporter</span><br><span class="line">        curl -u blackbox:Promzbx2022bx -X POST http://47.104.154.106:19115/-/reload</span><br><span class="line">        echo &quot;$nowtime blackbox.yml have new update, will update aliyun_blackbox_exporter&#x27;s config&quot; &gt;&gt; /conf-blackbox-api/aliyun_blackbox.log</span><br><span class="line">else</span><br><span class="line">        echo &quot;$nowtime not update yml&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">source /etc/profile</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">FILE1=<span class="string">&#x27;/conf-blackbox-api/config.yml&#x27;</span></span></span><br><span class="line">last_time1=`cat /conf-blackbox-api/time.txt`</span><br><span class="line"></span><br><span class="line">sleep 3</span><br><span class="line"></span><br><span class="line">FILE2=&#x27;/conf-blackbox-api/blackbox.yml&#x27;</span><br><span class="line">last_time2=$(stat -c %Y $FILE2)</span><br><span class="line">nowtime=`date +&#x27;%Y-%m-%d %H:%M:%S&#x27;`</span><br><span class="line"></span><br><span class="line">if [ $last_time1 == $last_time2 ]</span><br><span class="line">then</span><br><span class="line">        echo &quot;$nowtime no update yml&quot;</span><br><span class="line"></span><br><span class="line">else</span><br><span class="line">        scp /conf-blackbox-api/blackbox.yml  root@47.104.154.106:/opt/blackbox/blackbox_exporter</span><br><span class="line">        curl -u blackbox:Promzbx2022bx -X POST http://47.104.154.106:19115/-/reload</span><br><span class="line">        echo &quot;$last_time2&quot; &gt; /conf-blackbox-api/time.txt</span><br><span class="line">        echo &quot;$nowtime update blackbox.yml&quot; &gt;&gt; /conf-blackbox-api/aliyun_blackbox.log</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>Alertmanager——webhook与API</title>
    <url>/2024/03/28/Alertmanager%E2%80%94%E2%80%94webhook%E4%B8%8EAPI/</url>
    <content><![CDATA[<h2 id="alertmanager简介与部署"><a href="#alertmanager简介与部署" class="headerlink" title="alertmanager简介与部署"></a>alertmanager简介与部署</h2><h3 id="alertmanager简介"><a href="#alertmanager简介" class="headerlink" title="alertmanager简介"></a>alertmanager简介</h3><p>整个监控系统中，prometheus只负责将数据采集和生成告警信息，而告警信息的处理是由Alertmanager负责处理。<br>在Prometheus中定义好告警规则后，Prometheus会周期性的对告警规则进行计算，如果满足告警触发条件就会向Alertmanager发送告警信息。<br>Alertmanager负责接收并处理来自Prometheus Server的告警信息。对这些告警信息进行进一步的处理，比如当接收到大量重复告警时能够消除重复的告警信息，同时对告警信息进行分组并且路由到正确的通知方，Prometheus内置了对邮件、Slack、webhook等多种通知方式的支持，同时AlertManager还提供了静默和告警抑制机制来对告警通知行为进行优化。<br><img src="/images/1711614152-cf76c1aa35e07367da410b3c5a8407e8.png" alt="image.png"><br>关于alertmanager详细介绍可参考以下文章</p>
<ul>
<li>《Alertmanager——基础入门》：<a href="https://www.cuiliangblog.cn/detail/article/34">https://www.cuiliangblog.cn/detail/article/34</a></li>
<li>《Alertmanager——配置详解》：<a href="https://www.cuiliangblog.cn/detail/article/35">https://www.cuiliangblog.cn/detail/article/35</a></li>
</ul>
<h3 id="alertmanager部署"><a href="#alertmanager部署" class="headerlink" title="alertmanager部署"></a>alertmanager部署</h3><p>为方便后续演示与程序调用alertmanager API，此处以docker方式部署为例演示，并将告警路由时间参数调至最小。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 创建目录与默认配置文件</span></span><br><span class="line"><span class="string">➜</span>  <span class="string">mkdir</span> <span class="string">alertmanager</span></span><br><span class="line"><span class="string">➜</span>  <span class="string">cd</span> <span class="string">alertmanager</span></span><br><span class="line"><span class="string">➜</span>  <span class="string">cat</span> <span class="string">alertmanager.yml</span> </span><br><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">1h</span></span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">&#x27;webhook&#x27;</span></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;webhook&#x27;</span></span><br><span class="line">  <span class="attr">webhook_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&#x27;http://192.168.8.20:5001&#x27;</span></span><br><span class="line"><span class="comment"># 运行docker容器</span></span><br><span class="line"><span class="string">➜</span>  <span class="string">docker</span> <span class="string">run</span> <span class="string">-d</span> <span class="string">-p</span> <span class="number">9093</span><span class="string">:9093</span> <span class="string">--name</span> <span class="string">alertmanager</span> <span class="string">-v</span> <span class="string">$PWD/alertmanager.yml:/etc/alertmanager/alertmanager.yml</span> <span class="string">-v</span> <span class="string">$PWD/data:/alertmanager</span> <span class="string">prom/alertmanager:latest</span></span><br></pre></td></tr></table></figure>

<p>也可以在k8s中部署Alertmanager，详细内容参考以下文章<br>《thanos高可用prometheus集群部署》：<a href="https://www.cuiliangblog.cn/detail/article/30">https://www.cuiliangblog.cn/detail/article/30</a></p>
<h2 id="Alertmanager-webhook"><a href="#Alertmanager-webhook" class="headerlink" title="Alertmanager webhook"></a>Alertmanager webhook</h2><h3 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h3><ul>
<li>自定义告警媒介：虽然Alertmanager内置了对邮件、Slack、PagerDuty、OpsGenie、VictorOps、telegram等工具的通知集成，但是对于国内环境，大家使用最多的还是企业微信、钉钉、飞书、公有云短信电话等方式，所以要想实现自定义告警媒介通知，就需要使用webhook功能，开发自定义程序实现。</li>
<li>告警历史记录：Alertmanager UI界面只显示当前激活的告警，对于已恢复的历史告警记录，就无法从Alertmanager中查询到。可以通过webhook每次收到告警通知时做记录，写入数据库或ES中，最后通过grafana制作 dashboard可以从多个标签纬度分析历史告警记录，突显出运维工作的高频故障与薄弱环节，为后续运维工作优化提供参考。</li>
<li>告警通知升级：Alertmanager目前只提供了repeat_inteval参数对于未恢复的告警超过指定时间重复通知，如果想实现告警事件默认短信通知，超过2小时未处理改为电话通知，就可以通过webhook来实现。</li>
</ul>
<h3 id="webhook配置"><a href="#webhook配置" class="headerlink" title="webhook配置"></a>webhook配置</h3><p>回到alertmanager.yaml配置，默认的配置中使用的就是webhook</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">route:</span></span><br><span class="line">  <span class="attr">group_by:</span> [<span class="string">&#x27;alertname&#x27;</span>]</span><br><span class="line">  <span class="attr">group_wait:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">group_interval:</span> <span class="string">1s</span></span><br><span class="line">  <span class="attr">repeat_interval:</span> <span class="string">1h</span> </span><br><span class="line">  <span class="attr">receiver:</span> <span class="string">&#x27;web.hook&#x27;</span> <span class="comment"># 接收组名，与下面的receivers组名对应</span></span><br><span class="line"><span class="attr">receivers:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;web.hook&#x27;</span></span><br><span class="line">  <span class="attr">webhook_configs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">url:</span> <span class="string">&#x27;http://127.0.0.1:5001/&#x27;</span> <span class="comment"># webhook地址</span></span><br></pre></td></tr></table></figure>

<h3 id="webhook程序"><a href="#webhook程序" class="headerlink" title="webhook程序"></a>webhook程序</h3><p>此webhook的功能就是接收Alertmanager推送的告警事件，解析获取内容，格式化数据后调用告警媒介发送通知。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line"><span class="keyword">from</span> log <span class="keyword">import</span> logger</span><br><span class="line"><span class="keyword">from</span> datetime <span class="keyword">import</span> datetime, timedelta</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">send_content</span>(<span class="params">content, team</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    对接其他告警媒介发送内容</span></span><br><span class="line"><span class="string">    :param content:发送内容</span></span><br><span class="line"><span class="string">    :param team:通知组</span></span><br><span class="line"><span class="string">    :return:</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    logger.info(<span class="string">&quot;开始发送告警，发送内容%s发送组%s&quot;</span> % (content, team))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&quot;POST&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    对接alert manager，解析告警内容，推送至自定义告警媒介</span></span><br><span class="line"><span class="string">    :return: success</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    req = request.json</span><br><span class="line">    logger.info(<span class="string">&quot;接收到告警事件通知，内容为:%s&quot;</span> % req)</span><br><span class="line">    <span class="keyword">for</span> alert <span class="keyword">in</span> req[<span class="string">&#x27;alerts&#x27;</span>]:</span><br><span class="line">        status = <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> alert[<span class="string">&#x27;status&#x27;</span>] == <span class="string">&#x27;firing&#x27;</span>:</span><br><span class="line">            status = <span class="string">&quot;告警触发&quot;</span></span><br><span class="line">        <span class="keyword">elif</span> alert[<span class="string">&#x27;status&#x27;</span>] == <span class="string">&#x27;resolved&#x27;</span>:</span><br><span class="line">            status = <span class="string">&quot;告警恢复&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        job = alert[<span class="string">&#x27;labels&#x27;</span>][<span class="string">&#x27;job&#x27;</span>] </span><br><span class="line">        team = alert[<span class="string">&#x27;labels&#x27;</span>][<span class="string">&#x27;team&#x27;</span>] </span><br><span class="line">        severity = alert[<span class="string">&#x27;labels&#x27;</span>][<span class="string">&#x27;severity&#x27;</span>] </span><br><span class="line">        description = alert[<span class="string">&#x27;annotations&#x27;</span>][<span class="string">&#x27;description&#x27;</span>] </span><br><span class="line">        name = alert[<span class="string">&#x27;labels&#x27;</span>][<span class="string">&#x27;alertname&#x27;</span>] </span><br><span class="line">        time_obj = datetime.strptime(alert[<span class="string">&#x27;startsAt&#x27;</span>][:<span class="number">19</span>], <span class="string">&#x27;%Y-%m-%dT%H:%M:%S&#x27;</span>) + timedelta(hours=<span class="number">8</span>)</span><br><span class="line">        time = datetime.strftime(time_obj, <span class="string">&#x27;%Y-%m-%d %H:%M:%S&#x27;</span>)</span><br><span class="line">        content = <span class="string">&quot;=========&#123;0&#125;=========\n&quot;</span> \</span><br><span class="line">                  <span class="string">&quot;告警名称：&#123;1&#125;\n&quot;</span> \</span><br><span class="line">                  <span class="string">&quot;告警类型：&#123;2&#125;\n&quot;</span> \</span><br><span class="line">                  <span class="string">&quot;告警级别：&#123;3&#125;\n&quot;</span> \</span><br><span class="line">                  <span class="string">&quot;告警小组：&#123;4&#125;\n&quot;</span> \</span><br><span class="line">                  <span class="string">&quot;告警时间：&#123;5&#125;\n&quot;</span> \</span><br><span class="line">                  <span class="string">&quot;告警内容：&#123;6&#125;&quot;</span>.<span class="built_in">format</span>(status, name, job, severity, team, time, description)</span><br><span class="line">        send_content(content, team)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;success!&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/health&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">healthy</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;ok&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure>

<h3 id="告警数据样例"><a href="#告警数据样例" class="headerlink" title="告警数据样例"></a>告警数据样例</h3><p>运行服务后，通过控制台打印的内容可知，告警触发时，Alertmanager推送的数据内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;receiver&quot;</span><span class="punctuation">:</span> <span class="string">&quot;webhook&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;firing&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;alerts&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;firing&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;alertname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ServicePortUnavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elasticsearch&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blackbox_exporter_tcp&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;warning&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;team&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elk&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elasticsearch 192.168.10.55:9200 service port is unavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;summary&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service port unavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;startsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-07-08T09:16:01.979669601Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;endsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0001-01-01T00:00:00Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;generatorURL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/graph?g0.expr=probe_success%7Binstance%3D~%22%28%5C%5Cd%2B.%29%7B4%7D%5C%5Cd%2B%22%7D+%3D%3D+0&amp;g0.tab=1&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;fingerprint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;1e43318d4e7834f1&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;groupLabels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;alertname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ServicePortUnavailable&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commonLabels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;alertname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ServicePortUnavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elasticsearch&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;instance&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;blackbox_exporter_tcp&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;warning&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;team&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elk&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;commonAnnotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elasticsearch 192.168.10.55:9200 service port is unavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;summary&quot;</span><span class="punctuation">:</span> <span class="string">&quot;service port unavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;truncatedAlerts&quot;</span><span class="punctuation">:</span> <span class="number">0</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>告警恢复时，推送的数据格式内容如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;receiver&quot;:</span> <span class="string">&quot;webhook&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;status&quot;:</span> <span class="string">&quot;resolved&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;alerts&quot;:</span> [</span><br><span class="line">      &#123;</span><br><span class="line">          <span class="attr">&quot;status&quot;:</span> <span class="string">&quot;resolved&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;labels&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;alertname&quot;:</span> <span class="string">&quot;ServicePortUnavailable&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;group&quot;:</span> <span class="string">&quot;elasticsearch&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;instance&quot;:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;job&quot;:</span> <span class="string">&quot;blackbox_exporter_tcp&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;severity&quot;:</span> <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;team&quot;:</span> <span class="string">&quot;elk&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;annotations&quot;:</span> &#123;</span><br><span class="line">              <span class="attr">&quot;description&quot;:</span> <span class="string">&quot;elasticsearch 192.168.10.55:9200 service port is unavailable&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;summary&quot;:</span> <span class="string">&quot;service port unavailable&quot;</span>,</span><br><span class="line">              <span class="attr">&quot;value&quot;:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span></span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">&quot;startsAt&quot;:</span> <span class="string">&quot;2023-07-08T09:16:31.979669601Z&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;endsAt&quot;:</span> <span class="string">&quot;2023-07-08T09:17:31.979669601Z&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;generatorURL&quot;:</span> <span class="string">&quot;/graph?g0.expr=probe_success%7Binstance%3D~%22%28%5C%5Cd%2B.%29%7B4%7D%5C%5Cd%2B%22%7D+%3D%3D+0&amp;g0.tab=1&quot;</span>,</span><br><span class="line">          <span class="attr">&quot;fingerprint&quot;:</span> <span class="string">&quot;fdc02ded56786bca&quot;</span></span><br><span class="line">      &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">&quot;groupLabels&quot;:</span> &#123;</span><br><span class="line">      <span class="attr">&quot;alertname&quot;:</span> <span class="string">&quot;ServicePortUnavailable&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;commonLabels&quot;:</span> &#123;</span><br><span class="line">      <span class="attr">&quot;alertname&quot;:</span> <span class="string">&quot;ServicePortUnavailable&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;group&quot;:</span> <span class="string">&quot;elasticsearch&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;instance&quot;:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;job&quot;:</span> <span class="string">&quot;blackbox_exporter_tcp&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;severity&quot;:</span> <span class="string">&quot;warning&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;team&quot;:</span> <span class="string">&quot;elk&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;commonAnnotations&quot;:</span> &#123;</span><br><span class="line">      <span class="attr">&quot;description&quot;:</span> <span class="string">&quot;elasticsearch 192.168.10.55:9200 service port is unavailable&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;summary&quot;:</span> <span class="string">&quot;service port unavailable&quot;</span>,</span><br><span class="line">      <span class="attr">&quot;value&quot;:</span> <span class="string">&quot;192.168.10.55:9200&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;externalURL&quot;:</span> <span class="string">&quot;http://alertmanager-55b94ccc7d-7psb2:9093&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;truncatedAlerts&quot;:</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="Alertmanager-API"><a href="#Alertmanager-API" class="headerlink" title="Alertmanager API"></a>Alertmanager API</h2><h3 id="接口文档"><a href="#接口文档" class="headerlink" title="接口文档"></a>接口文档</h3><p>官方地址：<a href="https://github.com/prometheus/alertmanager/blob/main/api/v2/openapi.yaml">https://github.com/prometheus/alertmanager/blob/main/api/v2/openapi.yaml</a><br>apifox地址：<a href="https://apifox.com/apidoc/shared-d39e7f21-9992-4d0e-9ab8-65aa169d6be5">https://apifox.com/apidoc/shared-d39e7f21-9992-4d0e-9ab8-65aa169d6be5</a></p>
<h3 id="接口概述"><a href="#接口概述" class="headerlink" title="接口概述"></a>接口概述</h3><p>由接口文档可知，Alertmanager的API接口主要分为以下几类<br><img src="/images/1711614152-baeb991bf117fd6250ca7f2582ac0aa5.png" alt="image.png"><br>&#x2F;status:获取Alertmanager实例及其集群的当前状态<br>&#x2F;receivers:获取所有接收者的列表(通知集成的名称)<br>&#x2F;silence:新增、删除告警静默规则<br>&#x2F;alerts:查询、新增告警事件<br>&#x2F;alerts&#x2F;groups:获取警报组列表<br>接下来我们选取几个常用的接口演示使用</p>
<h2 id="新增告警事件"><a href="#新增告警事件" class="headerlink" title="新增告警事件"></a>新增告警事件</h2><h3 id="使用场景-1"><a href="#使用场景-1" class="headerlink" title="使用场景"></a>使用场景</h3><p>例如现在有一个定时任务备份脚本，如果备份脚本执行失败时，我们希望收到告警推送通知。如果单独对这个脚本开发exporter或者部署pushgateway推送指标就显得小题大做了，而且我们不需要在Prometheus中存储历史数据，此时就可以调用Alertmanager的API接口，完成告警事件推送。</p>
<h3 id="请求格式"><a href="#请求格式" class="headerlink" title="请求格式"></a>请求格式</h3><p>请求方式：POST<br>请求地址：&#x2F;api&#x2F;v2&#x2F;alerts<br>请求示例：请求内容是一个数组，里面是多个的告警内容。其中只有labels是必填参数，其他都是可选。时间参数默认值为当前时间的整时，如果传参时间格式必须是标准UTC时间。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">  <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span> ...<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;value&quot;</span><span class="punctuation">,</span> ...<span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;generatorURL&quot;</span><span class="punctuation">:</span> <span class="string">&quot;string&quot;</span><span class="punctuation">,</span> # 可选</span><br><span class="line">    <span class="attr">&quot;startsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-01-01T00:00:00.00Z&quot;</span><span class="punctuation">,</span> # 可选</span><br><span class="line">    <span class="attr">&quot;endsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-01-01T00:00:00.00Z&quot;</span> # 可选</span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  ...</span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<h3 id="请求示例"><a href="#请求示例" class="headerlink" title="请求示例"></a>请求示例</h3><p>请求内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;startsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-07-07T07:07:07.00Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;labels&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;alertname&quot;</span><span class="punctuation">:</span> <span class="string">&quot;NodeStatusDown&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;job&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node-exporter&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;severity&quot;</span><span class="punctuation">:</span> <span class="string">&quot;warning&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;team&quot;</span><span class="punctuation">:</span> <span class="string">&quot;server&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;annotations&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.10.2 host down more than 5 minutes&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;summary&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node status down&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;192.168.10.2&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>

<p>使用curl命令请求</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&#x27;content-type:application/json&#x27;</span> -d <span class="string">&#x27;[&#123;&quot;startsAt&quot;:&quot;2023-07-07T07:07:07.00Z&quot;,&quot;labels&quot;:&#123;&quot;alertname&quot;:&quot;NodeStatusDown&quot;,&quot;job&quot;:&quot;node-exporter&quot;,&quot;severity&quot;:&quot;warning&quot;,&quot;team&quot;:&quot;server&quot;&#125;,&quot;annotations&quot;:&#123;&quot;description&quot;:&quot;192.168.10.2 host down more than 5 minutes&quot;,&quot;summary&quot;:&quot;node status down&quot;,&quot;value&quot;:&quot;192.168.10.2&quot;&#125;&#125;]&#x27;</span> 127.0.0.1:9093/api/v2/alerts</span><br></pre></td></tr></table></figure>

<p>查看Alertmanager UI，已经收到了告警事件<br><img src="/images/1711614152-643044406af5cc93d72c4706bf6eff60.png" alt="image.png"><br>如果想要主动推送告警恢复通知，只需要传入一个历史的endsAt时间即可</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -X POST -H <span class="string">&#x27;content-type:application/json&#x27;</span> -d <span class="string">&#x27;[&quot;startsAt&quot;:&quot;2023-07-07T07:07:07.00Z&quot;,&quot;endsAt&quot;:&quot;2023-07-07T08:08:08.00Z&quot;,&quot;labels&quot;:&#123;&quot;alertname&quot;:&quot;NodeStatusDown&quot;,&quot;job&quot;:&quot;node-exporter&quot;,&quot;severity&quot;:&quot;warning&quot;,&quot;team&quot;:&quot;server&quot;&#125;,&quot;annotations&quot;:&#123;&quot;description&quot;:&quot;192.168.10.2 host down more than 5 minutes&quot;,&quot;summary&quot;:&quot;node status down&quot;,&quot;value&quot;:&quot;192.168.10.2&quot;&#125;&#125;]&#x27;</span> 127.0.0.1:9093/api/v2/alerts</span><br></pre></td></tr></table></figure>

<h2 id="查询告警事件"><a href="#查询告警事件" class="headerlink" title="查询告警事件"></a>查询告警事件</h2><h3 id="使用场景-2"><a href="#使用场景-2" class="headerlink" title="使用场景"></a>使用场景</h3><p>获取当前激活状态的告警列表，可以传多个参数过滤匹配。可以在每天下班前查询所有未处理的告警，推送事件广播，提示大家及时处理告警事件。</p>
<h3 id="请求格式-1"><a href="#请求格式-1" class="headerlink" title="请求格式"></a>请求格式</h3><p>请求方式：GET<br>请求地址：&#x2F;api&#x2F;v2&#x2F;alerts<br>请求参数</p>
<table>
<thead>
<tr>
<th>参数名</th>
<th>类型</th>
<th>说明</th>
<th>是否必填</th>
</tr>
</thead>
<tbody><tr>
<td>active</td>
<td>string</td>
<td>查询激活的告警</td>
<td>否</td>
</tr>
<tr>
<td>silenced</td>
<td>string</td>
<td>查询静默的告警</td>
<td>否</td>
</tr>
<tr>
<td>inhibited</td>
<td>string</td>
<td>查询抑制的告警</td>
<td>否</td>
</tr>
<tr>
<td>unprocessed</td>
<td>string</td>
<td>查询未处理的告警</td>
<td>否</td>
</tr>
<tr>
<td>filter</td>
<td>array</td>
<td>按指定标签查询告警</td>
<td>否</td>
</tr>
<tr>
<td>receiver</td>
<td>string</td>
<td>查询告警接收组</td>
<td>否</td>
</tr>
</tbody></table>
<h3 id="请求示例-1"><a href="#请求示例-1" class="headerlink" title="请求示例"></a>请求示例</h3><p>先在Alertmanager中添加两条测试告警数据<br><img src="/images/1711614152-dc08a568a550bd4dd9c69c0de0a83dd7.png" alt="image.png"></p>
<ul>
<li>获取所有激活的告警</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://127.0.0.1:9093/api/v2/alerts?active=true</span><br></pre></td></tr></table></figure>

<p><img src="/images/1711614152-f8cec1f0fffd0ac885430e06c637a046.png" alt="image.png"></p>
<ul>
<li>获取team为server，且状态为激活的告警</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl http://127.0.0.1:9093/api/v2/alerts?active=true&amp;filter=team=%22server%22</span><br></pre></td></tr></table></figure>

<p><img src="/images/1711614152-5e9f3b2ac8f471a707c9a2fee79d4a26.png" alt="image.png"></p>
<h2 id="新增告警静默规则"><a href="#新增告警静默规则" class="headerlink" title="新增告警静默规则"></a>新增告警静默规则</h2><h3 id="使用场景-3"><a href="#使用场景-3" class="headerlink" title="使用场景"></a>使用场景</h3><p>某些自动化场景下，例如批量依次重启服务器升级内核版本，在此期间就会收到大量的告警事件。可是在执行自动化脚本第一步时通过请求API接口自动添加告警静默规则，待脚本执行完成后再自动取消静默规则。<br>或者在告警事件平台与工单系统集成后，某些告警故障无法立即解决，例如服务器硬件故障等待工程师处理时，就可以在工单系统点击暂缓处理按钮，调用Alertmanager API时间告警事件的临时静默。</p>
<h3 id="请求格式-2"><a href="#请求格式-2" class="headerlink" title="请求格式"></a>请求格式</h3><p>请求方式：POST<br>请求地址：&#x2F;api&#x2F;v2&#x2F;silences<br>请求参数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;id&quot;: &quot;string&quot;, # 可选</span><br><span class="line">    &quot;matchers&quot;: [   # 必填，需要静默的告警规则标签</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;name&quot;: &quot;string&quot;,  # 标签键</span><br><span class="line">            &quot;value&quot;: &quot;string&quot;, # 标签值</span><br><span class="line">            &quot;isRegex&quot;: true,   # 是否为正则表达式</span><br><span class="line">            &quot;isEqual&quot;: true    # 可选，默认true</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;startsAt&quot;: &quot;2019-08-24T14:15:22Z&quot;, # 必填，静默生效开始时间</span><br><span class="line">    &quot;endsAt&quot;: &quot;2019-08-24T14:15:22Z&quot;, # 必填，静默失效时间</span><br><span class="line">    &quot;createdBy&quot;: &quot;string&quot;, # 必填，创建者</span><br><span class="line">    &quot;comment&quot;: &quot;string&quot; # 必填，创建说明备注</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="请求示例-2"><a href="#请求示例-2" class="headerlink" title="请求示例"></a>请求示例</h3><p>请求内容如下：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;matchers&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;isRegex&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;team&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;value&quot;</span><span class="punctuation">:</span> <span class="string">&quot;elk&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;startsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-07-07T07:07:00Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;endsAt&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2023-08-08T08:08:00Z&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;createdBy&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cuiliang&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;comment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test API&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p>通过API请求工具请求接口数据，返回成功状态码<br><img src="/images/1711614152-d4e35468c3f41b7ebac31c4a3854aa19.png" alt="image.png"><br>接下来查看Alertmanager UI中的静默信息，发现已经成功添加静默规则<br><img src="/images/1711614152-6104724bdac395bb25db04b7962955a0.png" alt="image.png"></p>
<h2 id="查询与删除告警静默规则"><a href="#查询与删除告警静默规则" class="headerlink" title="查询与删除告警静默规则"></a>查询与删除告警静默规则</h2><p>我们通过调用API接口，创建了两条告警静默规则，并将team&#x3D;elk的静默规则设置为失效状态，效果如下：<br><img src="/images/1711614152-304e66cba9eec081827089a814f3c2f8.png" alt="image.png">  </p>
<h3 id="查询所有告警静默规则"><a href="#查询所有告警静默规则" class="headerlink" title="查询所有告警静默规则"></a>查询所有告警静默规则</h3><p>请求方式：GET<br>请求地址：&#x2F;api&#x2F;v2&#x2F;silences<br>默认会返回所有静默规则，包括失效状态的规则<br><img src="/images/1711614152-70f435bf225efdc0dd512a60798ae7c7.png" alt="image.png"></p>
<h3 id="查询指定标签的静默规则"><a href="#查询指定标签的静默规则" class="headerlink" title="查询指定标签的静默规则"></a>查询指定标签的静默规则</h3><p>请求方式：GET<br>请求地址：&#x2F;api&#x2F;v2&#x2F;silences<br>请求参数：filter:[team&#x3D;elk]<br><img src="/images/1711614152-58e3e06fd8c9b3b032a5e44353869c9e.png" alt="image.png"></p>
<h3 id="查询指定ID的静默规则"><a href="#查询指定ID的静默规则" class="headerlink" title="查询指定ID的静默规则"></a>查询指定ID的静默规则</h3><p>例如查询id为5d5f1ed3-9033-4a70-92c6-1d93eeaa08db的规则信息<br><img src="/images/1711614152-f02a5141dfba62821f6c87d5f90d7c2e.png" alt="image.png"></p>
<h3 id="删除告警静默规则"><a href="#删除告警静默规则" class="headerlink" title="删除告警静默规则"></a>删除告警静默规则</h3><p>例如删除id为876586b6-1a06-4713-a096-8d5a9f4ffa8a的规则信息<br><img src="/images/1711614152-360f3f685d7ab8bb8aae9b56dcf2cee2.png" alt="image.png"><br>删除静默规则本质是是把状态为active的变为expired状态，并不会真正删除规则。对于已经是expired状态的规则，无法进行删除操作。</p>
]]></content>
      <categories>
        <category>Alertmanager</category>
      </categories>
      <tags>
        <tag>Alertmanager</tag>
      </tags>
  </entry>
  <entry>
    <title>从alertmanager A 导出静默配置并导入 alertmanager B 脚本</title>
    <url>/2024/03/28/%E4%BB%8Ealertmanager-A-%E5%AF%BC%E5%87%BA%E9%9D%99%E9%BB%98%E9%85%8D%E7%BD%AE%E5%B9%B6%E5%AF%BC%E5%85%A5-alertmanager-B-%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="8d9482caaa80c53c4d1066e17b2e55607eedb197cffbbd78bdfd4645b667866d"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>Oracle RAC某节点v$asm_disk查询卡住分析处理</title>
    <url>/2024/04/03/Oracle-RAC%E6%9F%90%E8%8A%82%E7%82%B9v-asm-disk%E6%9F%A5%E8%AF%A2%E5%8D%A1%E4%BD%8F%E5%88%86%E6%9E%90%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p><strong>主题：</strong>RAC某节点v$asm_disk查询hang分析处理<br><strong>环境：</strong>Oracle 11.2.0.3 RAC<br><strong>故障描述：</strong>RAC环境2个节点，节点1查询v$asm_disk正常返回结果，节点2查询v$asm_disk就会一直hang，查询会话对应event是ASM file metadata operation.</p>
<h2 id="1-初步判断"><a href="#1-初步判断" class="headerlink" title="1.初步判断"></a>1.初步判断</h2><p>首先连接节点1，查询v$asm_disk没有问题：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--节点1查询v$asm_disk都没有问题</span><br><span class="line">SQL&gt; show parameter name</span><br><span class="line">SQL&gt; select path from v$asm_disk;</span><br><span class="line"></span><br><span class="line">PATH</span><br><span class="line">------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">/dev/oracleasm/disks/DATADISK</span><br><span class="line">/dev/oracleasm/disks/FRADISK</span><br><span class="line">/dev/oracleasm/disks/CRSDISK1</span><br><span class="line">/dev/oracleasm/disks/CRSDISK3</span><br><span class="line">/dev/oracleasm/disks/CRSDISK2</span><br></pre></td></tr></table></figure>

<p>然后连接节点2，查询v$asm_disk就一直hang</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SQL</span><span class="operator">&gt;</span> <span class="keyword">select</span> path <span class="keyword">from</span> v$asm_disk;</span><br><span class="line">hang住一直无结果返回..</span><br></pre></td></tr></table></figure>

<p>故障重现，确认客户描述故障现场属实。</p>
<p>既然是hang住，自然去查该会话的等待事件是什么？是否有阻塞会话？</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; select sid, serial#, inst_id, sql_id, event, p1,p2,p3, machine, username, blocking_session from gv$session where wait_class# &lt;&gt; 6;</span><br><span class="line"></span><br><span class="line">       SID    SERIAL#    INST_ID SQL_ID        EVENT                                       P1         P2         P3 MACHINE              USERNAME                       BLOCKING_SESSION</span><br><span class="line">---------- ---------- ---------- ------------- ----------------------------------- ---------- ---------- ---------- -------------------- ------------------------------ ----------------</span><br><span class="line"></span><br><span class="line">      289      33911          2 b5tshv0auyqm0 ASM file metadata operation               6229          9          0 newdb2               SYS</span><br></pre></td></tr></table></figure>

<p>发现等待事件是“ASM file metadata operation”，BLOCKING_SESSION为空，表明并没有阻塞会话。</p>
<p>此时查了下MOS，初步怀疑是asm_diskstring配置有问题，或是对应的磁盘权限有什么异常。但实际排查并未发现异常。<br>两个节点asm实例的参数设置都一样；对应目录下的磁盘等权限等也一致。</p>
<ol>
<li>两个节点asm实例的参数设置都一样</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--节点1：</span><br><span class="line">SQL&gt; show parameter asm</span><br><span class="line"></span><br><span class="line">NAME                                 TYPE        VALUE</span><br><span class="line">------------------------------------ ----------- ------------------------------</span><br><span class="line">asm_diskgroups                       string      DATADG, FRADG, CRSDG_NEW</span><br><span class="line">asm_diskstring                       string      /dev/oracleasm/disks/*</span><br><span class="line">asm_power_limit                      integer     1</span><br><span class="line">asm_preferred_read_failure_groups    string</span><br><span class="line">SQL&gt;</span><br><span class="line"></span><br><span class="line">--节点2 一样的：</span><br><span class="line">SQL&gt; show parameter asm</span><br><span class="line"></span><br><span class="line">NAME                                 TYPE        VALUE</span><br><span class="line">------------------------------------ ----------- ------------------------------</span><br><span class="line">asm_diskgroups                       string      DATADG, FRADG, CRSDG_NEW</span><br><span class="line">asm_diskstring                       string      /dev/oracleasm/disks/*</span><br><span class="line">asm_power_limit                      integer     1</span><br><span class="line">asm_preferred_read_failure_groups    string</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>对应目录下的磁盘等权限等也一致</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[grid@newdb1 ~]$ ls -l /dev/oracleasm/disks/</span><br><span class="line">total 0</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 11 Jan 29 15:05 CRSDISK1</span><br><span class="line">brw-rw---- 1 grid asmadmin 253,  9 Jan 29 15:05 CRSDISK2</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 10 Jan 29 15:05 CRSDISK3</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 14 Jan 29 15:05 DATADISK</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 13 Jan 29 15:05 FRADISK</span><br><span class="line">[grid@newdb1 ~]$</span><br><span class="line"></span><br><span class="line">[grid@newdb2 ~]$ ls -l /dev/oracleasm/disks/</span><br><span class="line">total 0</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 21 Jan 29 15:05 CRSDISK1</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 18 Jan 29 15:05 CRSDISK2</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 19 Jan 29 15:05 CRSDISK3</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 22 Jan 29 15:05 DATADISK</span><br><span class="line">brw-rw---- 1 grid asmadmin 253, 20 Jan 29 15:05 FRADISK</span><br></pre></td></tr></table></figure>

<h2 id="2-深入分析"><a href="#2-深入分析" class="headerlink" title="2.深入分析"></a>2.深入分析</h2><p>在故障节点2上使用oradebug获取short_stack以及SSD 266，然后进行深入分析。</p>
<p>首先获取上面289,33911会话的spid：</p>
<p>select p.spid<br>from v$process p, v$session s<br>where p.addr &#x3D; s.paddr<br>and s.sid &#x3D; &amp;sid<br>and s.serial# &#x3D; &serial;</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; select p.spid</span><br><span class="line">  2    from v$process p, v$session s</span><br><span class="line">  3   where p.addr = s.paddr</span><br><span class="line">  4     and s.sid = &amp;sid</span><br><span class="line">  5     and s.serial# = &amp;serial;</span><br><span class="line">Enter value for sid: 289</span><br><span class="line">old   4:    and s.sid = &amp;sid</span><br><span class="line">new   4:    and s.sid = 289</span><br><span class="line">Enter value for serial: 33911</span><br><span class="line">old   5:    and s.serial# = &amp;serial</span><br><span class="line">new   5:    and s.serial# = 33911</span><br><span class="line"></span><br><span class="line">SPID</span><br><span class="line">------------------------</span><br><span class="line">8763</span><br><span class="line"></span><br><span class="line">SQL&gt; !ps -ef|grep 8763</span><br><span class="line">oracle    8763  8762  0 16:31 ?        00:00:00 oraclenewdb2 (DESCRIPTION=(LOCAL=YES)(ADDRESS=(PROTOCOL=beq)))</span><br><span class="line">grid      9639     1  0 16:35 ?        00:00:00 oracle+ASM2_user8763_newdb2 (DESCRIPTION=(LOCAL=YES)(ADDRESS=(PROTOCOL=beq)))</span><br><span class="line">oracle   12022  9750  0 16:43 pts/2    00:00:00 /bin/bash -c ps -ef|grep 8763</span><br><span class="line">oracle   12024 12022  0 16:43 pts/2    00:00:00 grep 8763</span><br></pre></td></tr></table></figure>

<p>然后使用oradebug 跟踪8763进程，获取short_stack和SSD 266：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; oradebug setospid 8763</span><br><span class="line">Oracle pid: 68, Unix process pid: 8763, image: oracle@newdb2 (TNS V1-V3)</span><br><span class="line">SQL&gt; oradebug unlimit</span><br><span class="line">Statement processed.</span><br><span class="line">SQL&gt; oradebug short_stack</span><br><span class="line">ksedsts()+461&lt;-ksdxfstk()+32&lt;-ksdxcb()+1876&lt;-sspuser()+112&lt;-__sighandler()&lt;-read()+14&lt;-ntpfprd()+115&lt;-nsbasic_brc()+376&lt;-nsbrecv()+69&lt;-nioqrc()+485&lt;-ttcdrv()+1461&lt;-nioqwa()+61&lt;-upirtrc()+1385&lt;-kpurcsc()+98&lt;-kpuexec()+10807&lt;-OCIStmtExecute()+39&lt;-kfdDskTableCb4Db()+4492&lt;-kfdDskTableCbInternal()+301&lt;-kfdDskTableCb()+56&lt;-qerfxFetch()+2210&lt;-rwsfcd()+103&lt;-qerhjFetch()+3187&lt;-opifch2()+2995&lt;-kpoal8()+2939&lt;-opiodr()+916&lt;-ttcpip()+2242&lt;-opitsk()+1673&lt;-opiino()+966&lt;-opiodr()+916&lt;-opidrv()+570&lt;-sou2o()+103&lt;-opimai_real()+133&lt;-ssthrdmain()+252&lt;-main()+201&lt;-__libc_start_main()+253&lt;-_start()+36</span><br><span class="line">SQL&gt; oradebug dump systemstate 266</span><br><span class="line">Statement processed.</span><br><span class="line">SQL&gt; oradebug tracefile_name</span><br><span class="line">/home/app/oracle/diag/rdbms/newdg/newdb2/trace/newdb2_ora_8763.trc</span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>

<p>从获取到的trc文件中，并没有找到有用的线索。至此问题陷入僵局。</p>
<h2 id="3-峰回路转"><a href="#3-峰回路转" class="headerlink" title="3.峰回路转"></a>3.峰回路转</h2><p>回过头来想之前的解决过程，发现虽然查询v$asm_disk这类操作是在db层，但是本质确实asm实例的管理资源，去查asm实例是否有阻塞呢？</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">--ASM INSTANCE</span><br><span class="line"><span class="keyword">set</span> lines <span class="number">350</span> trimspool <span class="keyword">on</span> pages <span class="number">300</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sid, state, <span class="keyword">event</span>, seconds_in_wait, blocking_session</span><br><span class="line"><span class="keyword">from</span>   v$<span class="function">session</span></span><br><span class="line"><span class="function"><span class="keyword">where</span>  blocking_session <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span></span><br><span class="line"><span class="function"><span class="keyword">or</span> sid <span class="title">in</span> (<span class="params"><span class="keyword">select</span> blocking_session</span></span></span><br><span class="line"><span class="params"><span class="function">           <span class="keyword">from</span>   v$session</span></span></span><br><span class="line"><span class="params"><span class="function">           <span class="keyword">where</span>  blocking_session <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">order <span class="keyword">by</span> sid</span>;</span><br></pre></td></tr></table></figure>

<p>在故障节点2的asm实例上查询：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; set lines 350 trimspool on pages 300</span><br><span class="line">SQL&gt;</span><br><span class="line">SQL&gt; select sid, state, event, seconds_in_wait, blocking_session</span><br><span class="line">  2  from   v$session</span><br><span class="line">  3  where  blocking_session is not null</span><br><span class="line">  4  or sid in (select blocking_session</span><br><span class="line">  5             from   v$session</span><br><span class="line">  6             where  blocking_session is not null)</span><br><span class="line">  7  order by sid;</span><br><span class="line"></span><br><span class="line">       SID STATE               EVENT                                                            SECONDS_IN_WAIT BLOCKING_SESSION</span><br><span class="line">---------- ------------------- ---------------------------------------------------------------- --------------- ----------------</span><br><span class="line">       128 WAITING             enq: DD - contention                                                      542311             1702</span><br><span class="line">       380 WAITING             enq: DD - contention                                                     2159938             1702</span><br><span class="line">       442 WAITING             enq: DD - contention                                                     2159098             1702</span><br><span class="line">       506 WAITING             enq: DD - contention                                                     2158258             1702</span><br><span class="line">       569 WAITING             enq: DD - contention                                                      713509             1702</span><br><span class="line">       632 WAITING             enq: DD - contention                                                     2156578             1702</span><br><span class="line">       695 WAITING             enq: DD - contention                                                     2155738             1702</span><br><span class="line">       758 WAITING             enq: DD - contention                                                     1108924             1702</span><br><span class="line">       821 WAITING             enq: DD - contention                                                     2142990             1702</span><br><span class="line">       884 WAITING             enq: DD - contention                                                     2139901             1702</span><br><span class="line">       947 WAITING             enq: DD - contention                                                     2136286             1702</span><br><span class="line">      1010 WAITING             enq: DD - contention                                                     2078621             1702</span><br><span class="line">      1073 WAITING             enq: DD - contention                                                     1845020             1702</span><br><span class="line">      1135 WAITING             GPnP Get Item                                                            2161258</span><br><span class="line">      1136 WAITING             enq: DD - contention                                                     1844671             1702</span><br><span class="line">      1199 WAITING             enq: DD - contention                                                     1844394             1702</span><br><span class="line">      1263 WAITING             enq: DD - contention                                                     1844065             1702</span><br><span class="line">      1325 WAITING             enq: DD - contention                                                     1843549             1702</span><br><span class="line">      1388 WAITING             enq: DD - contention                                                     1471932             1702</span><br><span class="line">      1451 WAITING             enq: DD - contention                                                     1641694             1702</span><br><span class="line">      1514 WAITING             enq: DD - contention                                                     1641426             1702</span><br><span class="line">      1577 WAITING             enq: DD - contention                                                     1572189             1702</span><br><span class="line">      1640 WAITING             enq: DD - contention                                                     1501765             1702</span><br><span class="line">      1702 WAITING             rdbms ipc reply                                                                0             1135</span><br><span class="line">      1703 WAITING             enq: DD - contention                                                      896552             1702</span><br><span class="line">      1765 WAITING             enq: DD - contention                                                     2161018             1702</span><br><span class="line">      1766 WAITING             enq: DD - contention                                                      893474             1702</span><br><span class="line">      1829 WAITING             enq: DD - contention                                                       11782             1702</span><br><span class="line">      1892 WAITING             enq: DD - contention                                                        5041             1702</span><br><span class="line">      1955 WAITING             enq: DD - contention                                                        3357             1702</span><br><span class="line"></span><br><span class="line">30 rows selected.</span><br></pre></td></tr></table></figure>

<p>果然看到很多阻塞，EVENT为”enq: DD - contention”的都是被1702会话阻塞，而1702会话又是被1135会话阻塞，1135会话的event是”GPnP Get Item”。<br>看两个会话的详细信息：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">select</span> sid,</span><br><span class="line">       SERIAL<span class="meta">#,</span></span><br><span class="line">       sql_id,</span><br><span class="line">       <span class="keyword">event</span>,</span><br><span class="line">       MACHINE,</span><br><span class="line">       PROGRAM,</span><br><span class="line">       username,</span><br><span class="line">       blocking_session <span class="keyword">from</span>   v$session <span class="keyword">where</span> sid = <span class="number">1702</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> sid,</span><br><span class="line">       SERIAL<span class="meta">#,</span></span><br><span class="line">       sql_id,</span><br><span class="line">       <span class="keyword">event</span>,</span><br><span class="line">       MACHINE,</span><br><span class="line">       PROGRAM,</span><br><span class="line">       username,</span><br><span class="line">       blocking_session <span class="keyword">from</span>   v$session <span class="keyword">where</span> sid = <span class="number">1135</span>;</span><br></pre></td></tr></table></figure>

<p>结果如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SQL&gt; select sid,</span><br><span class="line">  2         SERIAL#,</span><br><span class="line">  3         sql_id,</span><br><span class="line">  4         event,</span><br><span class="line">  5         MACHINE,</span><br><span class="line">  6         PROGRAM,</span><br><span class="line">  7         username,</span><br><span class="line">  8         blocking_session from   v$session where sid = 1702;</span><br><span class="line"></span><br><span class="line">       SID    SERIAL# SQL_ID        EVENT                                                            MACHINE                                                          PROGRAM                                       USERNAME                BLOCKING_SESSION</span><br><span class="line">---------- ---------- ------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------------------------------------------ ------------------------------ ----------------</span><br><span class="line">      1702      15127 b8a2pdbq3p2mj rdbms ipc reply                                                  newdb2                                                           oracle@newdb2 (TNS V1-V3)                     SYS                                         1135</span><br><span class="line"></span><br><span class="line">SQL&gt;  select sid,</span><br><span class="line">  2         SERIAL#,</span><br><span class="line">  3         sql_id,</span><br><span class="line">  4         event,</span><br><span class="line">  5         MACHINE,</span><br><span class="line">  6         PROGRAM,</span><br><span class="line">  7         username,</span><br><span class="line">  8         blocking_session from   v$session where sid = 1135;</span><br><span class="line"></span><br><span class="line">       SID    SERIAL# SQL_ID        EVENT                                                            MACHINE                                                          PROGRAM                                       USERNAME                BLOCKING_SESSION</span><br><span class="line">---------- ---------- ------------- ---------------------------------------------------------------- ---------------------------------------------------------------- ------------------------------------------------ ------------------------------ ----------------</span><br><span class="line">      1135          1               GPnP Get Item                                                    newdb2                                                           oracle@newdb2 (RBAL)</span><br></pre></td></tr></table></figure>

<p>找到最终的原因：GPnP Get Item .</p>
<h2 id="4-解决问题"><a href="#4-解决问题" class="headerlink" title="4.解决问题"></a>4.解决问题</h2><p>有了上面的信息，再次查询MOS就可以匹配到</p>
<ul>
<li>Diskgroup Mount Hangs with RBAL Waiting on ‘GPnP Get Item’ and ‘enq: DD - contention’ (文档 ID 1375505.1)</li>
<li>“crsctl check cluster -all” command gives CRS-4404, CRS-4405 errors (文档 ID 1392934.1)</li>
</ul>
<p>参照MOS解决方案：</p>
<blockquote>
<ol>
<li>Use the following command as root on Compute Node 3 to identify the current gpnpd.bin process:<br>ps -ef | grep gpnpd.bin</li>
</ol>
<p>This will give you an output similar to:<br>ps -ef | grep pnp<br>oracle 31422 1 0 2011 ? 00:05:40 &#x2F;u01&#x2F;app&#x2F;11.2.0.2&#x2F;grid&#x2F;bin&#x2F;gpnpd.bin</p>
<p>Please note the process ID number</p>
<ol>
<li><p>Use the following command on Compute Node 3 to stop the current gpnpd.bin process:<br>kill -HUP</p>
</li>
<li><p>After a few moments, gpnpd.bin should be automatically restarted by GI, run the command from step # 1 to verify that a new gpnpd.bin process exists</p>
</li>
</ol>
</blockquote>
<p>实际操作如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@newdb2 dev]# ps -ef | grep gpnpd.bin</span><br><span class="line">grid      9835     1  0  2017 ?        00:23:19 /home/app/11.2.0/grid/bin/gpnpd.bin</span><br><span class="line">root     26300 28772  0 17:43 pts/0    00:00:00 grep gpnpd.bin</span><br><span class="line">[root@newdb2 dev]# kill -HUP  9835</span><br><span class="line">You have mail in /var/spool/mail/root</span><br><span class="line">[root@newdb2 dev]#</span><br><span class="line">[root@newdb2 dev]# ps -ef | grep gpnpd.bin</span><br><span class="line">grid     26740     1  1 17:45 ?        00:00:00 /home/app/11.2.0/grid/bin/gpnpd.bin</span><br><span class="line">root     26762 28772  0 17:45 pts/0    00:00:00 grep gpnpd.bin</span><br><span class="line">[root@newdb2 dev]# su - grid</span><br><span class="line">[grid@newdb2 ~]$ sqlplus / as sysasm</span><br><span class="line"></span><br><span class="line">SQL*Plus: Release 11.2.0.3.0 Production on Mon Jan 29 17:46:02 2018</span><br><span class="line"></span><br><span class="line">Copyright (c) 1982, 2011, Oracle.  All rights reserved.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Connected to:</span><br><span class="line">Oracle Database 11g Enterprise Edition Release 11.2.0.3.0 - 64bit Production</span><br><span class="line">With the Real Application Clusters and Automatic Storage Management options</span><br><span class="line"></span><br><span class="line">SQL&gt; set lines 350 trimspool on pages 300</span><br><span class="line">SQL&gt;</span><br><span class="line">SQL&gt; select sid, state, event, seconds_in_wait, blocking_session</span><br><span class="line">  2  from   v$session</span><br><span class="line">  3  where  blocking_session is not null</span><br><span class="line">  4  or sid in (select blocking_session</span><br><span class="line">  5             from   v$session</span><br><span class="line">  6             where  blocking_session is not null)</span><br><span class="line">  7  order by sid;</span><br><span class="line"></span><br><span class="line">no rows selected</span><br><span class="line"></span><br><span class="line">SQL&gt; select path from v$asm_disk;</span><br><span class="line"></span><br><span class="line">PATH</span><br><span class="line">----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">/dev/oracleasm/disks/FRADISK</span><br><span class="line">/dev/oracleasm/disks/DATADISK</span><br><span class="line">/dev/oracleasm/disks/CRSDISK3</span><br><span class="line">/dev/oracleasm/disks/CRSDISK2</span><br><span class="line">/dev/oracleasm/disks/CRSDISK1</span><br><span class="line"></span><br><span class="line">SQL&gt;</span><br></pre></td></tr></table></figure>

<p>至此，故障节点的ASM实例的阻塞消失，再次验证查询v$asm_disk已经恢复正常，故障算是完美解决。</p>
<p><strong>后记：</strong></p>
<ul>
<li>1.实际上起初的解决思路出现偏差，ASM的问题就应该直接从ASM实例找原因，而之前都是在DB层分析，自然没有得到好的结果。这一点很值得自己反思。</li>
<li>2.最开始接到这个case是建议找停机时间直接重启节点2，这个方案简单粗暴且不需要深入分析问题，从最终解决方案看到，这种方法也是可以解决问题的。但恰恰由于客户坚持不能重启，反倒因此而学到了更多的技能点。</li>
</ul>
]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oracle</tag>
      </tags>
  </entry>
  <entry>
    <title>Ansible的安装和使用</title>
    <url>/2024/04/03/Ansible%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h2 id="一、Ansible安装"><a href="#一、Ansible安装" class="headerlink" title="一、Ansible安装"></a>一、Ansible安装</h2><p>Ansible的安装方法主要有以下三种：</p>
<h3 id="1-1-yum使用EPEL源安装"><a href="#1-1-yum使用EPEL源安装" class="headerlink" title="1.1 yum使用EPEL源安装"></a>1.1 yum使用EPEL源安装</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ mv /etc/yum.repos.d/epel.repo /etc/yum.repos.d/epel.repo.backup</span><br><span class="line">$ mv /etc/yum.repos.d/epel-testing.repo /etc/yum.repos.d/epel-testing.repo.backup</span><br><span class="line">$ wget -O /etc/yum.repos.d/epel.repo https://mirrors.aliyun.com/repo/epel-7.repo</span><br><span class="line">$ yum clean all &amp;&amp; yum makecache</span><br><span class="line"></span><br><span class="line"># 可以使用以下三种方式查看ansible包的信息</span><br><span class="line">$ yum info ansible</span><br><span class="line">$ yum list ansible</span><br><span class="line">$ yum list | grep ansible</span><br><span class="line">ansible.noarch                                                      2.9.27-1.el7                                                  epel</span><br><span class="line">ansible-collection-microsoft-sql.noarch                             1.1.0-1.el8                                                   AppStream</span><br><span class="line">ansible-collection-redhat-rhel_mgmt.noarch                          1.0.0-2.el8                                                   AppStream</span><br><span class="line">ansible-doc.noarch                                                  2.9.27-1.el7                                                  epel</span><br><span class="line">ansible-freeipa.noarch                                              0.3.8-1.el8                                                   AppStream</span><br><span class="line">ansible-freeipa-tests.noarch                                        0.3.8-1.el8                                                   AppStream</span><br><span class="line">ansible-inventory-grapher.noarch                                    2.4.4-1.el7                                                   epel</span><br><span class="line">ansible-lint.noarch                                                 3.5.1-1.el7                                                   epel</span><br><span class="line">ansible-openstack-modules.noarch                                    0-20140902git79d751a.el7                                      epel</span><br><span class="line">ansible-pcp.noarch                                                  2.2.1-1.el8                                                   AppStream</span><br><span class="line">ansible-python3.noarch                                              2.9.27-1.el7                                                  epel</span><br><span class="line">ansible-review.noarch                                               0.13.4-1.el7                                                  epel</span><br><span class="line">ansible-test.noarch                                                 2.9.27-1.el7                                                  epel</span><br><span class="line">centos-release-ansible-29.noarch                                    1-2.el8                                                       extras</span><br><span class="line">kubernetes-ansible.noarch                                           0.6.0-0.1.gitd65ebd5.el7                                      epel</span><br><span class="line">python2-ansible-runner.noarch                                       1.0.1-1.el7                                                   epel</span><br><span class="line">python2-ansible-tower-cli.noarch                                    3.3.9-1.el7                                                   epel</span><br><span class="line">vim-ansible.noarch                                                  3.2-1.el7</span><br><span class="line"></span><br><span class="line"># 安装ansible</span><br><span class="line">$ yum -y install ansible</span><br><span class="line">$ ansible --version</span><br></pre></td></tr></table></figure>

<h3 id="1-2-编译安装"><a href="#1-2-编译安装" class="headerlink" title="1.2 编译安装"></a>1.2 编译安装</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ yum -y install python-jinja2 PyYAML python-paramiko python-babel python-crypto</span><br><span class="line"></span><br><span class="line"># 需要提前安装Python环境(略)</span><br><span class="line">$ wget https://releases.ansible.com/ansible/ansible-2.9.27.tar.gz</span><br><span class="line">$ tar xf ansible-2.9.27.tar.gz</span><br><span class="line">$ cd ansible-2.9.27</span><br><span class="line">$ ls -al</span><br><span class="line">total 160</span><br><span class="line">drwxr-xr-x  2 root root  4096 May 25 05:18 bin</span><br><span class="line">drwxr-xr-x  2 root root  4096 May 25 05:18 changelogs</span><br><span class="line">drwxr-xr-x  3 root root  4096 May 25 05:18 contrib</span><br><span class="line">-rw-r--r--  1 root root 35148 May 25 05:18 COPYING</span><br><span class="line">drwxr-xr-x  6 root root  4096 May 25 05:18 docs</span><br><span class="line">drwxr-xr-x  3 root root  4096 May 25 05:18 examples</span><br><span class="line">drwxr-xr-x  3 root root  4096 May 25 05:18 hacking</span><br><span class="line">drwxr-xr-x  3 root root  4096 May 25 05:18 lib</span><br><span class="line">drwxr-xr-x  2 root root  4096 May 25 05:18 licenses</span><br><span class="line">-rw-r--r--  1 root root 13840 May 25 05:18 Makefile</span><br><span class="line">-rw-r--r--  1 root root  1731 May 25 05:18 MANIFEST.in</span><br><span class="line">drwxr-xr-x 10 root root  4096 May 25 05:18 packaging</span><br><span class="line">-rw-r--r--  1 root root  7724 May 25 05:18 PKG-INFO</span><br><span class="line">-rw-r--r--  1 root root  5175 May 25 05:18 README.rst</span><br><span class="line">-rw-r--r--  1 root root   351 May 25 05:18 requirements.txt</span><br><span class="line">-rw-r--r--  1 root root 12949 May 25 05:18 setup.py</span><br><span class="line">-rw-r--r--  1 root root 28352 May 25 05:18 SYMLINK_CACHE.json</span><br><span class="line">drwxr-xr-x  7 root root  4096 May 25 05:18 test</span><br><span class="line">$ python setup.py build</span><br><span class="line">$ python setup.py install</span><br><span class="line"></span><br><span class="line">$ mkdir /etc/ansible</span><br><span class="line">$ cp -r examples/* /etc/ansible</span><br></pre></td></tr></table></figure>

<h3 id="1-3-Git-源码安装"><a href="#1-3-Git-源码安装" class="headerlink" title="1.3 Git 源码安装"></a>1.3 Git 源码安装</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ git clone https://github.com/ansible/ansible.git</span><br><span class="line">$ cd ansible</span><br><span class="line">$ git checkout stable-2.9</span><br><span class="line">Updating files: 100% (19674/19674), done.</span><br><span class="line">Branch &#x27;stable-2.9&#x27; set up to track remote branch &#x27;stable-2.9&#x27; from &#x27;origin&#x27;.</span><br><span class="line">Switched to a new branch &#x27;stable-2.9&#x27;</span><br><span class="line">$ source ./hacking/env-setup</span><br></pre></td></tr></table></figure>

<h3 id="1-4-pip安装"><a href="#1-4-pip安装" class="headerlink" title="1.4 pip安装"></a>1.4 pip安装</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">$ yum install python-pip python-devel</span><br><span class="line">$ yum install gcc glibc-devel zibl-devel rpm-bulid openss1-devel </span><br><span class="line">$ pip install -U pip </span><br><span class="line">$ pip install ansible --upgrade</span><br></pre></td></tr></table></figure>

<h2 id="二、Ansible相关文件说明"><a href="#二、Ansible相关文件说明" class="headerlink" title="二、Ansible相关文件说明"></a>二、Ansible相关文件说明</h2><h3 id="2-1-配置文件"><a href="#2-1-配置文件" class="headerlink" title="2.1 配置文件"></a>2.1 配置文件</h3><ul>
<li><p><code>/etc/ansible/ansible.cfg</code> ：主配置文件，配置ansible工作特性；  </p>
</li>
<li><p><code>/etc/ansible/hosts</code> ：主机清单文件，管理的目标主机地址清单；  </p>
</li>
<li><p><code>/etc/ansible/roles/</code> ：存放角色的目录。</p>
</li>
</ul>
<h3 id="2-2-主配置文件介绍"><a href="#2-2-主配置文件介绍" class="headerlink" title="2.2 主配置文件介绍"></a>2.2 主配置文件介绍</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[defaults]</span><br><span class="line">#inventory = /etc/ansible/hosts  # 主机列表配置文件</span><br><span class="line">#library =/usr/share/my_modules/ # 库文件存放目录</span><br><span class="line">#remote_tmp = $HOME/.ansible/tmp # 临时py命令文件存放在远程主机目录</span><br><span class="line">#local_tmp = $HOME/.ansible/tmp  # 本机的临时命令执行目录</span><br><span class="line">#forks = 5                       # 默认并发数</span><br><span class="line">#sudo_user = root                # 默认sudo用户</span><br><span class="line">#ask_sudo_pass = True            # 每次执行ansible命令是否询间ssh密码</span><br><span class="line">#ask_pass = True                 # 是否询问密码</span><br><span class="line">#remote_port = 22                # 默认的远程登录端口</span><br><span class="line">host_key_checking = False        # 检查对应服务器的host_key，建议取消注释</span><br><span class="line">log_path=/var/log/ansible.log    # 日志文件，建议启用</span><br><span class="line">#module_name = command           # 默认模块，可以修改为shell模块</span><br></pre></td></tr></table></figure>

<p>以上只是一小部分关于default的相关配置，还有其他更多的配置这里暂时不一一列举。因为ansible的大部分参数都可以保持默认，无需更改。但是当你的被管理机器数量增加以后，建议将forks数量适当的调整。</p>
<p><strong>温馨提示：</strong>由于Ansible不是一个服务，所以更改完配置后无无需进行重启操作(也没提供重启的操作方法),改完配置立即生效。</p>
<h3 id="2-3-Inventory主机清单文件"><a href="#2-3-Inventory主机清单文件" class="headerlink" title="2.3 Inventory主机清单文件"></a>2.3 Inventory主机清单文件</h3><p>主机清单文件，用大白话讲其实就是被整合在一个文件中的一组或者多组被管控的节点。默认情况下，该清单文件为：<code>/etc/ansible/hosts</code>，通常我们可能会根据项目需求，起一个见名知意的其他名称，或者也会直接在每一套我们需要组织的项目根目录下存放一个hosts的清单文件。</p>
<p>Inventory主机清单文件可以有多个，在使用plyabook时可以手动通过<code>-i</code> 参数指定你需要使用的清单文件名称。</p>
<p>Inventory文件遵循了<code>ini</code>配置文件的风格，一个section就表示一组隶属于同一个分组的被管理机器。目标被管理节点默认均被视为使用SSH的22端口，但是当部分节点使用非22端口号时，也可以在清单文件中进行指定。</p>
<p>被管理节点可以是以IP的形式写在清单文件中，也可以使用域名的形式。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[sites]</span><br><span class="line">172.16.0.10</span><br><span class="line">172.16.0.11</span><br><span class="line"></span><br><span class="line">[appsrvs]</span><br><span class="line">192.168.66.[1:30]</span><br><span class="line"></span><br><span class="line">[nginx]</span><br><span class="line">nginx1.ayunw.cn</span><br><span class="line">nginx2.ayunw.cn</span><br><span class="line"></span><br><span class="line">[apache]</span><br><span class="line">apache1.ayunw.cn:2333</span><br><span class="line">apache2.ayunw.cn</span><br><span class="line"></span><br><span class="line">[nginxsrvs]</span><br><span class="line">nginx[10:20].ayunw.cn</span><br><span class="line"></span><br><span class="line">[dbservers]</span><br><span class="line">redis1.ayunw.cn</span><br><span class="line">redis2.ayunw.cn</span><br><span class="line"></span><br><span class="line">[dbsrvs]</span><br><span class="line">mysql-[a:z].ayunw.cn</span><br></pre></td></tr></table></figure>

<h2 id="三、实战演练"><a href="#三、实战演练" class="headerlink" title="三、实战演练"></a>三、实战演练</h2><h3 id="3-1-环境介绍"><a href="#3-1-环境介绍" class="headerlink" title="3.1 环境介绍"></a>3.1 环境介绍</h3><p>我这里包括ansible主控机和另外两个被管理机器。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@ansible-server ~]# cat /etc/ansible/hosts</span><br><span class="line">[webservers]</span><br><span class="line">192.168.66.[151:153]</span><br><span class="line"></span><br><span class="line">[dbservers]</span><br><span class="line">192.168.66.151</span><br><span class="line"></span><br><span class="line">[appservers]</span><br><span class="line">192.168.66.[152:153]</span><br></pre></td></tr></table></figure>

<h3 id="3-2-Ansible相关命令工具"><a href="#3-2-Ansible相关命令工具" class="headerlink" title="3.2 Ansible相关命令工具"></a>3.2 Ansible相关命令工具</h3><ul>
<li><p><code>/usr/bin/ansible</code> ：主提序，临时命令执行工具  </p>
</li>
<li><p><code>/usr/bin/ansible-doc</code> ：查看配置文档，模块功能查看工具  </p>
</li>
<li><p><code>/us/bin/ansible-galaxy</code>：下载&#x2F;上传优秀代码或Roles模块的自网平台  </p>
</li>
<li><p><code>/usr/bin/ansible-playbook</code>：定制自动化任务，编排剧本工具  </p>
</li>
<li><p><code>/usr/bin/ansible-pull</code>：远程执行命令的工具  </p>
</li>
<li><p><code>/usr/bin/ansible-vault</code>：文件加密工具  </p>
</li>
<li><p><code>/usr/bin/ansible-console</code>：基于Console界面与用户交互的执行工具</p>
</li>
</ul>
<p>以上命令，最常用的两个：<code>ansible</code>和<code>ansible-playbook</code>，这两个命令就是ansible用来实现批量管里的关键。</p>
<ul>
<li><p>ansible命令通常用于一次性或者临时的任务，一般一条命令即可实现任务。通常我们称这种方式为：ad-hoc；  </p>
</li>
<li><p>ansible-playbook主要是应用于针对大型项目的部署，需要通过多个yaml格式的文件(以yaml或者yml结尾)组合使用，所以一般需要进行提前规划目录，整合yaml文件。</p>
</li>
</ul>
<p>接下来介绍几个比较常用的命令。</p>
<h3 id="3-2-1-ansible-doc"><a href="#3-2-1-ansible-doc" class="headerlink" title="3.2.1 ansible-doc"></a>3.2.1 ansible-doc</h3><p>该命令主要用于显示针对某个模块的使用方法的帮助信息。如果忘记了模块或者模块的用法，可以通过该命令快速查看。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">ansible-doc [options][module...]</span><br><span class="line"># 列出可用模块</span><br><span class="line">-l，--list</span><br><span class="line"># 显示指定模块的playbook片段</span><br><span class="line">-s，--snippet</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line"># 列出所有模块</span><br><span class="line">ansible-doc -l</span><br><span class="line"> </span><br><span class="line"># 查看指定模块帮助用法</span><br><span class="line">ansible-doc copy</span><br><span class="line"> </span><br><span class="line"># 查看指定模块帮助用法[简化版的帮助]</span><br><span class="line">ansible-doc -s copy</span><br></pre></td></tr></table></figure>

<p><strong>注意：</strong> 在使用ansible批量管理操作之前，需要先对所有主机做一个免密认证，以确保每个被管理节点都能在ansible管理节点上通过ssh协议免密登录到被管理节点。</p>
<p>免密的三种实现方式：</p>
<ul>
<li><p>基于ssh-keygen + shell + sshpass`方法实现  </p>
</li>
<li><p>基于<code>expect</code>实现;  </p>
</li>
<li><p>基于<code>ansible-playbook</code>实现。</p>
</li>
</ul>
<p>ad-hoc 方式常用参数说明：</p>
<ul>
<li><p><code>--version</code> ：显示版本  </p>
</li>
<li><p><code>-m module</code> ：指定模块，默认为command  </p>
</li>
<li><p><code>-V</code> ：详细过程-vv -vvv更详细  </p>
</li>
<li><p><code>--list-hosts</code> ：显示主机列表，可简写–list  </p>
</li>
<li><p><code>-k，--ask-pass</code> ：提示输入ssh连接密码，默认key验证  </p>
</li>
<li><p><code>-C，--check</code> ：检查，并不执行  </p>
</li>
<li><p><code>-T，--timeout=TIMEOUT</code> ：执行命令的超时时间，默认10s  </p>
</li>
<li><p><code>-u，--user=REMOTE_USER</code> ：执行远程执行的用户  </p>
</li>
<li><p><code>-b，--become</code> ：代替旧版的sudo切换  </p>
</li>
<li><p><code>--become-user=USERNAME</code> ：指定sudo的runas用户，默认为root  </p>
</li>
<li><p><code>-K，--ask-become-pass</code> ：提示输入sudo时的口令</p>
</li>
</ul>
<p><strong>通配符</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">ansible &quot;*&quot;-m ping </span><br><span class="line">ansible 192.168.1.* -m ping </span><br><span class="line">ansible &quot;srvs&quot; -m ping</span><br><span class="line"> </span><br><span class="line">[root@ansible-server ~]# ansible &quot;*&quot; --list-hosts</span><br><span class="line">  hosts (3):</span><br><span class="line">    192.168.66.151</span><br><span class="line">    192.168.66.152</span><br><span class="line">    192.168.66.153</span><br></pre></td></tr></table></figure>

<p><strong>逻辑或</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">ansible &quot;websrvs:appsrvs&quot; -m ping </span><br><span class="line">ansible &quot;192.168.66.151:192.168.66.152&quot; -m ping</span><br></pre></td></tr></table></figure>

<p><strong>逻辑与</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># 在websrvs组并且在dbsrvs组中的主机</span><br><span class="line">ansible &quot;webservers:&amp;dbservers&quot; -m ping</span><br><span class="line"> </span><br><span class="line">192.168.66.151 | SUCCESS =&gt; &#123;</span><br><span class="line">    &quot;ansible_facts&quot;: &#123;</span><br><span class="line">        &quot;discovered_interpreter_python&quot;: &quot;/usr/bin/python&quot;</span><br><span class="line">    &#125;, </span><br><span class="line">    &quot;changed&quot;: false, </span><br><span class="line">    &quot;ping&quot;: &quot;pong&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>逻辑非</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line"># 在websrvs组，但不在dbsrvs组中的主机</span><br><span class="line"># 注意：此处为单引号</span><br><span class="line">ansible &#x27;webservers:!dbservers&#x27; -m ping</span><br></pre></td></tr></table></figure>

<p><strong>正则</strong></p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">ansible &quot;webservers:&amp;dbservers&quot; -m ping</span><br><span class="line">ansible &quot;~(web|db)servers&quot; -m ping</span><br></pre></td></tr></table></figure>

<h3 id="3-2-2-ansible执行命令过程"><a href="#3-2-2-ansible执行命令过程" class="headerlink" title="3.2.2 ansible执行命令过程"></a>3.2.2 ansible执行命令过程</h3><ul>
<li><p>加载自己的配置文件默认 <code>/etc/ansible/ansible.cfg</code>，如果指定了你自定义的清单文件，则从自己的清单文件中查找被管理主机  </p>
</li>
<li><p>加载自己对应的模块文件，如：<code>command</code></p>
</li>
<li><p>通过ansible将模块或命令生成对应的临时py文件，并将该文件传输至远程服务器的对应执行用户 <code>$HOME/.ansible/tmp/ansible-tmp-数字/XXX.PY</code>文件  </p>
</li>
<li><p>给文件+x执行  </p>
</li>
<li><p>执行并返回结果  </p>
</li>
<li><p>删除临时py文件，退出</p>
</li>
</ul>
<p>可以通过加参数 <code>-v</code> 或者 <code>-vvv</code>列出详细的执行过程(可以多加几个v参数)。</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@ansible-server ~]# ansible &quot;~(web|db)servers&quot; -vvv -m ping &gt; ansible.log</span><br><span class="line">[root@ansible-server ~]# grep &quot;chmod&quot; ansible.log</span><br></pre></td></tr></table></figure>

<h3 id="3-2-3-ansible执行后颜色描述"><a href="#3-2-3-ansible执行后颜色描述" class="headerlink" title="3.2.3 ansible执行后颜色描述"></a>3.2.3 ansible执行后颜色描述</h3><p>默认情况下是以下三种颜色：</p>
<ul>
<li><p>绿色：表示成功  </p>
</li>
<li><p>黄色：修改了远程文件后并执行成功  </p>
</li>
<li><p>红色：表示执行失败</p>
</li>
</ul>
<p>但是在ansible配置文件中可以定义颜色，如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@ansible-server ~]# vim /etc/ansible/ansible.cfg</span><br><span class="line">[colors]</span><br><span class="line">#highlight = white</span><br><span class="line">#verbose = blue</span><br><span class="line">#warn = bright purple</span><br><span class="line">#error = red</span><br><span class="line">#debug = dark gray</span><br><span class="line">#deprecate = purple</span><br><span class="line">#skip = cyan</span><br><span class="line">#unreachable = red</span><br><span class="line">#ok = green</span><br><span class="line">#changed = yellow</span><br><span class="line">#diff_add = green</span><br><span class="line">#diff_remove = red</span><br><span class="line">#diff_lines = cyan</span><br></pre></td></tr></table></figure>

<h3 id="3-2-4-Ansible-playbook示例"><a href="#3-2-4-Ansible-playbook示例" class="headerlink" title="3.2.4 Ansible-playbook示例"></a>3.2.4 Ansible-playbook示例</h3><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">[root@ansible-server ~]# cat echo-demo.yml</span><br><span class="line">---</span><br><span class="line">- hosts: all</span><br><span class="line">  remote_user: root</span><br><span class="line">  tasks:</span><br><span class="line">    - name: echo demo</span><br><span class="line">      command: echo &quot;第一个 ansible-playbook 示例&quot;</span><br><span class="line"> </span><br><span class="line">[root@ansible-server ~]# ansible-playbook echo-demo.yml</span><br></pre></td></tr></table></figure>

<h3 id="3-2-5-ansible-vault"><a href="#3-2-5-ansible-vault" class="headerlink" title="3.2.5 ansible-vault"></a>3.2.5 ansible-vault</h3><p>该工具用于对yaml文件进行加解密，格式如下：</p>
<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">ansible-vault [create|decrypt|edit|encrypt|rekey|view]</span><br><span class="line"></span><br><span class="line">如：</span><br><span class="line">ansible-vault encrypt echo-demo.yml  # 加密</span><br><span class="line">ansible-vault view echo-demo.yml    # 查看</span><br><span class="line">ansible-vault decrypt echo-demo.yml  # 解密</span><br><span class="line">ansible-vault edit echo-demo.yml    # 编辑加密文件</span><br><span class="line">ansible-vault create echo-demo.yml  # 创建新文件</span><br></pre></td></tr></table></figure>

<p>ansible是一个简单高效且很强大的工具，它的功能远不止于此。而那些不常用的命令工具，本文也暂不介绍，学习了不用也是在浪费自己的时间。如果有兴趣的话可以去官网或者其他站点查阅资料了解更多适合自己的信息</p>
<p>一名常年穿梭于Google、阿里、百度、腾讯的一线运维从业者。是&lt;&lt;运维开发故事&gt;&gt;公众号的成员之一。不定期分享技术干货和对技术的理解与感悟。</p>
]]></content>
      <categories>
        <category>Ansible</category>
      </categories>
      <tags>
        <tag>Ansible</tag>
      </tags>
  </entry>
  <entry>
    <title>Centos7配置安装Docker</title>
    <url>/2024/04/08/Centos7%E9%85%8D%E7%BD%AE%E5%AE%89%E8%A3%85Docker/</url>
    <content><![CDATA[<h2 id="一、安装前的环境配置"><a href="#一、安装前的环境配置" class="headerlink" title="一、安装前的环境配置"></a>一、安装前的环境配置</h2><ol>
<li><h3 id="检查自己版本，必须是centos7以及以上版本-cat-etc-redhat-release"><a href="#检查自己版本，必须是centos7以及以上版本-cat-etc-redhat-release" class="headerlink" title="检查自己版本，必须是centos7以及以上版本 cat&#x2F;etc&#x2F;redhat-release"></a>检查自己版本，必须是centos7以及以上版本 cat&#x2F;etc&#x2F;redhat-release</h3></li>
<li><h3 id="卸载旧版本（如果之前没有安装过，这步可以忽略）"><a href="#卸载旧版本（如果之前没有安装过，这步可以忽略）" class="headerlink" title="卸载旧版本（如果之前没有安装过，这步可以忽略）"></a>卸载旧版本（如果之前没有安装过，这步可以忽略）</h3><ul>
<li><pre><code class="csharp">    yum remove docker \
    docker-client \
    docker-client-latest \
    docker-common \
    docker-latest \
    docker-latest-logrotate \
    docker-logrotate \
    docker-engine
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">        </span><br><span class="line">3.  ### yum 安装gcc相关</span><br><span class="line">    </span><br><span class="line">    *   在此之前,请确保你的centos7可以联网,比方说 `curl www.baidu.com`,要是能接收数据就说明可以联网</span><br><span class="line">    *   `yum -y install gcc`</span><br><span class="line">    *   `yum -y install gcc-c++`</span><br><span class="line">4.  ### 安装需要的软件包</span><br><span class="line">    </span><br><span class="line">    *   我们采用从仓库安装的方法,先安装仓库:`yum install -y yum-utils`</span><br><span class="line">5.  ### 设置镜像源</span><br><span class="line">    </span><br><span class="line">    *   设置国内的镜像源,这里以阿里云为例:`yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo`</span><br><span class="line">6.  ### 更新yum软件包索引</span><br><span class="line">    </span><br><span class="line">    *   `yum makecache fast`</span><br><span class="line"></span><br><span class="line">## 二、安装docker</span><br><span class="line"></span><br><span class="line">1.  ### 安装docker engine</span><br><span class="line">    </span><br><span class="line">    *   `yum install docker-ce docker-ce-cli http://containerd.io docker-compose-plugin`</span><br><span class="line"></span><br><span class="line">*   ![](images/1712570109-279e74ab0c6bbf3de9f37e2a5b2460d1.png)</span><br><span class="line">    </span><br><span class="line">*   输入y.就开始正常安装了。遇到需要输入的地方。就输入y</span><br><span class="line">    </span><br><span class="line">*   出现如下,则安装完毕</span><br><span class="line">    </span><br><span class="line">*   ![](images/1712570109-cdfbce589025cc7f7a2df292a2a9a450.png)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">## 三、检验</span><br><span class="line"></span><br><span class="line">1.  ### 启动docker</span><br><span class="line">    </span><br><span class="line">    *   `systemctl start docker`:启动docker,没有报错和任何提示</span><br><span class="line">    *   `docker version`:查看docker版本</span><br><span class="line"></span><br><span class="line">![](images/1712570109-179a893f9b0e6470d0c6ef4f49cc830d.png)</span><br><span class="line"></span><br><span class="line">![](images/1712570109-8c3b513272bf1a0f3f8d005e20c25b62.png)</span><br><span class="line"></span><br><span class="line">## 四、额外</span><br><span class="line"></span><br><span class="line">1.  ### 卸载</span><br><span class="line">    </span><br><span class="line">    *   ```bash</span><br><span class="line">            systemctl stop docker</span><br><span class="line">            yum remove docker-ce docker-ce-clie [http://containerd.io](https://link.zhihu.com/?target=http%3A//containerd.io)</span><br><span class="line">            rm -rf /var/lib/docker</span><br><span class="line">            rm -rf /var/lib/containerd</span><br></pre></td></tr></table></figure>
</code></pre>
</li>
</ul>
</li>
<li><h3 id="设置开机启动"><a href="#设置开机启动" class="headerlink" title="设置开机启动"></a>设置开机启动</h3><ul>
<li><code>systemctl enable docker.service</code></li>
</ul>
</li>
<li><h3 id="关闭开机启动"><a href="#关闭开机启动" class="headerlink" title="关闭开机启动"></a>关闭开机启动</h3><ul>
<li><code>systemctl disable docker.service</code></li>
</ul>
</li>
</ol>
]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>Docker</tag>
      </tags>
  </entry>
  <entry>
    <title>dataease 人人可用的开源数据可视化分析工具</title>
    <url>/2024/04/08/dataease-%E4%BA%BA%E4%BA%BA%E5%8F%AF%E7%94%A8%E7%9A%84%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="GitHub-dataease-dataease-人人可用的开源数据可视化分析工具。"><a href="#GitHub-dataease-dataease-人人可用的开源数据可视化分析工具。" class="headerlink" title="GitHub - dataease&#x2F;dataease: 人人可用的开源数据可视化分析工具。"></a>GitHub - dataease&#x2F;dataease: 人人可用的开源数据可视化分析工具。</h1><p>地址：<a href="https://github.com/dataease/dataease">https://github.com/dataease/dataease</a></p>
<p> dev-v2</p>
<p><a href="https://github.com/dataease/dataease/branches">↓↓↓</a>  </p>
<p><strong>28</strong> Branches</p>
<p><a href="https://github.com/dataease/dataease/branches">↑↑↑</a></p>
<p><a href="https://github.com/dataease/dataease/tags">↓↓↓</a>  </p>
<p><strong>68</strong> Tags</p>
<p><a href="https://github.com/dataease/dataease/tags">↑↑↑</a></p>
<p>Code</p>
<h2 id="Folders-and-files"><a href="#Folders-and-files" class="headerlink" title="Folders and files"></a>Folders and files</h2><table>
<thead>
<tr>
<th>Name</th>
<th>Last commit message</th>
<th>Last commit date</th>
</tr>
</thead>
<tbody><tr>
<td>## Latest commit<br><br><a href="https://github.com/dataeaseShu"><img src="/images/1712570853-6196a65ee19c4fc52a0e414978e78552.png" alt="dataeaseShu"></a><a href="https://github.com/dataease/dataease/commits?author=dataeaseShu">dataeaseShu</a><br><br><a href="https://github.com/dataease/dataease/commit/e90da940553c67fab65e6de2c685eecbd8578ab1">Merge pull request</a> <a href="https://github.com/dataease/dataease/pull/8997">#8997</a> <a href="https://github.com/dataease/dataease/commit/e90da940553c67fab65e6de2c685eecbd8578ab1">from dataease&#x2F;pr@dev-v2_bug_fix</a><br><br><a href="https://github.com/dataease/dataease/commit/e90da940553c67fab65e6de2c685eecbd8578ab1">e90da94</a> · 38 minutes ago<br><br>## History<br><br><a href="https://github.com/dataease/dataease/commits/dev-v2/">12,248 Commits</a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/.github" title=".github">.github</a></td>
<td><a href="https://github.com/dataease/dataease/commit/753ae3c67a5b2625eda89d8305e86f92029962ca" title="Update issue templates">Update issue templates</a></td>
<td>3 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/core" title="core">core</a></td>
<td><a href="https://github.com/dataease/dataease/commit/53c9d9e97081c1b5677997917d25a0f8c5d9bd3a" title="feat(数据集): 增加数据集修改后不保存点返回按钮 二次确认提示  #8853">feat(数据集): 增加数据集修改后不保存点返回按钮 二次确认提示</a> <a href="https://github.com/dataease/dataease/issues/8853">#8853</a></td>
<td>39 minutes ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/de-xpack/tree/1efcffd692bdba82e2db3450a960d873d7e0488d" title="de-xpack">de-xpack @ 1efcffd</a></td>
<td><a href="https://github.com/dataease/dataease/commit/de806dda9769310f5c54a812dd64edc3f923cb1d" title="perf(X-Pack): 拼写错误">perf(X-Pack): 拼写错误</a></td>
<td>5 days ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/drivers" title="drivers">drivers</a></td>
<td><a href="https://github.com/dataease/dataease/commit/a482d8d2c320d122386259529848b394cc67070e" title="refactor: 增加数据源驱动包">refactor: 增加数据源驱动包</a></td>
<td>6 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/installer" title="installer">installer</a></td>
<td><a href="https://github.com/dataease/dataease/commit/56dc6746045a89cb317583c262daa7eb86fe87ad" title="refactor: 更新 MySQL 版本 8.1.0 -&gt; 8.3.0">refactor: 更新 MySQL 版本 8.1.0 -&gt; 8.3.0</a></td>
<td>last week</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/mapFiles" title="mapFiles">mapFiles</a></td>
<td><a href="https://github.com/dataease/dataease/commit/afd05faf63cc9be55d35088a4114ef10472ba1a9" title="refactor: 初始化dev-v2">refactor: 初始化dev-v2</a></td>
<td>6 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/sdk" title="sdk">sdk</a></td>
<td><a href="https://github.com/dataease/dataease/commit/c635333064a0ec7dd9db692a762d825a9386cd09" title="Merge pull request #8992 from dataease/pr@dev-v2@feat_share_pwd_enhance&lt;br&gt;feat: 分享功能密码增强close #8593">Merge pull request</a> <a href="https://github.com/dataease/dataease/pull/8992">#8992</a> <a href="https://github.com/dataease/dataease/commit/c635333064a0ec7dd9db692a762d825a9386cd09" title="Merge pull request #8992 from dataease/pr@dev-v2@feat_share_pwd_enhance&lt;br&gt;feat: 分享功能密码增强close #8593">from dataease&#x2F;pr@dev-v2@feat_share_pwd_enhance</a></td>
<td>4 hours ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/tree/dev-v2/staticResource" title="staticResource">staticResource</a></td>
<td><a href="https://github.com/dataease/dataease/commit/afd05faf63cc9be55d35088a4114ef10472ba1a9" title="refactor: 初始化dev-v2">refactor: 初始化dev-v2</a></td>
<td>6 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/.gitattributes" title=".gitattributes">.gitattributes</a></td>
<td><a href="https://github.com/dataease/dataease/commit/dd1bff102f87b36247208a79eca27f0e79d99cb5" title="Update .gitattributes">Update .gitattributes</a></td>
<td>4 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/.gitignore" title=".gitignore">.gitignore</a></td>
<td><a href="https://github.com/dataease/dataease/commit/75cfcd49415c96441857fce90e05a8315f8d7c66" title="feat: 模版菜单">feat: 模版菜单</a></td>
<td>5 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/.gitmodules" title=".gitmodules">.gitmodules</a></td>
<td><a href="https://github.com/dataease/dataease/commit/58e7aa1cead7a208fcfb86fd8464b2adb9006efe" title="refactor: 挂载子模块">refactor: 挂载子模块</a></td>
<td>6 months ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/.typos.toml" title=".typos.toml">.typos.toml</a></td>
<td><a href="https://github.com/dataease/dataease/commit/bd302b14a726e96ac0e9d85ca7b24d26a031a782" title="fix: typos">fix: typos</a></td>
<td>last week</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/CODE_OF_CONDUCT.md" title="CODE_OF_CONDUCT.md">CODE_OF_CONDUCT.md</a></td>
<td><a href="https://github.com/dataease/dataease/commit/7f8ded16c6b1813de3604090ccbd215883820eb4" title="docs: add CODE_OF_CONDUCT.md">docs: add CODE_OF_CONDUCT.md</a></td>
<td>2 years ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/CONTRIBUTING.md" title="CONTRIBUTING.md">CONTRIBUTING.md</a></td>
<td><a href="https://github.com/dataease/dataease/commit/6278f8b4a23fc7014ccdfc8322419015d47fe9b4" title="fix typo">fix typo</a></td>
<td>2 years ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/Dockerfile" title="Dockerfile">Dockerfile</a></td>
<td><a href="https://github.com/dataease/dataease/commit/ce2dcc377b7233106a976c0895f7c63ee677dfdd" title="perf: 容器状态检测使用nc命令">perf: 容器状态检测使用nc命令</a></td>
<td>5 days ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/LICENSE" title="LICENSE">LICENSE</a></td>
<td><a href="https://github.com/dataease/dataease/commit/514ef4008b2755238709b59662989f5e548edc50" title="Create LICENSE">Create LICENSE</a></td>
<td>3 years ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/README.md" title="README.md">README.md</a></td>
<td><a href="https://github.com/dataease/dataease/commit/adf8ac91134ef7e364ffa208f56279f812fce2c7" title="chore：README 增加模版市场链接">chore：README 增加模版市场链接</a></td>
<td>3 weeks ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/SECURITY.md" title="SECURITY.md">SECURITY.md</a></td>
<td><a href="https://github.com/dataease/dataease/commit/6278f8b4a23fc7014ccdfc8322419015d47fe9b4" title="fix typo">fix typo</a></td>
<td>2 years ago</td>
</tr>
<tr>
<td>### <br><br><a href="https://github.com/dataease/dataease/blob/dev-v2/pom.xml" title="pom.xml">pom.xml</a></td>
<td><a href="https://github.com/dataease/dataease/commit/29ae4c563bea8e7e1b917ffc6e329e0bbcb42a16" title="refactor: 单一数据源的数据集、图表使用对应数据库语法和函数">refactor: 单一数据源的数据集、图表使用对应数据库语法和函数</a></td>
<td>7 hours ago</td>
</tr>
</tbody></table>
<h2 id="Repository-files-navigation"><a href="#Repository-files-navigation" class="headerlink" title="Repository files navigation"></a>Repository files navigation</h2><ul>
<li><a href="#">README</a></li>
<li><a href="#">Code of conduct</a></li>
<li><a href="#">GPL-3.0 license</a></li>
<li><a href="#">Security</a></li>
</ul>
<p><a href="https://dataease.io/"><img src="/images/1712570853-c0821b978ecafd8fd3b13f88522d4c4c.png" alt="DataEase"></a></p>
<h3 id="人人可用的开源数据可视化分析工具"><a href="#人人可用的开源数据可视化分析工具" class="headerlink" title="人人可用的开源数据可视化分析工具"></a>人人可用的开源数据可视化分析工具</h3><p><a href="#%E4%BA%BA%E4%BA%BA%E5%8F%AF%E7%94%A8%E7%9A%84%E5%BC%80%E6%BA%90%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96%E5%88%86%E6%9E%90%E5%B7%A5%E5%85%B7"></a></p>
<p><a href="https://www.gnu.org/licenses/gpl-3.0.html"><img src="/images/1712570853-4cc34ca26f933df0d71ede96246f9247.svg" alt="License: GPL v3"></a> <a href="https://app.codacy.com/gh/dataease/dataease?utm_source=github.com&utm_medium=referral&utm_content=dataease/dataease&utm_campaign=Badge_Grade_Dashboard"><img src="/images/1712570853-6a364a2435285a8f3a50d11ed6dcf077.svg" alt="Codacy"></a> <a href="https://github.com/dataease/dataease"><img src="/images/1712570853-b7f9ba234c22c372f29e95b2526bc4a9.svg" alt="Stars"></a></p>
<h2 id="什么是-DataEase？"><a href="#什么是-DataEase？" class="headerlink" title="什么是 DataEase？"></a>什么是 DataEase？</h2><p><a href="#%E4%BB%80%E4%B9%88%E6%98%AF-dataease"></a></p>
<p>DataEase 是开源的数据可视化分析工具，帮助用户快速分析数据并洞察业务趋势，从而实现业务的改进与优化。DataEase 支持丰富的数据源连接，能够通过拖拉拽方式快速制作图表，并可以方便的与他人分享。</p>
<p><a href="https://private-user-images.githubusercontent.com/41712985/287496081-f951e258-a328-43a9-aa37-ee470d37ed63.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3MTI1NjkzMTAsIm5iZiI6MTcxMjU2OTAxMCwicGF0aCI6Ii80MTcxMjk4NS8yODc0OTYwODEtZjk1MWUyNTgtYTMyOC00M2E5LWFhMzctZWU0NzBkMzdlZDYzLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNDA0MDglMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjQwNDA4VDA5MzY1MFomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTgxMmFjYzRiM2E4OTZhYmY1OGVmY2JlNzE1MWVjMjI4MWRhNzcyYTViZWQ5MmE0ZTgzYzk2Zjk2MmRlN2ZkNWUmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0JmFjdG9yX2lkPTAma2V5X2lkPTAmcmVwb19pZD0wIn0.XwK5nnuwqzJ_7_qnc4PXv2e3yJv1ReQXApoqsfEK_yQ"><img src="/images/1712570853-40b050361247d49f493054ee9086fed1.png" alt="DataEase 概览图"></a></p>
<p><strong>DataEase 的优势：</strong></p>
<ul>
<li>开源开放：零门槛，线上快速获取和安装，按月迭代；</li>
<li>简单易用：极易上手，通过鼠标点击和拖拽即可完成分析；</li>
<li>全场景支持：多平台安装和多样化嵌入支持；</li>
<li>安全分享：支持多种数据分享方式，确保数据安全。</li>
</ul>
<p><strong>DataEase 支持的数据源：</strong></p>
<p><a href="https://camo.githubusercontent.com/d3f3e4142e67f1c4549fc36b4337330938efa6a32f799da89b8901f16d91a508/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f657863656c2e6a7067"><img src="/images/1712570853-5925a2f61655a50b4b3601be19a68d85.jpg" alt="excel"></a> <a href="https://camo.githubusercontent.com/c03c1e296bae3a4464defbc1e23b433f785201193b85376109145f1733bdd19a/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f6d7973716c2e706e67"><img src="/images/1712570853-d1a87d834412883cdaca0f1a4c5a3154.png" alt="mysql"></a> <a href="https://camo.githubusercontent.com/838d00dd0478aa19bc6be0aa17cd8d571a597f95aa47393a73c0693e47bad77f/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f6f7261636c652e6a7067"><img src="/images/1712570853-d350a72953e3747a4bf07e2604deac71.jpg" alt="oracle"></a> <a href="https://camo.githubusercontent.com/4d57ef63962b34757282bfa6ab1b44f3dd7e98834e90c76d1c987ffde49ee41e/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f73716c73657276656c2e6a7067"><img src="/images/1712570853-b08a4c2865752895f7eaa1a8ec560942.jpg" alt="sqlserver"></a> <a href="https://camo.githubusercontent.com/f34a85c4f46f4b8a561199c2e4e82603c3ca9f18001503310be25a0f6832d1f6/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f6d6172696164622e6a7067"><img src="/images/1712570853-4866c4c5c84d17f2f2523ada036d7d04.jpg" alt="mariadb"></a> <a href="https://camo.githubusercontent.com/27e8428b424e8c1707fe814e8c913f9ce50488389dfe53b326af10ff5c5f71aa/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f636c69636b686f7573652e6a7067"><img src="/images/1712570853-a7bae0fc97ea5e11c72ebf7720b77ebd.jpg" alt="clickhouse"></a> <a href="https://camo.githubusercontent.com/8d65e80efeaccf6d1d1792a31414a13d3e1eade11f2baadc84ffd6b70a4caa9b/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f646f7269732e6a7067"><img src="/images/1712570853-188d9902e26179e31eca677b838e928f.jpg" alt="doris"></a> <a href="https://camo.githubusercontent.com/c5efbaff96647f83c0d5b70bc3636274214f689f984bb9ade8d55e09d95a254b/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f6d6f6e676f64622e6a7067"><img src="/images/1712570853-1ce77e231ec932152dca936700cd511c.jpg" alt="mongodb"></a> <a href="https://camo.githubusercontent.com/83e2391b8382b9f3edb81721a2d3d0eb4f1fc4de46c6a6ed99ac3db3822c01bd/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f72656473686966742e6a7067"><img src="/images/1712570853-6322c42e9372365d83365c58172348c1.jpg" alt="redshift"></a> <a href="https://camo.githubusercontent.com/9a8ff8d0ccd844531dabe6ea89266ffdf81ddfe7629aff460bd068e71fd292b0/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f4442322e6a7067"><img src="/images/1712570853-5a4aabde39475a8d57ec2d0adbdc245b.jpg" alt="DB2"></a> <a href="https://camo.githubusercontent.com/952965a3794be355955943eeeadfaef7d5a9bb29a7789d4b48097279d418fc07/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f546944422e6a7067"><img src="/images/1712570853-492aeb5c02dcea0d4d7b3d158b660ff3.jpg" alt="TiDB"></a> <a href="https://camo.githubusercontent.com/6faf54305f84871bc63eedd801054d02ddd2795b4f62ef53aba6d74d36e51d8b/68747470733a2f2f64617461656173652e696f2f696d616765732f64617461536f757263652f53746172526f636b732e6a7067"><img src="/images/1712570853-73d535af1cc41c31c10ec7aa7f379215.jpg" alt="StarRocks"></a></p>
<p><strong>DataEase 的技术栈：</strong></p>
<ul>
<li>前端：<a href="https://vuejs.org/">Vue.js</a>、<a href="https://element.eleme.cn/">Element</a></li>
<li>图库：<a href="https://antv.vision/zh">AntV</a></li>
<li>后端：<a href="https://spring.io/projects/spring-boot">Spring Boot</a></li>
<li>数据库：<a href="https://www.mysql.com/">MySQL</a></li>
<li>数据处理：<a href="https://github.com/apache/calcite/">Apache Calcite</a>、<a href="https://github.com/apache/seatunnel">Apache SeaTunnel</a></li>
<li>基础设施：<a href="https://www.docker.com/">Docker</a></li>
</ul>
<h2 id="DataEase-快速入门"><a href="#DataEase-快速入门" class="headerlink" title="DataEase 快速入门"></a>DataEase 快速入门</h2><p><a href="#dataease-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8"></a></p>
<ul>
<li><a href="https://dataease.io/docs/">在线文档</a></li>
<li><a href="https://bbs.fit2cloud.com/c/de/6">社区论坛</a></li>
<li><a href="https://www.bilibili.com/video/BV1Z84y1X7eF/">快速入门视频</a></li>
<li><a href="https://embedded-bi.dataease.cn/">嵌入式 BI 体验</a></li>
<li><a href="https://dataease.io/docs/v2/installation/deployment_installation/">源码部署指南</a></li>
<li><a href="https://templates.dataease.cn/">模版市场</a></li>
</ul>
<h2 id="License"><a href="#License" class="headerlink" title="License"></a>License</h2><p><a href="#license"></a></p>
<p>Copyright (c) 2014-2024 <a href="https://fit2cloud.com/">FIT2CLOUD 飞致云</a>, All rights reserved.</p>
<p>Licensed under The GNU General Public License version 3 (GPLv3) (the “License”); you may not use this file except in compliance with the License. You may obtain a copy of the License at</p>
<p><a href="https://www.gnu.org/licenses/gpl-3.0.html">https://www.gnu.org/licenses/gpl-3.0.html</a></p>
<p>Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an “AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.</p>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>极客时间课程下载器</title>
    <url>/2024/04/09/%E6%9E%81%E5%AE%A2%E6%97%B6%E9%97%B4%E8%AF%BE%E7%A8%8B%E4%B8%8B%E8%BD%BD%E5%99%A8/</url>
    <content><![CDATA[<h1 id="GitHub-nicoxiang-geektime-downloader-极客时间课程下载器，支持下载极客时间专栏-视频课-每日一课-大厂实践-训练营视频"><a href="#GitHub-nicoxiang-geektime-downloader-极客时间课程下载器，支持下载极客时间专栏-视频课-每日一课-大厂实践-训练营视频" class="headerlink" title="GitHub - nicoxiang&#x2F;geektime-downloader: 极客时间课程下载器，支持下载极客时间专栏&#x2F;视频课&#x2F;每日一课&#x2F;大厂实践&#x2F;训练营视频"></a>GitHub - nicoxiang&#x2F;geektime-downloader: 极客时间课程下载器，支持下载极客时间专栏&#x2F;视频课&#x2F;每日一课&#x2F;大厂实践&#x2F;训练营视频</h1><p>地址：<a href="https://github.com/nicoxiang/geektime-downloader">https://github.com/nicoxiang/geektime-downloader</a></p>
<h1 id="geektime-downloader"><a href="#geektime-downloader" class="headerlink" title="geektime-downloader"></a>geektime-downloader</h1><p><a href="#geektime-downloader"></a></p>
<p>geektime-downloader 支持下载极客时间专栏(PDF&#x2F;Markdown&#x2F;音频)&#x2F;视频课&#x2F;每日一课&#x2F;大厂实践&#x2F;训练营视频。</p>
<p><a href="https://goreportcard.com/report/github.com/nicoxiang/geektime-downloader"><img src="/assets/1712628213-6511881bc11d1f8ee4629d0a8bc3ffeb.svg" alt="go report card" title="go report card"></a> <a href="https://opensource.org/licenses/MIT"><img src="/assets/1712628213-f13b63c3d509eb02244aa1f2853b59d1.svg" alt="MIT license"></a></p>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><p><a href="#usage"></a></p>
<h3 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h3><p><a href="#prerequisites"></a></p>
<ul>
<li>Chrome installed</li>
</ul>
<h3 id="Install-form-source"><a href="#Install-form-source" class="headerlink" title="Install form source"></a>Install form source</h3><p><a href="#install-form-source"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Go 1.16+</span><br><span class="line">go install github.com/nicoxiang/geektime-downloader@latest</span><br><span class="line"></span><br><span class="line"># Go version &lt; 1.16</span><br><span class="line">go get -u github.com/nicoxiang/geektime-downloader@latest</span><br></pre></td></tr></table></figure>

<h3 id="Download-binary-files"><a href="#Download-binary-files" class="headerlink" title="Download binary files"></a>Download binary files</h3><p><a href="#download-binary-files"></a></p>
<p>See <a href="https://github.com/nicoxiang/geektime-downloader/releases">release page</a></p>
<h3 id="Sample"><a href="#Sample" class="headerlink" title="Sample"></a>Sample</h3><p><a href="#sample"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Windows 为例</span><br><span class="line">## Windows 推荐使用 Windows Terminal 打开</span><br><span class="line"></span><br><span class="line">## 账号密码方式登录（常用）</span><br><span class="line">&gt; geektime-downloader.exe -u &quot;phone number&quot;</span><br><span class="line">## cookie 方式登录</span><br><span class="line">&gt; geektime-downloader.exe --gcid &quot;gcid&quot; --gcess &quot;gcess&quot;</span><br></pre></td></tr></table></figure>

<h3 id="Help"><a href="#Help" class="headerlink" title="Help"></a>Help</h3><p><a href="#help"></a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Windows 为例</span><br><span class="line">&gt; geektime-downloader.exe -h</span><br><span class="line"></span><br><span class="line">Geektime-downloader is used to download geek time lessons</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  geektime-downloader [flags]</span><br><span class="line"></span><br><span class="line">Flags:</span><br><span class="line">      --comments         是否需要专栏的第一页评论 (default true)</span><br><span class="line">  -f, --folder string    专栏和视频课的下载目标位置 (default &quot;&quot;)</span><br><span class="line">      --gcess string     极客时间 cookie 值 gcess</span><br><span class="line">      --gcid string      极客时间 cookie 值 gcid</span><br><span class="line">  -h, --help             help for geektime-downloader</span><br><span class="line">      --output int       专栏的输出内容(1pdf,2markdown,4audio)可自由组合 (default 1)</span><br><span class="line">  -u, --phone string     你的极客时间账号(手机号)</span><br><span class="line">  -q, --quality string   下载视频清晰度(ld标清,sd高清,hd超清) (default &quot;sd&quot;)</span><br><span class="line">      --wait-seconds int   Chrome生成PDF前的等待页面加载时间, 单位为秒, 默认8秒 (default 8)</span><br></pre></td></tr></table></figure>

<h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p><a href="#note"></a></p>
<h3 id="文件下载目标位置"><a href="#文件下载目标位置" class="headerlink" title="文件下载目标位置"></a>文件下载目标位置</h3><p><a href="#%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E7%9B%AE%E6%A0%87%E4%BD%8D%E7%BD%AE"></a></p>
<p>文件下载目标位置可以通过 help 查看。默认情况下 Windows 位于 %USERPROFILE%&#x2F;geektime-downloader 下；Unix, 包括 macOS, 位于 $HOME&#x2F;geektime-downloader 下</p>
<h3 id="如何查看课程-ID"><a href="#如何查看课程-ID" class="headerlink" title="如何查看课程 ID?"></a>如何查看课程 ID?</h3><p><a href="#%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E8%AF%BE%E7%A8%8B-id"></a></p>
<p><strong>普通课程：</strong></p>
<p>打开极客时间<a href="https://time.geekbang.org/resource">课程列表页</a>，选择你想要查看的课程，在新打开的课程详情 Tab 页，查看 URL 最后的数字，例如下面的链接中 100056701 就是课程 ID：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://time.geekbang.org/column/intro/100056701</span><br></pre></td></tr></table></figure>

<p><strong>训练营课程：</strong></p>
<p>打开极客时间<a href="https://u.geekbang.org/schedule">训练营课程列表页</a>，选择你想要查看的课程，在新打开的课程详情 Tab 页，查看 URL <code>lesson/</code>后的数字，例如下面的链接中 419 就是课程 ID：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://u.geekbang.org/lesson/419?article=535616</span><br></pre></td></tr></table></figure>

<p><strong>每日一课课程：</strong></p>
<p>选择你想要下载的视频，查看 URL <code>dailylesson/detail/</code>后的数字，例如下面的链接中 100122405 就是课程 ID：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://time.geekbang.org/dailylesson/detail/100122405</span><br></pre></td></tr></table></figure>

<p><strong>大厂案例课程：</strong></p>
<p>选择你想要下载的视频，查看 URL <code>qconplus/detail/</code>后的数字，例如下面的链接中 100110494 就是课程 ID：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://time.geekbang.org/qconplus/detail/100110494</span><br></pre></td></tr></table></figure>

<p><strong>公开课课程：</strong></p>
<p>选择你想要下载的视频，查看 URL <code>opencourse/intro/</code> 或 <code>opencourse/videointro/</code>后的数字，例如下面的链接中 100546701 就是课程 ID：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://time.geekbang.org/opencourse/videointro/100546701</span><br></pre></td></tr></table></figure>

<p><strong>其他：</strong></p>
<p>打开极客时间<a href="https://time.geekbang.org/dashboard/course">我的课程-其他</a>，选择你想要查看的会议，在新打开的会议详情 Tab 页，查看 URL <code>course/intro/</code> 最后的数字，例如下面的链接中 100551201 就是课程 ID：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://time.geekbang.org/course/intro/100551201</span><br></pre></td></tr></table></figure>

<h3 id="为什么我下载的PDF是空白页"><a href="#为什么我下载的PDF是空白页" class="headerlink" title="为什么我下载的PDF是空白页?"></a>为什么我下载的PDF是空白页?</h3><p><a href="#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E4%B8%8B%E8%BD%BD%E7%9A%84pdf%E6%98%AF%E7%A9%BA%E7%99%BD%E9%A1%B5"></a></p>
<p>首先下载课程请保证VPN已关闭。在此前提下如果仍然出现空白页情况，说明后台Chrome网页加载速度较慢，可以尝试加大–wait-seconds参数，保证页面完全加载完成后再开始生成PDF。</p>
<h3 id="如何下载专栏的-Markdown-格式和文章音频"><a href="#如何下载专栏的-Markdown-格式和文章音频" class="headerlink" title="如何下载专栏的 Markdown 格式和文章音频?"></a>如何下载专栏的 Markdown 格式和文章音频?</h3><p><a href="#%E5%A6%82%E4%BD%95%E4%B8%8B%E8%BD%BD%E4%B8%93%E6%A0%8F%E7%9A%84-markdown-%E6%A0%BC%E5%BC%8F%E5%92%8C%E6%96%87%E7%AB%A0%E9%9F%B3%E9%A2%91"></a></p>
<p>默认情况下载专栏的输出内容只有 PDF，可以通过 –output 参数按需选择是否需要下载 Markdown 格式和文章音频。比如 –output 3 就是下载 PDF 和 Markdown；–output 6 就是下载 Markdown 和音频；–output 7 就是下载所有。</p>
<p>Markdown 格式虽然显示效果上不及 PDF，但优势为可以显示完整的代码块（PDF 代码块在水平方向太长时会有缺失）并保留了原文中的超链接。</p>
<p>现在部分新课程的专栏文章中会包含视频，如课程《Kubernetes 入门实战课》等，目前程序会自动下载文章所包含的视频，视频目录在文章所在目录的子目录 videos 下，此类文章PDF的下载会耗费更多时间，请耐心等待。</p>
<h3 id="退出程序和继续下载"><a href="#退出程序和继续下载" class="headerlink" title="退出程序和继续下载"></a>退出程序和继续下载</h3><p><a href="#%E9%80%80%E5%87%BA%E7%A8%8B%E5%BA%8F%E5%92%8C%E7%BB%A7%E7%BB%AD%E4%B8%8B%E8%BD%BD"></a></p>
<p>Ctrl + C 退出程序。如果选择“下载所有”后中断程序，可重新进入程序继续下载。</p>
<h3 id="隐私相关"><a href="#隐私相关" class="headerlink" title="隐私相关"></a>隐私相关</h3><p><a href="#%E9%9A%90%E7%A7%81%E7%9B%B8%E5%85%B3"></a></p>
<p>通过密码登录的情况下，为了避免多次登录账户，会在目录 <a href="https://pkg.go.dev/os#UserConfigDir">UserConfigDir</a>&#x2F;geektime-downloader 下存放用户的登录 cookie，如果不是在自己的电脑上执行，建议在使用完毕程序后手动删除</p>
]]></content>
      <categories>
        <category>Github</category>
      </categories>
      <tags>
        <tag>Github</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana相关功能使用介绍</title>
    <url>/2024/04/10/Grafana%E7%9B%B8%E5%85%B3%E5%8A%9F%E8%83%BD%E4%BD%BF%E7%94%A8%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h3 id="一、grafana版本升级"><a href="#一、grafana版本升级" class="headerlink" title="一、grafana版本升级"></a>一、grafana版本升级</h3><h4 id="1-1-还是先跟着官网简单走一波"><a href="#1-1-还是先跟着官网简单走一波" class="headerlink" title="1.1  还是先跟着官网简单走一波"></a>1.1  还是先跟着官网简单走一波</h4><p>      建议经常升级Grafana，以获取最新的修补程序和增强功能。 为了实现这一点，Grafana升级向后兼容，并且升级过程简单快捷。升级通常是安全的（在许多次要版本和一个主要版本之间），并且仪表板和图形看起来相同。 在某些情况下，可能会有一些小的重大更改，如发行说明和变更日志中所述（<a href="https://github.com/grafana/grafana/blob/master/CHANGELOG.md%EF%BC%89%E3%80%82">https://github.com/grafana/grafana/blob/master/CHANGELOG.md）。</a></p>
<p>更新插件：</p>
<p>     升级后，强烈建议更新所有插件，因为新版本的Grafana会使旧插件停止正常工作。可以使用更新所有插件：grafana-cli plugins update-all</p>
<p>数据库备份：</p>
<p>      在升级之前，最好备份你的Grafana数据库。 这将确保你始终可以回滚到以前的版本。 在启动过程中，Grafana将自动迁移数据库架构（如果有更改或新表）。 有时，如果你以后要降级，可能会导致问题。</p>
<p>sqlite：</p>
<p>      如果使用sqlite，则只需备份grafana.db文件。它通常位于Unix系统上的&#x2F;var&#x2F;lib&#x2F;grafana&#x2F;grafana.db中。 如果不确定使用哪个数据库以及将其存储在哪里，请检查grafana配置文件。 如果使用二进制tar&#x2F;zip将grafana安装到自定义位置，则通常在&lt;grafana_install_dir&gt;&#x2F;data中。</p>
<p>mysql：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">backup:</span><br><span class="line">&gt; mysqldump -u root -p[root_password] [grafana] &gt; grafana_backup.sql</span><br><span class="line">restore:</span><br><span class="line">&gt; mysql -u root -p grafana &lt; grafana_backup.sql</span><br></pre></td></tr></table></figure>

<p>postgres：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">backup:</span><br><span class="line">&gt; pg_dump grafana &gt; grafana_backup</span><br><span class="line">restore:</span><br><span class="line">&gt; psql grafana &lt; grafana_backup</span><br></pre></td></tr></table></figure>

<p>升级：</p>
<p>      升级到v6.0。如果你有带有script tags的文本面板，则由于新设置（默认情况下不允许未经处理的HTML），它们将不再起作用。</p>
<p>从二进制.tar文件升级：</p>
<p>     如果下载了二进制.tar.gz软件包，则只需下载并解压缩新软件包并覆盖所有现有文件即可。但是，这可能会覆盖你的配置更改。建议你将自定义配置更改保存在名为&lt;grafana_install_dir&gt;&#x2F;conf&#x2F;custom.ini的文件中。 这使你可以升级Grafana，而不必担心丢失配置更改。</p>
<p>Centos &#x2F; RHEL：</p>
<p>      如果通过下载RPM软件包安装了Grafana，则只需遵循相同的安装指南并执行相同的yum install或rpm -i命令，但使用新软件包即可。它将升级你的Grafana安装包。如果你使用了grafana的YUM存储库：sudo yum update grafana</p>
<p>Docker：</p>
<p>     这只是一个示例，详细信息取决于你配置grafana容器的方式。</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull grafana</span><br><span class="line">docker stop my-grafana-container</span><br><span class="line">docker rm my-grafana-container</span><br><span class="line">docker run --name=my-grafana-container --restart=always -v /var/lib/grafana:/var/lib/grafana</span><br></pre></td></tr></table></figure>

<h4 id="1-2-实践升级一下"><a href="#1-2-实践升级一下" class="headerlink" title="1.2  实践升级一下"></a>1.2  实践升级一下</h4><p>#说是实践升级一下，其实咱们已经看了上面的介绍升级还是很简单的。我是编译安装的，我就按照编译安装的升级方式来了。</p>
<p><img src="/images/1712713881-274efc6148d6fbcebb9520c1ec64edad.png" alt="image.png"></p>
<p>#从上图可以看到我都是软连接的方式，所以我升级就是下载软件包解压然后拷贝过来相关的目录然后重启下服务就行。</p>
<p>#首先是数据库的保存上面有，选择了什么类型的数据库就保存一下以防万一。</p>
<p># tar zxf grafana-6.5.2.linux-amd64.tar.gz</p>
<p>#kill -9 `ps -aux|grep grafana.ini|grep -v grep|awk {‘print $2’}`</p>
<p>#ln -snf grafana-6.5.2 grafana</p>
<p>#cp -f  grafana-6.3.5&#x2F;conf&#x2F;grafana.ini  grafana&#x2F;conf&#x2F;</p>
<p># cp grafana-6.3.5&#x2F;conf&#x2F;ldap.toml  grafana&#x2F;conf&#x2F;   #如果做了ldap的认证还要做这步操作</p>
<p>#cp -rf grafana-6.3.5&#x2F;data grafana&#x2F;</p>
<p>#&#x2F;application&#x2F;grafana&#x2F;bin&#x2F;grafana-cli plugins update-all</p>
<p>#cd &#x2F;application&#x2F;grafana&#x2F; &amp;&amp; .&#x2F;bin&#x2F;grafana-server -config .&#x2F;conf&#x2F;grafana.ini &amp;</p>
<p>#再打开grafana就可以看到升级成最新版了，这个就不截图了。</p>
<h3 id="二、Grafana高可用"><a href="#二、Grafana高可用" class="headerlink" title="二、Grafana高可用"></a>二、Grafana高可用</h3><h4 id="2-1-还是先跟着官网翻译一波"><a href="#2-1-还是先跟着官网翻译一波" class="headerlink" title="2.1 还是先跟着官网翻译一波"></a>2.1 还是先跟着官网翻译一波</h4><p>       设置Grafana以获得高可用性非常简单。 只需要一个共享数据库来存储仪表板，用户和其他持久数据。 因此，默认的嵌入式SQLite数据库将无法工作，将不得不切换到MySQL或Postgres。</p>
<p><img src="/images/1712713881-5efcba116d9fd75758deec43c16a31ca.png" alt="image.png"></p>
<p>Alerting：</p>
<p>当前，警报支持有限形式的高可用性。 从v4.2.0开始，运行多个服务器时将删除警报通知。这意味着所有警报都在每台服务器上执行，但是警报通知每个警报仅发送一次。 Grafana不支持服务器之间的负载分配。</p>
<p>User sessions：</p>
<p>        在Grafana 6.2之后，无需配置会话存储，因为默认情况下将使用该数据库。 如果要从数据库中卸载登录会话数据，则可以配置remote_cache。</p>
<p>        要考虑的第二件事是如何处理用户会话以及如何在Grafana前面配置负载均衡器。 Grafana支持两种存储会话数据的方式：本地存储在磁盘上或数据库&#x2F;缓存服务器中。 如果要将会话存储在磁盘上，则可以在负载均衡器中使用Sticky会话。 如果希望将会话数据存储在数据库&#x2F;缓存服务器中，则可以在负载均衡器中使用任何无状态路由策略（轮循或最少连接）。</p>
<p>Sticky sessions：</p>
<p>       使用粘性会话，一个用户的所有流量将始终发送到同一服务器。 这意味着与会话相关的数据可以存储在磁盘上，而不是存储在共享数据库上。 这是Grafana的默认行为，如果只希望多个服务器进行故障转移，则这是一个很好的解决方案，因为它需要的工作量最少。</p>
<p>Stateless sessions：</p>
<p>      还可以选择将会话数据存储在Redis&#x2F;Memcache&#x2F;Postgres&#x2F;MySQL中,这意味着负载均衡器可以将用户发送到任何Grafana服务器，而无需登录每个服务器。 这需要操作员多做一些工作，但使你能够删除&#x2F;添加grafana服务器而不会影响用户体验。 如果你使用MySQL&#x2F;Postgres进行会话存储，则首先需要一个表来存储会话数据。</p>
<p>     对于Grafana本身，将会话数据存储在磁盘还是数据库&#x2F;redis&#x2F;memcache上并不重要。但是建议使用数据库&#x2F;redis &#x2F;memcache，因为它可以更轻松地管理grafana服务器。</p>
<h4 id="2-2-实践配置一下"><a href="#2-2-实践配置一下" class="headerlink" title="2.2 实践配置一下"></a>2.2 实践配置一下</h4><p>首先要配置使用mysql数据库：</p>
<p>Bash</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line">[database]</span><br><span class="line"># You can configure the database connection <span class="keyword">by</span> specifying type, host, name, user <span class="built_in">and</span> password</span><br><span class="line"># <span class="keyword">as</span> separate properties <span class="built_in">or</span> <span class="keyword">as</span> <span class="keyword">on</span> <span class="type">string</span> <span class="keyword">using</span> the url <span class="keyword">property</span>.</span><br><span class="line"></span><br><span class="line"># Either <span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;postgres&quot;</span> <span class="built_in">or</span> <span class="string">&quot;sqlite3&quot;</span>, it<span class="comment">&#x27;s your choice</span></span><br><span class="line">type = mysql</span><br><span class="line">host = <span class="number">192.168</span>.<span class="number">1.101</span></span><br><span class="line">name = grafana</span><br><span class="line">user = grafana</span><br><span class="line"># <span class="keyword">If</span> the password contains # <span class="built_in">or</span> ; you have <span class="keyword">to</span> wrap it <span class="keyword">with</span> triple quotes. Ex <span class="string">&quot;&quot;&quot;#password;&quot;&quot;&quot;</span></span><br><span class="line">password = grafana</span><br></pre></td></tr></table></figure>

<p>#上面的配置很好理解哈，选择数据库类型为mysql类型，选择数据库的地址和用户名和密码，然后启动grafana就可以了，相关表会自动创建：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;use grafana;</span><br><span class="line">&gt;show tables;   #可以看到下面生成了很多表</span><br><span class="line">alert</span><br><span class="line">alert_notification</span><br><span class="line">alert_notification_state</span><br><span class="line">alert_rule_tag</span><br><span class="line">annotation</span><br><span class="line">annotation_tag</span><br><span class="line">api_key</span><br><span class="line">cache_data</span><br><span class="line">dashboard</span><br><span class="line">dashboard_acl</span><br><span class="line">dashboard_provisioning</span><br><span class="line">dashboard_snapshot</span><br><span class="line">dashboard_tag</span><br><span class="line">dashboard_version</span><br><span class="line">data_source</span><br><span class="line">login_attempt</span><br><span class="line">migration_log</span><br><span class="line">org</span><br><span class="line">org_user</span><br><span class="line">playlist</span><br><span class="line">playlist_item</span><br><span class="line">plugin_setting</span><br><span class="line">preferences</span><br><span class="line">quota</span><br><span class="line">server_lock</span><br><span class="line">session</span><br><span class="line">star</span><br><span class="line">tag</span><br><span class="line">team</span><br><span class="line">team_member</span><br><span class="line">temp_user</span><br><span class="line">test_data</span><br><span class="line">user</span><br><span class="line">user_auth</span><br><span class="line">user_auth_token</span><br></pre></td></tr></table></figure>

<p>然后创建一个session表(如果没有这个session表的情况下，但是现在新版的已经有这个session表了)：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;use `grafana`;</span><br><span class="line">&gt;CREATE TABLE `session` (</span><br><span class="line">    `key`       CHAR(16) NOT NULL,</span><br><span class="line">    `data`      BLOB,</span><br><span class="line">    `expiry`    INT(11) UNSIGNED NOT NULL,</span><br><span class="line">    PRIMARY KEY (`key`)</span><br><span class="line">) ENGINE=MyISAM DEFAULT CHARSET=utf8;</span><br></pre></td></tr></table></figure>

<p># vim conf&#x2F;grafana.ini</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[session]</span><br><span class="line">provider = mysql</span><br><span class="line">provider_config = grafana:grafana@tcp(192.168.1.101:3306)/grafana</span><br><span class="line">cookie_name = grafana_sess</span><br><span class="line">cookie_secure = false</span><br><span class="line">session_life_time = 86400</span><br></pre></td></tr></table></figure>

<p>#特别注意6.2版本中已经删除了session选项，改为了remote_cache选项，如下面的配置：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#################################### Cache server #############################</span><br><span class="line">[remote_cache]</span><br><span class="line"># Either &quot;redis&quot;, &quot;memcached&quot; or &quot;database&quot; default is &quot;database&quot;</span><br><span class="line">type = database</span><br><span class="line"></span><br><span class="line"># cache connectionstring options</span><br><span class="line"># database: will use Grafana primary database.</span><br><span class="line"># redis: config like redis server e.g. `addr=127.0.0.1:6379,pool_size=100,db=0,ssl=false`. Only addr is required. ssl may be &#x27;true&#x27;, &#x27;false&#x27;, or &#x27;insecure&#x27;.</span><br><span class="line"># memcache: 127.0.0.1:11211</span><br><span class="line">connstr = mysql账号:mysql密码@tcp(mysql地址:3306)/grafana</span><br></pre></td></tr></table></figure>

<p>#然后重启grafana就能共享会话了。</p>
<p>#这里要记录一下我其实并没实现共享会话的效果,我看着官网配置很简单，但是怎么也实现不了会话共享的效果，我用其他方式实现了会话共享，如果成功的大哥们可以指正下我哪里错了…….</p>
<h4 id="2-3-迁移导出sqlite3数据到mysql"><a href="#2-3-迁移导出sqlite3数据到mysql" class="headerlink" title="2.3 迁移导出sqlite3数据到mysql"></a>2.3 迁移导出sqlite3数据到mysql</h4><p>#假如你一开始没有考虑高可用方案后面才用起来的，可能一开始用的是sqlite3数据库，可能你已经搞了很多dashboard有很多用户之类的。那么这时候你说让大家才重新登陆一下或者新环境照着旧环境再来一遍就显得有点不合适了，这时候就需要数据库迁移了。而sqlite3跟mysql还是有些区别的，我们需要做一些调整。</p>
<p>#我这里还是有点偷懒的成分的，首先我是把所有的建表语句什么的全不要我只要insert语句，先在新环境用grafana和mysql创建完完整的数据表。</p>
<p>在旧环境导出sql文件：</p>
<p># sqlite3 grafana.db</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite&gt; .output /tmp/grafana_dump.sql</span><br><span class="line">sqlite&gt; .dump</span><br><span class="line">sqlite&gt; .exit</span><br></pre></td></tr></table></figure>

<p>#修改导出的sql文件：</p>
<p>#首先第一步就是把INSERT语句单独的过滤出来。</p>
<p>#然后呢就是把无用的往表里面INSERT初始信息的语句删除掉，因为我们mysql表里面已经有这些数据了。</p>
<p>#然后呢就要执行类似于：sed -i ‘s#”dashboard”#`dashboard`#’ grafana_dump.sql   #将””变成``这样导入mysql的时候才不会报错。</p>
<p>#再然后呢就是进行数据库导入了，然后根据导入的报错信息再具体排查吧。</p>
<p># cat grafana_dump.sql|grep -o “INSERT INTO.* VALUES”|sort -nr|uniq   #这是我导入mysql的文件，多余INSERT语句都没要，就留了这些</p>
<p>Bash</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `<span class="keyword">user</span>` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `user_auth` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `temp_user` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `team` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `team_member` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `tag` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `star` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `preferences` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `org_user` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `data_source` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `dashboard_version` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `dashboard` <span class="keyword">VALUES</span></span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> `dashboard_tag` <span class="keyword">VALUES</span></span><br></pre></td></tr></table></figure>

<p>#另外user表的插入admin的语句和org表的插入Main Org表的语句肯定是要去掉的，可以在导入报错中逐步的删除点mysql表中已存在的数据。</p>
<h3 id="三、Grafana开启LDAP认证"><a href="#三、Grafana开启LDAP认证" class="headerlink" title="三、Grafana开启LDAP认证"></a>三、Grafana开启LDAP认证</h3><h4 id="3-1-grafana开启LDAP认证"><a href="#3-1-grafana开启LDAP认证" class="headerlink" title="3.1 grafana开启LDAP认证"></a>3.1 grafana开启LDAP认证</h4><p>#当一个公司系统多了就会做集中认证，所以我们grafana也得是集中认证的一部分。</p>
<p># vim grafana.ini   #下面的意思很简单就不多做解释了</p>
<p>Bash</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span> Auth LDAP <span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">###</span></span><br><span class="line"><span class="comment">[auth.ldap]</span></span><br><span class="line"><span class="comment">enabled = true</span></span><br><span class="line"><span class="comment">config_file = conf/ldap.toml</span></span><br><span class="line"><span class="comment">allow_sign_up = true</span></span><br></pre></td></tr></table></figure>

<p># vim ldap.toml   #上面已经引用了ldap.toml并开启了ldap认证，所以这里就要配置此文件了</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[[servers]]</span><br><span class="line"># LDAP服务器主机（指定多个主机,空格分隔）</span><br><span class="line">host = &quot;ldap.51niux.com&quot;</span><br><span class="line">#如果use_ssl = true，则默认端口为389或636</span><br><span class="line">port = 389</span><br><span class="line">#如果ldap服务器支持TLS，则设置为true</span><br><span class="line">use_ssl = false</span><br><span class="line">#如果使用STARTTLS模式连接ldap服务器，则设置为true（以不安全的方式创建连接，然后升级为使用TLS的安全连接）</span><br><span class="line">start_tls = false</span><br><span class="line">#如果要跳过ssl证书验证，请设置为true</span><br><span class="line">ssl_skip_verify = false</span><br><span class="line"># set to the path to your root CA certificate or leave unset to use system defaults</span><br><span class="line"># root_ca_cert = &quot;/path/to/certificate.crt&quot;</span><br><span class="line"># Authentication against LDAP servers requiring client certificates</span><br><span class="line"># client_cert = &quot;/path/to/client.crt&quot;</span><br><span class="line"># client_key = &quot;/path/to/client.key&quot;</span><br><span class="line"></span><br><span class="line">#搜索用户绑定dn</span><br><span class="line">bind_dn = &quot;cn=ro,dc=51niux,dc=com&quot;</span><br><span class="line">#搜索用户绑定密码，如果密码包含＃或; 必须用三引号引起来。 例如&quot;&quot;&quot;#password;&quot;&quot;&quot;</span><br><span class="line">bind_password = &#x27;51niux.com&#x27;</span><br><span class="line"></span><br><span class="line">#用户搜索过滤器，例如&quot;（cn =％s）&quot;或“”（sAMAccountName =％s）&quot; &quot;或&quot;（uid =％s）&quot;</span><br><span class="line">search_filter = &quot;(cn=%s)&quot;</span><br><span class="line"></span><br><span class="line">#用户搜索的范围</span><br><span class="line">search_base_dns = [&quot;ou=users,dc=51niux,dc=com&quot;]</span><br></pre></td></tr></table></figure>

<p>#好了，配置好ldap认证之后重启服务就好了。当然你也可能遇到一些问题，可以先不要放到后台启动呢，将服务放到前台启动进行查看，基本按照我这么配就OK了，当然也要检查你跟ldap服务是否能够连上，如果连上了还不行可以直接用ldap命令试试。</p>
<h4 id="3-2-ldap用户权限保持"><a href="#3-2-ldap用户权限保持" class="headerlink" title="3.2 ldap用户权限保持"></a>3.2 ldap用户权限保持</h4><p>#开启了ldap之后你可能会发现一个问题，比如给某个ldap分配了admin角色或者edit角色，但是退出再登陆或者重新登录就角色就消失了。那比如我想给我运维团队的小伙伴admin角色给其他的人一些edit角色，只能每次重新授权或者共用一个admin账户或者创建本地用户吗？显然有更好的办法：</p>
<p># vim ldap.toml</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## Map ldap groups to grafana org roles</span><br><span class="line">#[[servers.group_mappings]]</span><br><span class="line">#group_dn = &quot;cn=admins,dc=grafana,dc=org&quot;</span><br><span class="line">#org_role = &quot;Admin&quot;</span><br><span class="line">## To make user an instance admin  (Grafana Admin) uncomment line below</span><br><span class="line">## grafana_admin = true</span><br><span class="line">## The Grafana organization database id, optional, if left out the default org (id 1) will be used</span><br><span class="line">## org_id = 1</span><br><span class="line">#</span><br><span class="line">#[[servers.group_mappings]]</span><br><span class="line">#group_dn = &quot;cn=users,dc=grafana,dc=org&quot;</span><br><span class="line">#org_role = &quot;Editor&quot;</span><br><span class="line">#</span><br><span class="line">#[[servers.group_mappings]]</span><br><span class="line">## If you want to match all (or no ldap groups) then you can use wildcard</span><br><span class="line">#group_dn = &quot;*&quot;</span><br><span class="line">#org_role = &quot;Viewer&quot;</span><br></pre></td></tr></table></figure>

<p>#如上面所示，我们将关于ldap的映射全注释掉，不开启此功能，这样每次用户登陆的时候就不会映射对应的角色，那么授权也就不会变来变去。</p>
<h3 id="四、Grafana开启匿名登录"><a href="#四、Grafana开启匿名登录" class="headerlink" title="四、Grafana开启匿名登录"></a>四、Grafana开启匿名登录</h3><p>#当然实际生产过程中，可能需要将grafana的监控图嵌套到其他的平台里面去，这时候可以考虑开启来宾用户访问，当然也叫匿名登录。</p>
<p># vim  grafana.ini</p>
<p>Bash</p>
<figure class="highlight coffeescript"><table><tr><td class="code"><pre><span class="line"><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">######</span> Anonymous Auth <span class="comment">######</span><span class="comment">######</span><span class="comment">######</span><span class="comment">####</span></span><br><span class="line"><span class="comment">[auth.anonymous]</span></span><br><span class="line"><span class="comment">#启用匿名访问，默认是false的</span></span><br><span class="line"><span class="comment">enabled = true</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#指定应用于未经身份验证的用户的组织名称</span></span><br><span class="line"><span class="comment">org_name = Main Org.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">#指定未经身份验证的用户的角色</span></span><br><span class="line"><span class="comment">org_role = Viewer</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/1712713881-b2187d5bdd631178410ddc4c017f3275.png" alt="image.png"></p>
<p>#好再次重启服务，这样当直接访问grafana的时候就不要登录，我们默认就是Views角色就可以看到允许Views角色可以看到的dashboard了。</p>
<p>#好的，这样就带来了两个问题，第一个问题，那么是不是谁都可以来把grafana嵌套到它的程序页面中，第二个问题因为grafana随着持续的深入所要展示的图标越来越多，不同的人应该看到不同的图，或者说人家一登录你的页面你有100张图而人家实际就关心一张图，所以又不能摊大饼的去展示。</p>
<h4 id="4-1-如何嵌套grafana界面"><a href="#4-1-如何嵌套grafana界面" class="headerlink" title="4.1 如何嵌套grafana界面"></a>4.1 如何嵌套grafana界面</h4><p>#这里就一个简单的demo了</p>
<p>#vim test.html</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div style=&quot;width: 100%;height: 860px;&quot;&gt;</span><br><span class="line">        &lt;iframe id=&#x27;orbitIframe&#x27;src=&quot;http://grafana.51niux.com/d/andAtAbie/k8s-jian-kong?orgId=1&amp;refresh=5m&amp;from=now-12h&amp;to=now&amp;var-Cluster=51niux-test01&amp;var-Namespace=51niux&amp;var-Pod=51niux-pod-test-01&quot; width=&quot;100%&quot; height=&quot;100%&quot; frameborder=&quot;0&quot; align=&quot;center&quot;&gt;&lt;/iframe&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>#这就是嵌套的简单demo了，这样当访问你的页面就可以把grafana某个pod监控的页面嵌套到你的页面了，当然你也可以在你的页面进行其他指标的选择。</p>
<h4 id="4-2-如何防止别人嵌套"><a href="#4-2-如何防止别人嵌套" class="headerlink" title="4.2 如何防止别人嵌套"></a>4.2 如何防止别人嵌套</h4><p>#这手段就很多了，可以基于IP层面做限制，只允许指定的IP可以访问你的80端口，但是基于IP也不太好，因为办公网之类的面也很大的。</p>
<p>#前面我们不是用nginx做了反向代理了吗？可以把nginx用起来。</p>
<p># vim &#x2F;application&#x2F;nginx&#x2F;conf&#x2F;nginx.conf</p>
<p>Bash</p>
<figure class="highlight puppet"><table><tr><td class="code"><pre><span class="line"><span class="comment">#表示该页面可以在相同域名页面的 frame 中展示。</span></span><br><span class="line">add_header X-Frame-Options SAMEORIGIN;</span><br><span class="line"></span><br><span class="line"><span class="keyword">server</span> &#123;</span><br></pre></td></tr></table></figure>

<p>#这样你就可以结合nginx本身的deny外加这个响应头过滤来进行防护。</p>
<p>X-Frame-Options 响应头：X-Frame-Options HTTP 响应头是用来给浏览器指示允许一个页面可否在 <frame>, <iframe> 或者 <object> 中展现的标记。网站可以使用此功能，来确保自己网站的内容没有被嵌到别人的网站中去，也从而避免了点击劫持 (clickjacking) 的攻击。</p>
<p>X-Frame-Options 有三个值:</p>
<p>Bash</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">DENY：表示该页面不允许在 frame 中展示，即便是在相同域名的页面中嵌套也不允许。</span><br><span class="line">SAMEORIGIN：表示该页面可以在相同域名页面的 frame 中展示。</span><br><span class="line">ALLOW<span class="operator">-</span><span class="keyword">FROM</span> uri：表示该页面可以在指定来源的 frame 中展示。</span><br></pre></td></tr></table></figure>

<h4 id="4-3-如何解决开启匿名登录之后的访问问题"><a href="#4-3-如何解决开启匿名登录之后的访问问题" class="headerlink" title="4.3 如何解决开启匿名登录之后的访问问题"></a>4.3 如何解决开启匿名登录之后的访问问题</h4><p>#首先要提到的一点就是如果开启了匿名登录之后啊存在一个体验上面的小问题，就是默认登录进来只能看到一些基本能看到的吗，当别人给你发个链接如果不在权限范围之内呢就会提示此页面没有权限，这时候就要注意一下是否没有登录，就需要点击下页面的左下角进行登录，因为如果就算你没有登录（如果不开启匿名登录打开主页的时候是需要你登录验证的）也不会有登录验证，很多不经常使用的人可能会出现这个误区。</p>
<p>#前面我们已经提到了，默认登录就是给Views角色这也是最低的权限了只能进行查看，但是当我们开启匿名登录之后呢，就算不用登录也可以获取到Views的角色，那么就会带来我们如何保证所结合不同的数据源做的dashboard展示面向不同的用户呢？</p>
<p>#首先我们要知道的当你创建目录的时候默认就是Views用户拥有浏览权限，然后dashboard就会集成目录权限，意思也很直白就是当你给了目录Views觉得可以进行查看的话，你dashboard就不能吧这个Views角色给删除掉了，只能再次基础上进行新的添加操作。</p>
<p>好了既然知道了这个大概的逻辑就好办了，grafana还有一个Teams用户组功能，那么我们可以这样：将要不用登录就可以查看到的Dashboard放到一个目录下或者某一个目录下面，将那些要向不同的人群展示的Dashboard放到其他没有Views的目录下，这样你就可以通过Teams进行灵活的权限把控了，当然就算不开启匿名登录我们也是需要这个进行灵活把控的，只不过多了一步将目录的Views角色去掉的操作。</p>
<p>当然这也只是我想到的比较好的办法，如果大家有更好的办法可以提出来，大家一起学习下。</p>
<h3 id="五、image-rendering"><a href="#五、image-rendering" class="headerlink" title="五、image_rendering"></a>五、image_rendering</h3><h4 id="5-1-部署image-rendering插件"><a href="#5-1-部署image-rendering插件" class="headerlink" title="5.1 部署image_rendering插件"></a>5.1 部署image_rendering插件</h4><p>      Grafana支持将面板和仪表板渲染为PNG图像。渲染图像时，PNG图像会临时写入文件系统，即Grafana数据目录的子目录png。后台作业每10分钟运行一次，并将删除临时图像。 可以通过配置temp-data-lifetime设置来配置在删除图像之前应存储多长时间。</p>
<p>Requirements（要求）：</p>
<p>      渲染图像可能需要大量内存，主要是因为在后台启动的“browser instances”负责实际渲染。 此外，如果要并行渲染多个图像，则肯定具有更大的内存占用空间。 最小可用内存建议为1GB。</p>
<p>Rendering methods(渲染安装和使用方式):</p>
<p>安装：</p>
<p># yum install zip -y</p>
<p>#yum -y install gcc gcc-c++ make flex bison gperf ruby openssl-devel freetype-devel fontconfig-devel libicu-devel sqlite-devel libpng-devel libjpeg-devel</p>
<p>#yum  install libXcomposite libXdamage libXtst cups libXScrnSaver pango atk adwaita-cursor-theme adwaita-icon-theme at at-spi2-atk at-spi2-core cairo-gobject colord-libs dconf desktop-file-utils ed emacs-filesystem gdk-pixbuf2 glib-networking gnutls gsettings-desktop-schemas gtk-update-icon-cache gtk3 hicolor-icon-theme jasper-libs json-glib libappindicator-gtk3 libdbusmenu libdbusmenu-gtk3 libepoxy liberation-fonts liberation-narrow-fonts liberation-sans-fonts liberation-serif-fonts libgusb libindicator-gtk3 libmodman libproxy libsoup libwayland-cursor libwayland-egl libxkbcommon m4 mailx nettle patch psmisc redhat-lsb-core redhat-lsb-submod-security rest spax time trousers xdg-utils xkeyboard-config -y</p>
<p>#wget <a href="https://nodejs.org/dist/v12.13.1/node-v12.13.1-linux-x64.tar.xz" title="https://nodejs.org/dist/v12.13.1/node-v12.13.1-linux-x64.tar.xz">https://nodejs.org/dist/v12.13.1/node-v12.13.1-linux-x64.tar.xz</a>   </p>
<p># tar xf node-v12.13.1-linux-x64.tar.xz   #环境变量自己配置了哈就不在这体现了</p>
<p># node -v   #先用这个node版本吧，用最新的v12.14.0发现有问题，node的安装前面有讲</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">v12.13.1</span><br></pre></td></tr></table></figure>

<p># npm config set registry <a href="http://registry.npm.taobao.org/" title="http://registry.npm.taobao.org">http://registry.npm.taobao.org</a>  #配置taobao为源</p>
<p>#cd &#x2F;application&#x2F;grafana&#x2F;data&#x2F;plugins&#x2F;</p>
<h1 id="git-clone-https-github-com-grafana-grafana-image-renderer-git"><a href="#git-clone-https-github-com-grafana-grafana-image-renderer-git" class="headerlink" title="git clone https://github.com/grafana/grafana-image-renderer.git"></a>git clone <a href="https://github.com/grafana/grafana-image-renderer.git" title="https://github.com/grafana/grafana-image-renderer.git">https://github.com/grafana/grafana-image-renderer.git</a></h1><p>#cd grafana-image-renderer</p>
<p>#export GF_RENDERER_PLUGIN_IGNORE_HTTPS_ERRORS&#x3D;true</p>
<p>#构建前端</p>
<p># npm install -g yarn</p>
<p># yum -y install bzip2</p>
<p># yarn install –pure-lockfile</p>
<p># npm run build</p>
<p>#编译安装grafana-image-renderer</p>
<p># make deps &amp;&amp; make build_package ARCH&#x3D;linux-x64-glibc</p>
<p># npm install -g node-pre-gyp node-gyp</p>
<p># npm install  </p>
<p># yarn install –pure-lockfile </p>
<p># yarn run build</p>
<p># node build&#x2F;app.js server –port&#x3D;8081    #启动测试一下如果没问题使用nohup的方式放到后台启动。</p>
<p># netstat  -lntup|grep 8081   #查看一下有此端口</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tcp6       0      0 :::8081                 :::*                    LISTEN      18030/node</span><br></pre></td></tr></table></figure>

<p>#更新配置文件</p>
<p># vim grafana.ini  #修改完重启grafana服务</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[rendering]</span><br><span class="line">#Rendering服务器的地址可远端也可以本地,下面不要配置localhost可能会出现域名解析找不到host问题，可以写成127.0.0.1</span><br><span class="line">server_url =  http://192.168.1.101:8081/render</span><br><span class="line">#将渲染的图片返回给哪个grafana服务器可远端也可以本地</span><br><span class="line">callback_url = http://192.168.1.101:3000/</span><br></pre></td></tr></table></figure>

<p>PhantomJS：</p>
<p>       从Grafana v6.4开始不推荐使用PhantomJS，并将在以后的版本中将其删除。 请迁移到Grafana image renderer plugin or remote rendering service。</p>
<p>       自Grafana v2.x以来，PhantomJS是唯一受支持的默认图像渲染器，并且随Grafana一起提供。请注意，ARM不包含PhantomJS二进制文件。 为此，需要确保在tools&#x2F;phantomjs&#x2F;phantomjs二进制文件可用。</p>
<p>Alerting and render limits：</p>
<p>      警报通知可以包括图像，但是同时渲染许多图像可能会使运行渲染器的服务器过载。 </p>
<p># vim grafana.ini</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[alerting]</span><br><span class="line">#此限制将保护服务器免受渲染超负荷的影响，并确保快速发送通知。</span><br><span class="line">concurrent_render_limit = 5</span><br></pre></td></tr></table></figure>

<p>Troubleshooting（故障排除,如果没问题可不设置）：</p>
<p>启用调试日志消息以在Grafana配置文件中进行渲染，并检查Grafana服务器日志。</p>
<p># vim grafana.ini</p>
<p>Bash</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">log</span>]</span><br><span class="line">filters = rendering:<span class="built_in">debug</span></span><br></pre></td></tr></table></figure>

<h4 id="5-2-将截图存储于远端（单纯的举个例子没必要非要用）"><a href="#5-2-将截图存储于远端（单纯的举个例子没必要非要用）" class="headerlink" title="5.2 将截图存储于远端（单纯的举个例子没必要非要用）"></a>5.2 将截图存储于远端（单纯的举个例子没必要非要用）</h4><p>#既然已经理解了PhantomJS和grafana-image-renderer就是将某一个时刻某个panel当时的状态做成一个截图，这个截图用来做什么用呢？比如可以在报警的时候发出去可以把图片加载着一起发出去又或者可以将当时的状态记录到本地或者远端供程序调用。</p>
<p># vim conf&#x2F;grafana.ini</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[external_image_storage]</span><br><span class="line"># You can choose between (s3, webdav, gcs, azure_blob, local)，默认就是local就是存储在本地的data/png/下面</span><br><span class="line">provider = webdav</span><br><span class="line">[external_image_storage.webdav]</span><br><span class="line">url = https://dav.jianguoyun.com/dav/grafana</span><br><span class="line">username = grafana@51niux.com</span><br><span class="line">password = 51niux.com</span><br><span class="line">public_url = #这里就是坚果云分享链接也就是不需要账号密码的url地址，特别注意的当本地的图片上传到坚果云时候图片名称会发生变化，</span><br><span class="line">#比如你本地的图片名称是YECmbmO34A76tfE6Viig.png但是跑到坚果云上面之后是WcPcszYzEw91kaQ6l6fB.png，但是它会把这个url地址吐回来，</span><br><span class="line">#这时候比如你这里选择的是图片存储到远端，那么报警消息里面加载的图片的url地址就是你设置的这个public_url+此图片上传到坚果云的名称。</span><br></pre></td></tr></table></figure>

<p>#可以看到我们grafana触发截图操作的时候，比如报警的时候就会本地产生一份截图然后上传到你指定的远端一份截图。这就相当于把报警那个时刻的具体指标图形给抓拍截图了。</p>
<h3 id="六、ALerting"><a href="#六、ALerting" class="headerlink" title="六、ALerting"></a>六、ALerting</h3><p>      Grafana中的警报允许你将规则附加到仪表板面板。 保存仪表板时，Grafana会将警报规则提取到单独的警报规则存储中，并安排它们进行评估。在图形面板的警报选项卡中，可以配置应评估警报规则的频率以及警报更改状态并触发其通知所需的条件。</p>
<h4 id="6-1-配置Grafana-prometheus使用钉钉报警"><a href="#6-1-配置Grafana-prometheus使用钉钉报警" class="headerlink" title="6.1 配置Grafana+prometheus使用钉钉报警"></a>6.1 配置Grafana+prometheus使用钉钉报警</h4><p>#邮件报警就不说了，修改# vim grafana.ini 的[smtp]下面。</p>
<p>#好钉钉报警我们这里采用钉钉群组报警，那么就是创建钉钉机器人，然后就会得到hook链接。</p>
<p>配置Notification Channels：</p>
<p>配置文件[server]修改：</p>
<p><img src="/images/1712713881-9b30fda0c33944e62b8bc709af535910.png" alt="image.png"></p>
<p>#上图为link类型的测试消息。</p>
<p>#好现在存在一个问题，现在你点开钉钉群的连接会发现跳转到了<a href="http://localhost:3000开头的一个URL地址完全打不开嘛。">http://localhost:3000开头的一个URL地址完全打不开嘛。</a></p>
<p># vim grafana.ini</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[server]</span><br><span class="line">#协议类型</span><br><span class="line">protocol = http</span><br><span class="line">#面向公众的域名，用于从浏览器访问grafana</span><br><span class="line">domain = grafana.51niux.com</span><br><span class="line">#完整的公开网址</span><br><span class="line">#root_url = %(protocol)s://%(domain)s:%(http_port)s/   #这是原来默认的，但是我们已经用Nginx做了代理就可以用下面的了</span><br><span class="line">root_url = %(protocol)s://%(domain)s</span><br></pre></td></tr></table></figure>

<p>#这样报警发出去是一个链接，然后是以<a href="http://grafana.51niux.com开头的,这样大家点开你钉钉消息就可以打开一个页面了./">http://grafana.51niux.com开头的，这样大家点开你钉钉消息就可以打开一个页面了。</a></p>
<h4 id="6-2-针对钉钉报警消息我们具体来说一说"><a href="#6-2-针对钉钉报警消息我们具体来说一说" class="headerlink" title="6.2 针对钉钉报警消息我们具体来说一说"></a>6.2 针对钉钉报警消息我们具体来说一说</h4><p>#这里先不要关心怎么去触发报警，先要明确这个加载图片怎么用，也就是钉钉报警Include image怎么来实现。</p>
<p># vim grafana.ini   #我们就用默认截图存储到本地就好,特别注意provider一定要给一个类型比如local，不然你会发现你的报警不加载图片。</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[external_image_storage]</span><br><span class="line">provider = local</span><br></pre></td></tr></table></figure>

<p>先说不启动grafana-image-renderer：</p>
<p>#我们先假设我们没有按照上面的方式配置grafana-image-renderer插件，还是用的默认的PhantomJS。</p>
<p>#然后我们现在选择了加载图片然后试着触发一个报警，然后等了好长时间你发现你并没有收到报警，然后查看日志发现有报错：</p>
<p># tail -f &#x2F;application&#x2F;grafana&#x2F;data&#x2F;log&#x2F;grafana.log</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">INFO[12-31|17:49:01] Rendering                                logger=rendering path=&quot;d-solo/T3IZTHYZz/new-dashboard-copy?orgId=1&amp;panelId=2&quot;</span><br><span class="line">t=2019-12-31T17:49:01+0800 lvl=info msg=Rendering logger=rendering path=&quot;d-solo/T3IZTHYZz/new-dashboard-copy?orgId=1&amp;panelId=2&quot;</span><br><span class="line">INFO[12-31|17:49:31] Rendering timed out                      logger=rendering</span><br><span class="line">EROR[12-31|17:49:31] Failed to upload alert panel image.      logger=alerting.notifier error=&quot;Timeout error. You can set timeout in seconds with &amp;timeout url parameter&quot;</span><br><span class="line">t=2019-12-31T17:49:31+0800 lvl=info msg=&quot;Rendering timed out&quot; logger=rendering</span><br><span class="line">t=2019-12-31T17:49:31+0800 lvl=eror msg=&quot;Failed to upload alert panel image.&quot; logger=alerting.notifier error=&quot;Timeout error. You can set timeout in seconds with &amp;timeout url parameter&quot;</span><br><span class="line">......省略中间内容</span><br><span class="line">EROR[12-31|17:49:31] Failed to send DingDing                  logger=alerting.notifier.dingding error=&quot;context deadline exceeded&quot; dingding=钉钉报警</span><br><span class="line">EROR[12-31|17:49:31] failed to send notification              logger=alerting.notifier uid=1CQspNLZz error=&quot;context deadline exceeded&quot;</span><br><span class="line">EROR[12-31|17:49:31] failed to send notification              logger=alerting.notifier uid=1CQspNLZz error=&quot;context deadline exceeded&quot;</span><br></pre></td></tr></table></figure>

<p>#啥意思呢，其实也很简单就是当你触发报警的时候，grafana根据触发报警的面板当时的状态往后台提交想做个截图然后一并随着报警消息发送出去，结果等的都超时了也没有得到返回，于是乎整条报警消息就发送失败了。</p>
<p>#然后你把Include image关闭掉发现报警可以发出来了，所以如果你想加载图片报警的话在grafana6.4以后的版本就要进行grafana-image-renderer插件的安装了。</p>
<p>先说Link形式：</p>
<p><img src="/images/1712713881-8a5e3c49c6c575744c6108739a0e7b2f.png" alt="image.png"></p>
<p>#所有警报通知都包含一个指向Grafana实例中已触发警报的链接。 该网址基于Grafana中的域设置，你点下消息就会跳转到grafana报警的页面。</p>
<p>#通过上面的截图可以看到，Link模式是可以直接将图片加载到消息中的，但是图太小了……，然后其实可以看下第三张图，其实下面还是有内容的就是说的哪个机器触发报警的值是多少，当然如果你数据众多也就显示一条，需要你点开这个报警连接跳转到报警的页面来仔细的查看。</p>
<p>#那么消息中的图片是哪来的呢？</p>
<p>#可以看到当报警触发的时候先触发了一个报警</p>
<p>t&#x3D;2019-12-31T18:04:01+0800 lvl&#x3D;info msg&#x3D;”New state change” logger&#x3D;alerting.resultHandler ruleId&#x3D;1 newState&#x3D;alerting prev state&#x3D;ok</p>
<p>#然后下面可以看到截图插件给我们返回了一个图片的url地址</p>
<p>t&#x3D;2019-12-31T18:04:03+0800 lvl&#x3D;info msg&#x3D;”uploaded screenshot of alert to external image store” logger&#x3D;alerting.notifier url&#x3D;<a href="http://grafana.51niux.com/public/img/attachments/P6NL1pA0Q7BV3FJrCdtp.png">http://grafana.51niux.com/public/img/attachments/P6NL1pA0Q7BV3FJrCdtp.png</a> </p>
<p>#然后下面就是把这条消息发送出去了</p>
<p>t&#x3D;2019-12-31T18:04:03+0800 lvl&#x3D;info msg&#x3D;”Sending dingding” logger&#x3D;alerting.notifier.dingding</p>
<p>t&#x3D;2019-12-31T18:04:03+0800 lvl&#x3D;info msg&#x3D;”messageUrl:dingtalk:&#x2F;&#x2F;dingtalkclient&#x2F;page&#x2F;link?pc_slide&#x3D;false&amp;url&#x3D;需要点开的grafana的报警的url地址” logger&#x3D;alerting.notifier.dingding</p>
<p>然后再说钉钉的actionCard形式：</p>
<p><img src="/images/1712713881-0cb2bfb503fe8e724c817079faf8921b.png" alt="image.png"></p>
<p>#可以看到首先你无法从这个消息体里面看到这是一个警告还是恢复状态，当然在群外面看群消息里面的表示是可以看到的。其实从报警消息中也可以理解为是报警还是恢复的，如果是报警的话会有提示什么实例触发了报警，如果是恢复的话就会像上图只有标题什么都不显示。其次呢就是这个图片你看不到，那怎么办呢？怎么来显示这个图片呢？</p>
<p>#很简单就是配置文件domain这里配置一个公网的IP或者你grafana本身的域名就是公网的，这样返回的那个图片的URL地址自然就是公网的自然可以被访问了。</p>
<p>#上面就是将我们的grafana配置文件中的domain变成公网地址之后的效果，虽然是可以跟着消息一起放出来的，但是其实是两部分，消息是一部分图片是另一部分，我这种图片看着密密麻麻是想上百个容器的数据图，所以当报警出来的时候图片哪里是先从空白变为有图因为要加载会。</p>
<p>#Link方式呢如果报警的信息太多的话不会将报警信息全部显示出来，需要点击链接进入到grafana界面进行具体的查看的。比如可以点击grafana的State history来查看都有哪些实例触发了报警。而actionCard是可以把哪些实例触发了报警都列在报警消息中的。</p>
<p>#可以看到Link这种情况只需要你的网络跟grafana的网络是想通的就能看到消息中的图片，但是actionCard这种方式呢需要配置公网。</p>
<h4 id="6-3-报警规则的配置"><a href="#6-3-报警规则的配置" class="headerlink" title="6.3  报警规则的配置"></a>6.3  报警规则的配置</h4><p>视觉阀值和报警规则是互斥的：</p>
<p><img src="/images/1712713881-99840b59f7e87fdcff627bc15919d6b8.png" alt="image.png"></p>
<p>#首先要了解开启了Alert，视觉阈值选项就会禁用。要重新启用视觉阈值，必须从此面板中删除警报规则。</p>
<p>Alter之Rule：</p>
<p><img src="/images/1712713881-c5fab20af75e5dc156b7e3f57e136f8f.png" alt="image.png"></p>
<p>#主要是for的理解：如果警报规则具有配置的For，并且查询到了阀值状态，它将首先从OK转到Pending。 Grafana从“OK”转到“待定Pending”将不会发送任何通知。 警报规则的触发时间超过“持续时间”后，它将更改为“Alerting”并发送警报通知。</p>
<p>#比如上面我们设置了一个For是1m的持续时间，当每分钟检查的时候发现触发了阀值，如果持续一分钟还未解决就会报警出来。</p>
<p>#那么问题来了如果你For设置2m或者5m之类的持续时间，那么恢复的时候会遵从这个持续时间吗，显然恢复是不遵从这个For时间的，当下次循环检查的时候没问题就会变为OK状态并进行恢复报警。当然恢复也没有其他监控系统的单独的恢复报警设置。</p>
<p>Alter之Conditions(条件)：</p>
<p>WHEN判断有：last(),avg(),min(),max(),sum(),count(),median(),diff(),percent_diff(),count_non_null()  #这里其实是grafana内置的一些运算函数，有的可能一眼就知道怎么回事有些就比较蒙圈了。</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">count()  #数据点数（在单位时间里去抓取了几次metric）。</span><br><span class="line">median()  #MEDIAN 函数是一种计算机函数，能够返回给定数值的中值，中值是在一组数值中居于中间的数值，如果参数集合中包含偶数个数字，函数 MEDIAN 将返回位于中间的两个数的平均值。</span><br><span class="line">diff()  #起始值和最终值之间的差异</span><br><span class="line">percent_diff()  #起始值与最终值之差/起始值与最终值的平均值*100</span><br><span class="line">count_non_null()  #value不为空的count</span><br></pre></td></tr></table></figure>

<p>#count通常是指(单位时间内的)metric数据的数量(例如，名称为qps的metric，在过去1分钟内，每隔15s去获取1次qps的值，那么过去1分钟的count(qps)就是5)，如果数据源是ElasticSearch，这个count通常指单位时间内的日志条目(日志数量)。但是如果数据源是Prometheus的的话，由于Prometheus的配置文件指定了每隔多久去抓取1次数据，因此count的数量比较固定。</p>
<p>然后中间有个阀值的类型：</p>
<p>Bash</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">IS ABOVE  <span class="meta">#在什么值以上也就是大于某个值</span></span><br><span class="line">IS BELOW  <span class="meta">#在什么值下面也就是小于某个值</span></span><br><span class="line">IS OUTSIDE RANGE  <span class="meta">#在两个值的范围以外</span></span><br><span class="line">IS WITHIN RANGE  <span class="meta">#在两个值的范围内</span></span><br><span class="line">HAS NO VALUE  <span class="meta">#没有值</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/1712713881-5925bb1f5409d6fe325b490e7b3480a3.png" alt="image.png"></p>
<p>query(A, 5m, now): 字母定义从“Metrics”选项卡执行的查询,比如我们只有一条metrics查询语句就是A，如果你又加了一条查询语句那么就会有B。 后两个参数定义时间范围5m，即现在到之前的的5分钟。 你也可以设置成从10m开始，now为2m，以定义10分钟前到2分钟前的时间范围。 如果你要忽略最后2分钟的数据，这将很有用。</p>
<p>警报规则中使用的查询不能包含任何模板变量。 目前，仅支持条件之间的AND和OR运算符，并且它们是串行执行的。 例如，有3个条件，其顺序如下：condition：A（评估为：TRUE）或condition：B（评估为：FALSE）AND condition：C（评估为：TRUE），因此结果将计算为 ((TRUE OR FALSE) AND TRUE) &#x3D; TRUE。</p>
<p>Multiple Series:</p>
<p>    如果查询返回多个序列，则将针对每个序列评估聚合函数和阈值检查。 Grafana当前不执行的是每个系列的跟踪警报规则状态。 这具有以下场景中详细介绍的含义。</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询的警报条件返回2个系列：server1和server2</span><br><span class="line">server1系列导致警报规则触发并切换到状态警报</span><br><span class="line">通知随消息一起发送：负载峰值（server1）</span><br><span class="line">在对同一警报规则的子序列评估中，server2系列也会导致警报规则触发</span><br><span class="line">由于警报规则已处于警报状态，因此不会发送新的通知。</span><br></pre></td></tr></table></figure>

<p>       因此，从上述情况中可以看到，如果规则已经处于Alerting状态，则其他系列导致警报触发时，Grafana不会发出通知。 为了改善对返回多个系列的查询的支持，计划在将来的版本中跟踪每个系列的状态。从Grafana v5.3开始，可以配置要发送的警报提醒。 当警报继续触发时，这将发送其他通知。 如果其他系列（例如上例中的server2）也导致触发警报规则，则它们将包含在提醒通知中。 根据你正在使用的通知渠道，可以利用此功能来识别导致警报触发的new&#x2F;existing的系列series。</p>
<p>Clustering：</p>
<p>       当前，警报支持有限形式的高可用性。 从Grafana v4.2.0开始，运行多个服务器时将删除警报通知。 这意味着所有警报都在每台服务器上执行，但是由于重复数据删除逻辑，不会发送重复的警报通知。 未来将引入适当的警报负载平衡。</p>
<p>Execution（执行）：</p>
<p>       警报规则在Grafana核心的一部分的调度程序和查询执行引擎的Grafana后端中进行评估。 目前仅支持某些数据源。 它们包括Graphite，Prometheus，InfluxDB，Elasticsearch，Stackdriver，Cloudwatch，Azure Monitor，MySQL，PostgreSQL，MSSQL，OpenTSDB，Oracle和Azure Data Explorer。Azure Monitor的警报支持仅在Grafana v6.0及更高版本中可用。</p>
<p>Alter之No Data &amp; Error Handling：</p>
<p>No Data &#x2F; Null values(无数据&#x2F;空值)：</p>
<p>      可以配置规则评估引擎应如何处理不返回数据或仅返回空值的查询。</p>
<p>Bash</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">NoData   <span class="meta">#将警报规则状态设置为NoData</span></span><br><span class="line">Alerting   <span class="meta">#将警报规则状态设置为“Alerting”</span></span><br><span class="line">Keep Last State  <span class="meta">#保持当前警报规则状态，无论状态如何。</span></span><br><span class="line">OK  <span class="meta">#将警报规则状态设置为OK</span></span><br></pre></td></tr></table></figure>

<p>执行错误或超时</p>
<p>       最后一个选项告诉你如何处理执行或超时错误。</p>
<p>Bash</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">Alerting    <span class="meta">#将警报规则状态设置为“Alerting”</span></span><br><span class="line">Keep Last State    <span class="meta">#保持当前警报规则状态，无论状态如何。</span></span><br></pre></td></tr></table></figure>

<p>      如果有一个不可靠的时间序列存储库，该存储库中的查询有时会超时或随机失败，则可以将此选项设置为Keep Last State以便基本忽略它们。</p>
<p>#下图是我们把数据源去掉之类的查看一下没有数据的报警状态：</p>
<p>Notifications：</p>
<p>      在警报选项卡中，还可以指定警报规则通知以及有关警报规则的详细消息。 该消息可以包含任何内容，有关如何解决问题的信息，指向Runbook的链接等。实际的通知已配置并在多个警报之间共享。 </p>
<p> <img src="/images/1712713881-459d1114d3dabdaa02afba2d5515fc52.png" alt="image.png"></p>
<p>#注意这个Message只是一个固定的内容，比如你监控容器，容器报警了，消息中还会在此固定内容下面显示都哪些容器触发报警了，当然消息太多的话并不会完全显示。   </p>
<p>Use alert rule tags in notifications（在通知中使用警报规则标签）：</p>
<p>       上图其实在界面下面还有Tags一栏，仅在Grafana v6.3 +中可用。Grafana可以在通知中包含标签列表（key&#x2F;value）。 称为警报规则标签，可与从时间序列中解析出的标签进行对比。 当前仅支持Prometheus Alertmanager通知程序。这是一项可选功能。 可以在不使用警报规则标签的情况下获得通知。</p>
<p>Troubleshooting（故障排除）：</p>
<p>     可以做的第一级故障排除是单击“Test Rule”按钮。 将获得结果，可以扩展到可以查看查询返回的原始数据的位置。还可以通过检查grafana服务器日志来完成进一步的故障排除。 如果不是错误或出于某种原因，日志中没有任何内容，则可以为某些相关组件启用调试日志记录。 这是在Grafana的ini配置文件中完成的。该示例显示了在对警报进行故障排除时可能相关的记录器。</p>
<p>Bash</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line">[<span class="built_in">log</span>]</span><br><span class="line">filters = alerting.scheduler:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.engine:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.resultHandler:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.evalHandler:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.evalContext:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.extractor:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.notifier:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.notifier.slack:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.notifier.pagerduty:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.notifier.email:<span class="built_in">debug</span> \</span><br><span class="line">          alerting.notifier.webhook:<span class="built_in">debug</span> \</span><br><span class="line">          tsdb.graphite:<span class="built_in">debug</span> \</span><br><span class="line">          tsdb.prometheus:<span class="built_in">debug</span> \</span><br><span class="line">          tsdb.opentsdb:<span class="built_in">debug</span> \</span><br><span class="line">          tsdb.influxdb:<span class="built_in">debug</span> \</span><br><span class="line">          tsdb.elasticsearch:<span class="built_in">debug</span> \</span><br><span class="line">          tsdb.elasticsearch.client:<span class="built_in">debug</span> \</span><br></pre></td></tr></table></figure>

<p>如果要记录发送到TSDB的原始查询和日志中的原始响应，还必须将grafana.ini选项app_mode设置为development。</p>
<h4 id="6-4-Notifications"><a href="#6-4-Notifications" class="headerlink" title="6.4 Notifications"></a>6.4 Notifications</h4><p>查看当前总的报警状态：</p>
<p>#上图右边那个一个暂停图片很好理解就是禁用此报警，另一个齿轮就是重新配置此条报警。</p>
<p>重复报警：</p>
<p>#默认报警规则触发后，只报一次，不会重复报警，如果你想重复报警的话就需要在你所创建的消息channels里面进行设置了。</p>
<p>#要特别注意重复报警的间隔不能比再次检查的时间频率要短。当再次报警的时候State history那里只会显示第一次报警的时间，Alter Rules那里也只会显示最后一次报警的时间，当然如果你加载图片的话，重复报警消息就只有问题消息不会再加载图片了。</p>
<p>Send reminders（发送提醒）：</p>
<p>     仅在Grafana v5.3及更高版本中可用。选中此选项时，将为触发的警报发送其他通知（提醒）。 可以使用秒数，分钟（m）或小时（h）（例如30s，3m，5m或1h等）指定发送提醒的频率。重要提示：评估规则后，将发送警报提醒。 因此，永远不要比配置的警报规则评估间隔更频繁地发送提醒。这些示例显示了发送触发警报的提醒的频率和时间。</p>
<table>
<thead>
<tr>
<th>Alert rule evaluation interval<br><br>警报规则评估间隔</th>
<th>Send reminders every<br><br>每次发送提醒</th>
<th>Reminder sent every (after last alert notification)<br><br>每次提醒发送（最后一次警报通知后）</th>
</tr>
</thead>
<tbody><tr>
<td><code>30s</code></td>
<td><code>15s</code></td>
<td>~30 seconds</td>
</tr>
<tr>
<td><code>1m</code></td>
<td><code>5m</code></td>
<td>~5 minutes</td>
</tr>
<tr>
<td><code>5m</code></td>
<td><code>15m</code></td>
<td>~15 minutes</td>
</tr>
<tr>
<td><code>6m</code></td>
<td><code>20m</code></td>
<td>~24 minutes</td>
</tr>
<tr>
<td><code>1h</code></td>
<td><code>15m</code></td>
<td>~1 hour</td>
</tr>
<tr>
<td><code>1h</code></td>
<td><code>2h</code></td>
<td>~2 hours</td>
</tr>
</tbody></table>
<p>Metrics from the alert engine（警报引擎的指标）</p>
<p>        警报引擎发布有关其自身的一些内部指标。</p>
<table>
<thead>
<tr>
<th>Description</th>
<th>Type</th>
<th>Metric name</th>
</tr>
</thead>
<tbody><tr>
<td>Total number of alerts（警报总数）</td>
<td>counter</td>
<td><code>alerting.active_alerts</code></td>
</tr>
<tr>
<td>Alert execution result（警报执行结果）</td>
<td>counter</td>
<td><code>alerting.result</code></td>
</tr>
<tr>
<td>Notifications sent counter（通知发送计数）</td>
<td>counter</td>
<td><code>alerting.notifications_sent</code></td>
</tr>
<tr>
<td>Alert execution timer（警报执行计时）</td>
<td>timer</td>
<td><code>alerting.execution_t``ime</code></td>
</tr>
</tbody></table>
<p>Supported Notification Types（支持的通知类型）：</p>
<p>Email：</p>
<p>       要启用电子邮件通知，必须在Grafana配置中设置SMTP设置。 电子邮件通知会将警报图的图像上载到外部图像目标（如果可用），或者将其后退以将图像附加到电子邮件。 请注意，如果使用local图像存储，则电子邮件服务器和客户端可能无法访问该图像。</p>
<p>Webhook：</p>
<p>      Webhook通知是一种通过HTTP将状态更改信息发送到自定义端点的简单方法。 使用此通知，可以将Grafana集成到选择的系统中。示例json主体：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;title&quot;: &quot;My alert&quot;,</span><br><span class="line">  &quot;ruleId&quot;: 1,</span><br><span class="line">  &quot;ruleName&quot;: &quot;Load peaking!&quot;,</span><br><span class="line">  &quot;ruleUrl&quot;: &quot;http://url.to.grafana/db/dashboard/my_dashboard?panelId=2&quot;,</span><br><span class="line">  &quot;state&quot;: &quot;alerting&quot;,</span><br><span class="line">  &quot;imageUrl&quot;: &quot;http://s3.image.url&quot;,</span><br><span class="line">  &quot;message&quot;: &quot;Load is peaking. Make sure the traffic is real and spin up more webfronts&quot;,</span><br><span class="line">  &quot;evalMatches&quot;: [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;metric&quot;: &quot;requests&quot;,</span><br><span class="line">      &quot;tags&quot;: &#123;&#125;,</span><br><span class="line">      &quot;value&quot;: 122</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>state-警报状态的可能值为：ok, paused, alerting, pending, no_data。</p>
<p>DingDing&#x2F;DingTalk：</p>
<p>       如下所示：<a href="https://oapi.dingtalk.com/robot/send?access%5C_token=xxxxxxxxx%E3%80%82">https://oapi.dingtalk.com/robot/send?access\_token=xxxxxxxxx。</a> 将此URL复制到grafana Dingtalk设置页面，然后单击“finish”。Dingtalk支持以下“message type”：text, link and markdown。</p>
<p>Kafka：</p>
<p>       可以使用Kafka REST Proxy将通知从Grafana发送到Kafka主题。 需要在Grafana UI中的“ Kafka Settings”下设置几个配置选项：</p>
<p>Kafka REST Proxy endpoint、Kafka Topic。设置完这两个属性后，可以将警报发送到Kafka进行进一步处理或限制。</p>
<h4 id="6-5-grafana发送Prometheus中的容器报警"><a href="#6-5-grafana发送Prometheus中的容器报警" class="headerlink" title="6.5 grafana发送Prometheus中的容器报警"></a>6.5 grafana发送Prometheus中的容器报警</h4><p>#这里最后小提一下，到现在我用的6.5版本还是没能解决模板中使用变量进行报警，现在是直接关闭了此功能。</p>
<p>Template variables are not supported in alert queries   #警报查询中不支持模板变量</p>
<p><img src="/images/1712713881-ba44fba29d0d108a1aa21abe92b40add.png" alt="image.png"></p>
<p>#如果你的面板中引用了变量就不能进行Alter报警设置。</p>
<p>#那么我们怎么做容器监控呢，不能用变量就只能使用正则了。</p>
<p>比如我们Metrics的查询语句是：</p>
<p>Bash</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sum(rate(container_memory_usage_bytes&#123;image!=&quot;&quot;,pod_name=~&quot;^(docker|ingress)-.*&quot;&#125;[1m])) by (pod_name)</span><br></pre></td></tr></table></figure>

<p>#那么前提呢就是你的容器名称最好开头最好就是一个固定唯一的，因为结尾k8s会给你随机加字符你控制不了。这样通过正则就能进行Alter设置了。</p>
<p>#这样报警其实有带来几个问题：</p>
<p>第一个就是你原来做的展示图只能作为展示用，你还要单独做张图进行报警用，如果你容器少还好，如果有几千个上万个，都汇聚到一张图上面进行渲染那可能直接就卡死了，因为是正则匹配所有并不是选择某几个进行出图。</p>
<p>第二个问题呢就是大家这些容器可能限制不同但是都要公用一个固定值或者一个百分比很不灵活。</p>
<p>第三个问题呢就是比如你这次有50个容器触发了报警，会汇总到一个报警消息里面发出去告诉你这50个容器分别当前值是多少，当然现在如果选择用钉钉的actionCard类型会给你一条条列出来，如果是选择Link类型也就给你显示一条剩下的就需要你点击链接跳转到grafana界面查看了。当然这都不是问题，真正的问题是这些报警是一起报警了，就算中间有容器恢复了也不会恢复体现，是得所有都恢复才会发送恢复消息。</p>
<p>第四个问题呢就是要注意官网有提高alter报警并不支持高可用什么意思呢，就是如果你又两个grafana你配置了alter,这个规则其实并没有写入到数据库中，是写到某一个grafana实例中的，当你发生跳转到另一个grafana中的配置报警规则什么的都不见得，我测试着是这样。</p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana截取图片供告警使用</title>
    <url>/2024/04/10/Grafana%E6%88%AA%E5%8F%96%E5%9B%BE%E7%89%87%E4%BE%9B%E5%91%8A%E8%AD%A6%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<p>获取图片命令</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">curl -o test.png -u admin:occ1Tsupport! &quot;http://10.249.243.209:3000/render/d-solo/cdiachl7npvr4f/e59bbe-e78987-e6b58b-e8af95-e5afbc-e587ba?var-node=10.250.5.16&amp;orgId=1&amp;from=`date -d &quot;-1 hour&quot; +%s`167&amp;to=`date +%s`167&amp;panelId=2&amp;width=1000&amp;height=500&amp;tz=Asia%2FShanghai&quot;</span><br></pre></td></tr></table></figure>

<h2 id="1、背景"><a href="#1、背景" class="headerlink" title="1、背景"></a>1、背景</h2><p>想要一个CPU的使用率的日报，因此想程序直接抓取grafana的Panel生成的图片，这样不用每次都打开grafana，然后手动截图，再保存，再发日报。</p>
<p>谷歌了一下，发现官方有个插件叫grafana-image-renderer，能直接渲染图片，生成图片链接，只需要python爬虫抓取该链接，保存图片即可，后续写个发邮件的程序就行。</p>
<p>(谷歌发现两种办法，另一种是使用grafana-reporter，因为这个要起一个Go新服务，因此我没有尝试该办法，需要的小伙伴自行谷歌吧)</p>
<h2 id="2、步骤"><a href="#2、步骤" class="headerlink" title="2、步骤"></a>2、步骤</h2><p>首先说明一点，我的grafana服务是本地安装，不是docker部署</p>
<h3 id="2-0、未安装插件时的表现"><a href="#2-0、未安装插件时的表现" class="headerlink" title="2.0、未安装插件时的表现"></a>2.0、未安装插件时的表现</h3><p>未安装grafana-image-renderer插件时，点击share按钮分享panel，会提示图片渲染插件未安装，要求安装一下</p>
<p><img src="/images/1712740297-8e9a92f54f50a9c5d621d9dfc8225719.png" alt="image-20221019143705819"></p>
<h3 id="2-1、首先要安装grafana-image-renderer插件"><a href="#2-1、首先要安装grafana-image-renderer插件" class="headerlink" title="2.1、首先要安装grafana-image-renderer插件"></a>2.1、首先要安装grafana-image-renderer插件</h3><p>官网安装指导：<a href="https://grafana.com/grafana/plugins/grafana-image-renderer/">https://grafana.com/grafana/plugins/grafana-image-renderer/</a></p>
<p>官网配置文件指导：<a href="https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/#configuration">https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/#configuration</a></p>
<p>执行命令安装插件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grafana-cli plugins install grafana-image-renderer</span><br></pre></td></tr></table></figure>

<p><img src="/images/1712740297-4e9e2a74eb18ff4233c89bde8c313e8f.png" alt="image-20221018170736932"></p>
<h3 id="2-2、安装好后重启一下grafana服务"><a href="#2-2、安装好后重启一下grafana服务" class="headerlink" title="2.2、安装好后重启一下grafana服务"></a>2.2、安装好后重启一下grafana服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart grafana-server.service</span><br></pre></td></tr></table></figure>

<p>安装好后可以查看一下是否有该插件了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grafana-cli plugins <span class="built_in">ls</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/1712740297-fb5559f5c6e750138133553d7dfdd343.png" alt="image-20221018170856313"></p>
<h3 id="2-3、该插件的底层原理应该是调用chrome无头浏览器进行操作，因此我们需要看看是不是依赖都全面"><a href="#2-3、该插件的底层原理应该是调用chrome无头浏览器进行操作，因此我们需要看看是不是依赖都全面" class="headerlink" title="2.3、该插件的底层原理应该是调用chrome无头浏览器进行操作，因此我们需要看看是不是依赖都全面"></a>2.3、该插件的底层原理应该是调用chrome无头浏览器进行操作，因此我们需要看看是不是依赖都全面</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ldd /var/lib/grafana/plugins/grafana-image-renderer/chrome-linux/chrome</span><br></pre></td></tr></table></figure>

<p><img src="/images/1712740297-ef6fc93db006b30c84b1914ef3b15920.png" alt="image-20221018170928769"></p>
<p>我们需要把not found的依赖都安装上，这里可以直接去<a href="https://pkgs.org/%E7%BD%91%E5%9D%80%E6%89%BE%E5%88%B0%E4%BE%9D%E8%B5%96%EF%BC%8C%E7%84%B6%E5%90%8E%E5%AE%89%E8%A3%85">https://pkgs.org/网址找到依赖，然后安装</a></p>
<p>例子：</p>
<p>（1）提示缺少libatk-1.0.so.0，则我们去<a href="https://pkgs.org/%EF%BC%8C%E8%BE%93%E5%85%A5%E6%A1%86%E8%BE%93%E5%85%A5libatk-1.0.so.0%EF%BC%8C%E7%84%B6%E5%90%8E%E6%90%9C%E7%B4%A2%EF%BC%8C%E6%89%BE%E5%88%B0%E7%B3%BB%E7%BB%9F%E5%AF%B9%E5%BA%94%E7%9A%84%E8%BD%AF%E4%BB%B6%E5%8C%85%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%88%91%E7%9A%84%E6%98%AFcentos7%EF%BC%8C%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E8%BF%9B%E5%8E%BB">https://pkgs.org/，输入框输入libatk-1.0.so.0，然后搜索，找到系统对应的软件包，例如我的是centos7，然后点击进去</a></p>
<p><img src="/images/1712740297-dba025d8cf1a7be3bd1d26d168739f95.png" alt="image-20221018172259191"></p>
<p>点击进去以后，可以看到提示用<code>yum install atk</code>下载即可，</p>
<p><img src="/images/1712740297-6b94b6efb48b3598a15698669add9892.png" alt="image-20221018172408471"></p>
<p>例子2：缺libXcomposite.so.1文件，也是类似例子1一样，</p>
<p><img src="/images/1712740297-c20b6c45ef42116d8450f72b5f224d35.png" alt="image-20221018172855346"></p>
<p><img src="/images/1712740297-6426bc0606833f2769880e69bf127f7f.png" alt="image-20221018172917998"></p>
<p>这个缺少依赖的问题，也可以在官网的解决重大问题的链接看到：<a href="https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/troubleshooting/">https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/troubleshooting/</a></p>
<p><img src="/images/1712740297-efbcfdb4f5a3136e695534e3d1b06df3.png" alt="image-20221019165238972"></p>
<p>我解决该问题，安装了这些包</p>
<p><img src="/images/1712740297-2f9f920d4727fa0b0a595d59f511aa29.png" alt="image-20221018173343352"></p>
<p><img src="/images/1712740297-47e28873a0ca15f685a85a228d229736.png" alt="image-20221018173426252"></p>
<p>官网也提到centos7的依赖包，其他系统看官网就行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">libXcomposite libXdamage libXtst cups libXScrnSaver pango atk adwaita-cursor-theme adwaita-icon-theme at at-spi2-atk at-spi2-core cairo-gobject colord-libs dconf desktop-file-utils ed emacs-filesystem gdk-pixbuf2 glib-networking gnutls gsettings-desktop-schemas gtk-update-icon-cache gtk3 hicolor-icon-theme jasper-libs json-glib libappindicator-gtk3 libdbusmenu libdbusmenu-gtk3 libepoxy liberation-fonts liberation-narrow-fonts liberation-sans-fonts liberation-serif-fonts libgusb libindicator-gtk3 libmodman libproxy libsoup libwayland-cursor libwayland-egl libxkbcommon m4 mailx nettle patch psmisc redhat-lsb-core redhat-lsb-submod-security rest spax time trousers xdg-utils xkeyboard-config alsa-lib</span><br></pre></td></tr></table></figure>

<h2 id="3、验证"><a href="#3、验证" class="headerlink" title="3、验证"></a>3、验证</h2><p>安装插件成功，安装依赖成功，重启grafana，点击页面分享，就可以看到可以渲染图片了（<strong>Direct link rendered image</strong>）</p>
<p><img src="/images/1712740297-9063a2af7bca0e63ec69bfdf1898f228.png" alt="image-20221019165608106"></p>
<p>图片默认保存位置是grafana的data目录下的png目录，保存天数默认为1天，默认位置是&#x2F;var&#x2F;lib&#x2F;grafana&#x2F;png</p>
<p><img src="/images/1712740297-6096501d770d88cbd8697a850374e2f5.png" alt="image-20221019170108495"></p>
<h2 id="4、常见问题"><a href="#4、常见问题" class="headerlink" title="4、常见问题"></a>4、常见问题</h2><p>（1）最常见的问题应该就是缺失依赖包，从官网可以解决，其他常见问题也可以直接看官网</p>
<p><a href="https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/troubleshooting/">https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/troubleshooting/</a></p>
<p>当然还可以看github的issue</p>
<p>github官网：<a href="https://github.com/grafana/grafana-image-renderer">https://github.com/grafana/grafana-image-renderer</a></p>
<p>（2）我遇到一个问题，提示是<strong>code &#x3D; Unauthenticated desc &#x3D; Unauthorized request”</strong></p>
<p>这是 &#x2F;var&#x2F;log&#x2F;grafana&#x2F;grafana.log的日志</p>
<p>level&#x3D;error msg&#x3D;”Rendering failed.” error&#x3D;”rpc error: code &#x3D; Unauthenticated desc &#x3D; Unauthorized request”</p>
<p><img src="/images/1712740297-98bc9e494a4ef07ece5487bdfb4049fb.png" alt="image-20221019152917727"></p>
<p>从官网的issue得到了解决答案,原来是下载匹配版本就行，我下载的是version&#x3D;9.2.1</p>
<p><a href="https://github.com/grafana/grafana-image-renderer/issues/370">https://github.com/grafana/grafana-image-renderer/issues/370</a></p>
<p><img src="/images/1712740297-10bd1e77fc526319203cbf92c53b1933.png" alt="image-20221019171112515"></p>
<p>注：每个版本都有对应匹配的，参考官网<a href="https://grafana.com/grafana/plugins/grafana-image-renderer/?tab=installation">https://grafana.com/grafana/plugins/grafana-image-renderer/?tab=installation</a></p>
<p><img src="/images/1712740297-e5a447c563be76fe4d894f2ff9ed99ac.png" alt="image-20221027095811677"></p>
<h2 id="5、python爬虫请求"><a href="#5、python爬虫请求" class="headerlink" title="5、python爬虫请求"></a>5、python爬虫请求</h2><p>（1）如果response.text中出现<strong>If you’re seeing this Grafana has failed to load its application files</strong>，则可能是需要验证，可以去grafana生成一个APIkey</p>
<p><strong>错误信息</strong></p>
<p><strong>If you’re seeing this Grafana has failed to load its application files</strong></p>
<p>\1. This could be caused by your reverse proxy settings.</p>
<p>\2. If you host grafana under subpath make sure your grafana.ini root_url setting includes subpath. If not using a reverse proxy make sure to set serve_from_sub_path to true.</p>
<p>\3. If you have a local dev build make sure you build frontend using: yarn start, yarn start:hot, or yarn build</p>
<p>\4. Sometimes restarting grafana-server can help</p>
<p>\5. Check if you are using a non-supported browser. For more information, refer to the list of <a href="https://grafana.com/docs/grafana/latest/installation/requirements/#supported-web-browsers">supported browsers</a>.</p>
<p><strong>错误页面</strong>(把response.text写到html后展示)</p>
<p><img src="/images/1712740297-0c5bcb88d7c936bdc8a7ca3bb8400707.png" alt="image-20221026112231961"></p>
<p>（2）如果&#x2F;var&#x2F;log&#x2F;grafana&#x2F;grafana.log日志中出现302，则也可能是需要认证</p>
<p>logger&#x3D;context userId&#x3D;0 orgId&#x3D;0 uname&#x3D; t&#x3D;2022-10-26T10:58:40.245237482+08:00 level&#x3D;info msg&#x3D;”Request Completed” method&#x3D;GET path&#x3D;&#x2F;render&#x2F;d-solo&#x2F;nano-vm-detail&#x2F;nanoxu-ni-ji-ming-xi <strong>status&#x3D;302</strong> remote_addr&#x3D;172.16.70.189 time_ms&#x3D;1 duration&#x3D;1.300399ms size&#x3D;29 referer&#x3D; handler&#x3D;&#x2F;render&#x2F;*</p>
<p>（3）如果出现401，则也是需要认证</p>
<p>API keys生成页面</p>
<p><img src="/images/1712740297-b3895f64da392c101d86b0daab0cd1a8.png" alt="image-20221019171153866"></p>
<p>然后请求的时候加在header中就行，保存png图片即可</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">response=requests.get(<span class="string">&quot;http://172.16.90.18:3000/render/d-solo/shEoIlI4k/cpushi-yong-lu?orgId=1&amp;from=1666142237595&amp;to=1666163837596&amp;panelId=2&amp;width=1000&amp;height=500&amp;tz=Asia%2FShanghai&quot;</span>,headers=&#123;<span class="string">&quot;Authorization&quot;</span>:<span class="string">&quot;Bearer sdfsdfsd==&quot;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span>(response.status_code)</span><br><span class="line">filename=<span class="string">&#x27;show.png&#x27;</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    f.write(response.content)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;download png success, save to <span class="subst">&#123;filename&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="6、支持中文标题的图片"><a href="#6、支持中文标题的图片" class="headerlink" title="6、支持中文标题的图片"></a>6、支持中文标题的图片</h2><p>默认是不支持中文的，可以通过配置来改变，配置参考上面提到的官网链接就行<a href="https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/#configuration">https://grafana.com/docs/grafana/v9.0/setup-grafana/image-rendering/#configuration</a></p>
<p><img src="/images/1712740297-c1879f6c141d7c2299fce1fef1530399.png" alt="image-20221019171540105"></p>
<p>配置文件修改&#x2F;etc&#x2F;grafana&#x2F;grafana.ini</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[plugin.grafana-image-renderer]</span> </span><br><span class="line"><span class="attr">rendering_timezone</span> = Asia/Shanghai </span><br><span class="line"><span class="attr">rendering_language</span> = zh-CN,zh<span class="comment">;q=0.9</span></span><br></pre></td></tr></table></figure>

<p>然后安装中文字体</p>
<p>centos7执行<code>yum groupinstall Fonts</code> 其他机器还需要谷歌一下</p>
<p>参考：<a href="https://github.com/grafana/grafana/issues/24729">https://github.com/grafana/grafana/issues/24729</a></p>
<p><img src="/images/1712740297-f1a6ca0ea9390870119ab365eaeed36f.png" alt="image-20221019190724911"></p>
<p>重启</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart grafana-server.service</span><br></pre></td></tr></table></figure>

<p>可以看到已经支持中文了</p>
<p><img src="/images/1712740297-8d0d3e0f55286fd303914a0c3a9d120c.png" alt="image-20221019190808595"></p>
<p>docker方式参考链接是：<a href="https://blog.csdn.net/dandanfengyun/article/details/115346594">https://blog.csdn.net/dandanfengyun/article/details/115346594</a></p>
<p><a href="https://blog.csdn.net/lee_yanyi/article/details/120364080">https://blog.csdn.net/lee_yanyi&#x2F;article&#x2F;details&#x2F;120364080</a></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana 免密登录-隐藏导航栏-主题变换</title>
    <url>/2024/04/11/Grafana-%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95-%E9%9A%90%E8%97%8F%E5%AF%BC%E8%88%AA%E6%A0%8F-%E4%B8%BB%E9%A2%98%E5%8F%98%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="一-免密登录"><a href="#一-免密登录" class="headerlink" title="一. 免密登录"></a>一. 免密登录</h2><hr>
<p>[Grafana]的常用方式： 将配置好的Grafana图嵌入到系统页面中</p>
<p><img src="/images/1712803292-0e50d3f468d8801f3c88edbbf06dd5d1.png"></p>
<p>为了实现可免登录访问，可以通过如下方式进行设置：</p>
<h4 id="1-修改Grafana-配置文件"><a href="#1-修改Grafana-配置文件" class="headerlink" title="1. 修改Grafana[配置文件]"></a>1. 修改Grafana[配置文件]</h4><p>在Grafana的配置文件 &#x2F;etc&#x2F;grafana&#x2F;grafana.ini 中，找到 [auth.anonymous] 配置块，将其下的匿名访问控制 enabled 设置为 true，组织权限设置为 Viewer。</p>
<ul>
<li>Viewer：<strong>只读</strong>模式</li>
<li>Editor ：<strong>可编辑</strong>模式</li>
<li> Admin：<strong>管理员</strong>模式</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#################################### Anonymous Auth ######################</span></span><br><span class="line">[auth.anonymous]</span><br><span class="line"><span class="comment"># enable anonymous access</span></span><br><span class="line">enabled = true</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify organization name that should be used for unauthenticated users</span></span><br><span class="line">org_name = Main Org.</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify role for unauthenticated users</span></span><br><span class="line">org_role = Viewer</span><br></pre></td></tr></table></figure>

<p> 之后重新运行容器，（这种方法网上有人成功过，但是我失败了）</p>
<h4 id="2-宿主机default-ini-进行挂载，本地修改default-ini容器配置改变"><a href="#2-宿主机default-ini-进行挂载，本地修改default-ini容器配置改变" class="headerlink" title="2. 宿主机default.ini 进行挂载，本地修改default.ini容器配置改变"></a>2. 宿主机default.ini 进行挂载，本地修改default.ini容器配置改变</h4><p>&#x2F;usr&#x2F;share&#x2F;grafana&#x2F;conf&#x2F;defaults.ini</p>
<p>同样是复制到宿主机中，修改也是一样的。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker run --name grafana  -p <span class="number">3000</span>:<span class="number">3000</span>   -v 宿主机文件存放目录:/usr/share/grafana/conf/ grafana/grafana:<span class="number">10.2</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>

<p>通过浏览器访问，可以成功匿名登陆</p>
<h4 id="3-环境变量（最方便）"><a href="#3-环境变量（最方便）" class="headerlink" title="3. 环境变量（最方便）"></a>3. 环境变量（最方便）</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker run -d --name=grafana -p <span class="number">3000</span>:<span class="number">3000</span>  -e <span class="string">&quot;GF_AUTH_PROXY_ENABLED=true&quot;</span>  -e <span class="string">&quot;GF_AUTH_ANONYMOUS_ENABLED=true&quot;</span> -e <span class="string">&quot;GF_SECURITY_ALLOW_EMBEDDING=true&quot;</span>  grafana/grafana:<span class="number">10.2</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="二-隐藏导航栏"><a href="#二-隐藏导航栏" class="headerlink" title="二. 隐藏导航栏"></a>二. 隐藏导航栏</h2><h4 id="1-修改grafana配置，开启允许嵌入及匿名访问"><a href="#1-修改grafana配置，开启允许嵌入及匿名访问" class="headerlink" title="1. 修改grafana配置，开启允许嵌入及匿名访问"></a>1. 修改grafana配置，开启允许嵌入及匿名访问</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vim /etc/grafana/grafana.ini</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许浏览器嵌入grafana</span></span><br><span class="line">allow_embedding = true</span><br><span class="line"></span><br><span class="line"><span class="comment"># 开启匿名访问</span></span><br><span class="line">[auth.anonymous]</span><br><span class="line"><span class="comment"># enable anonymous access</span></span><br><span class="line">enabled = true</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改参数后需重启grafana</span></span><br></pre></td></tr></table></figure>

<p>隐藏导航栏相当于URL后面加上参数 “&amp;kiosk”<br><img src="/images/1712803292-19fb9c82b5163bc401f28991f9250785.png"></p>
<hr>
<h2 id="三-主题变换"><a href="#三-主题变换" class="headerlink" title="三. 主题变换"></a>三. 主题变换</h2><h4 id="1-主题展示"><a href="#1-主题展示" class="headerlink" title="1. 主题展示"></a>1. 主题展示</h4><p>为了使Grafana看板更具吸引力，让页面不再单调，你可以通过一些简单的方式进行个性化定制。首先，你可以改变Grafana的主题色，使其更符合你的审美偏好。通过调整主题色，你可以选择更亮丽或更柔和的色彩，以满足你对色彩的不同需求</p>
<p><img src="/images/1712803292-ef23dcd645e0da32ad6cc3c57dba7ff9.png"></p>
<p><img src="/images/1712803292-b46455004dae20bfa213428a203bda1b.png"></p>
<p><img src="/images/1712803292-65d5babb9afc9244e9c548af661baf17.png"></p>
<p><img src="/images/1712803292-530ec545ab0935221aed76c4a269a437.png"></p>
<p><img src="/images/1712803292-1672e01de71e27e4cbc13d1d3e09a1a4.png"></p>
<p><img src="/images/1712803292-4f718dcab05f50b8bf95d3222c02c170.png"></p>
<h4 id="2-插件下载-（当前版本为10-2-2，插件资源搜索是没有的，所以需要命令安装）"><a href="#2-插件下载-（当前版本为10-2-2，插件资源搜索是没有的，所以需要命令安装）" class="headerlink" title="2. 插件下载 （当前版本为10.2.2，插件资源搜索是没有的，所以需要命令安装）"></a>2. 插件下载 （当前版本为10.2.2，插件资源搜索是没有的，所以需要命令安装）</h4><ul>
<li>  docker  ps  查看容器id</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">CONTAINER ID   IMAGE                         COMMAND                   CREATED        STATUS        PORTS</span><br><span class="line">                                                                          NAMES</span><br><span class="line">6035c0634d6b   grafana/grafana:<span class="number">10.2</span><span class="number">.2</span>        <span class="string">&quot;/run.sh&quot;</span>                 <span class="number">41</span> hours ago   Up <span class="number">25</span> hours   <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">3000</span>-&gt;<span class="number">3000</span>/tcp                                                                        grafana</span><br></pre></td></tr></table></figure>

<ul>
<li> 查到 <code>CONTAINER ID</code> 然后进入容器</li>
</ul>
<p> </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进入容器</span></span><br><span class="line">docker <span class="built_in">exec</span> -it 6035c0634d6b bash</span><br><span class="line"><span class="comment"># 安装插件</span></span><br><span class="line">grafana-cli plugins install yesoreyeram-boomtheme-panel</span><br></pre></td></tr></table></figure>

<ul>
<li>安装完成后，需要重启容器</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker container restart 6035c0634d6b</span><br></pre></td></tr></table></figure>

<ul>
<li> 安装完成</li>
</ul>
<p><img src="/images/1712803292-4d0fe56096ae5809abff15b548b936b6.png"></p>
<h4 id="3-css资源下载，nginx配置访问"><a href="#3-css资源下载，nginx配置访问" class="headerlink" title="3. css资源下载，nginx配置访问"></a>3. css资源下载，nginx配置访问</h4><p><a href="https://codeload.github.com/charles1503/grafana-theme/zip/refs/heads/master" title="https://codeload.github.com/charles1503/grafana-theme/zip/refs/heads/master">https://codeload.github.com/charles1503/grafana-theme/zip/refs/heads/master</a></p>
<p><a href="https://codeload.github.com/PettterWang/grafana_theme.park/zip/refs/heads/main" title="https://codeload.github.com/PettterWang/grafana_theme.park/zip/refs/heads/main">https://codeload.github.com/PettterWang/grafana_theme.park&#x2F;zip&#x2F;refs&#x2F;heads&#x2F;main</a></p>
<ul>
<li><strong>park的样式更多一点，将以上css文件解压到本地目录（服务器同理）</strong></li>
</ul>
<p><img src="/images/1712803292-be977b9f7a768edc62709a51eb376c78.png"></p>
<ul>
<li> nginx 搭建，用来访问E盘下文件夹里边css样式</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># E:/css 为我本地目录文件 /var/car_image 为挂载之后本地目录的位置</span></span><br><span class="line">docker run -d -p <span class="number">85</span>:<span class="number">80</span> -v E:/css:/var/car_image nginx</span><br></pre></td></tr></table></figure>

<ul>
<li>当我们挂载之后去容器目录&#x2F;etc&#x2F;nginx配置里找到nginx.conf</li>
</ul>
<p> </p>
<p><img src="/images/1712803292-27d13993b17d2e41e749434ddbdc10bf.png"></p>
<p> 加入下列代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># /car_image/ 为浏览器输入路径（别名)</span></span><br><span class="line"><span class="comment"># /var/car_image/ 为实际存在的路径</span></span><br><span class="line"><span class="comment"># autoindex on; 允许访问目录</span></span><br><span class="line">server &#123;</span><br><span class="line"></span><br><span class="line">    location /car_image/ &#123;</span><br><span class="line">        alias /var/car_image/;</span><br><span class="line">        autoindex on;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p><img src="/images/1712803292-78ec454a9d7d586d20f4416247f9f3e4.png"></p>
<ul>
<li>  保存重新启动</li>
</ul>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">docker restart 容器<span class="built_in">id</span>或者容器名字</span><br></pre></td></tr></table></figure>

<ul>
<li>  接下来我们可以在浏览器输入ip地址加端口以及我们所配置的目录，效果如下</li>
<li>  (这里我挂载的是整个E盘目录) 所以效果显示及如下，我们可以用路径访问到任何css样式</li>
</ul>
<p><img src="/images/1712803292-5b2423d8524be10b1310b5dc530d4509.png"></p>
<p><img src="/images/1712803292-51e7a1bdd71a033c3c3a6d06166117e6.png"></p>
<hr>
<h4 id="4-grafana-主题修改"><a href="#4-grafana-主题修改" class="headerlink" title="4. grafana 主题修改"></a>4. grafana 主题修改</h4><ul>
<li>新建一个空白的仪表盘及视图</li>
</ul>
<p><img src="/images/1712803292-a6906c8a746ef1537e891ea949e63909.png"></p>
<ul>
<li> 进入视图，点击圈出红色部分进行下拉，选中我们下载好的插件</li>
</ul>
<p><img src="/images/1712803292-72d125772d1917d1bed90d300836c0b6.png"></p>
<p><img src="/images/1712803292-bd418f375860062536e1bc542438ffa4.png"></p>
<ul>
<li>插件对应视图会显示系统自带的两种主题</li>
</ul>
<p><img src="/images/1712803292-c2dcbb083cd3d7d439ff2d98a9ffdad7.png"></p>
<ul>
<li>点击圈出蓝色按钮来对主题进行添加</li>
</ul>
<p><img src="/images/1712803292-5d0b693423d2979f720079a8f903de98.png"></p>
<ul>
<li> 可以有两种方式替换背景，第一种为背景图片，第二种为css样式</li>
</ul>
<p><img src="/images/1712803292-19b0b8bdedded0e8da6f3ff35791dde6.png"></p>
<ul>
<li>http链接地址为我们配置nginx所访问css本地路径</li>
</ul>
<p> </p>
<p><img src="/images/1712803292-0782b7b2d132fa3b706e156712538a94.png"></p>
<ul>
<li> 点击背景测试按钮来进行主题颜色更改</li>
</ul>
<p><img src="/images/1712803292-4d91440ea96673f1989cb9fff62cd885.png"></p>
<ul>
<li> 点击css样式测试按钮来进行主题颜色更改</li>
</ul>
<p><img src="/images/1712803292-5d3bdc5ea0f84783f31015d27057a8a2.png"></p>
<p><img src="/images/1712803292-3b0127459703c6259456d1a0e456deb3.png"></p>
<ul>
<li> 设置进入视图默认主题，保存，进入仪表盘默认展示为当前默认主题</li>
</ul>
<p><img src="/images/1712803292-aa5ea2716d23cc1a813e6c1f93adc271.png"></p>
<ul>
<li> 为了方便，我们可以把写好的组件放入库面板，方便以后进行加载</li>
</ul>
<p><img src="/images/1712803292-46a7fe46913bc0262378a72fb8bb46d2.png"></p>
<p><img src="/images/1712803292-407a96682942cd2c0b72c6fec12f4e44.png"></p>
<p><img src="/images/1712803292-2118ce9bf440ff8403c2ddb1d1e4c029.png"></p>
<ul>
<li> 加载完成</li>
</ul>
<p><img src="/images/1712803292-9e8e3160521b876666d8cc5157e68797.png"></p>
<ul>
<li> 为了不影响我们图表展示内容 ，点击Hide Theme Picker 对该视图按钮进行隐藏</li>
</ul>
<p><img src="/images/1712803292-d8135becb57510d84a539b5dda82503d.png"></p>
<ul>
<li> 标题进行隐藏</li>
</ul>
<p><img src="/images/1712803292-5a6adc2d94655cc7df2473990021e82f.png"></p>
<ul>
<li>返回页面，组件隐藏掉了，但是还在原来的位置，我们可以对她的大小就行调整 ，放置到角落不影响我们图表的展示</li>
</ul>
<p><img src="/images/1712803292-2742ddd46ad6a55303836f584dd986e1.png"></p>
<ul>
<li> 现在我们可以随机定义放置图表</li>
</ul>
<p><img src="/images/1712803292-69f7f279d111c4eaafacdccf98e4011c.png"></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>通过iFrame嵌入Grafana页面或pannel</title>
    <url>/2024/04/11/%E9%80%9A%E8%BF%87iFrame%E5%B5%8C%E5%85%A5Grafana%E9%A1%B5%E9%9D%A2%E6%88%96pannel/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>在当前[数据驱动]的时代，有效地可视化和监控关键性能指标变得至关重要。Grafana，作为一个开源的监控解决方案，提供了强大的功能来呈现和分析数据，从而帮助用户及时洞察和响应各种情况。随着技术的不断发展，将这些信息无缝集成到现有的网页和应用程序中变得越来越常见。本文旨在探讨如何通过iFrame将Grafana面板或仪表盘嵌入到网页中，这不仅增强了数据的可访问性和交互性，还为实现更加动态和个性化的用户体验打开了大门。通过这篇文章，我们将详细介绍嵌入Grafana面板的步骤和注意事项，帮助读者更好地利用这一强大工具，以便更有效地监控和展示关键数据。</p>
<h3 id="1-修改Grafana配置"><a href="#1-修改Grafana配置" class="headerlink" title="1. 修改Grafana配置"></a>1. 修改Grafana配置</h3><h4 id="1-1-允许grafana匿名访问"><a href="#1-1-允许grafana匿名访问" class="headerlink" title="1.1 允许grafana匿名访问"></a>1.1 允许grafana匿名访问</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/grafana/grafana.ini</span><br></pre></td></tr></table></figure>

<p>相关内容及参考修改如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#################################### Anonymous Auth ######################</span></span><br><span class="line"><span class="section">[auth.anonymous]</span></span><br><span class="line"><span class="comment"># enable anonymous access</span></span><br><span class="line"><span class="attr">enabled</span> = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># specify organization name that should be used for unauthenticated users</span></span><br><span class="line"><span class="attr">org_name</span> = Test</span><br><span class="line"></span><br><span class="line"><span class="comment"># specify role for unauthenticated users</span></span><br><span class="line"><span class="attr">org_role</span> = Viewer</span><br></pre></td></tr></table></figure>

<h4 id="1-2-允许被iFrame嵌入"><a href="#1-2-允许被iFrame嵌入" class="headerlink" title="1.2 允许被iFrame嵌入"></a>1.2 允许被iFrame嵌入</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vim /etc/grafana/grafana.ini</span><br></pre></td></tr></table></figure>

<p>内容如下：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment"># set to true if you want to allow browsers to render Grafana in a &lt;frame&gt;, &lt;iframe&gt;, &lt;embed&gt; or &lt;object&gt;. default is false.</span></span><br><span class="line"><span class="comment">;allow_embedding = false</span></span><br></pre></td></tr></table></figure>

<p>将上述配置前面的;移除，同时改为true，即：</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">allow_embedding</span> = <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<h3 id="2-嵌入其他工程"><a href="#2-嵌入其他工程" class="headerlink" title="2. 嵌入其他工程"></a>2. 嵌入其他工程</h3><h4 id="2-1-Dashboard页面嵌套链接获取"><a href="#2-1-Dashboard页面嵌套链接获取" class="headerlink" title="2.1 Dashboard页面嵌套链接获取"></a>2.1 Dashboard页面嵌套链接获取</h4><p>grafana具体Dashboard页面，右上角分享按钮点开有链接，拷贝后作为iframe的url<br><img src="/images/1712805058-9c1770867327909ead3cd020fd3396c4.png"></p>
<p>或者可以通过快照导入，生成本地快照，拷贝快照链接，作为ifame的url即可<br><img src="/images/1712805058-c3d6172bb2ded2b6a5b4cf41d949c487.png"></p>
<h4 id="2-2-Pannel组件嵌入链接获取"><a href="#2-2-Pannel组件嵌入链接获取" class="headerlink" title="2.2 Pannel组件嵌入链接获取"></a>2.2 Pannel组件嵌入链接获取</h4><p>针对具体pannel，其嵌入其他页面的链接可在其自己组件的分享界面获取<br><img src="/images/1712805058-bd1e2dcfa6b9ff1fcba6aa0784ed7949.png"></p>
<h4 id="2-3-嵌入代码示意"><a href="#2-3-嵌入代码示意" class="headerlink" title="2.3 嵌入代码示意"></a>2.3 嵌入代码示意</h4><p>前端通过iframe嵌入grafana对应信息块pannel的示例代码如下：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!-- IP数据隐藏，此处只是示意 --&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">iframe</span></span></span><br><span class="line"><span class="tag">      <span class="attr">src</span>=<span class="string">&quot;http://xxx.xxx.xxx.xxx:3000/d-solo/uid001/xxxxxxxxxxx?orgId=1&amp;from=1588146683228&amp;to=1588150283228&amp;var-job=All&amp;var-hostname=All&amp;var-node=All&amp;var-maxmount=%2Fetc%2Fnode-exporter&amp;var-env=&amp;var-name=&amp;var-CR_UID=uid001&amp;panelId=7&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">width</span>=<span class="string">&quot;450&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">height</span>=<span class="string">&quot;200&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>测试ifame嵌套。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h4 id="2-4-效果图"><a href="#2-4-效果图" class="headerlink" title="2.4 效果图"></a>2.4 效果图</h4><p>效果图如下：<br><img src="/images/1712805058-80536e33a27abd97e15b0123b9153344.png"></p>
<h3 id="3-注意"><a href="#3-注意" class="headerlink" title="3. 注意"></a>3. 注意</h3><p>该方式下，需要注意安全性和访问权限： 如果您的Grafana面板包含敏感数据，确保嵌入到的网站是安全的，并且只有授权用户才能访问。此外，根据您的Grafana配置，您可能需要对访问Grafana的用户进行身份验证。</p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana 钉钉告警包含图片[grafana-image-renderer]</title>
    <url>/2024/04/11/Grafana-%E9%92%89%E9%92%89%E5%91%8A%E8%AD%A6%E5%8C%85%E5%90%AB%E5%9B%BE%E7%89%87-grafana-image-renderer/</url>
    <content><![CDATA[<p>一、环境</p>
<p>grafana 使用nginx做转发，源地址<a href="http://192.168.1.180:3000/">http://192.168.1.180:3000</a>   nginx转发的grafana地址： <a href="http://grafana.xxx.com/grafana">http://grafana.xxx.com/grafana</a></p>
<p>二、实现：</p>
<p><img src="/images/1712819196-e36ec9652d5fefb16b30876a7ca5f571.png"></p>
<p>(1)、点击 “More”跳转grafana网页</p>
<p>(2)、告警信息包含 image图片</p>
<p>1、点击 “More”跳转grafana网页，配置</p>
<p>nginx配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> [root@kibana vhost]# cat grafana.conf</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  grafana.xxx.com;</span><br><span class="line">        access_log /var/log/nginx/grafana.xxx.com.access.log;</span><br><span class="line">        error_log  /var/log/nginx/grafana.xxx.com.error.log;</span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        #include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location /grafana/ &#123;</span><br><span class="line">                root html;</span><br><span class="line">                index index.html index.htm;</span><br><span class="line">                proxy_pass http://192.168.1.180:3000/;  #一定要在端口号后面加“/”</span><br><span class="line">                proxy_set_header Host $host;</span><br><span class="line">                proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">                proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;</span><br><span class="line">                proxy_redirect default;</span><br><span class="line">                proxy_http_version 1.1;</span><br><span class="line">                proxy_set_header Connection &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>grafana配置修改</p>
<p>修改grafana.ini配置文件的server配置</p>
<p>domain &#x3D; grafana.xxx.com</p>
<p>root_url &#x3D; <a href="http://grafana.xxx.com/grafana">http://grafana.xxx.com/grafana</a></p>
<p>serve_from_sub_path &#x3D; true</p>
<p>2、实现告警信息包含 image图片</p>
<p>（1）安装grafana-image-renderer</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull grafana/grafana-image-renderer</span><br><span class="line"></span><br><span class="line">docker run -d --name=render --network=host --restart=always -e BROWSER_TZ=Asia/Shanghai grafana/grafana-image-renderer</span><br></pre></td></tr></table></figure>

<p>安装完成可访问 192.168.1.180:8081 测试</p>
<p><img src="/images/1712819196-d0fc8fd4035330e2b3cb8bfcc9b6c40e.png"></p>
<p> （2）修改 &#x2F;etc&#x2F;grafana&#x2F;grafana.ini</p>
<p>server_url 是Remote rendering service 的地址</p>
<p>server_url &#x3D; <a href="http://192.168.1.180:8081/render/">http://192.168.1.180:8081/render/</a></p>
<p>callback_url 是本grafana的地址(可以不设置)</p>
<p>callback_url &#x3D; <a href="http://grafana.xxx.com/grafana/">http://grafana.xxx.com/grafana/</a></p>
<p>[external_image_storage] #相当于把本机当作一个服务器，可以通过本机IP访问到存储在本地的图片。</p>
<p>provider &#x3D; local</p>
<p>temp_data_lifetime &#x3D; 24h  #截图的图片保留24小时</p>
<p>concurrent_render_limit &#x3D; 5  #同时最大渲染数5</p>
<p>3、grafana钉钉告警设置</p>
<p><img src="/images/1712819196-1989d35082367be6780446bd9573f702.png"></p>
<p>grafana 8.0版本开始不再支持钉钉发送消息加载image，可以使用邮件通知</p>
<p><a href="https://grafana.com/docs/grafana/latest/alerting/manage-notifications/images-in-notifications/">https://grafana.com/docs/grafana/latest/alerting/manage-notifications/images-in-notifications/</a></p>
<p>grafana.ini配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@prometheus opt]# cat grafana.ini |grep -Ev &#x27;^$|^#&#x27;</span><br><span class="line">;app_mode = production</span><br><span class="line">;instance_name = $&#123;HOSTNAME&#125;</span><br><span class="line">[paths]</span><br><span class="line">data = /var/lib/grafana</span><br><span class="line">temp_data_lifetime = 24h</span><br><span class="line">logs = /var/log/grafana</span><br><span class="line">plugins = /var/lib/grafana/plugins</span><br><span class="line">;provisioning = conf/provisioning</span><br><span class="line">[server]</span><br><span class="line">;protocol = http</span><br><span class="line">;http_addr = </span><br><span class="line">;enforce_domain = true</span><br><span class="line">domain = grafana.xxx.com</span><br><span class="line">;serve_from_sub_path = true</span><br><span class="line">;enforce_domain = false</span><br><span class="line">root_url = %(protocol)s://%(domain)s</span><br><span class="line">;router_logging = false</span><br><span class="line">static_root_path = public</span><br><span class="line">;enable_gzip = false</span><br><span class="line">;cert_file =</span><br><span class="line">;cert_key =</span><br><span class="line">;socket =</span><br><span class="line">[database]</span><br><span class="line">;type = sqlite3</span><br><span class="line">;host = 127.0.0.1:3306</span><br><span class="line">;name = grafana</span><br><span class="line">;user = root</span><br><span class="line">;password =</span><br><span class="line">;url =</span><br><span class="line">;ssl_mode = disable</span><br><span class="line">;ca_cert_path =</span><br><span class="line">;client_key_path =</span><br><span class="line">;client_cert_path =</span><br><span class="line">;server_cert_name =</span><br><span class="line">;path = grafana.db</span><br><span class="line">;max_idle_conn = 2</span><br><span class="line">;max_open_conn =</span><br><span class="line">;conn_max_lifetime = 14400</span><br><span class="line">;log_queries =</span><br><span class="line">;cache_mode = private</span><br><span class="line">[remote_cache]</span><br><span class="line">;type = database</span><br><span class="line">;connstr =</span><br><span class="line">[dataproxy]</span><br><span class="line">;logging = false</span><br><span class="line">;timeout = 30</span><br><span class="line">;keep_alive_seconds = 30</span><br><span class="line">;tls_handshake_timeout_seconds = 10</span><br><span class="line">;expect_continue_timeout_seconds = 1</span><br><span class="line">;max_idle_connections = 100</span><br><span class="line">;idle_conn_timeout_seconds = 90</span><br><span class="line">;send_user_header = false</span><br><span class="line">[analytics]</span><br><span class="line">;reporting_enabled = true</span><br><span class="line">;check_for_updates = true</span><br><span class="line">;google_analytics_ua_id =</span><br><span class="line">;google_tag_manager_id =</span><br><span class="line">[security]</span><br><span class="line">;disable_initial_admin_creation = false</span><br><span class="line">;admin_user = admin</span><br><span class="line">;admin_password = admin</span><br><span class="line">;secret_key = SW2YcwTIb9zpOOhoPsMm</span><br><span class="line">;disable_gravatar = false</span><br><span class="line">;data_source_proxy_whitelist =</span><br><span class="line">;disable_brute_force_login_protection = false</span><br><span class="line">cookie_secure = false</span><br><span class="line">;cookie_samesite = lax</span><br><span class="line">;allow_embedding = false</span><br><span class="line">;strict_transport_security = false</span><br><span class="line">;strict_transport_security_max_age_seconds = 86400</span><br><span class="line">;strict_transport_security_preload = false</span><br><span class="line">;strict_transport_security_subdomains = false</span><br><span class="line">;x_content_type_options = true</span><br><span class="line">;x_xss_protection = true</span><br><span class="line">[snapshots]</span><br><span class="line">;external_enabled = true</span><br><span class="line">;external_snapshot_url = https://snapshots-origin.raintank.io</span><br><span class="line">;external_snapshot_name = Publish to snapshot.raintank.io</span><br><span class="line">;public_mode = false</span><br><span class="line">;snapshot_remove_expired = true</span><br><span class="line">[dashboards]</span><br><span class="line">;versions_to_keep = 20</span><br><span class="line">;min_refresh_interval = 5s</span><br><span class="line">;default_home_dashboard_path =</span><br><span class="line">[users]</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;allow_org_create = true</span><br><span class="line">;auto_assign_org = true</span><br><span class="line">;auto_assign_org_id = 1</span><br><span class="line">;auto_assign_org_role = Viewer</span><br><span class="line">;verify_email_enabled = false</span><br><span class="line">;login_hint = email or username</span><br><span class="line">;password_hint = password</span><br><span class="line">;default_theme = dark</span><br><span class="line">;external_manage_link_url =</span><br><span class="line">;external_manage_link_name =</span><br><span class="line">;external_manage_info =</span><br><span class="line">;viewers_can_edit = false</span><br><span class="line">;editors_can_admin = false</span><br><span class="line">;user_invite_max_lifetime_duration = 24h</span><br><span class="line">[auth]</span><br><span class="line">;login_cookie_name = grafana_session</span><br><span class="line">;login_maximum_inactive_lifetime_duration =</span><br><span class="line">;login_maximum_lifetime_duration =</span><br><span class="line">;token_rotation_interval_minutes = 10</span><br><span class="line">;disable_login_form = false</span><br><span class="line">;disable_signout_menu = false</span><br><span class="line">;signout_redirect_url =</span><br><span class="line">;oauth_auto_login = false</span><br><span class="line">;oauth_state_cookie_max_age = 600</span><br><span class="line">;api_key_max_seconds_to_live = -1</span><br><span class="line">;sigv4_auth_enabled = false</span><br><span class="line">[auth.anonymous]</span><br><span class="line">;enabled = false</span><br><span class="line">;org_name = Main Org.</span><br><span class="line">;org_role = Viewer</span><br><span class="line">;hide_version = false</span><br><span class="line">[auth.github]</span><br><span class="line">;enabled = false</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_id</span><br><span class="line">;client_secret = some_secret</span><br><span class="line">;scopes = user:email,read:org</span><br><span class="line">;auth_url = https://github.com/login/oauth/authorize</span><br><span class="line">;token_url = https://github.com/login/oauth/access_token</span><br><span class="line">;api_url = https://api.github.com/user</span><br><span class="line">;allowed_domains =</span><br><span class="line">;team_ids =</span><br><span class="line">;allowed_organizations =</span><br><span class="line">[auth.gitlab]</span><br><span class="line">;enabled = false</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_id</span><br><span class="line">;client_secret = some_secret</span><br><span class="line">;scopes = api</span><br><span class="line">;auth_url = https://gitlab.com/oauth/authorize</span><br><span class="line">;token_url = https://gitlab.com/oauth/token</span><br><span class="line">;api_url = https://gitlab.com/api/v4</span><br><span class="line">;allowed_domains =</span><br><span class="line">;allowed_groups =</span><br><span class="line">[auth.google]</span><br><span class="line">;enabled = false</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_client_id</span><br><span class="line">;client_secret = some_client_secret</span><br><span class="line">;scopes = https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email</span><br><span class="line">;auth_url = https://accounts.google.com/o/oauth2/auth</span><br><span class="line">;token_url = https://accounts.google.com/o/oauth2/token</span><br><span class="line">;api_url = https://www.googleapis.com/oauth2/v1/userinfo</span><br><span class="line">;allowed_domains =</span><br><span class="line">;hosted_domain =</span><br><span class="line">[auth.grafana_com]</span><br><span class="line">;enabled = false</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_id</span><br><span class="line">;client_secret = some_secret</span><br><span class="line">;scopes = user:email</span><br><span class="line">;allowed_organizations =</span><br><span class="line">[auth.azuread]</span><br><span class="line">;name = Azure AD</span><br><span class="line">;enabled = false</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_client_id</span><br><span class="line">;client_secret = some_client_secret</span><br><span class="line">;scopes = openid email profile</span><br><span class="line">;auth_url = https://login.microsoftonline.com/&lt;tenant-id&gt;/oauth2/v2.0/authorize</span><br><span class="line">;token_url = https://login.microsoftonline.com/&lt;tenant-id&gt;/oauth2/v2.0/token</span><br><span class="line">;allowed_domains =</span><br><span class="line">;allowed_groups =</span><br><span class="line">[auth.okta]</span><br><span class="line">;name = Okta</span><br><span class="line">;enabled = false</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_id</span><br><span class="line">;client_secret = some_secret</span><br><span class="line">;scopes = openid profile email groups</span><br><span class="line">;auth_url = https://&lt;tenant-id&gt;.okta.com/oauth2/v1/authorize</span><br><span class="line">;token_url = https://&lt;tenant-id&gt;.okta.com/oauth2/v1/token</span><br><span class="line">;api_url = https://&lt;tenant-id&gt;.okta.com/oauth2/v1/userinfo</span><br><span class="line">;allowed_domains =</span><br><span class="line">;allowed_groups =</span><br><span class="line">;role_attribute_path =</span><br><span class="line">[auth.generic_oauth]</span><br><span class="line">;enabled = false</span><br><span class="line">;name = OAuth</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;client_id = some_id</span><br><span class="line">;client_secret = some_secret</span><br><span class="line">;scopes = user:email,read:org</span><br><span class="line">;email_attribute_name = email:primary</span><br><span class="line">;email_attribute_path =</span><br><span class="line">;login_attribute_path =</span><br><span class="line">;id_token_attribute_name =</span><br><span class="line">;auth_url = https://foo.bar/login/oauth/authorize</span><br><span class="line">;token_url = https://foo.bar/login/oauth/access_token</span><br><span class="line">;api_url = https://foo.bar/user</span><br><span class="line">;allowed_domains =</span><br><span class="line">;team_ids =</span><br><span class="line">;allowed_organizations =</span><br><span class="line">;role_attribute_path =</span><br><span class="line">;tls_skip_verify_insecure = false</span><br><span class="line">;tls_client_cert =</span><br><span class="line">;tls_client_key =</span><br><span class="line">;tls_client_ca =</span><br><span class="line">[auth.basic]</span><br><span class="line">;enabled = true</span><br><span class="line">[auth.proxy]</span><br><span class="line">;enabled = false</span><br><span class="line">;header_name = X-WEBAUTH-USER</span><br><span class="line">;header_property = username</span><br><span class="line">;auto_sign_up = true</span><br><span class="line">;sync_ttl = 60</span><br><span class="line">;whitelist = 192.168.1.1, 192.168.2.1</span><br><span class="line">;headers = Email:X-User-Email, Name:X-User-Name</span><br><span class="line">;enable_login_token = false</span><br><span class="line">[auth.ldap]</span><br><span class="line">;enabled = false</span><br><span class="line">;config_file = /etc/grafana/ldap.toml</span><br><span class="line">;allow_sign_up = true</span><br><span class="line">;sync_cron = &quot;0 0 1 * * *&quot;</span><br><span class="line">;active_sync_enabled = true</span><br><span class="line">[smtp]</span><br><span class="line">enabled = true</span><br><span class="line">host = smtp.mxhichina.com:465</span><br><span class="line">user = xxx@xxx.com   ###使用的是阿里云的企业邮箱</span><br><span class="line">password = &quot;xxxx&quot;    ###此处阿里云企业邮箱使用的是user的密码， 别的类型邮箱需要开通SMTP，并在此处填写授权码</span><br><span class="line">cert_file =</span><br><span class="line">key_file =</span><br><span class="line">skip_verify = true</span><br><span class="line">from_address = xxx@xxx.com</span><br><span class="line">from_name = Grafana</span><br><span class="line">;ehlo_identity = dashboard.example.com</span><br><span class="line">;startTLS_policy = NoStartTLS</span><br><span class="line">[emails]</span><br><span class="line">;welcome_email_on_sign_up = false</span><br><span class="line">;templates_pattern = emails/*.html</span><br><span class="line">[log]</span><br><span class="line">;mode = console file</span><br><span class="line">;level = info</span><br><span class="line">;filters =</span><br><span class="line">[log.console]</span><br><span class="line">;level =</span><br><span class="line">;format = console</span><br><span class="line">[log.file]</span><br><span class="line">;level =</span><br><span class="line">;format = text</span><br><span class="line">;log_rotate = true</span><br><span class="line">;max_lines = 1000000</span><br><span class="line">;max_size_shift = 28</span><br><span class="line">;daily_rotate = true</span><br><span class="line">;max_days = 7</span><br><span class="line">[log.syslog]</span><br><span class="line">;level =</span><br><span class="line">;format = text</span><br><span class="line">;network =</span><br><span class="line">;address =</span><br><span class="line">;facility =</span><br><span class="line">;tag =</span><br><span class="line">[quota]</span><br><span class="line">; enabled = false</span><br><span class="line">; org_user = 10</span><br><span class="line">; org_dashboard = 100</span><br><span class="line">; org_data_source = 10</span><br><span class="line">; org_api_key = 10</span><br><span class="line">; user_org = 10</span><br><span class="line">; global_user = -1</span><br><span class="line">; global_org = -1</span><br><span class="line">; global_dashboard = -1</span><br><span class="line">; global_api_key = -1</span><br><span class="line">; global_session = -1</span><br><span class="line">[unified_alerting]</span><br><span class="line">enabled = true</span><br><span class="line">;disabled_orgs =</span><br><span class="line">;admin_config_poll_interval = 60s</span><br><span class="line">;alertmanager_config_poll_interval = 60s</span><br><span class="line">;ha_redis_address =</span><br><span class="line">;ha_redis_username =</span><br><span class="line">;ha_redis_password =</span><br><span class="line">;ha_redis_db =</span><br><span class="line">;ha_redis_prefix =</span><br><span class="line">;ha_redis_peer_name =</span><br><span class="line">;ha_listen_address = &quot;0.0.0.0:9094&quot;</span><br><span class="line">;ha_advertise_address = &quot;&quot;</span><br><span class="line">;ha_peers = &quot;&quot;</span><br><span class="line">;ha_peer_timeout = &quot;15s&quot;</span><br><span class="line">;ha_gossip_interval = &quot;200ms&quot;</span><br><span class="line">;ha_push_pull_interval = &quot;60s&quot;</span><br><span class="line">;execute_alerts = true</span><br><span class="line">;evaluation_timeout = 30s</span><br><span class="line">;max_attempts = 3</span><br><span class="line">;min_interval = 10s</span><br><span class="line">[unified_alerting.reserved_labels]</span><br><span class="line">;disabled_labels =</span><br><span class="line">[unified_alerting.state_history]</span><br><span class="line">; enabled = true</span><br><span class="line">; backend = &quot;multiple&quot;</span><br><span class="line">; primary = &quot;loki&quot;</span><br><span class="line">; secondaries = &quot;annotations&quot;</span><br><span class="line">; loki_remote_url = &quot;http://loki:3100&quot;</span><br><span class="line">; loki_remote_read_url = &quot;http://loki-querier:3100&quot;</span><br><span class="line">; loki_remote_write_url = &quot;http://loki-distributor:3100&quot;</span><br><span class="line">; loki_tenant_id = 123</span><br><span class="line">; loki_basic_auth_username = &quot;myuser&quot;</span><br><span class="line">; loki_basic_auth_password = &quot;mypass&quot;</span><br><span class="line">[unified_alerting.state_history.external_labels]</span><br><span class="line">; mylabelkey = mylabelvalue</span><br><span class="line">[alerting]</span><br><span class="line">enabled = false</span><br><span class="line">;execute_alerts = true</span><br><span class="line">;error_or_timeout = alerting</span><br><span class="line">;nodata_or_nullvalues = no_data</span><br><span class="line">;concurrent_render_limit = 5</span><br><span class="line">;evaluation_timeout_seconds = 30</span><br><span class="line">;notification_timeout_seconds = 30</span><br><span class="line">;max_attempts = 3</span><br><span class="line">;min_interval_seconds = 1</span><br><span class="line">;max_annotation_age =</span><br><span class="line">;max_annotations_to_keep =</span><br><span class="line">[annotations.dashboard]</span><br><span class="line">;max_age =</span><br><span class="line">;max_annotations_to_keep =</span><br><span class="line">[annotations.api]</span><br><span class="line">;max_age =</span><br><span class="line">;max_annotations_to_keep =</span><br><span class="line">[explore]</span><br><span class="line">;enabled = true</span><br><span class="line">[metrics]</span><br><span class="line">;enabled           = true</span><br><span class="line">;interval_seconds  = 10</span><br><span class="line">;disable_total_stats = false</span><br><span class="line">; basic_auth_username =</span><br><span class="line">; basic_auth_password =</span><br><span class="line">[metrics.environment_info]</span><br><span class="line">[metrics.graphite]</span><br><span class="line">;address =</span><br><span class="line">;prefix = prod.grafana.%(instance_name)s.</span><br><span class="line">[grafana_com]</span><br><span class="line">;url = https://grafana.com</span><br><span class="line">[tracing.jaeger]</span><br><span class="line">;address = localhost:6831</span><br><span class="line">;always_included_tag = tag1:value1</span><br><span class="line">;sampler_type = const</span><br><span class="line">;sampler_param = 1</span><br><span class="line">;sampling_server_url =</span><br><span class="line">;zipkin_propagation = false</span><br><span class="line">;disable_shared_zipkin_spans = false</span><br><span class="line">[external_image_storage]</span><br><span class="line">provider = local</span><br><span class="line">[external_image_storage.s3]</span><br><span class="line">;endpoint =</span><br><span class="line">;path_style_access =</span><br><span class="line">;bucket =</span><br><span class="line">;region =</span><br><span class="line">;path =</span><br><span class="line">;access_key =</span><br><span class="line">;secret_key =</span><br><span class="line">[external_image_storage.webdav]</span><br><span class="line">;url =</span><br><span class="line">;public_url =</span><br><span class="line">;username =</span><br><span class="line">;password =</span><br><span class="line">[external_image_storage.gcs]</span><br><span class="line">;key_file =</span><br><span class="line">;bucket =</span><br><span class="line">;path =</span><br><span class="line">[external_image_storage.azure_blob]</span><br><span class="line">;account_name =</span><br><span class="line">;account_key =</span><br><span class="line">;container_name =</span><br><span class="line">[external_image_storage.local]</span><br><span class="line">[rendering]</span><br><span class="line">renderer_token = JSlIhleC!V@S</span><br><span class="line">server_url = http://122.xxx.xxx.220:8081/render/</span><br><span class="line">callback_url = http://grafana.xxx.com</span><br><span class="line">concurrent_render_request_limit = 30</span><br><span class="line">render_key_lifetime = 10m</span><br><span class="line">[panels]</span><br><span class="line">;disable_sanitize_html = false</span><br><span class="line">[plugins]</span><br><span class="line">;enable_alpha = false</span><br><span class="line">;app_tls_skip_verify_insecure = false</span><br><span class="line">allow_loading_unsigned_plugins = aliyun_cms_grafana_datasource,aliyun-log-service-datasource,grafana-log-service-datasource</span><br><span class="line">;marketplace_url = https://grafana.com/grafana/plugins/</span><br><span class="line">[plugin.grafana-image-renderer]</span><br><span class="line">;rendering_timezone =</span><br><span class="line">;rendering_language =</span><br><span class="line">;rendering_viewport_device_scale_factor =</span><br><span class="line">;rendering_ignore_https_errors =</span><br><span class="line">filters = rendering:debug</span><br><span class="line">;rendering_verbose_logging =</span><br><span class="line">;rendering_dumpio =</span><br><span class="line">;rendering_args =</span><br><span class="line">;rendering_chrome_bin =</span><br><span class="line">;rendering_mode =</span><br><span class="line">;rendering_clustering_mode =</span><br><span class="line">;rendering_clustering_max_concurrency =</span><br><span class="line">;rendering_viewport_max_width =</span><br><span class="line">;rendering_viewport_max_height =</span><br><span class="line">;rendering_viewport_max_device_scale_factor =</span><br><span class="line">;grpc_host =</span><br><span class="line">;grpc_port =</span><br><span class="line">[enterprise]</span><br><span class="line">;license_path =</span><br><span class="line">[feature_toggles]</span><br><span class="line">;enable =</span><br><span class="line">[date_formats]</span><br><span class="line">;full_date = YYYY-MM-DD HH:mm:ss</span><br><span class="line">;interval_second = HH:mm:ss</span><br><span class="line">;interval_minute = HH:mm</span><br><span class="line">;interval_hour = MM/DD HH:mm</span><br><span class="line">;interval_day = MM/DD</span><br><span class="line">;interval_month = YYYY-MM</span><br><span class="line">;interval_year = YYYY</span><br><span class="line">;use_browser_locale = false</span><br><span class="line">default_timezone = browser</span><br><span class="line">[unified_alerting.screenshots]</span><br><span class="line">capture = true</span><br><span class="line">upload_external_image_storage = false</span><br><span class="line">max_concurrent_screenshots = 5</span><br></pre></td></tr></table></figure>

<p>NGINX转发配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">upstream xxx.xxx.com&#123;</span><br><span class="line">        server 122.xxx.xxx.220:3000 max_fails=2 fail_timeout=2s;</span><br><span class="line">        keepalive 300;</span><br><span class="line">        &#125;</span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name xxx.xxx.com;</span><br><span class="line">    return 301 https://$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name          xxx.xxx.com;</span><br><span class="line">    ssl_certificate      /home/web/ssl/20230731_xxx.com.pem;</span><br><span class="line">    ssl_certificate_key  /home/web/ssl/20230731_xxx.com.key;</span><br><span class="line">    ssl_session_timeout  5m;</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    #allow 61.164.52.202;</span><br><span class="line">    #deny all;</span><br><span class="line">    access_log /var/log/nginx/grafana.xxx.com.access.log;</span><br><span class="line">    error_log  /var/log/nginx/grafana.xxx.com.error.log;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">         root html;</span><br><span class="line">         index index.html index.htm;</span><br><span class="line">         proxy_pass http://122.xxx.xxx.220:3000/;</span><br><span class="line">         proxy_set_header Host $host;</span><br><span class="line">         proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">         proxy_set_header x-forwarded-for $proxy_add_x_forwarded_for;</span><br><span class="line">         proxy_redirect default;</span><br><span class="line">         proxy_http_version 1.1;</span><br><span class="line">         proxy_set_header Connection &quot;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">  location /api/live/ws &#123;</span><br><span class="line">    rewrite  ^/(.*)  /$1 break;</span><br><span class="line">    proxy_http_version 1.1;</span><br><span class="line">    proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">    proxy_set_header Connection &quot;Upgrade&quot;;</span><br><span class="line">    proxy_set_header Host $http_host;</span><br><span class="line">    proxy_pass http://122.xxx.xxx.220:3000/;</span><br><span class="line">  &#125;</span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>grafana-render-image  3.8.4 配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;service&quot;: &#123;</span><br><span class="line">    &quot;host&quot;: null,</span><br><span class="line">    &quot;port&quot;: 8081,</span><br><span class="line">    &quot;metrics&quot;: &#123;</span><br><span class="line">      &quot;enabled&quot;: false,</span><br><span class="line">      &quot;collectDefaultMetrics&quot;: true,</span><br><span class="line">      &quot;requestDurationBuckets&quot;: [1, 5, 7, 9, 11, 13, 15, 20, 30]</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;logging&quot;: &#123;</span><br><span class="line">      &quot;level&quot;: &quot;info&quot;,</span><br><span class="line">      &quot;console&quot;: &#123;</span><br><span class="line">        &quot;json&quot;: true,</span><br><span class="line">        &quot;colorize&quot;: false</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;security&quot;: &#123;</span><br><span class="line">      &quot;authToken&quot;: &quot;JSlIhleC!V@S&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;rendering&quot;: &#123;</span><br><span class="line">    &quot;chromeBin&quot;: null,</span><br><span class="line">    &quot;args&quot;: [&quot;--no-sandbox&quot;, &quot;--disable-gpu&quot;,&quot;--ignore-certificate-errors&quot;],</span><br><span class="line">    &quot;ignoresHttpsErrors&quot;: true,</span><br><span class="line">    &quot;timezone&quot;: &quot;Asia/Shanghai&quot;,</span><br><span class="line">    &quot;acceptLanguage&quot;: null,</span><br><span class="line">    &quot;width&quot;: 1000,</span><br><span class="line">    &quot;height&quot;: 500,</span><br><span class="line">    &quot;deviceScaleFactor&quot;: 1,</span><br><span class="line">    &quot;maxWidth&quot;: 3080,</span><br><span class="line">    &quot;maxHeight&quot;: 3000,</span><br><span class="line">    &quot;maxDeviceScaleFactor&quot;: 4,</span><br><span class="line">    &quot;pageZoomLevel&quot;: 1,</span><br><span class="line">    &quot;headed&quot;: false,</span><br><span class="line">    &quot;mode&quot;: &quot;default&quot;,</span><br><span class="line">    &quot;emulateNetworkConditions&quot;: false,</span><br><span class="line">    &quot;clustering&quot;: &#123;</span><br><span class="line">      &quot;monitor&quot;: false,</span><br><span class="line">      &quot;mode&quot;: &quot;browser&quot;,</span><br><span class="line">      &quot;maxConcurrency&quot;: 5,</span><br><span class="line">      &quot;timeout&quot;: 30</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;verboseLogging&quot;: false,</span><br><span class="line">    &quot;dumpio&quot;: false,</span><br><span class="line">    &quot;timingMetrics&quot;: false</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p> 验证：</p>
<p><img src="/images/1712819196-3f7e0787df8bd6090f909825c4683380.png"></p>
<p><img src="/images/1712819196-d75b39e25e1fbae4f3593390a6623205.png"></p>
<p>邮件告警</p>
<p><img src="/images/1712819196-36fbe7f147b4b2536a90842d6bc11e67.png"></p>
<p>参考：</p>
<p><a href="https://grafana.com/docs/grafana-cloud/alerting-and-irm/alerting/manage-notifications/images-in-notifications/">https://grafana.com/docs/grafana-cloud/alerting-and-irm/alerting/manage-notifications/images-in-notifications/</a><br><a href="https://zhuanlan.zhihu.com/p/588254228">https://zhuanlan.zhihu.com/p/588254228</a><br><a href="https://cloud.tencent.com/developer/article/2245015">https://cloud.tencent.com/developer/article/2245015</a><br><a href="https://blog.csdn.net/loveyoulouyou/article/details/81476307">https://blog.csdn.net/loveyoulouyou/article/details/81476307</a><br><a href="https://blog.csdn.net/weixin/_44923842/article/details/132802667">https://blog.csdn.net/weixin\_44923842/article/details/132802667</a></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>VScode怎么设置成中文</title>
    <url>/2024/04/12/VScode%E6%80%8E%E4%B9%88%E8%AE%BE%E7%BD%AE%E6%88%90%E4%B8%AD%E6%96%87/</url>
    <content><![CDATA[<p>  方法一：</p>
<p>  1.我们打开软件，然后在软件左侧工具栏里找到应用这一选项。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/0P47XI8463Y2.jpg"><img src="/images/1712886077-cc7ab53251700f5613166fbb2f29b39d.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p>  2.我们点击应用选项，然后在上方的搜索栏中输入“Chinese (Simplified) Language Pack for Visual Studio Code”，然后再点击回车键。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/P7BLX3JO1NP8.jpg"><img src="/images/1712886077-b902eddd5ae64cf56df1a7955e08c585.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p>  3.这时就会出现各种语言选项，我们选择第一个“中文(简体)”，然后再点击旁边的Install。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/J5N6R3A9O4IN.jpg"><img src="/images/1712886077-e4e495ded165ffd0226dab4b2446e30b.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p>  4.我们等几秒钟，这时，软件的右下角就会出现一个弹窗，我们点击蓝色按钮上的“Change Language and Restart”即可。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/479TRRM8M5IR.jpg"><img src="/images/1712886077-c04bbe17f51ba24a6afc7564963fa936.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p>  方法二：</p>
<p>  1.我们打开软件，然后<a href="https://so.csdn.net/so/search?q=%E6%8C%89%E4%B8%8B%E9%94%AE%E7%9B%98&spm=1001.2101.3001.7020">按下键盘</a>上的“Ctrl+Shift+P”，这时软件顶部会出现一个搜索框。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/687T5J3Z3U70.jpg"><img src="/images/1712886077-40fd2b8fdf265313497b3b5234bd539c.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p>  2.我们在搜索框中输入“configure display language”,然后按下回车。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/WMJ0ODJ0J756.jpg"><img src="/images/1712886077-5eb2b783599269c5579ae4478d4b3b03.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p>  3.选择列表里第二个中文(简体)，最后，会弹出一个窗口，我们点击“Restart”就可以了。</p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/786FYN5T103Y.jpg"><img src="/images/1712886077-da4728cc54b22e4da5ee2cd2bdbf9944.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
<p><a href="https://image.yesky.com/uploadImages/2023/326/00/Y40H851L15CD.jpg"><img src="/images/1712886077-e35ef14f49a57da5c173c56e4923316f.jpeg" alt="VSCode怎么设置成中文_2种方法让你告别英文困扰"></a></p>
]]></content>
      <categories>
        <category>VScode</category>
      </categories>
      <tags>
        <tag>VScode</tag>
      </tags>
  </entry>
  <entry>
    <title>监控带认证URL的python脚本</title>
    <url>/2024/04/12/%E7%9B%91%E6%8E%A7%E5%B8%A6%E8%AE%A4%E8%AF%81URL%E7%9A%84python%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="5dac34c50a7e4dd1e8723c61b92f69a3f1e633faa1f33086382de57c4b1d3f6a"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>监控带认证的URL并将http状态码推送到pushgateway</title>
    <url>/2024/04/12/%E7%9B%91%E6%8E%A7%E5%B8%A6%E8%AE%A4%E8%AF%81%E7%9A%84URL%E5%B9%B6%E5%B0%86http%E7%8A%B6%E6%80%81%E7%A0%81%E6%8E%A8%E9%80%81%E5%88%B0pushgateway/</url>
    <content><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <script id="hbeData" type="hbeData" data-hmacdigest="1d335626f5c4974191688bb5ca4a89c941edaa434d49adb8ebef6325b0b5e072"></script>
  <div class="hbe hbe-content">
    <div class="hbe hbe-input hbe-input-default">
      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">
      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">
        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>
      </label>
    </div>
  </div>
</div>
<script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>Grafana Oauth统一认证</title>
    <url>/2024/04/18/Grafana-Oauth%E7%BB%9F%E4%B8%80%E8%AE%A4%E8%AF%81/</url>
    <content><![CDATA[<p>使用grafana auth.generic_oauth方式访问grafana dashboards，记录配置及接口开发过程。以供以后查阅</p>
<p>需求：在自建平台上以认证用户，跳转至grafana，且是已登陆状态。</p>
<p>根据官方文档介绍，有三种方法实现：</p>
<ol>
<li><p>使用API KEY方式；需要解决跨域问题。</p>
</li>
<li><p>配置打开匿名登陆方式，不符合需求。</p>
</li>
<li><p>使用auth.generic_oauth方式，需要在自建平台开发统一认证接口。</p>
</li>
</ol>
<h2 id="一、Grafana-Oauth配置"><a href="#一、Grafana-Oauth配置" class="headerlink" title="一、Grafana Oauth配置"></a><strong>一、Grafana Oauth配置</strong></h2><ol>
<li><h3 id="配置认证接口跳转域名："><a href="#配置认证接口跳转域名：" class="headerlink" title="配置认证接口跳转域名："></a>配置认证接口跳转域名：</h3></li>
</ol>
<p>[server]</p>
<p># Protocol (http, https, h2, socket)</p>
<p>protocol &#x3D; http</p>
<p># The ip address to bind to, empty will bind to all interfaces</p>
<p>http_addr &#x3D; 10.106.223.203</p>
<p># The http port to use</p>
<p>http_port &#x3D; 3000</p>
<p># The public facing domain name used to access grafana from a browser</p>
<p>domain &#x3D; 10.106.223.203      # 我这里是测试环境，IP地址或正式域名都可以，认证接口可以访问（重定向）到就行</p>
<p># Redirect to correct domain if host header does not match domain</p>
<p># Prevents DNS rebinding attacks</p>
<p>enforce_domain &#x3D; false</p>
<p># The full public facing url</p>
<p>root_url &#x3D; %(protocol)s:&#x2F;&#x2F;%(domain)s:%(http_port)s&#x2F;         # 如果使用的是正式域名，可能不需要“:%(http_port)s&#x2F;”端口信息，删掉就行</p>
<h3 id="2-Grafana-Oauth配置"><a href="#2-Grafana-Oauth配置" class="headerlink" title="2. Grafana Oauth配置"></a>2. Grafana Oauth配置</h3><p>[auth.generic_oauth]</p>
<p>name &#x3D; OAuth</p>
<p>enabled &#x3D; true       # 默认是false，改为true。打开oauth认证</p>
<p>allow_sign_up &#x3D; true</p>
<p>client_id &#x3D; panda   # 客户端ID，自行决定使用方式。我这里使用client_id去验证自建平台中是否存在这个用户，并以这个用户去登陆Grafana</p>
<p>client_secret &#x3D; <a href="mailto:&#x70;&#x61;&#x6e;&#100;&#97;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;">&#x70;&#x61;&#x6e;&#100;&#97;&#x40;&#101;&#x78;&#x61;&#109;&#x70;&#x6c;&#x65;&#46;&#99;&#111;&#109;</a>     # 没看到GET或POST请求中有这个参数。字面意思是验证client密码的</p>
<p>scopes &#x3D; user:email      # 统一认证接口回传的参数域’{“name”: “panda”, “email”: “<a href="mailto:&#x70;&#x61;&#x6e;&#100;&#x61;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;">&#x70;&#x61;&#x6e;&#100;&#x61;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#46;&#99;&#111;&#109;</a>“}’</p>
<p>#scopes &#x3D; user:email:org</p>
<p>email_attribute_name &#x3D; email:primary       # 不知道怎么用</p>
<p>email_attribute_path &#x3D;</p>
<p>login_attribute_path &#x3D;</p>
<p>role_attribute_path &#x3D;</p>
<p>id_token_attribute_name &#x3D;</p>
<p># 网络环境访问受限问题处理（职场网络与IDC网络互相隔离）。Grafana  <a href="http://grafana.domain.com/login/generic_oauth">http://grafana.domain.com/login/generic_oauth</a> 接口通过浏览器访问auth_url，如果浏览器不能直接通过IP:PORT访问auth_url，配置一个可访问的域名。token_url 和 api_url 是通过Grafana后端server访问，Grafana server和自建平台server服务器在同一个网络域，我就直接配置IP:PORT了。</p>
<p>auth_url &#x3D; <a href="http://auth.yourdomain.com/sso/oauth/authorize/">http://auth.yourdomain.com/sso/oauth/authorize/</a>       # 自建平台认证接口。Grafana Oauth接口通过浏览器请求这个接口进行认                                                                                                 # 证，auth.yourdomain.com指向后端10.106.223.203:7000。</p>
<p>token_url &#x3D; <a href="http://10.106.223.203:7000/sso/oauth/token/">http://10.106.223.203:7000/sso/oauth/token/</a>          # 自建平台用户token生成接口。Grafana Oauth接口通过后端server访问该接口</p>
<p>api_url &#x3D; <a href="http://10.106.223.203:7000/sso/oauth/user/">http://10.106.223.203:7000/sso/oauth/user/</a>                # 自建平台验证token，并回传用户信息接口。Grafana Oauth接口通过后端                                                                                                  # server访问该接口</p>
<p>allowed_domains &#x3D;    # 允许回调请求的域名，包括用户email的域名（Required email domain not fulfilled）</p>
<p>#allowed_domains &#x3D; auth.yourdomain.com,10.106.223.203,example.com</p>
<p>team_ids &#x3D;</p>
<p>allowed_organizations &#x3D;</p>
<p>tls_skip_verify_insecure &#x3D; false</p>
<p>tls_client_cert &#x3D;</p>
<p>tls_client_key &#x3D;</p>
<p>tls_client_ca &#x3D;</p>
<h3 id="3-重启Grafana后台server"><a href="#3-重启Grafana后台server" class="headerlink" title="3. 重启Grafana后台server"></a>3. 重启Grafana后台server</h3><p><img src="/images/1713430674-adba476931f42d261f68afbdd2e4433e.png" alt="Grafana Oauth统一认证_oauth" title="1618281471155111.png"></p>
<h2 id="二、自建平台接口。自建平台是django框架"><a href="#二、自建平台接口。自建平台是django框架" class="headerlink" title="二、自建平台接口。自建平台是django框架"></a><strong>二、自建平台接口。自建平台是django框架</strong></h2><h3 id="1-auth-url接口"><a href="#1-auth-url接口" class="headerlink" title="1. auth_url接口"></a>1. auth_url接口</h3><p>通过自建平台前端请求 Grafana  <a href="http://grafana.domain.com/login/generic_oauth">http://grafana.domain.com/login/generic_oauth</a> 接口时，该接口会通过GET去请求auth_url接口进行认证，请求参数为 {“access_type”: online, “state”: “vRQngxNgyheoZ1iskXH3zRd_Xezdw1T4RW_ISq59ZzM&#x3D;”, “redirect_uri”: “<a href="http://10.106.223.203:3000/login/generic/_oauth">http://10.106.223.203:3000/login/generic\_oauth</a>“, “response_type”: “code”, “client_id”: “panda”, “scope”: “user:email”}</p>
<p>auth_url API: </p>
<p>def grafana_authorize(request):</p>
<p>    for k, v in request.GET.items():</p>
<p>        print k, v</p>
<p>    try:</p>
<p>        grafana_api &#x3D; GrafanaAPI.objects.get(client_id&#x3D;request.GET.get(‘client_id’))</p>
<p>    except GrafanaAPI.DoesNotExist:</p>
<p>        return redirect(reverse_lazy(‘login’))</p>
<p>    if str(request.GET.get(‘redirect_uri’)) &#x3D;&#x3D; str(grafana_api.oauth_url) and \</p>
<p>            str(request.GET.get(‘client_id’)) &#x3D;&#x3D; str(grafana_api.client_id):</p>
<p>        try:</p>
<p>            client_user &#x3D; User.objects.get(real_name&#x3D;request.GET.get(‘client_id’))</p>
<p>            token_instance &#x3D; RedisToken()</p>
<p>            token &#x3D; token_instance.generate_token(client_user.email)</p>
<p>        except User.DoesNotExist:</p>
<p>            return redirect(“{0}?state&#x3D;{1}&amp;code&#x3D;{2}”.format(request.GET.get(‘redirect_uri’),</p>
<p>                                                            request.GET.get(‘state’),</p>
<p>                                                            ‘’))</p>
<p>        else:</p>
<p>            code &#x3D; {}</p>
<p>            code.setdefault(grafana_api.client_id, token)</p>
<p>            return redirect(“{0}?state&#x3D;{1}&amp;code&#x3D;{2}”.format(request.GET.get(‘redirect_uri’),</p>
<p>                                                            request.GET.get(‘state’),</p>
<p>                                                            json.dumps(code)))</p>
<p>    else:</p>
<p>        return redirect(reverse_lazy(‘login’))</p>
<h3 id="2-token-url接口"><a href="#2-token-url接口" class="headerlink" title="2. token_url接口"></a>2. token_url接口</h3><p>认证通过后 Grafana  <a href="http://grafana.domain.com/login/generic_oauth">http://grafana.domain.com/login/generic_oauth</a> 接口会通过POST去请求token_url接口获取认证token。请求参数{“redirect_uri”: “<a href="http://10.106.223.203:3000/login/generic/_oauth">http://10.106.223.203:3000/login/generic\_oauth</a>“, “code”: ‘{“panda”: “ZXlKaGJHY2lPaUprWldaaGRXeDBJaXdpZEhsd0lqb2lTbGRRSW4wOjFsVzkzRzpnSjZVRnJFUVVRbEpONFczQVluaU02TzR5TFk.ZXlKaFkyTnZkVzUwSWpvaWNHRnVaR0ZBWlhoaGJYQnNaUzVqYjIwaUxDSnpkV0lpT2lKVmMyVnlYMVJ2YTJWdUlpd2lhWE56SWpvaVVHRnVSR0VpTENKbGVIQWlPaUkwTXpJd01DSXNJbWxoZENJNk1UWXhPREk0TVRreE9DNHdPVFkzTmpjc0ltRjFaQ0k2SWxWelpYSWlmUToxbFc5M0c6emxBajRid2d4NHdhYzRiY1JUbGt3Snd4MWln.287856af0889755046011669919f1b0050af8b77”}’, “grant_type”: “authorization_code”}</p>
<p>@csrf_exempt</p>
<p>def grafana_token(request):</p>
<p>    for k, v in request.POST.items():</p>
<p>        print k, v</p>
<p>    if request.method &#x3D;&#x3D; “POST”:</p>
<p>        try:</p>
<p>            code &#x3D; json.loads(request.POST.get(‘code’))</p>
<p>            client_id &#x3D; code.keys()[0]</p>
<p>            token &#x3D; code.values()[0]</p>
<p>            grafana_api &#x3D; GrafanaAPI.objects.get(client_id&#x3D;client_id)</p>
<p>        except GrafanaAPI.DoesNotExist:</p>
<p>            return redirect(reverse_lazy(‘login’))</p>
<p>        if str(request.POST.get(‘redirect_uri’)) &#x3D;&#x3D; str(grafana_api.oauth_url):</p>
<p>            token_auth &#x3D; RedisToken(token&#x3D;token)</p>
<p>            if token_auth.checkout_token():</p>
<p>                return HttpResponse(json.dumps({‘access_token’: token,</p>
<p>                                                ‘token_type’: ‘Bearer’,</p>
<p>                                                ‘expiry_in’: settings.REDIS_TOKEN_EXPIRED_TIME,</p>
<p>                                                ‘refresh_token’: ‘’}))</p>
<p>    return HttpResponse(json.dumps({‘access_token’: ‘’,</p>
<p>                                    ‘token_type’: ‘’,</p>
<p>                                    ‘expiry_in’: ‘’,</p>
<p>                                    ‘refresh_token’: ‘’}))</p>
<h3 id="3-api-url接口"><a href="#3-api-url接口" class="headerlink" title="3. api_url接口"></a>3. api_url接口</h3><p>获取token成功后，Grafana  <a href="http://grafana.domain.com/login/generic_oauth">http://grafana.domain.com/login/generic_oauth</a> 接口会通过GET请求api_url接口获取用户信息。请求头中加入token信息</p>
<p>“HTTP_AUTHORIZATION”: “Bearer ZXlKaGJHY2lPaUprWldaaGRXeDBJaXdpZEhsd0lqb2lTbGRRSW4wOjFsVzkzRzpnSjZVRnJFUVVRbEpONFczQVluaU02TzR5TFk.ZXlKaFkyTnZkVzUwSWpvaWNHRnVaR0ZBWlhoaGJYQnNaUzVqYjIwaUxDSnpkV0lpT2lKVmMyVnlYMVJ2YTJWdUlpd2lhWE56SWpvaVVHRnVSR0VpTENKbGVIQWlPaUkwTXpJd01DSXNJbWxoZENJNk1UWXhPREk0TVRreE9DNHdPVFkzTmpjc0ltRjFaQ0k2SWxWelpYSWlmUToxbFc5M0c6emxBajRid2d4NHdhYzRiY1JUbGt3Snd4MWln.287856af0889755046011669919f1b0050af8b77”</p>
<p>def grafana_user(request):</p>
<p>    for k, v in request.META.items():</p>
<p>        print k, v</p>
<p>    header_authorization &#x3D; request.META.get(‘HTTP_AUTHORIZATION’, ‘unknown’)</p>
<p>    token &#x3D; header_authorization.split(‘ ‘)[1]</p>
<p>    token_auth &#x3D; RedisToken(token&#x3D;token)</p>
<p>    try:</p>
<p>        user &#x3D; User.objects.get(email&#x3D;token_auth.get_account())</p>
<p>    except User.DoesNotExist:</p>
<p>        return HttpResponse(‘User not exist.’)</p>
<p>    return HttpResponse(json.dumps({‘name’: user.real_name, ‘email’: user.email}))</p>
<p>三、测试</p>
<p>直接在Grafana登陆页点 Sign in with OAuth ，如果显示登陆成功并进入Dashboards页面，表示已经成功。Grafana会自动创建用户</p>
<p><img src="/images/1713430674-c7094423e5de1ae6e4ef7db5d7f0b27d.png" alt="Grafana Oauth统一认证_oauth_02" title="1618283223682795.png"></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux网卡流量监控shell脚本</title>
    <url>/2024/04/19/Linux%E7%BD%91%E5%8D%A1%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7shell%E8%84%9A%E6%9C%AC/</url>
    <content><![CDATA[<p>此脚本不需要额外再安装软件，并且可自定义欲查看接口，精确到小数，可根据流量大小灵活显示单位，默认采集间隔为1秒。</p>
<p>用法为：</p>
<p>1、将脚本保存为可执行脚本文件，比如叫net.sh。</p>
<p>2、chmod +x .&#x2F;net.sh 将文件改成可执行脚本。</p>
<p>3、sh net.sh eth0即可开始监看接口eth0流量，按ctrl+c退出。</p>
<p>脚本是通过读取运行时文件系统&#x2F;proc&#x2F;net&#x2F;dev中的网络实时数据，并通过简单计算得到的</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"> </span><br><span class="line">ethn=$1</span><br><span class="line"> </span><br><span class="line">while true</span><br><span class="line">do</span><br><span class="line">  RX_pre=$(cat /proc/net/dev | grep $ethn | sed &#x27;s/:/ /g&#x27; | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">  TX_pre=$(cat /proc/net/dev | grep $ethn | sed &#x27;s/:/ /g&#x27; | awk &#x27;&#123;print $10&#125;&#x27;)</span><br><span class="line">  sleep 1</span><br><span class="line">  RX_next=$(cat /proc/net/dev | grep $ethn | sed &#x27;s/:/ /g&#x27; | awk &#x27;&#123;print $2&#125;&#x27;)</span><br><span class="line">  TX_next=$(cat /proc/net/dev | grep $ethn | sed &#x27;s/:/ /g&#x27; | awk &#x27;&#123;print $10&#125;&#x27;)</span><br><span class="line"> </span><br><span class="line">  clear</span><br><span class="line">  echo -e &quot;\t RX `date +%k:%M:%S` TX&quot;</span><br><span class="line"> </span><br><span class="line">  RX=$(($&#123;RX_next&#125;-$&#123;RX_pre&#125;))</span><br><span class="line">  TX=$(($&#123;TX_next&#125;-$&#123;TX_pre&#125;))</span><br><span class="line"> </span><br><span class="line">  if [[ $RX -lt 1024 ]];then</span><br><span class="line">    RX=&quot;$&#123;RX&#125;B/s&quot;</span><br><span class="line">  elif [[ $RX -gt 1048576 ]];then</span><br><span class="line">    RX=$(echo $RX | awk &#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;)</span><br><span class="line">  else</span><br><span class="line">    RX=$(echo $RX | awk &#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;)</span><br><span class="line">  fi</span><br><span class="line"> </span><br><span class="line">  if [[ $TX -lt 1024 ]];then</span><br><span class="line">    TX=&quot;$&#123;TX&#125;B/s&quot;</span><br><span class="line">  elif [[ $TX -gt 1048576 ]];then</span><br><span class="line">    TX=$(echo $TX | awk &#x27;&#123;print $1/1048576 &quot;MB/s&quot;&#125;&#x27;)</span><br><span class="line">  else</span><br><span class="line">    TX=$(echo $TX | awk &#x27;&#123;print $1/1024 &quot;KB/s&quot;&#125;&#x27;)</span><br><span class="line">  fi</span><br><span class="line"> </span><br><span class="line">  echo -e &quot;$ethn \t $RX   $TX &quot;</span><br><span class="line"> </span><br><span class="line">done</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Scripts</category>
      </categories>
      <tags>
        <tag>Scripts</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux查看或统计网卡流量的几种方式</title>
    <url>/2024/04/19/Linux%E6%9F%A5%E7%9C%8B%E6%88%96%E7%BB%9F%E8%AE%A1%E7%BD%91%E5%8D%A1%E6%B5%81%E9%87%8F%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<p>在工作中，我们经常需要查看服务器的实时网卡流量。通常，我们会通过这几种方式查看Linux服务器的实时网卡流量。</p>
<p><strong>目录</strong></p>
<p>1、sar</p>
<p>2、 &#x2F;proc&#x2F;net&#x2F;dev</p>
<p>3、ifstat</p>
<p>4、iftop</p>
<p>5、nload </p>
<p> 6、iptraf-ng</p>
<p>7、nethogs</p>
<p>8、扩展</p>
<hr>
<h2 id="1、sar"><a href="#1、sar" class="headerlink" title="1、sar"></a>1、sar</h2><p>sar命令包含在sysstat工具包中，提供了基于网络接口的数据统计，也可以查看设备上每秒收发包的个数和流量。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sar -n DEV 1 2</span><br></pre></td></tr></table></figure>

<p>上面命令的含义是：向网卡(默认eth0)每秒读取1次值，共读取2次，然后显示出来：</p>
<p><img src="/images/1713511669-8279280cb4e52335a7cf6d2bd7f5e625.png" alt="Linux 查看或统计网卡流量的几种方式(图1)" title="Linux 查看或统计网卡流量的几种方式(图1)"></p>
<p>详细使用教程参考博客：《sar — Linux 上最为全面的系统性能分析工具之一》</p>
<h2 id="2、cat-proc-net-dev"><a href="#2、cat-proc-net-dev" class="headerlink" title="2、cat &#x2F;proc&#x2F;net&#x2F;dev"></a>2、cat <strong>&#x2F;proc&#x2F;net&#x2F;dev</strong></h2><p>Linux 内核提供了一种通过 &#x2F;proc 文件系统，在运行时访问内核内部数据结构、改变内核设置的机制。proc文件系统是一个伪文件系统，它只存在内存当中，而不占用外存空间。它以文件系统的方式为访问系统内核数据的操作提供接口。用户和应用程序可以通过proc得到系统的信息，并可以改变内核的某些参数。由于系统的信息，如进程，是动态改变的，所以用户或应用程序读取proc文件时，proc文件系统是动态从系统内核读出所需信息并提交的。</p>
<p>&#x2F;proc文件系统中包含了很多目录，其中&#x2F;proc&#x2F;net&#x2F;dev就是提供给用户读取或更改网络适配器及统计信息的途径。</p>
<p><strong>注意：因为proc是伪文件系统，只存在内存中，所以这里统计的数据的时间起止时间是：系统启动到命令执行，如果此时系统发生重启，数据将会清零。</strong></p>
<p><img src="/images/1713511669-07568bd46c34487c5b1350f0bce2704b.png" alt="Linux 查看或统计网卡流量的几种方式(图2)" title="Linux 查看或统计网卡流量的几种方式(图2)"></p>
<blockquote>
<p> <strong>参数说明：</strong></p>
<ul>
<li><p>bytes: 接口发送或接收的数据的总字节数</p>
</li>
<li><p>packets: 接口发送或接收的数据包总数</p>
</li>
<li><p>errs: 由设备驱动程序检测到的发送或接收错误的总数</p>
</li>
<li><p>drop: 设备驱动程序丢弃的数据包总数</p>
</li>
<li><p>fifo: FIFO缓冲区错误的数量</p>
</li>
<li><p>frame: 分组帧错误的数量</p>
</li>
<li><p>colls: 接口上检测到的冲突数</p>
</li>
<li><p>compressed: 设备驱动程序发送或接收的压缩数据包数</p>
</li>
<li><p>carrier: 由设备驱动程序检测到的载波损耗的数量</p>
</li>
<li><p>multicast: 设备驱动程序发送或接收的多播帧数</p>
</li>
</ul>
</blockquote>
<p>其实，我们平时经常用的很多查看网卡实时流量的命令，都是通过读取该目录下的实时流量，并通过简单计算得到的。</p>
<h2 id="3、ifstat"><a href="#3、ifstat" class="headerlink" title="3、ifstat"></a>3、ifstat</h2><p>ifstat是一个统计网络接口活动状态的工具。</p>
<p><strong>（1）安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get updatesudo apt-get install ifstat</span><br></pre></td></tr></table></figure>

<p><strong>（2）命令选项</strong></p>
<blockquote>
<ul>
<li><p><strong>-l 监测环路网络接口（lo）。缺省情况下，ifstat监测活动的所有非环路网络接口。经使用发现，加上-l参数能监测所有的网络接口的信息，而不是只监测 lo的接口信息，也就是说，加上-l参数比不加-l参数会多一个lo接口的状态信息。</strong></p>
</li>
<li><p><strong>-a 监测能检测到的所有网络接口的状态信息。使用发现，比加上-l参数还多一个plip0的接口信息，搜索一下发现这是并口（网络设备中有一 个叫PLIP (Parallel Line Internet Protocol). 它提供了并口…）</strong></p>
</li>
<li><p><strong>-z 隐藏流量是无的接口，例如那些接口虽然启动了但是未用的</strong></p>
</li>
<li><p><strong>-i 指定要监测的接口,后面跟网络接口名</strong></p>
</li>
<li><p><strong>-s 等于加-d snmp:[comm@][#]host[&#x2F;nn]] 参数，通过SNMP查询一个远程主机</strong></p>
</li>
<li><p><strong>-h 显示简短的帮助信息</strong></p>
</li>
<li><p><strong>-n 关闭显示周期性出现的头部信息（也就是说，不加-n参数运行ifstat时最顶部会出现网络接口的名称，当一屏显示不下时，会再一次出现接口的名称，提示我们显示的流量信息具体是哪个网络接口的。加上-n参数把周期性的显示接口名称关闭，只显示一次）</strong></p>
</li>
<li><p><strong>-t 在每一行的开头加一个时间 戳（能告诉我们具体的时间）</strong></p>
</li>
<li><p><strong>-T 报告所有监测接口的全部带宽（最后一列有个total，显示所有的接口的in流量和所有接口的out流量，简单的把所有接口的in流量相加,out流量相 加）</strong></p>
</li>
<li><p><strong>-w  用指定的列宽，而不是为了适应接口名称的长度而去自动放大列宽</strong></p>
</li>
<li><p><strong>-W 如果内容比终端窗口的宽度还要宽就自动换行</strong></p>
</li>
<li><p><strong>-S 在同一行保持状态更新（不滚动不换行）注：如果不喜欢屏幕滚动则此项非常方便，与bmon的显示方式类似</strong></p>
</li>
<li><p><strong>-b 用kbits&#x2F;s显示带宽而不是kbytes&#x2F;s</strong></p>
</li>
<li><p><strong>-q 安静模式，警告信息不出现</strong></p>
</li>
<li><p><strong>-v 显示版本信息</strong></p>
</li>
<li><p><strong>-d 指定一个驱动来收集状态信息</strong></p>
</li>
</ul>
</blockquote>
<p><strong>（3）使用示例：</strong></p>
<p><strong>ifstat -tT</strong> </p>
<p><img src="/images/1713511669-f1a5d0dc7e2831e0322863ff51ded7f0.png" alt="Linux 查看或统计网卡流量的几种方式(图3)" title="Linux 查看或统计网卡流量的几种方式(图3)"></p>
<blockquote>
<p><strong>参数说明：</strong> </p>
<ul>
<li><p>in:网卡接收的总字节数</p>
</li>
<li><p>out:网卡发送的总字节数</p>
</li>
</ul>
</blockquote>
<h2 id="4、iftop"><a href="#4、iftop" class="headerlink" title="4、iftop"></a>4、<strong>iftop</strong></h2><p>iftop是一款实时流量监控工具,监控TCP&#x2F;IP连接等,缺点就是无报表功能。必须以root身份才能运行。</p>
<p><strong>（1）安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get updatesudo apt-get install iftop</span><br></pre></td></tr></table></figure>

<p><strong>（2）命令选项</strong></p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iftop -h | [-npblNBP] [-i interface] [-f filter code]</span><br><span class="line">                               [-F net/mask] [-G net6/mask6]</span><br></pre></td></tr></table></figure>
</blockquote>
<blockquote>
<p><strong>详细参数说明：</strong></p>
<ul>
<li><p>-i ：指定需要监测的网卡</p>
</li>
<li><p>-n：将输出的主机信息都通过IP显示，不进行DNS反向解析</p>
</li>
<li><p>-B：将输出以bytes为单位显示网卡流量，默认是bits</p>
</li>
<li><p>-p：以混杂模式运行iftop，此时iftop可以作为网络嗅探器使用</p>
</li>
<li><p>-N：只显示连接端口号，不显示端口对应的服务名称</p>
</li>
<li><p>-P：显示主机以及端口信息，这个参数非常有用</p>
</li>
<li><p>-F：显示特定网段的网卡进出流量，例如：iftop –F 192.168.12.0&#x2F;24</p>
</li>
<li><p>-m：设置iftop输出界面中最上面的流量刻度最大值，流量刻度分五个大段显示</p>
</li>
<li><p>-t :  使用文本方式显示结果，而非交互界面</p>
</li>
<li><p>-L :  指定结果显示的行数</p>
</li>
<li><p>-s sec:  sec秒后输出结果,然后自动退出</p>
</li>
</ul>
</blockquote>
<p> <strong>（3）使用示例：</strong></p>
<p><strong>1、sudo iftop -i eth0 -t -s 30 -L 100</strong></p>
<p><img src="/images/1713511669-5ca4536a0cfc09d6fa7437ca38c8285f.png" alt="Linux 查看或统计网卡流量的几种方式(图4)" title="Linux 查看或统计网卡流量的几种方式(图4)"></p>
<p><strong>注意，如果时间较长，各ip地址的cumulative累计和可能并不等于最终的Cumulative,此时可以每40s统计一次结果，然后将结果累加。</strong></p>
<p><strong>2、sudo iftop -i eth0</strong> </p>
<p><img src="/images/1713511669-7cbc91c2fadd0be2f6909def6c423872.png" alt="Linux 查看或统计网卡流量的几种方式(图5)" title="Linux 查看或统计网卡流量的几种方式(图5)"></p>
<p><strong>iftop的输出从整体上可以分为三大部分：</strong></p>
<ol>
<li><p>iftop输出中最上面的一行，此行信息是流量刻度，用于显示网卡带宽流量。</p>
</li>
<li><p>iftop输出中最大的一个部分，此部分又分为左、中、右三列，左列和中列记录了哪些IP或主机正在和本机的网络进行连接。其中，中列的“&#x3D;&gt;”代表发送数据，“&lt;&#x3D;”代表接收数据，通过这个指示箭头可以很清晰地知道两个IP之间的通信情况。最右列又分为三小列，这些实时参数分别表示外部IP连接到本机2秒内、10秒内和40秒内的平均流量值。另外，这个部分还有一个流量图形条，流量图形条是对流量大小的动态展示，以第一部分中的流量刻度为基准。通过这个流量图形条可以很方便地看出哪个IP的流量最大，进而迅速定位网络中可能出现的流量问题。</p>
</li>
<li><p>第三部分位于iftop输出的最下面，可以分为三行，其中，“TX”表示发送数据，“RX”表示接收数据，“TOTAL”表示发送和接收全部流量。与这三行对应的有三列，其中“cum”列表示从运行iftop到目前的发送、接收和总数据流量。“peak”列表示发送、接收以及总的流量峰值。“rates”列表示过去2s、10s、40s的平均流量值。</p>
</li>
</ol>
<blockquote>
<p><strong>在进入iftop界面后，点击以下按键可以对内容调节控制：</strong></p>
<ul>
<li><p>h：显示帮助开关</p>
</li>
<li><p>n: 显示主机名&#x2F;主机ip开关</p>
</li>
<li><p>s：显示本机host开关</p>
</li>
<li><p>d：显示远端主机host开关</p>
</li>
<li><p>t：切换显示格式为2行&#x2F;1行&#x2F;只显示发送流量&#x2F;只显示接收流量</p>
</li>
<li><p>N：显示端口号或端口服务名称开关</p>
</li>
<li><p>S：显示本机的端口信息开关</p>
</li>
<li><p>D：显示远端目标主机的端口信息开关</p>
</li>
<li><p>p：显示端口信息开关</p>
</li>
<li><p>P：切换暂停&#x2F;继续显示</p>
</li>
<li><p>b：显示平均流量图形条开关，以界面第一行带宽为标尺，上图中的白条状图即是</p>
</li>
<li><p>B：切换计算2秒或10秒或40秒内的平均流量</p>
</li>
<li><p>T：显示每个连接的总流量开关</p>
</li>
<li><p>l：打开屏幕过滤功能，输入要过滤的字符，比如ip, 按回车后，屏幕就只显示这个IP相关的流量信息</p>
</li>
<li><p>L：切换显示画面上边的刻度; 刻度不同，流量图形条会有变化</p>
</li>
<li><p>j或k：可以向上或向下滚动屏幕显示的连接记录</p>
</li>
<li><p>1或2或3：可以根据右侧显示的三列流量数据进行排序</p>
</li>
<li><p>&lt;：根据左边的本机名或IP排序</p>
</li>
<li><p>&gt;：根据远端目标主机的主机名或IP排序</p>
</li>
<li><p>o：切换是否固定只显示当前的连接</p>
</li>
<li><p>f：可以编辑过滤代码</p>
</li>
<li><p>!: 可以使用shell命令</p>
</li>
<li><p>q: 退出</p>
</li>
</ul>
</blockquote>
<h2 id="5、nload"><a href="#5、nload" class="headerlink" title="5、nload"></a>5、nload</h2><p>nload是一个实时监控网络流量和带宽使用的控制台应用程序，使用两个图表可视化地展示接收和发送的流量，并提供诸如数据交换总量、最小&#x2F;最大网络带宽使用量等附加信息。</p>
<p><strong>（1）工具安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update sudo apt-get install nload</span><br></pre></td></tr></table></figure>

<p><strong>（2）命令选项</strong></p>
<blockquote>
<p><strong>选项说明：</strong>nload [options] [devices]</p>
<ul>
<li><p>-a：设置计算平均网速的时间周期，单位是秒，默认是300.</p>
</li>
<li><p>-i：进入网卡的流量图的显示比例最大值设置，默认10240 kBit&#x2F;s.</p>
</li>
<li><p>-m：不显示流量图，只显示统计数据。</p>
</li>
<li><p>-o：出去网卡的流量图的显示比例最大值设置，默认10240 kBit&#x2F;s.</p>
</li>
<li><p>-t：显示数据的刷新时间间隔，单位是毫秒，默认500。</p>
</li>
<li><p>-u：设置右边Curr、Avg、Min、Max的数据单位，默认是自动变的.注意大小写单位不同！</p>
</li>
<li><p>h|b|k|m|g h: auto, b: Bit&#x2F;s, k: kBit&#x2F;s, m: MBit&#x2F;s etc.</p>
</li>
<li><p>H|B|K|M|G H: auto, B: Byte&#x2F;s, K: kByte&#x2F;s, M: MByte&#x2F;s etc.</p>
</li>
<li><p>-U：设置右边Ttl的数据单位，默认是自动变的，注意大小写单位不同（与-u相同）！</p>
</li>
<li><p>Devices：自定义监控的网卡，默认是全部监控的，使用左右键切换。</p>
</li>
</ul>
</blockquote>
<p><strong>（3）使用示例</strong>：</p>
<p><strong>nload eth0</strong> </p>
<p><img src="/images/1713511669-ee08ceca10efec5538435dd18c69df01.png" alt="Linux 查看或统计网卡流量的几种方式(图6)" title="Linux 查看或统计网卡流量的几种方式(图6)"></p>
<h2 id="6、iptraf-ng"><a href="#6、iptraf-ng" class="headerlink" title="6、iptraf-ng"></a>6、iptraf-ng</h2><p><strong>iptraf-ng</strong> 是观察网络流速的强力工具，它可以让你的观察逐步深入，从硬件层（网卡），到网络层（IPv4，IPv6），到传输层（TCP，UDP etc.），一直到每一对socket pair。</p>
<p><strong>（1）工具安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update sudo apt-get install iptraf-ng</span><br></pre></td></tr></table></figure>

<p><strong>（2）命令选项</strong></p>
<blockquote>
<p><strong>参数说明：</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">iptraf-ng [options]:</span><br><span class="line"></span><br><span class="line">-h, --help  :show this help message</span><br><span class="line">-i   :start the IP traffic monitor (use &#x27;-i all&#x27; for all interfaces)</span><br><span class="line">-d   :start the detailed statistics facility on an interface</span><br><span class="line">-s   :start the TCP and UDP monitor on an interface</span><br><span class="line">-z   :shows the packet size counts on an interface</span><br><span class="line">-l   :start the LAN station monitor (use &#x27;-l all&#x27; for all LAN interfaces)</span><br><span class="line">-g           :start the general interface statistics</span><br><span class="line">-B           :run in background (use only with one of the above parameters</span><br><span class="line">-f           :clear all locks and counters</span><br><span class="line">-t        :run only for the specified  number of minutes</span><br><span class="line">-L  :specifies an alternate log file</span><br></pre></td></tr></table></figure>
</blockquote>
<p><strong>（3）使用示例</strong></p>
<p> <strong>sudo iptraf-ng -s eth0 用于统计各port的流量 ：</strong></p>
<p><img src="/images/1713511669-a51c7d54c1eecdcb99d53eb0627cd7da.png" alt="Linux 查看或统计网卡流量的几种方式(图7)" title="Linux 查看或统计网卡流量的几种方式(图7)"></p>
<h2 id="7、nethogs"><a href="#7、nethogs" class="headerlink" title="7、nethogs"></a>7、nethogs</h2><p>nethogs 的设计用途主要是为了查看单独进程流量情况而被创造出来的。nethogs 是一个小型的 net top 工具，不和大多数工具那样按照每个协议或者子网的速度，而是按照进程进行带宽分组。nethogs 不需要依赖某个特殊的内核模块，如果发生了网络阻塞，你可以启动 nethogs 立即看到哪个 PID 造成的，这样就可以轻松的找到占用带宽的程序，然后进行相应的内容控制。</p>
<p><strong>（1）工具安装</strong></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update sudo apt-get install nethogs</span><br></pre></td></tr></table></figure>

<p><strong>（2）工具选项</strong></p>
<blockquote>
<p><strong>用法:</strong></p>
<p><strong>nethogs [-V] [-h] [-b] [-d seconds] [-v mode] [-c count] [-t] [-p] [-s] [device [device [device …]]]</strong></p>
<ul>
<li><p>  -V : 打印版本。</p>
</li>
<li><p>  -h : 打印此帮助。</p>
</li>
<li><p>  -b : bughunt模式 - 暗示tracemode。</p>
</li>
<li><p>  -d : 延迟更新刷新率（以秒为单位）。默认值为1。</p>
</li>
<li><p>  -v : 视图模式（0 &#x3D; KB &#x2F; s，1 &#x3D;总KB，2 &#x3D;总B，3 &#x3D;总MB）。默认值为0。</p>
</li>
<li><p>  -c : 更新次数。默认为0（无限制）。</p>
</li>
<li><p>  -t : tracemode.</p>
</li>
<li><p>  -p : 煽动混乱模式（不推荐）。</p>
</li>
<li><p>  -s : 按发送列排序输出。</p>
</li>
<li><p>  -a : 监控所有设备，甚至环回&#x2F;停止。</p>
</li>
<li><p>  device : 要监控的设备。默认是所有接口启动和运行，不包括环回</p>
</li>
</ul>
<p>当nethogs运行时，按：</p>
<ul>
<li><p>  q：退出</p>
</li>
<li><p>  s：按SENT流量排序</p>
</li>
<li><p>  r：按RECEIVE流量排序</p>
</li>
<li><p>  m：在总（KB，B，MB）和KB &#x2F; s模式之间切换</p>
</li>
</ul>
</blockquote>
<p><strong>（3）使用示例</strong></p>
<p><strong>sudo nethogs eth0</strong></p>
<p><img src="/images/1713511669-a958c249101a5327e3a8a6be45e78c88.png" alt="Linux 查看或统计网卡流量的几种方式(图8)" title="Linux 查看或统计网卡流量的几种方式(图8)"></p>
<h2 id="8、扩展"><a href="#8、扩展" class="headerlink" title="8、扩展"></a>8、扩展</h2><p>除了上面说到的工具外，linux还提供了一些其他流量监控工具，如：</p>
<ul>
<li><p>ip：查看网卡上的总流量</p>
</li>
<li><p>stat：用来替换vmstat、iostat、netstat、nfsstat和ifstat的全能系统信息统计工具，支持数据实时刷新，输出直观易懂</p>
</li>
<li><p>ss 和 netstat：查看活动链接&#x2F;监听端口的常用命令。ss 是 netstat 的替代，性能更好，建议使用</p>
</li>
<li><p>nethogs：查看单个进程流量而设计的工具，按照进程进行带宽分组</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>grafana如何用oauth实现第三方授权登录</title>
    <url>/2024/04/19/grafana%E5%A6%82%E4%BD%95%E7%94%A8oauth%E5%AE%9E%E7%8E%B0%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8E%88%E6%9D%83%E7%99%BB%E5%BD%95/</url>
    <content><![CDATA[<p><strong>前言</strong></p>
<hr>
<p>    无论是什么行业的企业或业务，有时候我们需要查看历史数据—了解业务，总结规律，发现异常。  </p>
<p>    grafana作为数据可视化软件之一，支持多种数据源，可灵活配置图表，得到你想要的数据呈现效果，也有很多开放的api，方便和其他系统集成，也就是说grafana直接读取你的数据，至于如何展示，在它上面设置就可以了，而且开源、免费。如果数据量多，需要高性能，可以把数据存在influxDb等时序数据库。</p>
<p>    但是遗憾的是，系统本身没有中文版本，如果需要汉化：可参考我之前的这篇文章：<a href="https://blog.csdn.net/koppel/article/details/90272136%E3%80%82">https://blog.csdn.net/koppel/article/details/90272136。</a></p>
<hr>
<p>    近期需要做grafana的权限控制，虽然官网有介绍多种方式，但是不够详细，网上的帖子也比较旧，想做好还是要花一些时间的。一年前写的上面这篇简短的文章也有四千多阅读量， 有人关注grafana也说明了物联网和大数据的发展迅速，因此这次把oauth的也记录下来，给大家参考。</p>
<p><img src="/images/1713518074-a0bcb81793ab12d85c5d41ddd4a277d1.png"></p>
<p><strong>需求</strong></p>
<hr>
<p>我自己有业务的管理后台，不同的管理员有不同的项目权限，同时自己服务器部署了grafana。之前是使用了匿名登录（auth.anonymous enable&#x3D;true），所有人都能看到所有项目，现在希望在自己的管理后台点击按钮跳转到grafana后台，也有对应的权限。</p>
<p>想实现的效果就是：</p>
<p>1、能不能那边登录了，这边自动登录</p>
<p>2、用户仅能查看自己项目的图表数据。  </p>
<p>3、除了登录，权限管理能不能也同步</p>
<p><strong>使用自带的权限管理功能</strong></p>
<hr>
<p>如果不开发，使用自带的权限也是可以的。</p>
<p>    grafana有几个概念：user用户、org组织、team团队、role角色。我的项目中只有一个组织，据说创建多个组织需要重新配置数据源。系统默认三个角色。grafana从6.4以上支持role mapping，如果没猜错的话，会支持更多的角色，但是由于我用的是6.2，默认只有admin、viewer和editor三个角色。</p>
<p>    上面两种都不太合适做权限管理。但是可以通过team充当角色。人可以属于team，team又和dashboard关联。  </p>
<p>这样做的好处：</p>
<p>    不需要开发。</p>
<p>坏处：</p>
<p>    需要手动维护权限。如果你有自己的系统，那又要在grafana维护权限，权限改动两边都要更新，可能遗忘导致两边权限不一致。  </p>
<p><strong>使用oauth登录</strong></p>
<hr>
<p>为什么没选择ldap？  </p>
<p>    除了oauth，grafana还支持ldap（轻型目录访问协议），但是应该需要搭建服务，而oauth是更主流的方案。</p>
<p>目录：  </p>
<p>步骤1：修改grafana配置文件</p>
<p>步骤2：开发三个接口</p>
<p>步骤3：调试和验证</p>
<hr>
<p><strong>步骤1：修改grafana配置文件</strong></p>
<p>我的文件在&#x2F;etc&#x2F;grafana&#x2F;grafana.ini  </p>
<p>[server]  </p>
<p>root_url &#x3D; <a href="http://xxx.com:3000/">http://xxx.com:3000</a></p>
<p>这里的root_url需要修改为真实的地址，因为授权回调的redirect_uri是这个。</p>
<p>配置oauth  </p>
<p>[auth.generic_oauth]</p>
<p>enabled &#x3D; true</p>
<p>name &#x3D; OAuth</p>
<p>allow_sign_up &#x3D; true</p>
<p>client_id &#x3D; some_id</p>
<p>client_secret &#x3D; some_secret</p>
<p>scopes &#x3D; user:email,read:org</p>
<p>auth_url &#x3D; <a href="http://xxx.com/login/oauth/authorize">http://xxx.com/login/oauth/authorize</a></p>
<p>token_url &#x3D; <a href="http://xxx.com/login/oauth/token">http://xxx.com/login/oauth/token</a></p>
<p>api_url &#x3D; <a href="http://xxx.com/login/oauth/userinfo">http://xxx.com/login/oauth/userinfo</a></p>
<p>这里主要是需要后端提供三个接口：</p>
<p>auth_url是授权接口。token_url是获取token。api_url是获取用户信息接口，下文会继续介绍。</p>
<p>配置好之后可以重启grafana：</p>
<p>.&#x2F;bin&#x2F;grafana-server -config&#x3D;”&#x2F;etc&#x2F;grafana&#x2F;grafana.ini”</p>
<p><strong>步骤2：开发三个接口</strong></p>
<p>这里主要介绍请求流程，入参和返回值的形式，假设uid是123456。  </p>
<p>我是把uid作为code，同时作为token，在实际的项目中，后端最好使用JWT做token的验证。（关于JWT可自行百度）。  </p>
<p>接口1：get请求</p>
<p>请求地址：  </p>
<p><a href="https://xxx.com/login/oauth/authorize?access%5C_type=online&client%5C_id=some%5C_id&redirect%5C_uri=http://xxx.com:3000/login/generic%5C_oauth&response%5C_type=code&scope=user:email+read:org&state=JAh0jkpkBbBW4mkVHpWnylC9eJk1pvwAQgWar6bAXxQ=">https://xxx.com/login/oauth/authorize?access\_type=online&amp;client\_id=some\_id&amp;redirect\_uri=http%3A%2F%2Fxxx.com%3A3000%2Flogin%2Fgeneric\_oauth&amp;response\_type=code&amp;scope=user%3Aemail+read%3Aorg&amp;state=JAh0jkpkBbBW4mkVHpWnylC9eJk1pvwAQgWar6bAXxQ%3D</a></p>
<p>接口返回做重定向：</p>
<p><a href="http://xxx.com:3000/login/generic/_oauth?state=%7Bstate%7D&code=123456">http://xxx.com:3000/login/generic\_oauth?state={state}&amp;code=123456</a></p>
<p>接口2：post请求</p>
<p>请求地址：</p>
<p><a href="http://xxx.com/login/oauth/token">http://xxx.com/login/oauth/token</a></p>
<p>post参数：  </p>
<p>{“code”:”123456”,”grant_type”:”authorization_code”,”redirect_uri”:”<a href="http://xxx.com:3000/login/generic/_oauth%22%7D">http://xxx.com:3000/login/generic\_oauth&quot;}</a></p>
<p>返回值：</p>
<p>{</p>
<p>    “access_token”: “123456”,</p>
<p>    “token_type”: “Bearer”,</p>
<p>    “expiry_in”: “”,</p>
<p>     “refresh_token”: “”</p>
<p>}</p>
<p>接口3：</p>
<p>get请求</p>
<p>header：</p>
<p>authorization：Bearer 123456</p>
<p>返回值：</p>
<p>{</p>
<p>“name”:”test”,  </p>
<p>“email”:”test@test”</p>
<p>}</p>
<p>代码参考（php laravel）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">namespace App\Http\Controllers\BigData;</span><br><span class="line">use App\Http\Controllers\Controller;</span><br><span class="line">use Illuminate\Http\Request;</span><br><span class="line">use \LeanCloud\Query as LeanQuery;</span><br><span class="line">use Auth;</span><br><span class="line"></span><br><span class="line">class OAuthController extends Controller &#123;</span><br><span class="line"></span><br><span class="line">    public function auth(Request $request) &#123;</span><br><span class="line">        if (Auth::user() == NULL) &#123;</span><br><span class="line">            return response()-&gt;json([&quot;msg&quot; =&gt; &quot;not login&quot;]);</span><br><span class="line">        &#125;</span><br><span class="line">        $redirect_uri = $request-&gt;input(&quot;redirect_uri&quot;);</span><br><span class="line">        $state = $request-&gt;input(&quot;state&quot;);</span><br><span class="line">        $url = $redirect_uri . &quot;?state=&quot; . $state . &quot;&amp;code=&quot; . Auth::user()-&gt;objectId;</span><br><span class="line">        return response()-&gt;redirectTo($url);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // code 换取 token</span><br><span class="line">    public function token(Request $request) &#123;</span><br><span class="line">        $myObj = new \stdClass();</span><br><span class="line">        $myObj-&gt;access_token = $request-&gt;input(&quot;code&quot;);</span><br><span class="line">        $myObj-&gt;token_type = &quot;Bearer&quot;;// jwt要是这个</span><br><span class="line">        $myObj-&gt;expiry_in = &quot;&quot;;</span><br><span class="line">        $myObj-&gt;refresh_token = &quot;&quot;;</span><br><span class="line">        $myJSON = json_encode($myObj);</span><br><span class="line">        return response($myJSON);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function userinfo(Request $request) &#123;</span><br><span class="line">        $header_auth = \Request::header(&quot;authorization&quot;);</span><br><span class="line">        $uid = substr($header_auth, 7);</span><br><span class="line">        if (!$uid) &#123;</span><br><span class="line">            return response()-&gt;json([&quot;msg&quot; =&gt; &quot;&quot;]);</span><br><span class="line">        &#125;</span><br><span class="line">        // 根据uid获取用户</span><br><span class="line">        $query = new LeanQuery(&quot;_User&quot;);</span><br><span class="line">        $data = $query-&gt;get($uid);</span><br><span class="line">        $nickName = $data-&gt;get(&quot;nickName&quot;);</span><br><span class="line">        $email = $data-&gt;get(&quot;username&quot;) . &quot;@test&quot;;// 需要是电子邮箱格式</span><br><span class="line">        return response()-&gt;json([&quot;email&quot; =&gt; $email, &quot;name&quot; =&gt; $nickName]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><strong>步骤3：调试和验证</strong></p>
<p>首先访问<a href="http://xxx.com:3000/login%E8%A6%81%E8%83%BD%E7%9C%8B%E5%88%B0%E7%99%BB%E5%BD%95%E9%A1%B5%E9%9D%A2%E7%9A%84oauth%E5%85%A5%E5%8F%A3%EF%BC%8C%E8%AF%81%E6%98%8E%E9%85%8D%E7%BD%AE%E7%94%9F%E6%95%88%E4%BA%86">http://xxx.com:3000/login要能看到登录页面的oauth入口，证明配置生效了</a></p>
<p><img src="/images/1713518074-c5949ad00b336161732bbe79fa50e578.png"></p>
<p>    点击按钮后,会请求：<a href="http://xxx.com:3000/login/generic/_oauth%E3%80%82%E6%88%91%E4%BB%AC%E9%9C%80%E8%A6%81%E5%BC%80%E5%8F%91%E6%8F%90%E4%BE%9B%E7%9A%84%E4%B8%89%E4%B8%AAoauth%E6%8E%A5%E5%8F%A3%EF%BC%8C%E9%83%BD%E6%98%AF%E5%9C%A8login/generic/_oauth%E9%87%8C%E9%9D%A2%E9%9D%99%E9%BB%98%E8%B0%83%E7%94%A8%E7%9A%84%E3%80%82">http://xxx.com:3000/login/generic\_oauth。我们需要开发提供的三个oauth接口，都是在login/generic\_oauth里面静默调用的。</a></p>
<p>    先请求第一个auth_url接口获取code。然后拿code请求第二个token_url接口，获取token。然后把token放到header中请求第三个api_url接口。然后根据第三个接口返回的email和name自动注册登录。</p>
<p>    调试过程中如果接口有问题，grafana会把接口的返回值比如报错，都打印到日志中，查看日志中的信息即可。</p>
<hr>
<p>    oauth自动登录开发好之后，可以调用grafana的api开发权限管理：让指定的team拥有dashboard的查看权限，让用户属于某些team。api参考文档：<a href="https://grafana.com/docs/grafana/latest/http/_api/dashboard/_permissions/">https://grafana.com/docs/grafana/latest/http\_api/dashboard\_permissions/</a></p>
<p>    至此，你的grafana就可以和现有项目无缝衔接，使用更加方便。  </p>
<p>    本文的部分内容来自mediam，查看原文：</p>
<p><a href="https://medium.com/@manivannan/_data/grafana-generic-oauth-login-authentication-c31a1ce56a45">https://medium.com/@manivannan\_data/grafana-generic-oauth-login-authentication-c31a1ce56a45</a></p>
]]></content>
      <categories>
        <category>Grafana</category>
      </categories>
      <tags>
        <tag>Grafana</tag>
      </tags>
  </entry>
  <entry>
    <title>PromQL基础-运算符、聚合、功能函数</title>
    <url>/2024/04/28/PromQL%E5%9F%BA%E7%A1%80-%E8%BF%90%E7%AE%97%E7%AC%A6%E3%80%81%E8%81%9A%E5%90%88%E3%80%81%E5%8A%9F%E8%83%BD%E5%87%BD%E6%95%B0/</url>
    <content><![CDATA[<h1 id="1、数据基础"><a href="#1、数据基础" class="headerlink" title="1、数据基础"></a>1、数据基础</h1><h2 id="1-1、时间序列"><a href="#1-1、时间序列" class="headerlink" title="1.1、时间序列"></a>1.1、时间序列</h2><h3 id="1-1-1、介绍"><a href="#1-1-1、介绍" class="headerlink" title="1.1.1、介绍"></a>1.1.1、介绍</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">时间序列数据：按照时间顺序记录系统、设备状态变化的数据，每个数据称为一个样本；</span><br><span class="line">数据采集以特定的时间周期进行，因而，随着时间流逝，将这些样本数据记录下来，将生成一个离散的样本数据序列；</span><br><span class="line"></span><br><span class="line">该序列也称为向量（Vector）；而将多个序列放在同一个坐标系内（以时间为横轴，以序列为纵轴），将形成一个由数据点组成的矩阵；</span><br></pre></td></tr></table></figure>

<h3 id="1-1-2、离散图"><a href="#1-1-2、离散图" class="headerlink" title="1.1.2、离散图"></a>1.1.2、离散图</h3><p><img src="/images/1714297811-f030d7a90e28439cc5d37313d7205545.png"></p>
<h2 id="1-2、功能简介"><a href="#1-2、功能简介" class="headerlink" title="1.2、功能简介"></a>1.2、功能简介</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Prometheus基于指标名称（metrics name）以及附属的标签集（labelset）唯一定义一条时间序列。</span><br><span class="line">- 指标名称代表着监控目标上某类可测量属性的基本特征标识。</span><br><span class="line">- 标签则是这个基本特征上再次细分的多个可测量维度。</span><br></pre></td></tr></table></figure>

<h2 id="1-3、数据模型"><a href="#1-3、数据模型" class="headerlink" title="1.3、数据模型"></a>1.3、数据模型</h2><h3 id="1-3-1、指标名称、标签介绍"><a href="#1-3-1、指标名称、标签介绍" class="headerlink" title="1.3.1、指标名称、标签介绍"></a>1.3.1、指标名称、标签介绍</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Prometheus中，每个时间序列都由指标名称（Metric Name）和标签（Label）来唯一标识，格式为“&lt;metric name&gt;&#123;&lt;label name&gt;=&lt;label value&gt;, …&#125;”；</span><br><span class="line">指标名称：通常用于描述系统上要测定的某个特征；</span><br><span class="line">例如，http_requests_total表示接收到的HTTP请求总数；</span><br><span class="line">支持使用字母、数字、下划线和冒号，且必须能匹配RE2规范的正则表达式；</span><br><span class="line"></span><br><span class="line">标签：键值型数据，附加在指标名称之上，从而让指标能够支持多纬度特征；可选项；</span><br><span class="line">例如，http_requests_total&#123;method=GET&#125;和http_requests_total&#123;method=POST&#125;代表着两个不同的时间序列；</span><br><span class="line">标签名称可使用字母、数字和下划线，且必须能匹配RE2规范的正则表达式；</span><br><span class="line"></span><br><span class="line">以“__”为前缀的名称为Prometheus系统预留使用；</span><br></pre></td></tr></table></figure>

<h3 id="1-3-2、Metric-Name的表示方式"><a href="#1-3-2、Metric-Name的表示方式" class="headerlink" title="1.3.2、Metric Name的表示方式"></a>1.3.2、Metric Name的表示方式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">方式1：http_requests_total&#123;status=&quot;200&quot;,method=&quot;GET&quot;&#125;</span><br><span class="line">方式2【通常用于Prometheus内部】：&#123;__name__=&quot;http_requests_total,status=&quot;200&quot;,method=&quot;GET&#125;</span><br></pre></td></tr></table></figure>

<h2 id="1-4、样本数据"><a href="#1-4、样本数据" class="headerlink" title="1.4、样本数据"></a>1.4、样本数据</h2><h3 id="1-4-1、样本组成"><a href="#1-4-1、样本组成" class="headerlink" title="1.4.1、样本组成"></a>1.4.1、样本组成</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Prometheus的每个数据样本由两部分组成</span><br><span class="line">float64格式的数据</span><br><span class="line">毫秒精度的时间戳</span><br></pre></td></tr></table></figure>

<h3 id="1-4-2、样本图"><a href="#1-4-2、样本图" class="headerlink" title="1.4.2、样本图"></a>1.4.2、样本图</h3><p><img src="/images/1714297811-bda2998e3e356cd627233e6492ce165e.jpg"></p>
<h2 id="1-5、注意事项"><a href="#1-5、注意事项" class="headerlink" title="1.5、注意事项"></a>1.5、注意事项</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">指标名称和标签的特定组合代表着一个时间序列；</span><br><span class="line">指标名称相同，但标签不同的组合分别代表着不同的时间序列；</span><br><span class="line">不同的指标名称自然更是代表着不同的时间序列；</span><br><span class="line">PromQL支持基于定义的指标维度进行过滤和聚合更改任何标签值，包括添加或删除标签，都会创建一个新的时间序列</span><br><span class="line">应该尽可能地保持标签的稳定性，否则，则很可能创建新的时间序列，更甚者会生成一个动态的数据环境，并使得监控的数据源难以跟踪，</span><br><span class="line">从而导致建立在该指标之上的图形、告警及记录规则变得无效。</span><br></pre></td></tr></table></figure>


<h1 id="2、查询基础"><a href="#2、查询基础" class="headerlink" title="2、查询基础"></a>2、查询基础</h1><h2 id="2-1、PromQL简介"><a href="#2-1、PromQL简介" class="headerlink" title="2.1、PromQL简介"></a>2.1、PromQL简介</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Prometheus提供一个内置的函数式的表达式语言PromQL(Prometheus Query Language)，可以使用户实时地查找和聚合时间序列数据。表达式计算结果可以在图表中展示，</span><br><span class="line">也可以在Prometheus表达式浏览器中以表格形式展示，或者作为数据源, 以HTTP API的方式提供给外部系统使用。</span><br><span class="line"></span><br><span class="line">注意：默认情况下，他是以当前时间为基准点，来进行数据的获取操作。</span><br></pre></td></tr></table></figure>

<h2 id="2-2、表达式"><a href="#2-2、表达式" class="headerlink" title="2.2、表达式"></a>2.2、表达式</h2><h3 id="2-2-1、表达式样式"><a href="#2-2-1、表达式样式" class="headerlink" title="2.2.1、表达式样式"></a>2.2.1、表达式样式</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、数据类型 instant vector 瞬时数据，在某一时刻，抓取的所有监控项数据。这些度量指标数据放在同一个key中。 range vector 范围数据，在某一个时间段内，抓取的所有监控项数据。2、数据格式 scalar 标量，一个简单的浮点类型数值</span><br><span class="line">string</span><br><span class="line"> 字符串，一个之前没有被使用的简单字符串</span><br></pre></td></tr></table></figure>


<h3 id="2-2-2、基于表达式查询的图表"><a href="#2-2-2、基于表达式查询的图表" class="headerlink" title="2.2.2、基于表达式查询的图表"></a>2.2.2、基于表达式查询的图表</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node_filefd_allocated&#123;instance=&quot;192.168.10.30:9100&quot;&#125;</span><br><span class="line"></span><br><span class="line">PromQL的查询操需要针对有限个时间序列上的样本数据进行，挑选出目标时间序列是构建表达式时最为关键的一步,</span><br><span class="line">然后根据挑选出给定指标名称下的所有时间序列或部分时间序列的即时（当前）样本值或至过去某个时间范围内的样本值。</span><br></pre></td></tr></table></figure>

<p><img src="/images/1714297811-7e52142d215ba86940f66994f4e9245f.png"></p>
<h2 id="2-3、数据类型"><a href="#2-3、数据类型" class="headerlink" title="2.3、数据类型"></a>2.3、数据类型</h2><h3 id="2-3-1、数值"><a href="#2-3-1、数值" class="headerlink" title="2.3.1、数值"></a>2.3.1、数值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对于数值来说，我们这里主要记住两种类型的数值：字符串和数字。</span><br></pre></td></tr></table></figure>

<h3 id="2-3-2、字符串"><a href="#2-3-2、字符串" class="headerlink" title="2.3.2、字符串"></a>2.3.2、字符串</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字符串可以用单引号，双引号或反引号指定为文字，如果字符串内的特殊符号想要生效，我们可以使用反引号。</span><br><span class="line">&quot;</span><br><span class="line">this is a string</span><br><span class="line">&quot;</span><br><span class="line">&#x27;</span><br><span class="line">these are unescaped: n t</span><br><span class="line">&#x27;</span><br><span class="line">`these are not unescaped: n</span><br><span class="line">&#x27;</span><br><span class="line"> &quot; t`</span><br></pre></td></tr></table></figure>

<h3 id="2-3-3、数字"><a href="#2-3-3、数字" class="headerlink" title="2.3.3、数字"></a>2.3.3、数字</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对于数据值的表示，可以使用我们平常时候的书写方法 &quot;[-](digits)[.(digits)]&quot; 2、2.43、-2.43等</span><br></pre></td></tr></table></figure>

<h2 id="2-4、数据选择器"><a href="#2-4、数据选择器" class="headerlink" title="2.4、数据选择器"></a>2.4、数据选择器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">所谓的数据选择器，其实指的是获取实时数据或者历史数据的一种方法</span><br></pre></td></tr></table></figure>

<h3 id="2-4-1、瞬时选择器"><a href="#2-4-1、瞬时选择器" class="headerlink" title="2.4.1、瞬时选择器"></a>2.4.1、瞬时选择器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">瞬时选择器 ：获取及时的一组时间序列和单个样本值，根据数据的精确度，可以有以下几种使用方法：</span><br><span class="line">1、根据监控项名称获取最新值。</span><br><span class="line">  node_filefd_allocated</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">2、通过&#123;key=value,&#125;样式获取符合条件的数据值。</span><br><span class="line">  node_filefd_allocated&#123;instance=&quot;10.0.0.12:9100&quot;, job=&quot;node_exporter&quot;&#125;</span><br><span class="line"></span><br><span class="line">  属性解析：</span><br><span class="line">     多个条件间可以使用逗号&quot;,&quot;隔开，每个条件内部可以通过多种符号，表示不同含义=(精确匹配)、!=(不匹配)、=~(正则匹配)、!~(正则不匹配)</span><br><span class="line">  如果条件中存在多值，可以使用&quot;|&quot;表示或的意思，env=~&quot;staging|testing|development&quot;，条件中必须包含一个与空标签值不匹配的选择器，不能写成&#123;job=~&quot;.*&quot;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">3、通过__name__获取批量监控项的值。</span><br><span class="line">   &#123;__name__=&quot;prometheus_http_requests_total&quot;&#125;、&#123;__name__=~&quot;^prometheus.*&quot;&#125; </span><br><span class="line"> </span><br><span class="line">注意：</span><br><span class="line"> 指标 prometheus_http_requests_total 默认情况下，针对的是 localhost:9090 的target，其他无效</span><br></pre></td></tr></table></figure>

<h3 id="2-4-2、范围选择器"><a href="#2-4-2、范围选择器" class="headerlink" title="2.4.2、范围选择器"></a>2.4.2、范围选择器</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">范围选择器</span><br><span class="line">工作方式与瞬时向量选择器一样，区别在于时间范围长一些，他主要是在瞬时选择器多了一个[]格式的时间范围后缀，在[]内部可以采用多个单位表示不同的时间范围，</span><br><span class="line">比如s(秒)、m(分)、h(时)、d(日)、w(周)、y(年)。</span><br><span class="line"></span><br><span class="line">prometheus_http_requests_total&#123;job=&quot;prometheus&quot;&#125;[5m]</span><br><span class="line">属性解析： 这表示过去5分钟内的监控数据值，这些数据一般以表格方式展示，而不是列表方式展示。</span><br><span class="line"> </span><br><span class="line">注意：</span><br><span class="line"> 范围向量选择器返回的是一定时间范围内的数据样本，虽然不同时间序列的数据抓取时间点相同，但它们的时间戳并不会严格对齐；</span><br><span class="line"> - 多个Target上的数据抓取需要分散在抓取时间点前后一定的时间范围内，以均衡Prometheus Server的负载；</span><br><span class="line"> - 因而，Prometheus在趋势上准确，但并非绝对精准；</span><br></pre></td></tr></table></figure>

<p><img src="/images/1714297811-de9d8aa2a2e29ec047234f7829b57781.png"></p>
<h3 id="2-4-3、偏移修饰符"><a href="#2-4-3、偏移修饰符" class="headerlink" title="2.4.3、偏移修饰符"></a>2.4.3、偏移修饰符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">范围选择器可以获取最近时间段的数据，而对于某个历史时间段中的数据，我们就需要通过offset时间偏移的方式来进行获取了。</span><br><span class="line"> </span><br><span class="line">prometheus_http_requests_total offset 5m       # 往前偏移5分钟</span><br><span class="line">prometheus_http_requests_total&#123;code=&quot;200&quot;&#125; offset 5m # 往前偏移5分钟</span><br><span class="line">prometheus_http_requests_total&#123;handler=&quot;/metrics&quot;&#125;[5m] offset 3m  # 往前偏移3分钟，再取偏移后的，前的5分钟。</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"> offset 与 数据选择器是一个整体，不能分割</span><br><span class="line"> offset 偏移的是时间点</span><br></pre></td></tr></table></figure>

<h2 id="2-5、语法格式"><a href="#2-5、语法格式" class="headerlink" title="2.5、语法格式"></a>2.5、语法格式</h2><h3 id="2-5-1、算术运算符"><a href="#2-5-1、算术运算符" class="headerlink" title="2.5.1、算术运算符"></a>2.5.1、算术运算符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">算术运算符：+、-、*、/、%、^</span><br></pre></td></tr></table></figure>

<h3 id="2-5-2、比较运算符"><a href="#2-5-2、比较运算符" class="headerlink" title="2.5.2、比较运算符"></a>2.5.2、比较运算符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">比较运算符：==, !=, &lt;=, &lt;, &gt;=, &gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-5-3、逻辑运算符"><a href="#2-5-3、逻辑运算符" class="headerlink" title="2.5.3、逻辑运算符"></a>2.5.3、逻辑运算符</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">and、or、unless</span><br></pre></td></tr></table></figure>

<h3 id="2-5-4、运算符优先级"><a href="#2-5-4、运算符优先级" class="headerlink" title="2.5.4、运算符优先级"></a>2.5.4、运算符优先级</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、 ^ </span><br><span class="line">2、 *, /, %</span><br><span class="line">3、 +, -</span><br><span class="line">4、 ==, !=, &lt;=, &lt;, &gt;=, &gt;</span><br><span class="line">5、 and, unless</span><br><span class="line">6、or</span><br></pre></td></tr></table></figure>

<h3 id="2-5-5、运算符-示例"><a href="#2-5-5、运算符-示例" class="headerlink" title="2.5.5、运算符-示例"></a>2.5.5、运算符-示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、单位换算</span><br><span class="line">node_memory_MemFree_bytes / (1024 * 1024)</span><br><span class="line"></span><br><span class="line">2、内存使用率</span><br><span class="line">(node_memory_MemTotal_bytes - node_memory_MemFree_bytes) / node_memory_MemTotal_bytes * 100</span><br><span class="line"></span><br><span class="line">3、磁盘使用率</span><br><span class="line">(node_filesystem_size_bytes&#123;mountpoint=&quot;/&quot;&#125; - node_filesystem_free_bytes&#123;mountpoint=&quot;/&quot;&#125;) /node_filesystem_size_bytes&#123;mountpoint=&quot;/&quot;&#125; * 100</span><br><span class="line"></span><br><span class="line">4、阈值判断</span><br><span class="line">(node_memory_MemTotal_bytes - node_memory_MemFree_bytes) / node_memory_MemTotal_bytes &gt; 0.95</span><br><span class="line">prometheus_http_requests_total &gt; bool 1000</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">1、对于比较运算符来说，条件成立有结果输出，否则没有结果输出</span><br><span class="line">2、使用bool修改符后，布尔运算不会对时间序列进行过滤，而是直接依次瞬时向量中的各个样本数据与标量的比较结果0或者1。从而形成一条新的时间序列。</span><br></pre></td></tr></table></figure>

<h3 id="2-5-6、集合-示例"><a href="#2-5-6、集合-示例" class="headerlink" title="2.5.6、集合-示例"></a>2.5.6、集合-示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">并集</span><br><span class="line">node_memory_MemTotal_bytes&#123;instance=&quot;192.168.10.29:9100&quot;&#125; or node_memory_MemFree_bytes&#123;instance=&quot;192.168.10.30:9100&quot; &#125;</span><br><span class="line"></span><br><span class="line">交集</span><br><span class="line">node_memory_MemTotal_bytes&#123;instance=&quot;192.168.10.29:9100&quot;&#125; and node_memory_MemFree_bytes&#123;instance=&quot;192.168.10.30:9100&quot; &#125;</span><br><span class="line"></span><br><span class="line">补集</span><br><span class="line">node_memory_MemTotal_bytes&#123;job=&quot;node_exporter&quot;&#125; unless node_memory_MemTotal_bytes&#123;instance=&quot;192.168.10.30:9100&quot;&#125;</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line">and、or、unless      # 主要是针对获取的数据值进行条件选集合用的。</span><br><span class="line">and、or、unless      # 对象是一个完整的表达式。</span><br></pre></td></tr></table></figure>

<h2 id="2-6、聚合操作"><a href="#2-6、聚合操作" class="headerlink" title="2.6、聚合操作"></a>2.6、聚合操作</h2><h3 id="2-6-1、常用函数的介绍"><a href="#2-6-1、常用函数的介绍" class="headerlink" title="2.6.1、常用函数的介绍"></a>2.6.1、常用函数的介绍</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">聚合操作虽然是一个个的功能，但是他们并不是功能函数，仅仅代表对数据进行简单的功能处理。</span><br><span class="line"></span><br><span class="line">常见的方法有：</span><br><span class="line"> sum、min、max、avg、count、count_values(值计数)</span><br><span class="line"> stddev(标准差)、stdvar(标准差异)、bottomk(最小取样)、topk(最大取样)、quantile(分布统计)</span><br><span class="line"> </span><br><span class="line">格式：</span><br><span class="line">   聚合函数(metric表达式) sum、min、max、avg、count等</span><br><span class="line">   聚合函数(描述信息，metric) count_values、bottomk、topk等</span><br><span class="line"></span><br><span class="line">我们可以借助于without和by功能获取数据集中的一部分进行统计,格式如下sum(数据选择表达式) without|by (&lt;label list&gt;)</span><br><span class="line"></span><br><span class="line">注意：</span><br><span class="line"> without 表示显示信息的时候，不包括指定的标签列表</span><br><span class="line"> by 表示显示信息的时候，仅显示指定的标签</span><br></pre></td></tr></table></figure>

<h3 id="2-6-2、聚合-示例"><a href="#2-6-2、聚合-示例" class="headerlink" title="2.6.2、聚合-示例"></a>2.6.2、聚合-示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、内存总量</span><br><span class="line">sum(node_memory_MemTotal_bytes)</span><br><span class="line"></span><br><span class="line">2、确认CPU的总数量</span><br><span class="line">count(node_cpu_seconds_total&#123;mode=&#x27;system&#x27;&#125;)</span><br><span class="line"></span><br><span class="line">3、获取最大的值</span><br><span class="line">max(prometheus_http_requests_total)</span><br><span class="line"></span><br><span class="line">4、分组统计计数</span><br><span class="line">count_values(&quot;counts&quot;,node_filesystem_size_bytes)</span><br><span class="line"></span><br><span class="line">5、获取前5个最大值</span><br><span class="line">topk(5, prometheus_http_requests_total)</span><br><span class="line"></span><br><span class="line">6、求和，除了job</span><br><span class="line">sum(prometheus_http_requests_total) without (job)</span><br><span class="line"></span><br><span class="line">7、求和，仅仅是mode</span><br><span class="line">sum(node_cpu_seconds_total) by (mode)</span><br></pre></td></tr></table></figure>

<h2 id="2-7、功能函数"><a href="#2-7、功能函数" class="headerlink" title="2.7、功能函数"></a>2.7、功能函数</h2><h3 id="2-7-1、函数简介"><a href="#2-7-1、函数简介" class="headerlink" title="2.7.1、函数简介"></a>2.7.1、函数简介</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">默认情况下，prometheus官方默认的功能函数有40个。</span><br></pre></td></tr></table></figure>

<h3 id="2-7-2、计算相关-函数"><a href="#2-7-2、计算相关-函数" class="headerlink" title="2.7.2、计算相关-函数"></a>2.7.2、计算相关-函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">绝对值       abs()导数         deriv()指数         exp()对数</span><br><span class="line">ln</span><br><span class="line">()二进制对数   log2()10进制对数   log10()平方根       sqrt()向上取整     ceil()向下取整     floor()四舍五入     round()样本差       idelta()差值         delta()递增值       increase()重置次数     resets()递增率       irate()变化率       rate()平滑值       holt_winters()直方百分位   histogram_quantile()预测值       predict_linear()参数         vector()范围最小值   min_over_time()范围最大值   max_over_time()范围平均值   avg_over_time()范围求和值   sum_over_time()范围计数值   count_over_time()范围分位数   quantile_over_time()范围标准差   stddev_over_time()范围标准方差 stdvar_over_time()</span><br></pre></td></tr></table></figure>


<h3 id="2-7-3、取样相关-函数"><a href="#2-7-3、取样相关-函数" class="headerlink" title="2.7.3、取样相关-函数"></a>2.7.3、取样相关-函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获取样本     absent()升序</span><br><span class="line">sort</span><br><span class="line">()降序        sort_desc()变化数      changes()判断值      scalar()判断大      clamp_max()判断小      clamp_min()范围采样值   absent_over_time()</span><br></pre></td></tr></table></figure>


<h3 id="2-7-4、时间相关-函数"><a href="#2-7-4、时间相关-函数" class="headerlink" title="2.7.4、时间相关-函数"></a>2.7.4、时间相关-函数</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">day_of_month()day_of_week()days_in_month()hour()minute()month()</span><br><span class="line">time</span><br><span class="line">()timestamp()year()</span><br></pre></td></tr></table></figure>


<h3 id="2-7-5、标签相关"><a href="#2-7-5、标签相关" class="headerlink" title="2.7.5、标签相关"></a>2.7.5、标签相关</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">标签合并  label_join()</span><br><span class="line">标签替换  labelreplace()</span><br></pre></td></tr></table></figure>

<h3 id="2-7-6、功能函数-示例"><a href="#2-7-6、功能函数-示例" class="headerlink" title="2.7.6、功能函数-示例"></a>2.7.6、功能函数-示例</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、ceil()：向上取整</span><br><span class="line">ceil(node_load15 * 10)</span><br><span class="line"></span><br><span class="line">2、increase(): 多值累加 - (last值-last前一个值)</span><br><span class="line">最近1分钟内CPU处于空闲状态时间</span><br><span class="line">increase(node_cpu_seconds_total&#123;cpu=&quot;0&quot;,mode=&quot;idle&quot;&#125;[1m])</span><br><span class="line"></span><br><span class="line">3、irate()：查看瞬时变化率 - (last值-last前一个值)/时间戳差值</span><br><span class="line">查看CPU最近5m内最多的增长率</span><br><span class="line">irate(node_cpu_seconds_total&#123;instance=&quot;10.0.0.12:9100&quot;,mode=&quot;idle&quot;&#125;[5m])</span><br><span class="line"></span><br><span class="line">4、rate():平均变化率 - (last值-first值)/时间差s</span><br><span class="line">过去一分钟磁盘读的变化率</span><br><span class="line">rate(node_disk_read_bytes_total[1m])</span><br><span class="line">一分钟内网卡传输的字节数(MB)</span><br><span class="line">rate(node_network_transmit_bytes_total&#123;device=&quot;ens33&quot;&#125;[1m]) /1024 /1024</span><br><span class="line"></span><br><span class="line">5、histogram_quantile(): 百分取样值</span><br><span class="line">计算过去10m内请求持续时间的第90个百分位数</span><br><span class="line">histogram_quantile(0.9, rate(prometheus_http_request_duration_seconds_bucket[10m]))</span><br><span class="line"></span><br><span class="line">6、time(): 获取当前时间值</span><br><span class="line">计算当前系统的运行时间</span><br><span class="line">sum(time() - node_boot_time_seconds) / 3600</span><br></pre></td></tr></table></figure>

<h2 id="2-8、总结"><a href="#2-8、总结" class="headerlink" title="2.8、总结"></a>2.8、总结</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">操作符号</span><br><span class="line"> - 常用操作：运算符、聚合运算</span><br><span class="line">功能函数</span><br><span class="line"> - 转换、计算、统计、时间、标签</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>shell脚本加密</title>
    <url>/2024/04/29/shell%E8%84%9A%E6%9C%AC%E5%8A%A0%E5%AF%86/</url>
    <content><![CDATA[<h2 id="需求："><a href="#需求：" class="headerlink" title="需求："></a>需求：</h2><p>公司的服务器登录都是通过jumpserver堡垒机管理的，由于实在不喜欢web终端的操作，于是就写了个自动登录的shell脚本，由于脚本要公开给部分研发人员使用，但是脚本中包含了服务器的普通用户和root用户的密码，所以为了不使密码泄露要将脚本内容加密；</p>
<h3 id="示例脚本："><a href="#示例脚本：" class="headerlink" title="示例脚本："></a>示例脚本：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;</span><br><span class="line">do</span><br><span class="line">    echo $i</span><br><span class="line">done</span><br></pre></td></tr></table></figure>

<h2 id="一、gzexe加密"><a href="#一、gzexe加密" class="headerlink" title="一、gzexe加密"></a>一、gzexe加密</h2><p>gzexe命令比较简单，其本质就是一个压缩软件，在CentOS 7.7上是自带的，其他版本不清楚；</p>
<h3 id="1、加密"><a href="#1、加密" class="headerlink" title="1、加密"></a>1、加密</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@message test]# gzexe test.sh</span><br><span class="line">test.sh:	  2.0%</span><br><span class="line">[root@message test]# ls</span><br><span class="line">test.sh  test.sh~</span><br></pre></td></tr></table></figure>

<p>执行完成后，会在当前目录生成一个备份文件test.sh~，该文件的内容是原始明文文件的内容，是可以删除的；test.sh文件就是加密压缩后的文件，用cat查看时就是一堆乱码，但是该加密脚本是可以执行的；</p>
<h3 id="2、解密"><a href="#2、解密" class="headerlink" title="2、解密"></a>2、解密</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@message test]# gzexe -d test.sh</span><br><span class="line">[root@message test]# ls</span><br><span class="line">test.sh  test.sh~</span><br></pre></td></tr></table></figure>

<p>执行完解密操作后，test.sh这个原来的加密文件就变成明文了；而test.sh~这个文件就是原先加密文件的备份，是加密的；</p>
<h2 id="二、shc加密"><a href="#二、shc加密" class="headerlink" title="二、shc加密"></a>二、shc加密</h2><p>shc是一个专业的加密工具，它可以将shell脚本转换为一个可执行的二进制文件；<br>官网地址：<a href="http://www.datsi.fi.upm.es/~frosal/sources/">http://www.datsi.fi.upm.es/~frosal/sources/</a> #目前官网已经断更了<br>软件地址：<a href="http://www.datsi.fi.upm.es/~frosal/sources/shc-3.8.9.tgz">http://www.datsi.fi.upm.es/~frosal/sources/shc-3.8.9.tgz</a>  </p>
<h3 id="1、安装"><a href="#1、安装" class="headerlink" title="1、安装"></a>1、安装</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://www.datsi.fi.upm.es/~frosal/sources/shc-3.8.9.tgz</span><br><span class="line">tar xvf shc-3.8.9.tgz -C /usr/local/</span><br><span class="line">cd /usr/local/shc-3.8.9</span><br><span class="line">mkdir -p /usr/local/man/man1    # 该步骤不能省略，make install的时候会报错</span><br><span class="line"></span><br><span class="line">[root@message shc-3.8.9]# make install</span><br><span class="line">***	Installing shc and shc.1 on /usr/local</span><br><span class="line">***	¿Do you want to continue? y    #是否继续，输入y即可</span><br><span class="line">install -c -s shc /usr/local/bin/</span><br><span class="line">install -c -m 644 shc.1 /usr/local/man/man1/</span><br><span class="line">[root@message shc-3.8.9]# which shc  #能看到环境变量则安装成功</span><br><span class="line">/usr/local/bin/shc</span><br></pre></td></tr></table></figure>

<h3 id="2、加密"><a href="#2、加密" class="headerlink" title="2、加密"></a>2、加密</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@message test]# shc -r -f test.sh</span><br><span class="line">[root@message test]# ls</span><br><span class="line">test.sh  test.sh.x  test.sh.x.c</span><br><span class="line">[root@message test]# cat test.sh</span><br><span class="line">#!/bin/bash</span><br><span class="line">for i in &#123;1..10&#125;</span><br><span class="line">do</span><br><span class="line">    echo $i</span><br><span class="line">done</span><br><span class="line">[root@message test]# bash test.sh.x</span><br><span class="line">test.sh.x: test.sh.x: 无法执行二进制文件</span><br><span class="line">[root@message test]# ./test.sh.x</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td></tr></table></figure>

<ul>
<li>test.sh 原始文件</li>
<li>test.sh.x 二进制可执行文件，用cat查看会是一堆乱码</li>
<li>test.sh.x.c 生成的C源码，可以删除</li>
<li>-r 制作可执行的二进制文件</li>
<li>-f 要编译的脚本的文件名</li>
</ul>
<h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p>gzexe和shc相比来看，gzexe不需要安装，操作也方便，但是安全性较差，懂行的人直接就解压了；shc相对来说还需要安装，目前官网也不再更新，但是安全性较高，破译难度较大；</p>
]]></content>
      <categories>
        <category>Shell</category>
      </categories>
      <tags>
        <tag>Shell</tag>
      </tags>
  </entry>
  <entry>
    <title>Pushgateway安装配置</title>
    <url>/2024/04/30/Pushgateway%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><h3 id="1、介绍"><a href="#1、介绍" class="headerlink" title="1、介绍"></a>1、介绍</h3><p>1、pushgateway是什么<br>pushgateway是另一种数据采集的方式，采用被动推送来获取监控数据的prometheus插件，它可以单独运行在任何节点上，并不一定要运行在被监控的客户端。<br>首先通过用户自定义编写的脚本把需要监控的数据发送给pushgateway，<br>pushgateway再将数据推送给对应的Prometheus服务。<br>对于短时运行、不支持轮询的任务，可以引入 pushgateway，将指标数值以 push 的方式推送到 pushgateway暂存，然后 prometheus 从 pushgateway 中轮询<br>pushgateway是Prometheus下的一个组件，用来当做采集对象和Prometheus的代理，Prometheus会定时的从gateway上面pull数据。  </p>
<p>2、使用pushgateway的原因<br>原因一：因为Prometheus 采用 pull 模式，可能由于不在一个子网或者防火墙，导致 Prometheus 无法直接拉取各个 target 数据。<br>Prometheus 在一些情况下无法直接拉取各个 target 数据<br>原因二：在监控业务数据的时候，需要将不同数据汇总, 由 Prometheus 统一收集。  </p>
<p>3、弊端<br>a:将多个节点数据汇总到 pushgateway, 如果pushgateway挂了，受影响比多个target大。<br>通过单个 Pushgateway 监控多个实例时， Pushgateway 将会成为单点故障和潜在瓶颈<br>b:Prometheus 拉取状态 up 只针对 pushgateway， 无法做到对每个节点有效。<br>c:Pushgateway可以持久化推送给它的所有监控数据。 因此，即使你的监控已经下线，prometheus还会拉取到旧的监控数据，需要手动清理pushgateway不要的数据</p>
<h3 id="2、流程图"><a href="#2、流程图" class="headerlink" title="2、流程图"></a>2、流程图</h3><p>pushgateway结构图</p>
<p><img src="/images/1714465752-9f876d0b58f221aed69399d0b4505d37.png" alt="Prometheus监控之pushgateway安装配置_hg" title="在这里插入图片描述"></p>
<p>与prometheus结合流程图</p>
<p><img src="/images/1714465752-855c5e91081f98f68ff03bad1ea083fe.png" alt="Prometheus监控之pushgateway安装配置_数据_02" title="在这里插入图片描述"></p>
<h2 id="二、安装配置"><a href="#二、安装配置" class="headerlink" title="二、安装配置"></a>二、安装配置</h2><h3 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h3><p>下载地址<br><a href="https://github.com/prometheus/pushgateway/releases/">https://github.com/prometheus/pushgateway/releases/</a></p>
<h3 id="2、安装并加入systemd管理"><a href="#2、安装并加入systemd管理" class="headerlink" title="2、安装并加入systemd管理"></a>2、安装并加入systemd管理</h3><p>1、解压<br>tar -zxvf pushgateway-1.2.0.linux-amd64.tar.gz<br>cp -r pushgateway-1.2.0.linux-amd64 &#x2F;usr&#x2F;local&#x2F;pushgateway  </p>
<p>2、编写systemd管理文件<br>vi &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system&#x2F;pushgateway.service<br>[Unit]<br>Descriptinotallow&#x3D;Prometheus Pushgateway daemon<br>After&#x3D;network.target<br>[Service]<br>Type&#x3D;simple<br>User&#x3D;root<br>Group&#x3D;root<br>ExecStart&#x3D;&#x2F;usr&#x2F;local&#x2F;pushgateway&#x2F;pushgateway \<br>    –persistence.file&#x3D;&#x2F;usr&#x2F;local&#x2F;pushgateway&#x2F;pushgateway_persist_file \<br>    –persistence.interval&#x3D;5m \<br>    –web.listen-address&#x3D;:9091<br>Restart&#x3D;on-failure<br>[Install]<br>WantedBy&#x3D;multi-user.target  </p>
<p>3、配置说明<br># –persistence.file&#x3D;&#x2F;usr&#x2F;local&#x2F;pushgateway&#x2F;pushgateway_persist_file，指定持久化文件路径或名称。如果没有指定存储，则监<br>控指标仅保存在内存中，若出现pushgateway重启或意外故障，便会导致数据丢失。默认情况下，持久化文件每5分钟写一次，可以使用<br>“–persistence.interval”重新设置写入文件的时间间隔。<br># –web.listen-address&#x3D;:9091，进行端口设置。  </p>
<p>4、重新加载system并启动pushgateway<br>systemctl daemon-reload<br>systemctl restart pushgateway<br>systemctl status pushgateway  </p>
<p>5、访问<br><a href="http://192.168.10.131:9091/">http://192.168.10.131:9091</a></p>
<h3 id="3、启动参数"><a href="#3、启动参数" class="headerlink" title="3、启动参数"></a>3、启动参数</h3><p>[root@root pushgateway-1.0.0]# .&#x2F;pushgateway  -h<br>usage: pushgateway [<flags>]  </p>
<p>The Pushgateway  </p>
<p>Flags:<br>  -h, –help                     Show context-sensitive help (also try –help-long and –help-man).<br>    #指定服务端口<br>    –web.listen-address&#x3D;”:9091”    Address to listen on for the web interface, API, and telemetry.<br>    #指定暴露出去的接口<br>    –web.telemetry-path&#x3D;”&#x2F;metrics”     Path under which to expose metrics.<br>    –web.external-url&#x3D;        The URL under which the Pushgateway is externally reachable.<br>    –web.route-prefix&#x3D;””      Prefix for the internal routes of web endpoints. Defaults to the path of –web.external-url.<br>    –web.enable-lifecycle     Enable shutdown via HTTP request.<br>    –web.enable-admin-api     Enable API endpoints for admin control actions.<br>    #持久化存储的地址，否则重启后采集的指标就没有了<br>    –persistence.file&#x3D;””      File to persist metrics. If empty, metrics are only kept in memory.<br>    #持久化存储的间隔时间<br>    –persistence.interval&#x3D;5m  The minimum interval at which to write out the persistence file.<br>    –log.level&#x3D;info           Only log messages with the given severity or above. One of: [debug, info, warn, error]<br>    –log.format&#x3D;logfmt        Output format of log messages. One of: [logfmt, json]<br>    –version                  Show application version.</p>
<h3 id="4、prometheus配置"><a href="#4、prometheus配置" class="headerlink" title="4、prometheus配置"></a>4、prometheus配置</h3><p>因为Prometheus配置pushgateway的时候，指定job和instance,但是它只表示pushgateway实例，不能真正表达收集数据的含义。所以在<br>prometheus中配置pushgateway的时候，需要添加honor_labels: true参数，从而避免收集数据被push本身的job和instance被覆盖。不加<br>honor_labels: true，会取gateway的job和instance，设置了的话会取push过来的数据，job必填，instance没有就为””空字符串  </p>
<ul>
<li>job_name: pushgetway<br>honor_labels: true<br>honor_timestamps: true<br>scrape_interval: 15s<br>scrape_timeout: 10s<br>metrics_path: &#x2F;metrics<br>scheme: http<br>static_configs:  <ul>
<li>targets:  <ul>
<li>127.0.0.1:9091<br>labels:<br>  instance: pushgateway</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="5、数据测试"><a href="#5、数据测试" class="headerlink" title="5、数据测试"></a>5、数据测试</h3><p>1、提交一条数据到 {job&#x3D;‘some_job’}<br>echo “some_metric 3.14” | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/some/_job">http://pushgateway.example.org:9091/metrics/job/some\_job</a>  </p>
<p>2、下面我们加上instance的值<br>echo “some_metrics 3.14” | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/some/_job/instance/some/_instance">http://pushgateway.example.org:9091/metrics/job/some\_job/instance/some\_instance</a><br>可以看到pushgateway页面上产生了两个group，pgw是以job和instance分组的。用来更细力度的区分。  </p>
<p>3、可以添加更多的标签，但是只会以job和instance区分<br>官方的例子如下：<br>cat &lt;&lt;EOF | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/some/_job/instance/some/_instance">http://pushgateway.example.org:9091/metrics/job/some\_job/instance/some\_instance</a><br># TYPE some_metric counter<br>some_metric{label&#x3D;”val1”} 42<br># TYPE another_metric gauge<br># HELP another_metric Just an example.<br>another_metric 2398.283<br>EOF<br>看起来太复杂，可以这么简单写<br>echo “some_metrics{tag&#x3D;\“test\“} 3.14” | curl –data-binary @- <a href="http://127.0.0.1:9091/metrics/job/some/_job/instance/some/_instance">http://127.0.0.1:9091/metrics/job/some\_job/instance/some\_instance</a><br>可以看到，这次并没有新增一个group，而且在同一个group下也没用多出来，而是把上一个覆盖了。  </p>
<p>4、删除某个组下某实例的所有数据<br>curl -XDELETE <a href="http://pushgateway.example.org:9091/metrics/job/some/_job/instance/some/_instance">http://pushgateway.example.org:9091/metrics/job/some\_job/instance/some\_instance</a>  </p>
<p>5、删除某个组下的所有数据<br>curl -X DELETE <a href="http://pushgateway.example.org:9091/metrics/job/some/_job">http://pushgateway.example.org:9091/metrics/job/some\_job</a>  </p>
<p>6、删除所有，需要开启 –web.enable-admin-api<br>curl -X PUT <a href="http://pushgateway.example.org:9091/api/v1/admin/wipe">http://pushgateway.example.org:9091/api/v1/admin/wipe</a></p>
<h2 id="三、数据推送"><a href="#三、数据推送" class="headerlink" title="三、数据推送"></a>三、数据推送</h2><h3 id="1、数据推送格式"><a href="#1、数据推送格式" class="headerlink" title="1、数据推送格式"></a>1、数据推送格式</h3><p>Pushgateway 监听的默认端口是 9091。路径看起来像:<br>&#x2F;metrics&#x2F;job&#x2F;&lt;JOB_NAME&gt;{&#x2F;&lt;LABEL_NAME&gt;&#x2F;&lt;LABEL_VALUE&gt;}<br>要 Push 数据到 PushGateway 中，可以通过其提供的 API 标准接口来添加，<br>默认URL地址为：<br>http:&#x2F;&#x2F;<ip>:9091&#x2F;metrics&#x2F;job&#x2F;<JOBNAME>{&#x2F;&lt;LABEL_NAME&gt;&#x2F;&lt;LABEL_VALUE&gt;}，<br>&lt;JOB_NAME&gt;用作job标签的值，后跟任意数量的其他标签对（可能包含也可能不包含 instance标签）<br>一般我们会添加一个 instance&#x2F;&lt;INSTANCE_NAME&gt;实例名称标签，来方便区分各个指标</p>
<h3 id="2、简单命令行数据推送"><a href="#2、简单命令行数据推送" class="headerlink" title="2、简单命令行数据推送"></a>2、简单命令行数据推送</h3><p>echo “test_metric 123456” | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/test/_job">http://pushgateway.example.org:9091/metrics/job/test\_job</a><br>刷新pushgateway，点击Metrics<br>除了test_metric外，同时还新增了push_time_seconds和push_failure_time_seconds两个指标，这两个是PushGateway系统自动生成的相关指标。<br>同时，在Prometheus UI页面上Graph页面可以查询test_metric的指标了。<br>test_metric{job&#x3D;”test_job”}</p>
<h3 id="3、较为复杂数据的推送（命令行数据）"><a href="#3、较为复杂数据的推送（命令行数据）" class="headerlink" title="3、较为复杂数据的推送（命令行数据）"></a>3、较为复杂数据的推送（命令行数据）</h3><p>Push 一个复杂一些的，一次写入多个指标，而且每个指标添加 TYPE 及 HELP 说明。<br>推送命令：<br>cat &lt;&lt;EOF | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/test/_job/instance/test/_instance">http://pushgateway.example.org:9091/metrics/job/test\_job/instance/test\_instance</a><br># TYPE test_metrics counter<br>test_metrics{label&#x3D;”app1”,name&#x3D;”demo”} 100.00<br># TYPE another_test_metrics gauge<br># HELP another_test_metrics Just an example.<br>another_test_metrics 123.45<br>EOF<br>指令说明：<br>&#x2F;metrics&#x2F;job&#x2F;test_job和metrics&#x2F;job&#x2F;test_job&#x2F;instance&#x2F;test_instance，它们都属于test_job，但是它们属于两个指标值，因为instance对二者做了区分<br>在Prometheus UI页面上Graph页面可以查询test_metrics的指标<br>test_metrics{instance&#x3D;”test_instance”,job&#x3D;”test_job”,label&#x3D;”app1”,name&#x3D;”demo”}</p>
<h3 id="4、大量数据提交（通过写入文件将文件提交）"><a href="#4、大量数据提交（通过写入文件将文件提交）" class="headerlink" title="4、大量数据提交（通过写入文件将文件提交）"></a>4、大量数据提交（通过写入文件将文件提交）</h3><p>cat pgdata.txt<br># TYPE http_request_total counter<br># HELP http_request_total get interface request count with different code.<br>http_request_total{code&#x3D;”200”,interface&#x3D;”&#x2F;v1&#x2F;save”} 276<br>http_request_total{code&#x3D;”404”,interface&#x3D;”&#x2F;v1&#x2F;delete”} 0<br>http_request_total{code&#x3D;”500”,interface&#x3D;”&#x2F;v1&#x2F;save”} 1<br># TYPE http_request_time gauge<br># HELP http_request_time get core interface http request time.<br>http_request_time{code&#x3D;”200”,interface&#x3D;”&#x2F;v1&#x2F;core”} 0.122  </p>
<p>curl -XPOST –data-binary @pgdata.txt <a href="http://pushgateway.example.org:9091/metrics/job/app/instance/app-172.30.0.0">http://pushgateway.example.org:9091/metrics/job/app/instance/app-172.30.0.0</a></p>
<h2 id="四、删除指标"><a href="#四、删除指标" class="headerlink" title="四、删除指标"></a>四、删除指标</h2><h3 id="1、ui界面删除"><a href="#1、ui界面删除" class="headerlink" title="1、ui界面删除"></a>1、ui界面删除</h3><h3 id="2、命令行删除"><a href="#2、命令行删除" class="headerlink" title="2、命令行删除"></a>2、命令行删除</h3><p>删除 job&#x3D;“test_job” 组下的所有指标值，可以执行如下命令：<br>curl -X DELETE <a href="http://pushgateway.example.org:9091/metrics/job/test/_job">http://pushgateway.example.org:9091/metrics/job/test\_job</a>  </p>
<p>删除job&#x3D;”test_job”组下的所有指标值，不包括{job&#x3D;”test_job”, instance&#x3D;”test_instance”}中的指标值，虽然它们的job名称都为test_job。<br>如果想删除该指标值，那么需要执行如下命令：<br>并且前提（requires to enable the admin API via the command line flag –web.enable-admin-api）<br>curl -X DELETE <a href="http://pushgateway.example.org:9091/metrics/job/test/_job/instance/test/_instance">http://pushgateway.example.org:9091/metrics/job/test\_job/instance/test\_instance</a></p>
<h2 id="五、使用注意事项"><a href="#五、使用注意事项" class="headerlink" title="五、使用注意事项"></a>五、使用注意事项</h2><p>1、指标值只能是数字类型，非数字类型报错<br>echo “test_metric 12.34.56ff” | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/test/_job/_1">http://pushgateway.example.org:9091/metrics/job/test\_job\_1</a><br>“text format parsing error in line 1: expected float as value, got “12.34.56ff””  </p>
<p>2、指标值支持最大长度为 16 位，超过16 位后默认置为 0<br>echo “test_metric 1234567898765432123456789” | curl –data-binary @- <a href="http://pushgateway.example.org:9091/metrics/job/test/_job/_2">http://pushgateway.example.org:9091/metrics/job/test\_job\_2</a><br>实际获取值 test_metric{job&#x3D;“test_job_2”} 123456789876543200000000  </p>
<p>3、PushGateway 数据持久化操作<br>默认PushGateway不做数据持久化操作，当PushGateway重启或者异常挂掉，导致数据的丢失，可以通过启动时添加-persistence.file和-persistence.interval参数来持久化数据。<br>-persistence.file 表示本地持久化的文件，将 Push 的指标数据持久化保存到指定文件，<br>-persistence.interval 表示本地持久化的指标数据保留时间，若设置为 5m，则表示 5 分钟后将删除存储的指标数据。  </p>
<p>4、PushGateway推送及Prometheus拉取时间<br>设置Prometheus每次从PushGateway拉取的数据，并不是拉取周期内用户推送上来的所有数据，而是最后一次Push到PushGateway上的数据，<br>所以推荐设置推送时间小于或等于Prometheus拉取的时间，这样保证每次拉取的数据是最新Push上来的。</p>
]]></content>
      <categories>
        <category>Pushgateway</category>
      </categories>
      <tags>
        <tag>Pushgateway</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux上安装及卸载JDK（包含yum方式）</title>
    <url>/2024/05/06/Linux%E4%B8%8A%E5%AE%89%E8%A3%85%E5%8F%8A%E5%8D%B8%E8%BD%BDJDK%EF%BC%88%E5%8C%85%E5%90%AByum%E6%96%B9%E5%BC%8F%EF%BC%89/</url>
    <content><![CDATA[<h2 id="一、-删除JDK"><a href="#一、-删除JDK" class="headerlink" title="一、 删除JDK"></a>一、 删除JDK</h2><p>1、先输入<code>java -version</code>查看是否安装了JDK</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@iZbp117bkiezirqkean6g3Z java-11-openjdk-11.0.21.0.9-2.0.3.al8.x86_64]# java -version</span><br><span class="line">openjdk version &quot;11.0.21&quot; 2023-10-17 LTS</span><br><span class="line">OpenJDK Runtime Environment (Red_Hat-11.0.21.0.9-1) (build 11.0.21+9-LTS)</span><br><span class="line">OpenJDK 64-Bit Server VM (Red_Hat-11.0.21.0.9-1) (build 11.0.21+9-LTS, mixed mode, sharing)</span><br></pre></td></tr></table></figure>

<p>2、查看jdk安装的路径<code>which java</code></p>
<p>以下说明没有安装，如果有则把<code>/usr/lib/jvm</code> 目录下的所有文件全部删除</p>
<p><img src="/images/1714980439-0a13f70e753d285e2103bf19319b14e6.png"></p>
<p>3、卸载命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、文件夹删除</span><br><span class="line">rm -rf JDK地址，比如小编的是rm -rf /usr/lib/jvm</span><br><span class="line"></span><br><span class="line">2、yum方式卸载</span><br><span class="line">yum -y remove java-11-openjdk*</span><br><span class="line"></span><br><span class="line">以上方式选其一即可；卸载的jdk按已存在的jdk版本进行卸载，示例为jdk11</span><br></pre></td></tr></table></figure>

<p>4、输入命令java，返回以下信息这说明卸载完毕</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">-bash：java:<span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure>

<p>5、如果有环境变量，则按照《安装指南》中将对应配置文件中的环境变量删除即可</p>
<h2 id="二、yum方式安装JDK"><a href="#二、yum方式安装JDK" class="headerlink" title="二、yum方式安装JDK"></a>二、yum方式安装JDK</h2><p>1、选择JDK版本，安装JDK</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">选择版本</span><br><span class="line">yum search java | grep -i --color JDK</span><br><span class="line"></span><br><span class="line">安装JDK11的命令</span><br><span class="line"></span><br><span class="line">yum  install  -y  java-11-openjdk.x86_64</span><br></pre></td></tr></table></figure>

<p>2、配置环境变量，根据实际java的地址配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"></span><br><span class="line">按键i ，进入到编辑模式</span><br><span class="line">将以下环境变量添加到末尾</span><br><span class="line"></span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-1.8.0.392.b08-4.0.3.al8.x86_64</span><br><span class="line">export JRE_HOME=/usr/lib/jvm/java-11-openjdk-1.8.0.392.b08-4.0.3.al8.x86_64/jre</span><br><span class="line">export CLASSPATH=.:$CLASSPATH:$JAVA_HOME/lib:$JRE_HOME/lib:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line">export PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin</span><br><span class="line"></span><br><span class="line">:wq!</span><br><span class="line">保存即可</span><br></pre></td></tr></table></figure>

<p>3、退出保存profile文件，重新加载执行该文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source  /etc/profile</span><br></pre></td></tr></table></figure>

<p>4、检查安装是否完成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">java</span><br><span class="line">javac</span><br></pre></td></tr></table></figure>

<p>至此完成安装及卸载动作</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>SkyWalking在Docker环境下部署</title>
    <url>/2024/05/07/SkyWalking%E5%9C%A8Docker%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<p><strong>一、Skywalking概述</strong></p>
<p>1、Skywalking介绍</p>
<p>Skywalking是分布式系统的应用程序性能监视工具，专为微服务，云原生架构和基于容器（Docker，K8S,Mesos）架构而设计，它是一款优秀的APM（Application Performance Management）工具，包括了分布式追踪，性能指标分析和服务依赖分析等。</p>
<p>Skywalking是一个国产的开源框架，2015年由吴晟个人开源，2017年加入Apache孵化器，国人开源的产品，主要开发人员来自于华为，2019年4月17日Apache董事会批准SkyWalking成为顶级项目，支持Java、.Net、NodeJs等探针，数据存储支持Mysql、Elasticsearch等，跟Pinpoint一样采用字节码注入的方式实现代码的无侵入，探针采集数据粒度粗，但性能表现优秀，且对云原生支持，目前增长势头强劲，社区活跃。</p>
<p>2、Skywalking架构图</p>
<p><img src="/images/1715049971-eeb935e9254d49af7016c1aa9e3211ae.png"></p>
<p>整个架构，分成上、下、左、右四部分</p>
<p>1）上部分 Agent ：负责从应用中，收集链路信息，发送给 SkyWalking OAP 服务器。目前支持 SkyWalking、Zikpin、Jaeger 等提供的 Tracing 数据信息。Agent 收集 SkyWalking Tracing 数据，传递给服务器。</p>
<p>2）下部分 SkyWalking OAP ：负责接收 Agent 发送的 Tracing 数据信息，然后进行分析(Analysis Core) ，存储到外部存储器( Storage )，最终提供查询( Query )功能。</p>
<p>3）右部分 Storage ：Tracing 数据存储。目前支持 ES、MySQL、Sharding Sphere、TiDB、H2 多种存储器。而我们目前采用的是 ES ，主要考虑是 SkyWalking 开发团队自己的生产环境采用 ES 为主。</p>
<p>4）左部分 SkyWalking UI ：负责提供控台，查看链路等等。</p>
<p><strong>SkyWalking 三个核⼼部分</strong></p>
<p><strong>Agent（探针）：</strong>Agent 运⾏在各个服务实例中，负责采集服务实例的 Trace 、Metrics 等数据，然后通过 gRPC ⽅式上报给 SkyWalking 后端。</p>
<p><strong>OAP：</strong>SkyWalking 的后端服务，⼀个是负责接收 Agent 上报上来的 Trace、Metrics 等数据，进⾏流式分析，最终将分析得到的结果写⼊持久化存储中，另⼀个是负责响应 SkyWalking UI 界⾯发送来的查询请求。</p>
<p><strong>UI 界⾯：</strong>展示查询结果。</p>
<p><strong>SkyWalking Agent实现原理</strong></p>
<p>SkyWalking Agent是通过Java Agent的方式随着应用程序一起启动，然后通过Byte Buddy库动态插入埋点信息收集Trace信息。Java Agent本质上就是⼀个Jar包，它会调⽤ Instrumentation API，来修改已经加载到JVM中的字节码。Instrumentation API由JVM提供⽤来修改已加载类的⼯具，可以提供Java语⾔编写的插桩功能，动态修改运⾏时代码的能⼒。</p>
<p><strong>Java Agent具有两种加载⽅式</strong></p>
<p><strong>静态加载</strong></p>
<p>这种⽅式下，在应⽤程序的任何代码被执⾏之前，就加载Agent以修改字节码。静态加载需要使⽤JVM 的-javaagent参数：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">java -javaagent:agent.jar -jar application.jar</span><br><span class="line"><span class="meta"># 可以同时加载多个Agents</span></span><br><span class="line">java -javaagent:agentA.jar -javaagent:agentB.jar application.jar</span><br></pre></td></tr></table></figure>

<p><strong>动态加载</strong></p>
<p>这种⽅式下，Agent可以在运⾏时动态按需的加载。动态加载需要调⽤Java Attach API。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// 根据PID查找⽬标JVM，并连接到JVM</span><br><span class="line">VirtualMachine jvm = VirtualMachine.attach(jvmPid);</span><br><span class="line">// 加载Agent</span><br><span class="line">jvm.loadAgent(agentFile.getAbsolutePath());</span><br><span class="line">// 取消到JVM的连接</span><br><span class="line">jvm.detach();</span><br></pre></td></tr></table></figure>

<p><strong>Instrumentation</strong></p>
<p>      Instrumentation是java提供的修改已经加载到JVM中字节码的API。使⽤ Instrumentation，开发者可以构建⼀个独⽴于应⽤程序的代理程序（Agent），⽤来监测和协助运⾏在 JVM 上的程序，甚⾄能够替换和修改某些类的定义。有了这样的功能，开发者就可以实现更为灵活的运⾏时虚拟机监控和Java 类操作了，这样的特性实际上提供了⼀种虚拟机级别⽀持的 AOP 实现⽅式，使得开发者⽆需对 JDK 做任何升级和改动，就可以实现某些 AOP 的功能了。JVM级别AOP。</p>
<p>        在JDK 1.6以前，instrument只能在JVM刚启动开始加载类时生效，而在JDK 1.6之后，instrument支持了在运行时对类定义的修改。在 Java SE 6 ⾥⾯，instrumentation 包被赋予了更强⼤的功能：启动后的instrument、本地代码 （native code）instrument，以及动态改变 classpath 等等。这些改变，意味着 Java 具有更强的动态控制、解释能⼒，它使得 Java 语⾔变得更加灵活多变。</p>
<p><strong>二、Docker环境下使用docker-compose部署Skywalking</strong></p>
<p>1、相关组件及版本</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>序号</td>
<td>组件</td>
<td>版本</td>
<td>备注</td>
</tr>
<tr>
<td>1</td>
<td>skywalking-oap-server</td>
<td>8.9.1</td>
<td></td>
</tr>
<tr>
<td>2</td>
<td>elasticsearch</td>
<td>7.17.6</td>
<td></td>
</tr>
<tr>
<td>3</td>
<td>skywalking-ui</td>
<td>8.9.1</td>
<td></td>
</tr>
<tr>
<td>4</td>
<td>apache-skywalking-java-agent</td>
<td>8.15.0</td>
<td></td>
</tr>
</tbody></table>
<p>2、创建目录赋予权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> elasticsearch</span><br><span class="line"><span class="built_in">cd</span> elasticsearch</span><br><span class="line"><span class="built_in">mkdir</span> logs</span><br><span class="line"><span class="built_in">mkdir</span> data</span><br><span class="line"><span class="built_in">chmod</span> 775 logs</span><br><span class="line"><span class="built_in">chmod</span> 775 data</span><br></pre></td></tr></table></figure>

<p>3、准备docker-compose.yml文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3.3&#x27;</span><br><span class="line">services:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: elasticsearch:7.17.6</span><br><span class="line">    container_name: elasticsearch</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 9200:9200</span><br><span class="line">    environment:</span><br><span class="line">      - &quot;TAKE_FILE_OWNERSHIP=true&quot; #volumes 挂载权限 如果不想要挂载es文件改配置可以删除</span><br><span class="line">      - &quot;discovery.type=single-node&quot; #单机模式启动</span><br><span class="line">      - &quot;TZ=Asia/Shanghai&quot; # 设置时区</span><br><span class="line">      - &quot;ES_JAVA_OPTS=-Xms512m -Xmx512m&quot; # 设置jvm内存大小</span><br><span class="line">    volumes:</span><br><span class="line">      - ./elasticsearch/logs:/usr/share/elasticsearch/logs</span><br><span class="line">      - ./elasticsearch/data:/usr/share/elasticsearch/data</span><br><span class="line">     #- ./elasticsearch/conf/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml</span><br><span class="line">    ulimits:</span><br><span class="line">      memlock:</span><br><span class="line">        soft: -1</span><br><span class="line">        hard: -1</span><br><span class="line">  skywalking-oap-server:</span><br><span class="line">    image: apache/skywalking-oap-server:8.9.1</span><br><span class="line">    container_name: skywalking-oap-server</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    links:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 11800:11800</span><br><span class="line">      - 12800:12800</span><br><span class="line">    environment:</span><br><span class="line">      SW_STORAGE: elasticsearch  # 指定ES版本</span><br><span class="line">      SW_STORAGE_ES_CLUSTER_NODES: elasticsearch:9200</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">    #volumes:</span><br><span class="line">     #- ./oap/conf/alarm-settings.yml:/skywalking/config/alarm-settings.yml</span><br><span class="line">  skywalking-ui:</span><br><span class="line">    image: apache/skywalking-ui:8.9.1</span><br><span class="line">    container_name: skywalking-ui</span><br><span class="line">    depends_on:</span><br><span class="line">      - skywalking-oap-server</span><br><span class="line">    links:</span><br><span class="line">      - skywalking-oap-server</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 8080:8080</span><br><span class="line">    environment:</span><br><span class="line">      SW_OAP_ADDRESS: http://skywalking-oap-server:12800</span><br><span class="line">      TZ: Asia/Shanghai</span><br></pre></td></tr></table></figure>

<p>9.7.0版本示例</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">version: &#x27;3.9&#x27;</span><br><span class="line">services:</span><br><span class="line">  elasticsearch:</span><br><span class="line">    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.16</span><br><span class="line">    container_name: elasticsearch</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 9200:9200</span><br><span class="line">      - 9300:9300</span><br><span class="line">    environment:</span><br><span class="line">      - discovery.type=single-node</span><br><span class="line">      - TZ=Asia/Shanghai</span><br><span class="line">      - LANG=en_US.UTF-8</span><br><span class="line">      - bootstrap.memory_lock=true</span><br><span class="line">      - TAKE_FILE_OWNERSHIP=&quot;true&quot;</span><br><span class="line">      - &quot;ES_JAVA_OPTS=-Xms1024m -Xmx1024m&quot;</span><br><span class="line">    volumes: # 数据卷挂载路径设置,将本机目录映射到容器目录</span><br><span class="line">      - /docker/elk/elasticsearch/plugins:/usr/share/elasticsearch/plugins</span><br><span class="line">      - /docker/elk/elasticsearch/data:/usr/share/elasticsearch/data</span><br><span class="line">      - /docker/elk/elasticsearch/logs:/usr/share/elasticsearch/logs</span><br><span class="line">    ulimits:</span><br><span class="line">      memlock:</span><br><span class="line">        soft: -1</span><br><span class="line">        hard: -1</span><br><span class="line">    network_mode: &quot;host&quot;</span><br><span class="line">  oap:</span><br><span class="line">    image: docker.io/apache/skywalking-oap-server:9.7.0</span><br><span class="line">    container_name: oap</span><br><span class="line">    depends_on:</span><br><span class="line">      - elasticsearch</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - 11800:11800</span><br><span class="line">      - 12800:12800</span><br><span class="line">      - 9090:9090</span><br><span class="line">    environment:</span><br><span class="line">      SW_CORE_RECORD_DATA_TTL: 15</span><br><span class="line">      SW_CORE_METRICS_DATA_TTL: 15</span><br><span class="line">      SW_STORAGE: elasticsearch</span><br><span class="line">      SW_STORAGE_ES_CLUSTER_NODES: 10.249.243.209:9200</span><br><span class="line">      SW_ENABLE_UPDATE_UI_TEMPLATE: true</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">      JAVA_OPTS: &quot;-Xms2048m -Xmx2048m&quot;</span><br><span class="line">      network_mode: &quot;host&quot;</span><br><span class="line">    volumes: # 挂载配置文件</span><br><span class="line">      - /data/skywalking/application.yml:/skywalking/config/application.yml</span><br><span class="line">  ui:</span><br><span class="line">    image: docker.io/apache/skywalking-ui:9.7.0</span><br><span class="line">    container_name: ui</span><br><span class="line">    depends_on:</span><br><span class="line">      - oap</span><br><span class="line">    restart: always</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;18080:18080&quot;</span><br><span class="line">    environment:</span><br><span class="line">      SW_SERVER_PORT: 18080</span><br><span class="line">      SW_OAP_ADDRESS: http://10.249.243.209:12800</span><br><span class="line">    network_mode: &quot;host&quot;</span><br></pre></td></tr></table></figure>
<p>3、执行启动服务命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure>

<p>4、访问UI地址http:${IP}:8080</p>
<p><img src="/images/1715049971-67c93cb16563e34e43b9513ccda92567.png"></p>
]]></content>
      <categories>
        <category>Skywalking</category>
      </categories>
      <tags>
        <tag>Skywalking</tag>
      </tags>
  </entry>
  <entry>
    <title>Prometheus配置文件详解</title>
    <url>/2024/05/07/Prometheus%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="一、介绍"><a href="#一、介绍" class="headerlink" title="一、介绍"></a>一、介绍</h2><p>Prometheus启动的时候，可以加载运行参数 <code>-config.file</code> 指定配置文件，默认为 <code>prometheus.yml</code>。</p>
<p>Prometheus的配置文件是YAML格式。Prometheus的解压包里自带了一个默认的配置文件prometheus.yml。让我们来看一下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.</span><br><span class="line">  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.</span><br><span class="line">  # scrape_timeout is set to the global default (10s).</span><br><span class="line"></span><br><span class="line"># Alertmanager configuration</span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - static_configs:</span><br><span class="line">    - targets:</span><br><span class="line">      # - alertmanager:9093</span><br><span class="line"></span><br><span class="line"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span><br><span class="line">rule_files:</span><br><span class="line">  # - &quot;first_rules.yml&quot;</span><br><span class="line">  # - &quot;second_rules.yml&quot;</span><br><span class="line"></span><br><span class="line"># A scrape configuration containing exactly one endpoint to scrape:</span><br><span class="line"># Here it&#x27;s Prometheus itself.</span><br><span class="line">scrape_configs:</span><br><span class="line">  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span><br><span class="line">  - job_name: &#x27;prometheus&#x27;</span><br><span class="line"></span><br><span class="line">    # metrics_path defaults to &#x27;/metrics&#x27;</span><br><span class="line">    # scheme defaults to &#x27;http&#x27;.</span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line">    - targets: [&#x27;localhost:9090&#x27;]</span><br></pre></td></tr></table></figure>

<p>在这个缺省的配置文件里定义了4个单元：global、alerting、rule_files和scrape_configs。</p>
<p>在配置文件中我们可以指定 global, alerting, rule_files, scrape_configs, remote_write, remote_read 等属性。</p>
<p>global：配置全局的信息，如抓取监控数据的间隔，抓取业务数据接口的超时时间，告警规则执行周期等</p>
<p>alerting：配置告警发送到的alermanager的地址</p>
<p>rule_files：告警规则文件，数据聚合配置</p>
<p>scrape_configs：配置抓取业务监控数据的相关信息，如url，拉取时间间隔，拉取的超时时间等</p>
<p>remote_write：将数据投递到远程地址，如聚合数据投递到hubble-adapter</p>
<p>remote_read：</p>
<p>下面介绍下每个单元。</p>
<h2 id="二、global"><a href="#二、global" class="headerlink" title="二、global"></a>二、global</h2><p><code>global</code> 属于全局的默认配置，它主要包含 4 个属性，</p>
<ul>
<li><strong>scrape_interval</strong>: 拉取 targets 的默认时间间隔，<strong>即拉取业务监控数据的间隔时间</strong>。</li>
<li><strong>scrape_timeout</strong>: 拉取一个 target 的超时时间，<strong>即拉取业务监控数据接口的超时时间</strong>。</li>
<li><strong>evaluation_interval</strong>: <strong>执行 rules 的时间间隔</strong>。即多久遍历一次告警规则列表，判断每个规则是否触发告警。和rule_files的加载没关系</li>
<li>external_labels: 额外的属性，会添加到拉取的数据并存到数据库中。</li>
</ul>
<p>配置文件结构大概为：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval:     15s # By default, scrape targets every 15 seconds.</span><br><span class="line">  evaluation_interval: 15s # By default, scrape targets every 15 seconds.</span><br><span class="line">  scrape_timeout: 10s # is set to the global default (10s).</span><br><span class="line"></span><br><span class="line">  # Attach these labels to any time series or alerts when communicating with</span><br><span class="line">  # external systems (federation, remote storage, Alertmanager).</span><br><span class="line">  external_labels:</span><br><span class="line">    monitor: &#x27;codelab-monitor&#x27;</span><br></pre></td></tr></table></figure>

<h2 id="三、alerting"><a href="#三、alerting" class="headerlink" title="三、alerting"></a>三、alerting</h2><p>通常我们可以使用运行参数 <code>-alertmanager.xxx</code> 来配置 Alertmanager， 但是这样不够灵活，没有办法做到动态更新加载，以及动态定义告警属性。</p>
<p>所以 <code>alerting</code> 配置主要用来解决这个问题，它能够更好的管理 Alertmanager, 主要包含 2 个参数：alert_relabel_configs 和 alertmanagers</p>
<h4 id="1、alertmanagers"><a href="#1、alertmanagers" class="headerlink" title="1、alertmanagers"></a>1、alertmanagers</h4><p>用于动态发现 Alertmanager 的地址。</p>
<p>如下配置：alertmanager.prom-alert.svc:9093，通过K8S自动发现机制找到本集群内的alertmanager的地址并将告警发送过去。</p>
<p>目前，我们所有prometheus集群都是部署在徐水（另外有个武汉不用管）的K8S集群，<strong>Alertmanager也部署在这个集群，所以用自动发现的方式配置alertmanager地址即可</strong>。</p>
<p>如下，系统中指定了Alertmanager路径，因为最终需要投递告警到这个服务，如下图：是通过静态配置</p>
<p><img src="/images/1715069866-080ee9bcbf145ac22940968477403b13.png"></p>
<p>另外，qpaas上是通过服务发现配置的alertmanager：</p>
<p><img src="/images/1715069866-935c17c3f981abd912fb0ebc399ce131.png"></p>
<p><img src="/images/1715069866-1fc921ca1fd716d2d5b36be40342b55b.png"></p>
<h4 id="2、alert-relabel-configs"><a href="#2、alert-relabel-configs" class="headerlink" title="2、alert_relabel_configs"></a>2、alert_relabel_configs</h4><p>作用：在告警发生时，动态修改标签内容，一般作用是在告警产生时修改标签，如保留哪些标签（labelkeep），删除哪些标签（labeldrop）。具体的有哪些属性，请参考：<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_config" title="Configuration | Prometheus">Configuration | Prometheus</a></p>
<p>下面着重说明两个属性：action和regex</p>
<p><strong>action</strong></p>
<p>基于正则表达式匹配执行的操作。包括移除标签，保留标签等，具体可参考：<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#relabel_action" title="Configuration | Prometheus">Configuration | Prometheus</a></p>
<p>action枚举：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">replace: 将正则表达式与串联的source_labels匹配。然后，将target_label设置为replace，用替换中的匹配组引用($&#123;1&#125;, $&#123;2&#125;, ...)替换为其值。 如果正则表达式不匹配，则不会进行替换。</span><br><span class="line">keep: 删除其正则表达式与串联的source_labels不匹配的目标。</span><br><span class="line">drop: 删除其正则表达式与串联的source_labels匹配的目标。</span><br><span class="line">hashmod: 将target_label设置为串联的source_labels的哈希的模数。</span><br><span class="line">labelmap: 将正则表达式与所有标签名称匹配。 然后，将匹配标签的值复制到通过替换为它们的值替换的匹配组引用($&#123;1&#125;, $&#123;2&#125;, ...)给出的标签名称。</span><br><span class="line">labeldrop: 将正则表达式与所有标签名称匹配。 任何匹配的标签将从标签集中删除。</span><br><span class="line">labelkeep: 将正则表达式与所有标签名称匹配。 任何不匹配的标签将从标签集中删除。</span><br></pre></td></tr></table></figure>

<p><strong>regex</strong></p>
<p>作用是匹配标签的正则表达式。</p>
<p><strong>案例</strong></p>
<p>下面的案例中，action为labeldrop，就是字面意思，需要移除key为prometheus_replica的标签。</p>
<p>prometheus_replica是自定义的标签，告警的时候就会带上这个标签，由于我们prometheus有两个节点pod0和pod1，但是告警产生的时候我们只需要报出来一条就行了，因此把pod的标签去掉后，两个节点产生的告警就完全一样了，就能控制只产生一条。</p>
<p><img src="/images/1715069866-e321f028f840f8c1537ac00b3398e190.png"></p>
<p><strong>source_labels</strong></p>
<p><strong>__开头的是保留label</strong></p>
<p>source_labels也可以定义自定义的label</p>
<p>以下为QKE上的案例：下面写错了一句话，应该是将两个标签合并替换为node，而不是Node</p>
<p><img src="/images/1715069866-c231c91f8b664ddbe64eaec8befe9a54.png"></p>
<h2 id="四、rule-files"><a href="#四、rule-files" class="headerlink" title="四、rule_files"></a>四、rule_files</h2><p>1、介绍</p>
<p>作用：获取所有规则文件中的规则，包括**记录规则(recording rules)<strong>与</strong>告警规则(alerting rule)**。</p>
<p>2、<strong>记录规则(recording rules)</strong></p>
<p>record规则其实就是数据处理的规则，如数据聚合，如下：</p>
<p>我们可以单独定义数据聚合规则文件，也可以和告警规则文件放一起，但是一般分开放好理解</p>
<p><img src="/images/1715069866-72ba201a969aacc52f03e7ef61032d0b.png"></p>
<p>注意：一定是规则文件，不包含配置文件，如果指定的文件中包含配置文件内容，则会报错。</p>
<p>按照配置的目录，找了下rancher上对应武汉集群的prometheus项目下的prometheus服务，进入控制台：</p>
<p>我们的配置文件是这样的：</p>
<p>rule_files:<br>- &#x2F;etc&#x2F;prometheus&#x2F;rules&#x2F;*rules.yaml</p>
<p>所以进入此目录下发现只有一个alert-rules.yaml，恰好就是我们的告警的配置。</p>
<p><img src="/images/1715069866-727fc40b3f47f80cd01d2c2a579ccf22.png"></p>
<p><strong>3、rule_files的修改</strong></p>
<p><strong>关于rule_files的修改途径：</strong></p>
<p>1、rule_files文件可以在rancher上修改；</p>
<p>2、通过Prometheus Operator提供的CRD修改。Prometheus Operator会去创建Prometheus、PodMonitor、ServiceMonitor、AlertManager以及PrometheusRule这5个CRD资源对象，<strong>所以，可以直接调用K8S的API去修改PrometheusRule，从而达到修改rule以及其他配置的效果，如增加record配置等。</strong></p>
<p>以下是PrometheusRule案例（Prometheus Operator）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: PrometheusRule</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    prometheus: k8s</span><br><span class="line">    role: alert-rules</span><br><span class="line">  name:  mimir-record-rule</span><br><span class="line">  namespace: cnhb4-public-prod04-hubble</span><br><span class="line">spec:</span><br><span class="line">  groups:</span><br><span class="line">  - name: mimir_api_1</span><br><span class="line">    rules:</span><br><span class="line">    - expr: histogram_quantile(0.99, sum(rate(cortex_request_duration_seconds_bucket[1m]))</span><br><span class="line">        by (le, cluster, job))</span><br><span class="line">      record: cluster_job:cortex_request_duration_seconds:99quantile</span><br><span class="line">    - expr: histogram_quantile(0.50, sum(rate(cortex_request_duration_seconds_bucket[1m]))</span><br><span class="line">        by (le, cluster, job))</span><br><span class="line">      record: cluster_job:cortex_request_duration_seconds:50quantile</span><br><span class="line">  - name: mimir_api_2</span><br><span class="line">    rules:</span><br><span class="line">    - expr: histogram_quantile(0.99, sum(rate(cortex_request_duration_seconds_bucket[1m]))</span><br><span class="line">        by (le, cluster, job, route))</span><br><span class="line">      record: cluster_job_route:cortex_request_duration_seconds:99quantile</span><br></pre></td></tr></table></figure>

<p>以下是ServiceMonitor案例（Prometheus Operator）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apiVersion: monitoring.coreos.com/v1</span><br><span class="line">kind: ServiceMonitor</span><br><span class="line">metadata:</span><br><span class="line">    labels:</span><br><span class="line">        cloud.xxx.domain/project-enName: hubble</span><br><span class="line">        cloud.xxx.domain/project-id: &quot;109772&quot;</span><br><span class="line">    name: mimir-alertmanager-sm</span><br><span class="line">    namespace: iks-ns-hubble-mimir</span><br><span class="line">spec:</span><br><span class="line">    endpoints:</span><br><span class="line">        - bearerTokenFile: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">          path: /metrics</span><br><span class="line">          port: http-metrics</span><br><span class="line">          relabelings:</span><br><span class="line">            - targetLabel: cluster</span><br><span class="line">              replacement: cnhb4-public-prod04</span><br><span class="line">            - targetLabel: job</span><br><span class="line">              replacement: iks-ns-hubble-mimir/alertmanager</span><br><span class="line">    namespaceSelector:</span><br><span class="line">        matchNames:</span><br><span class="line">            - iks-ns-hubble-mimir</span><br><span class="line">    selector:</span><br><span class="line">        matchLabels:</span><br><span class="line">            storage: hubble-mimir</span><br><span class="line">            app: alertmanager</span><br></pre></td></tr></table></figure>

<p>4、<strong>rule_files的加载</strong></p>
<p>rule_files文件经常会配置多个规则文件，prometheus是同时去加载这些文件，当某个文件中有错误的配置时，则本次加载所有的规则都会失败。</p>
<p>所以，多个规则文件会相互影响，一旦有配置错误，则会导致其它的规则文件加载失败。</p>
<p>但是，<strong>prometheus加载失败并不会影响之前的已经加载好的规则</strong>。</p>
<h2 id="五、scrape-configs"><a href="#五、scrape-configs" class="headerlink" title="五、scrape_configs"></a>五、scrape_configs</h2><p>参考：<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#scrape_config" title="Configuration | Prometheus">Configuration | Prometheus</a></p>
<p>scrape_configs 主要用于配置拉取数据节点，每一个拉取配置主要包含以下参数：</p>
<ul>
<li>job_name：任务名称</li>
<li>honor_labels： 用于解决拉取数据标签有冲突，当设置为 true, 以拉取数据为准，否则以服务配置为准</li>
<li>params：数据拉取访问时带的请求参数</li>
<li>scrape_interval： 拉取时间间隔</li>
<li>scrape_timeout: 拉取超时时间</li>
<li>metrics_path： 拉取节点的 metric 路径</li>
<li>static_configs：配置访问路径前缀，如ip+port，或者域名地址，或者通过服务发现，类似<a href="http://alertmanager.prom-alert.svc:9093/" title="alertmanager.prom-alert.svc:9093">alertmanager.prom-alert.svc:9093</a></li>
<li>scheme： 拉取数据访问协议，如http</li>
<li>sample_limit： 存储的数据标签个数限制，如果超过限制，该数据将被忽略，不入存储；默认值为0，表示没有限制</li>
<li>relabel_configs： 拉取数据重置标签配置</li>
<li>metric_relabel_configs：metric 重置标签配置</li>
</ul>
<h2 id="六、remote-write"><a href="#六、remote-write" class="headerlink" title="六、remote_write"></a>六、remote_write</h2><p><code>remote_write</code> 主要用于可写远程存储配置，主要包含以下参数：</p>
<ul>
<li>url: 访问地址</li>
<li>remote_timeout: 请求超时时间</li>
<li>write_relabel_configs: 标签重置配置, 拉取到的数据，经过重置处理后，发送给远程存储</li>
</ul>
<p>案例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">remote_write:</span><br><span class="line">  # 定义一个远程写入的目标</span><br><span class="line">  - url: &quot;http://xxx:9988/prom2hubble/push?group=xxx&quot;  # 远程写入的URL，包含一个名为&quot;group&quot;的查询参数</span><br><span class="line">    remote_timeout: 30s  # 设置远程写入操作的超时时间，30秒</span><br><span class="line"></span><br><span class="line">    # 重标签配置，用于在发送数据前修改或过滤指标标签</span><br><span class="line">    write_relabel_configs:</span><br><span class="line">    - source_labels: [__name__]  # 选择要处理的源标签</span><br><span class="line">      separator: ;  # 标签值分隔符</span><br><span class="line">      regex: obser:(.*)  # 匹配以&quot;obser:&quot;开头的指标</span><br><span class="line">      replacement: $1  # 替换为匹配到的内容</span><br><span class="line">      action: keep  # 保留匹配的样本</span><br><span class="line"></span><br><span class="line">    - separator: ;  # 分隔符</span><br><span class="line">      regex: (.*)</span><br><span class="line">      target_label: hubble_endpoint  # 修改目标标签为&quot;hubble_endpoint&quot;</span><br><span class="line">      replacement: hubble_qpaas_obser  # 替换标签值</span><br><span class="line">      action: replace  # 执行替换操作</span><br><span class="line"></span><br><span class="line">    - separator: ;</span><br><span class="line">      regex: (.*)</span><br><span class="line">      target_label: group  # 修改目标标签为&quot;group&quot;</span><br><span class="line">      replacement: hubble  # 替换标签值</span><br><span class="line">      action: replace</span><br><span class="line"></span><br><span class="line">    - separator: ;</span><br><span class="line">      regex: (.*)</span><br><span class="line">      target_label: hubble_step  # 修改目标标签为&quot;hubble_step&quot;</span><br><span class="line">      replacement: &quot;60&quot;  # 替换标签值为60（可能代表60秒的步长）</span><br><span class="line">      action: replace</span><br><span class="line"></span><br><span class="line">    - separator: ;</span><br><span class="line">      regex: label_qke_cloud_qiyi_domain_(.*)</span><br><span class="line">      replacement: $1  # 标签映射，保留匹配到的内容</span><br><span class="line">      action: labelmap  # 执行标签映射</span><br><span class="line"></span><br><span class="line">    - separator: ;</span><br><span class="line">      regex: (job|endpoint|service|pod|instance|namespace|prometheus.*|label_qke_cloud_qiyi_domain_.*)</span><br><span class="line">      replacement: $1</span><br><span class="line">      action: labeldrop  # 删除匹配到的标签</span><br><span class="line"></span><br><span class="line">    # 队列配置，用于管理数据发送的速率和可靠性</span><br><span class="line">    queue_config:</span><br><span class="line">      capacity: 2500  # 队列最大容量，2500个样本</span><br><span class="line">      max_shards: 200  # 队列最大分片数，用于并发处理</span><br><span class="line">      min_shards: 1  # 队列最小分片数</span><br><span class="line">      max_samples_per_send: 500  # 每次发送的最大样本数，500</span><br><span class="line">      batch_send_deadline: 5s  # 批量发送的最长时间限制，5秒</span><br><span class="line">      min_backoff: 30ms  # 重试间隔的最小值，30毫秒</span><br><span class="line">      max_backoff: 100ms  # 重试间隔的最大值，100毫秒</span><br><span class="line"></span><br><span class="line">    # 元数据配置</span><br><span class="line">    metadata_config:</span><br><span class="line">      send: true  # 开启元数据发送</span><br><span class="line">      send_interval: 1m  # 发送元数据的间隔，1分钟</span><br></pre></td></tr></table></figure>

<h2 id="七、remote-read"><a href="#七、remote-read" class="headerlink" title="七、remote_read"></a>七、remote_read</h2><p><code>remote_read</code> 主要用于可读远程存储配置，主要包含以下参数：</p>
<ul>
<li>url: 访问地址</li>
<li>remote_timeout: 请求超时时间</li>
</ul>
<h2 id="八、服务发现"><a href="#八、服务发现" class="headerlink" title="八、服务发现"></a>八、服务发现</h2><p>1、介绍</p>
<p>ServiceDiscoveryConfig 主要用于 target 发现，大体分为两类，静态配置和动态发现。</p>
<p>在 Prometheus 的配置中，一个最重要的概念就是数据源 target，而数据源的配置主要分为静态配置和动态发现, 大致为以下几类：</p>
<ul>
<li>static_configs: 静态服务发现</li>
<li>eureka_sd_config：eureka服务发现，发现真实的实例节点的ip+port，参考：<a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/#eureka_sd_config" title="Configuration | Prometheus">Configuration | Prometheus</a><ul>
<li>可参考案例：<a href="https://github.com/prometheus/prometheus/blob/release-2.36/documentation/examples/prometheus-eureka.yml" title="prometheus/prometheus-eureka.yml at release-2.36 · prometheus/prometheus · GitHub">prometheus&#x2F;prometheus-eureka.yml at release-2.36 · prometheus&#x2F;prometheus · GitHub</a></li>
</ul>
</li>
<li>dns_sd_configs: DNS 服务发现</li>
<li>file_sd_configs: 文件服务发现</li>
<li>consul_sd_configs: Consul 服务发现</li>
<li>serverset_sd_configs: Serverset 服务发现</li>
<li>nerve_sd_configs: Nerve 服务发现</li>
<li>marathon_sd_configs: Marathon 服务发现</li>
<li>kubernetes_sd_configs: Kubernetes 服务发现</li>
<li>gce_sd_configs: GCE 服务发现</li>
<li>ec2_sd_configs: EC2 服务发现</li>
<li>openstack_sd_configs: OpenStack 服务发现</li>
<li>azure_sd_configs: Azure 服务发现</li>
<li>triton_sd_configs: Triton 服务发现</li>
</ul>
<p>它们具体使用以及配置模板，请参考服务发现<a href="https://prometheus.io/docs/operating/configuration/#%3Ctls_config" title="配置模板">配置模板</a>。</p>
<p>它们中最重要的，也是使用最广泛的应该是 <code>static_configs</code>, 其实那些动态类型都可以看成是某些通用业务使用静态服务封装的结果。</p>
<p><strong>2、eureka_sd_configs案例介绍</strong></p>
<p><img src="/images/1715069866-2b9d5c291c5500f56f1ce32ed26eb0a0.png"></p>
<p>代码地址： </p>
<p><a href="https://github.com/prometheus/prometheus/blob/release-2.36/documentation/examples/prometheus-eureka.yml" title="prometheus/prometheus-eureka.yml at release-2.36 · prometheus/prometheus · GitHub">prometheus&#x2F;prometheus-eureka.yml at release-2.36 · prometheus&#x2F;prometheus · GitHub</a></p>
<p><strong>3、kubernetes_sd_configs</strong></p>
<p>我们的微服务本质上是采用的kubernetes_sd_configs。</p>
<p>但是我们是通过Prometheus Operator提供的ServiceMonitor间接创建了kubernetes_sd_configs</p>
<p>如下关注点：</p>
<p>1、kubernetes_sd_configs中的api_server：抓取指标的地址前缀</p>
<p>2、metrics_path：抓取指标的具体路径</p>
<blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">- job_name: qke-generic-hubble-manager/hubble-alarm-agg-condition-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics/prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: m-agg-condition</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br></pre></td></tr></table></figure>
</blockquote>
<h2 id="十、关于relabel-configs"><a href="#十、关于relabel-configs" class="headerlink" title="十、关于relabel_configs"></a>十、关于relabel_configs</h2><p>relabel_configs分为&lt;metric_relabel_configs&gt;和&lt;alert_relabel_configs&gt;两类。</p>
<p>指标：</p>
<p><img src="/images/1715069866-8fcc89f6db916a845023caeadcdcc113.png"></p>
<p>告警：</p>
<p><img src="/images/1715069866-f20cc168566fd0c0a87f94c40a7b85d8.png"></p>
<h2 id="七、AlertManager配置"><a href="#七、AlertManager配置" class="headerlink" title="七、AlertManager配置"></a>七、AlertManager配置</h2><p>案例：</p>
<p>为什么是webhook_configs？不支持remote_write？</p>
<figure class="highlight vbnet"><table><tr><td class="code"><pre><span class="line"><span class="symbol">global:</span></span><br><span class="line"><span class="symbol">resolve_timeout:</span> <span class="number">10</span>m</span><br><span class="line"></span><br><span class="line"><span class="symbol">route:</span></span><br><span class="line"><span class="symbol">group_by:</span> [<span class="comment">&#x27;alertname&#x27;]</span></span><br><span class="line"><span class="symbol">group_wait:</span> <span class="number">10s</span></span><br><span class="line"><span class="symbol">group_interval:</span> <span class="number">10s</span></span><br><span class="line"><span class="symbol">repeat_interval:</span> <span class="number">24</span>h   #重复报警的时间间隔为<span class="number">24</span>h</span><br><span class="line"><span class="symbol">receiver:</span> hubble</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">receivers:</span></span><br><span class="line">- name: <span class="comment">&#x27;hubble&#x27;</span></span><br><span class="line"><span class="symbol">webhook_configs:</span></span><br><span class="line">- url: <span class="comment">&#x27;http://hubble.adapter.qiyi.domain:9988/prom2hubble/alert&#x27;</span></span><br></pre></td></tr></table></figure>

<h2 id="八、告警规则配置"><a href="#八、告警规则配置" class="headerlink" title="八、告警规则配置"></a>八、告警规则配置</h2><p>案例：</p>
<p>主要包含几部分：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">- name: PrometheusRule                 <span class="comment">#报警规则组的名字，可以类比为hubble的策略模板</span></span><br><span class="line">  rules:                               <span class="comment">#策略列表</span></span><br><span class="line">  - <span class="built_in">expr</span>: up&#123;job=<span class="string">&quot;alertmanager&quot;</span>&#125; == 0  <span class="comment">#表达式</span></span><br><span class="line">    alert: alertmanagerInstanceDown    <span class="comment">#告警的triggername</span></span><br><span class="line">    <span class="keyword">for</span>: 2m                            <span class="comment">#2分钟比较一次，和连续几个点类似</span></span><br><span class="line">    annotations:                       <span class="comment">#告警信息必要的信息，labels是告警消息的tag信息</span></span><br><span class="line">      alertlevel: <span class="string">&quot;P2&quot;</span></span><br><span class="line">      hubblegroup: <span class="string">&quot;hubble-prometheus-k8s&quot;</span></span><br><span class="line">      alertvalue: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span></span><br><span class="line">      summary: <span class="string">&quot;[prometheus-cluster-wh] alertmanager is down&quot;</span></span><br><span class="line"></span><br><span class="line">  - <span class="built_in">expr</span>: increase(alertmanager_notifications_failed_total&#123;job=<span class="string">&quot;alertmanager&quot;</span>&#125;[5m])/increase(alertmanager_notifications_total&#123;job=<span class="string">&quot;alertmanager&quot;</span>&#125;[5m]) &gt; 0.3</span><br><span class="line">    alert: alertmanagerSendOutFail</span><br><span class="line">    <span class="keyword">for</span>: 5m</span><br><span class="line">    annotations:</span><br><span class="line">      alertlevel: <span class="string">&quot;P2&quot;</span></span><br><span class="line">      hubblegroup: <span class="string">&quot;hubble-prometheus-k8s&quot;</span></span><br><span class="line">      alertvalue: <span class="string">&quot;&#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span>            <span class="comment">#value 就是数据的当前值</span></span><br><span class="line">      summary: <span class="string">&quot;[prometheus-cluster-wh] failed to sendout alerts &gt;30%&quot;</span></span><br><span class="line">      description: <span class="string">&quot;应用名： &#123;&#123; <span class="variable">$labels</span>.job &#125;&#125;  实例名： &#123;&#123; <span class="variable">$labels</span>.instance &#125;&#125;  ， 环境： &#123;&#123; <span class="variable">$labels</span>.env &#125;&#125; , 当前值为 ： &#123;&#123; <span class="variable">$value</span> &#125;&#125;&quot;</span>   <span class="comment"># labels其实就是数据中的tag，如job，instance等</span></span><br></pre></td></tr></table></figure>

<p><img src="/images/1715069866-f926c2faca1b97e918d3cd749e3183de.png"></p>
<h2 id="八、配置文件案例"><a href="#八、配置文件案例" class="headerlink" title="八、配置文件案例"></a>八、配置文件案例</h2><p>QKE配置文件案例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  evaluation_interval: 30s</span><br><span class="line">  external_labels:</span><br><span class="line">    prometheus: 58-hubble/k8s</span><br><span class="line">    prometheus_replica: prometheus-k8s-0</span><br><span class="line">alerting:</span><br><span class="line">  alert_relabel_configs:</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: prometheus_replica</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: labeldrop</span><br><span class="line">  alertmanagers:</span><br><span class="line">  - scheme: http</span><br><span class="line">    path_prefix: /</span><br><span class="line">    timeout: 10s</span><br><span class="line">    api_version: v1</span><br><span class="line">    relabel_configs:</span><br><span class="line">    - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">      separator: ;</span><br><span class="line">      regex: alertmanager</span><br><span class="line">      replacement: $1</span><br><span class="line">      action: keep</span><br><span class="line">    - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">      separator: ;</span><br><span class="line">      regex: http</span><br><span class="line">      replacement: $1</span><br><span class="line">      action: keep</span><br><span class="line">    kubernetes_sd_configs:</span><br><span class="line">    - role: endpoints</span><br><span class="line">      namespaces:</span><br><span class="line">        names:</span><br><span class="line">        - default</span><br><span class="line">rule_files:</span><br><span class="line">- /etc/prometheus/rules/prometheus-k8s-rulefiles-0/*.yaml</span><br><span class="line">scrape_configs:</span><br><span class="line">- job_name: qke-generic-hubble-grafana-dashboard/hubble-grafana-dashboard-servicemonitor/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble-grafana-dashboard</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: http</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: http</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble-grafana-dashboard</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [__name__]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (grafana_stat_.*|grafana_.*_response_status_total|process_.*)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-grafana-dashboard</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-api-open-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-api-open</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-biz-aiops-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-biz-aiops</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-biz-cm-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-biz-cm</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-biz-stat-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-biz-stat</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-biz-third-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: m-biz-third</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-task-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-hubble-task</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/hubble-transfer-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-hubble-transfer</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: m-hubble-transfer</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: m-hubble-transfer</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-manager/network-screen-sm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /prometheus</span><br><span class="line">  scheme: http</span><br><span class="line">  bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: s-network-screen</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: metrics</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">- job_name: qke-generic-hubble-p-hbs/hubble-p-hbs-svcm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 10s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /json2metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble-p-hbs</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: exporter-metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: exporter-metrics</span><br><span class="line">    action: replace</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [__name__]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble_p_hbs_(.*)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-p-hbs</span><br><span class="line">- job_name: qke-generic-hubble-p-query/hubble-p-query-svcm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 10s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /json2metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble-p-query</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: exporter-metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: exporter-metrics</span><br><span class="line">    action: replace</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [__name__]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble_p_query_(.*)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-p-query</span><br><span class="line">- job_name: qke-generic-hubble-p-transfer/hubble-p-transfer-svcm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 10s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /json2metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble-p-transfer</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: exporter-metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: exporter-metrics</span><br><span class="line">    action: replace</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [__name__]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble_p_transfer_(.*)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-p-transfer</span><br><span class="line">- job_name: qke-generic-hubble-platform/kube-state-metrics/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 30s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: https</span><br><span class="line">  bearer_token_file: /var/k8s-auth/token</span><br><span class="line">  tls_config:</span><br><span class="line">    insecure_skip_verify: true</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_k8s_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: kube-state-metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: https-main</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_k8s_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: https-main</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (pod|service|endpoint|namespace)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: labeldrop</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (qke-generic-hubble-platform|qke-generic-hubble-p-updater-server|qke-generic-hubble-grafana-dashboard|qke-generic-hubble-p-transfer|qke-generic-hubble-grafana-api|qke-generic-hubble-aiops|qke-generic-hubble-p-hbs|qke-generic-hubble-p-query|qke-generic-hubble-manager|qke-generic-hubble-self-monitor)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - monitoring</span><br><span class="line">- job_name: qke-generic-hubble-platform/kubelet/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 30s</span><br><span class="line">  metrics_path: /metrics/cadvisor</span><br><span class="line">  scheme: https</span><br><span class="line">  bearer_token_file: /var/k8s-auth/token</span><br><span class="line">  tls_config:</span><br><span class="line">    insecure_skip_verify: true</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_k8s_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: kubelet</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: https-metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_k8s_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: https-metrics</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__metrics_path__]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: metrics_path</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (qke-generic-hubble-platform|qke-generic-hubble-p-updater-server|qke-generic-hubble-grafana-dashboard|qke-generic-hubble-p-transfer|qke-generic-hubble-grafana-api|qke-generic-hubble-aiops|qke-generic-hubble-p-hbs|qke-generic-hubble-p-query|qke-generic-hubble-manager|qke-generic-hubble-self-monitor)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - kube-system</span><br><span class="line">- job_name: qke-generic-hubble-self-monitor/hubble-p-transfer-svcm/0</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 10s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /json2metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble-p-transfer</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: exporter-metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Node;(.*)</span><br><span class="line">    target_label: node</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_endpoint_address_target_kind, __meta_kubernetes_endpoint_address_target_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: Pod;(.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: endpoint</span><br><span class="line">    replacement: exporter-metrics</span><br><span class="line">    action: replace</span><br><span class="line">  metric_relabel_configs:</span><br><span class="line">  - source_labels: [__name__]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: hubble_p_transfer_(.*)</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: endpoints</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-self-monitor</span><br><span class="line">- job_name: qke-generic-hubble-platform/knative-activator/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: activator</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_container_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: container</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: qke-generic-hubble-platform/knative-activator</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_knative_activator]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: knative-serving;activator;metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: pod</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - knative-serving</span><br><span class="line">- job_name: qke-generic-hubble-platform/knative-autoscaler/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: autoscaler</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_container_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: container</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: qke-generic-hubble-platform/knative-autoscaler</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_knative_autoscaler]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: knative-serving;autoscaler;metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: pod</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - knative-serving</span><br><span class="line">- job_name: qke-generic-hubble-platform/knative-controller/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: controller</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_container_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: container</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: qke-generic-hubble-platform/knative-controller</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_knative_controller_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: knative-serving;controller;metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: pod</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - knative-serving</span><br><span class="line">- job_name: qke-generic-hubble-platform/knative-queue-proxy/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_qke_cloud_qiyi_domain_lite]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: &quot;true&quot;</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_container_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: container</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: qke-generic-hubble-platform/knative-queue-proxy</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_knative_queue_proxy]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_serving_knative_dev_revision, __meta_kubernetes_pod_container_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: .+;http-usermetric</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: pod</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-platform</span><br><span class="line">      - qke-generic-hubble-p-updater-server</span><br><span class="line">      - qke-generic-hubble-grafana-dashboard</span><br><span class="line">      - qke-generic-hubble-p-transfer</span><br><span class="line">      - qke-generic-hubble-grafana-api</span><br><span class="line">      - qke-generic-hubble-aiops</span><br><span class="line">      - qke-generic-hubble-p-hbs</span><br><span class="line">      - qke-generic-hubble-p-query</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">      - qke-generic-hubble-self-monitor</span><br><span class="line">- job_name: qke-generic-hubble-platform/knative-queue-proxy/1</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_qke_cloud_qiyi_domain_lite]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: &quot;true&quot;</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_container_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: container</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: qke-generic-hubble-platform/knative-queue-proxy</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_knative_queue_proxy]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_serving_knative_dev_revision, __meta_kubernetes_pod_container_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: .+;http-autometric</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: pod</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - qke-generic-hubble-platform</span><br><span class="line">      - qke-generic-hubble-p-updater-server</span><br><span class="line">      - qke-generic-hubble-grafana-dashboard</span><br><span class="line">      - qke-generic-hubble-p-transfer</span><br><span class="line">      - qke-generic-hubble-grafana-api</span><br><span class="line">      - qke-generic-hubble-aiops</span><br><span class="line">      - qke-generic-hubble-p-hbs</span><br><span class="line">      - qke-generic-hubble-p-query</span><br><span class="line">      - qke-generic-hubble-manager</span><br><span class="line">      - qke-generic-hubble-self-monitor</span><br><span class="line">- job_name: qke-generic-hubble-platform/knative-webhook/0</span><br><span class="line">  honor_labels: true</span><br><span class="line">  honor_timestamps: true</span><br><span class="line">  scrape_interval: 30s</span><br><span class="line">  scrape_timeout: 10s</span><br><span class="line">  metrics_path: /metrics</span><br><span class="line">  scheme: http</span><br><span class="line">  relabel_configs:</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_app]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: webhook</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_container_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: container</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: qke-generic-hubble-platform/knative-webhook</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_label_knative_webhook]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.+)</span><br><span class="line">    target_label: job</span><br><span class="line">    replacement: $&#123;1&#125;</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_label_app, __meta_kubernetes_pod_container_port_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: knative-serving;webhook;metrics</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: keep</span><br><span class="line">  - source_labels: [__meta_kubernetes_namespace]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: namespace</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_pod_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: pod</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  - source_labels: [__meta_kubernetes_service_name]</span><br><span class="line">    separator: ;</span><br><span class="line">    regex: (.*)</span><br><span class="line">    target_label: service</span><br><span class="line">    replacement: $1</span><br><span class="line">    action: replace</span><br><span class="line">  kubernetes_sd_configs:</span><br><span class="line">  - api_server: https://kube-master-bjzyx-public-staging02.cloud.qiyi.domain:6443</span><br><span class="line">    role: pod</span><br><span class="line">    bearer_token_file: /var/k8s-auth/token</span><br><span class="line">    tls_config:</span><br><span class="line">      ca_file: /var/k8s-auth/ca.crt</span><br><span class="line">      insecure_skip_verify: true</span><br><span class="line">    namespaces:</span><br><span class="line">      names:</span><br><span class="line">      - knative-serving</span><br></pre></td></tr></table></figure>

<p>全链路配置案例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">global:</span><br><span class="line">evaluation_interval: 60s</span><br><span class="line">external_labels:</span><br><span class="line">prometheus_replica: $(POD_NAME)</span><br><span class="line">scrape_interval: 60s</span><br><span class="line">alerting:</span><br><span class="line">alert_relabel_configs:</span><br><span class="line">- action: labeldrop</span><br><span class="line">regex: prometheus_replica</span><br><span class="line">alertmanagers:</span><br><span class="line">- scheme: http</span><br><span class="line">static_configs:</span><br><span class="line">- targets:</span><br><span class="line">- alertmanager.prom-alert.svc:9093</span><br><span class="line">rule_files:</span><br><span class="line">- /etc/prometheus/rules/*rules.yaml</span><br><span class="line">scrape_configs:</span><br><span class="line">- job_name: 48e5a419-4721-5921-899c-86aa7122dfb6-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-query</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: 5eef17ab-f6b6-5d79-942b-ac41d35ba870-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-notice</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: 5f476f71-29c9-527e-b765-58b30c425751-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-biz-bq-alarm-event</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: 79f80b60-0ced-55b5-a439-504b15a620ce-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-biz-alarm-storm</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: 441b1a98-6c0c-5d8c-970d-425d2c1d412e-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-transfer</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: 5b5d4de9-2c2e-579b-8854-8b4942b09e5e-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-biz-bq-alarm-query</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: dfbfbb26-9632-5200-9b91-7e989c43969d-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-biz-alarm-query</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: f6dc47d3-7e74-5ab4-8502-4b2fe9cb8123-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-biz-cm</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">- job_name: 24e69042-7557-5860-913e-9c7eeab76660-nacos-adapter</span><br><span class="line">honor_timestamps: true</span><br><span class="line">scrape_interval: 30s</span><br><span class="line">scrape_timeout: 30s</span><br><span class="line">metrics_path: /prometheus</span><br><span class="line">consul_sd_configs:</span><br><span class="line">- server: http://laputa.prometheus-nacos-adapter.online.qiyi.qae</span><br><span class="line">services:</span><br><span class="line">- 21c7187d-c748-4fc9-916e-0c270f0509ee@@hubble@@hubble-network-screen</span><br><span class="line">relabel_configs:</span><br><span class="line">- source_labels: [__meta_consul_service_id]</span><br><span class="line">target_label: instance</span><br><span class="line">- regex: __meta_consul_service_metadata_(.+)</span><br><span class="line">action: labelmap</span><br><span class="line">remote_write:</span><br><span class="line">- url: http://hubble.adapter.qiyi.domain:9988/prom2hubble/push?group=hubble-test</span><br><span class="line">write_relabel_configs:</span><br><span class="line">- source_labels: [__name__]</span><br><span class="line">regex: trace_(.*)</span><br><span class="line">action: keep</span><br><span class="line">- source_labels: [project, app]</span><br><span class="line">separator: &#x27;:&#x27;</span><br><span class="line">target_label: hubble_endpoint</span><br><span class="line">replacement: prometheus_$1</span><br><span class="line">- source_labels: [project]</span><br><span class="line">target_label: hubble_group</span><br><span class="line">- regex: (app|project|prometheus_replica)</span><br><span class="line">action: labeldrop</span><br><span class="line">- target_label: hubble_step</span><br><span class="line">replacement: &quot;60&quot;</span><br><span class="line">name: trace</span><br></pre></td></tr></table></figure>

<h2 id="九、告警规则案例"><a href="#九、告警规则案例" class="headerlink" title="九、告警规则案例"></a>九、告警规则案例</h2><p>QKE告警规则案例：</p>
<p><img src="/images/1715069866-cf6e36157bf5fc524e57ec76e2f579e7.png"></p>
<p>全链路告警规则案例：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">	groups:</span><br><span class="line">- name: qytrace-agg.rules</span><br><span class="line">rules:</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;&#125;[1m])) by (project, app, span, zone, status_code)</span><br><span class="line">record: trace_span_requests_zone_code</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;&#125;[1m])) by (project, app, zone, status_code)</span><br><span class="line">record: trace_service_requests_zone_code</span><br><span class="line">- expr: |</span><br><span class="line">avg by (project, app, zone, status_code) (sum by(instance, project, app, zone, status_code) (irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;&#125;[1m])))</span><br><span class="line">record: trace_service_avg_requests_zone_code</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (project, app, span, zone)</span><br><span class="line">record: trace_span_success_requests_zone</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (project, app, zone)</span><br><span class="line">record: trace_service_success_requests_zone</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (project, app, span, zone)</span><br><span class="line">/ sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,&#125;[1m])) by (project, app, span, zone)</span><br><span class="line">record: trace_span_success_rate_zone</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (project, app, zone)</span><br><span class="line">/ sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,&#125;[1m])) by (project, app, zone)</span><br><span class="line">record: trace_service_success_rate_zone</span><br><span class="line"></span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_sum&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (project, app, span, zone)</span><br><span class="line">/ sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,&#125;[1m])) by (project, app, span, zone)</span><br><span class="line">record: trace_span_avg_latency_zone</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_sum&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (project, app, zone)</span><br><span class="line">/ sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,&#125;[1m])) by (project, app, zone)</span><br><span class="line">record: trace_service_avg_latency_zone</span><br><span class="line"></span><br><span class="line">- expr: |</span><br><span class="line">sum(trace_span_requests_zone_code) by (project, app, span, zone)</span><br><span class="line">record: trace_span_requests_zone</span><br><span class="line">- expr: |</span><br><span class="line">sum(trace_service_requests_zone_code) by (project, app, zone)</span><br><span class="line">record: trace_service_requests_zone</span><br><span class="line"></span><br><span class="line">- expr: sum(jvm_gc_pause_seconds_count&#123;env=&quot;prod&quot;&#125; - jvm_gc_pause_seconds_count&#123;env=&quot;prod&quot;&#125; offset 1m) by (project, app, instance, zone)</span><br><span class="line">record: trace_service_jvm_gc_cnt_zone</span><br><span class="line">- expr: sum(jvm_gc_pause_seconds_sum&#123;env=&quot;prod&quot;&#125; - jvm_gc_pause_seconds_sum&#123;env=&quot;prod&quot;&#125; offset 1m) by (project, app, instance, zone)</span><br><span class="line">record: trace_service_jvm_gc_elapsed_zone</span><br><span class="line"></span><br><span class="line">- expr: |</span><br><span class="line">sum(trace_service_requests_zone_code) by (app)</span><br><span class="line">record: trace_service_requests_app</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (app)</span><br><span class="line">/ sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,&#125;[1m])) by (app)</span><br><span class="line">record: trace_service_success_rate_app</span><br><span class="line">- expr: |</span><br><span class="line">sum(irate(http_server_requests_duration_seconds_sum&#123;env=&quot;prod&quot;,success=&quot;true&quot;&#125;[1m])) by (app)</span><br><span class="line">/ sum(irate(http_server_requests_duration_seconds_count&#123;env=&quot;prod&quot;,&#125;[1m])) by (app)</span><br><span class="line">record: trace_service_avg_latency_app</span><br><span class="line">samples-scraped-rules.yaml		groups:</span><br><span class="line">- name: samples-monitoring</span><br><span class="line">rules:</span><br><span class="line">- alert: SamplesScrapedTotal</span><br><span class="line">expr: sum(scrape_samples_scraped&#123;&#125;) &gt; 3000000</span><br><span class="line">for: 2m</span><br><span class="line">labels:</span><br><span class="line">prometheus: hubble-prod</span><br><span class="line">annotations:</span><br><span class="line">alertlevel: &quot;P3&quot;</span><br><span class="line">hubblegroup: &quot;hubble-prometheus-k8s&quot;</span><br><span class="line">alertvalue: &quot;&#123;&#123;$value&#125;&#125;&quot;</span><br><span class="line">summary: &quot;total samples in hubble-prod &gt; 300w&quot;</span><br><span class="line">- alert: SamplesScrapedByJob</span><br><span class="line">expr: sum by (job) (scrape_samples_scraped&#123;&#125;) &gt; 1000000</span><br><span class="line">for: 2m</span><br><span class="line">labels:</span><br><span class="line">prometheus: hubble-prod</span><br><span class="line">annotations:</span><br><span class="line">alertlevel: &quot;P3&quot;</span><br><span class="line">hubblegroup: &quot;hubble-prometheus-k8s&quot;</span><br><span class="line">alertvalue: &quot;&#123;&#123;$value&#125;&#125;&quot;</span><br><span class="line">summary: &quot;samples from &#123;&#123;$labels.job&#125;&#125; in hubble-prod &gt; 100w&quot;</span><br></pre></td></tr></table></figure>

<p>参考：</p>
<p><a href="https://songjiayang.gitbooks.io/prometheus/content/configuration/" title="Prometheus配置文件">Prometheus配置文件</a></p>
<p><a href="https://prometheus.io/docs/prometheus/latest/configuration/configuration/" title="Configuration | Prometheus">Configuration | Prometheus</a></p>
]]></content>
      <categories>
        <category>Prometheus</category>
      </categories>
      <tags>
        <tag>Prometheus</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix SNMP开机时间497天重置问题</title>
    <url>/2024/05/28/Zabbix-SNMP%E5%BC%80%E6%9C%BA%E6%97%B6%E9%97%B4497%E5%A4%A9%E9%87%8D%E7%BD%AE%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="原文"><a href="#原文" class="headerlink" title="原文"></a>原文</h2><p><a href="https://songxwn.com/zabbix-SNMP-uptime-497day/">Zabbix SNMP开机时间497天重置问题 - Song`s Blog (songxwn.com)​songxwn.com&#x2F;zabbix-SNMP-uptime-497day&#x2F;</a></p>
<hr>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>工作中遇到，网络设备开机时间到了约497天的时候（<strong>或者每过497天</strong>），Zabbix SNMP获取的时间值就会归零，重新计数，但查看设备状态正常，未重启。</p>
<h2 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h2><p>sysUpTimeInstance OID <strong>1.3.6.1.2.1.1.3.0</strong></p>
<p>获取的时间单位为 0.01秒，而此OID为32bit，所以最大只能显示<code>42949672.96秒</code>即497.1天，所以每累计大于此限制，就会重置，导致开机时间获取不正确。</p>
<p><a href="https://oidref.com/1.3.6.1.2.1.1.3.0">https://oidref.com/1.3.6.1.2.1.1.3.0</a></p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>snmpEngineTime OID <strong>1.3.6.1.6.3.10.2.1.3.0</strong></p>
<p>获取的时间单位为秒，也为32bti，但最多可以存储49710 天。足够设备生命周期使用。</p>
<p>修改Zabbix SNMP获取时间的方式为上述OID即可，其数据类型为整数。</p>
<p>注意：此为SNMP的启动时间，若SNMP进程重启，也会导致时间重置。</p>
<p><a href="https://oidref.com/1.3.6.1.6.3.10.2.1.3">https://oidref.com/1.3.6.1.6.3.10.2.1.3</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://www.zabbix.com/forum/zabbix-help/47245-snmp-uptime-overflow-after-497-days">https://www.zabbix.com/forum/zabbix-help&#x2F;47245-snmp-uptime-overflow-after-497-days</a></p>
<p><a href="https://support.huawei.com/enterprise/zh/doc/EDOC1000017243/3e06cc7f">https://support.huawei.com/enterprise/zh/doc/EDOC1000017243/3e06cc7f</a></p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL密码加密查询</title>
    <url>/2024/05/28/SQL%E5%AF%86%E7%A0%81%E5%8A%A0%E5%AF%86%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<ul>
<li>查询明文密码</li>
</ul>
<p><code>SELECT server_ip,server_port,monitor_user,AES_DECRYPT(monitor_passwd,&#39;fast&#39;) monitor_passwd,exporter_port,symbol,id,server_type,instance_name FROM exporter WHERE exporter_ip = &#39;%s&#39;&quot; %(exporter_ip)</code></p>
<ul>
<li>更新密码</li>
</ul>
<p><code>update exporter.exporter set monitor_passwd = AES_ENCRYPT(&#39;T00LbOOk!GUI&#39;,&#39;fast&#39;) where server_ip=&#39;10.250.10.11&#39;</code></p>
<ul>
<li>插入密码</li>
</ul>
<p>&#96;insert into exporter(server_type,server_ip,server_port,app_name,monitor_user,monitor_passwd,exporter_ip,exporter_port,symbol,server_level,dept,status,cmdb_id,area,supplier,application_id,application_usercode,cmdb_idnew) values(‘%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’,’%s’)” %(‘mysql’,i_mysql_insert[“ip”],str(i_mysql_insert[“port”]),i_mysql_insert[“app”],’bmc’,AES_ENCRYPT(‘46}_7e71D2’,’fast’),’10.250.5.9’,str(max_port),v_mysql_symbol,str(i_mysql_insert[“level”]),i_mysql_insert[“dept”],i_mysql_insert[“status”],str(i_mysql_insert[“id”]),’青岛’,i_mysql_insert[“team”],i_mysql_insert[“application_id”],i_mysql_insert[“application_usercode”],i_mysql_insert[“cmdb_idnew)</p>
<p>AES_ENCRYPT(‘46}_7e71D2’,’fast’)&#96;</p>
]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix配置开通LDAP认证-基于AD</title>
    <url>/2024/06/03/Zabbix%E9%85%8D%E7%BD%AE%E5%BC%80%E9%80%9ALDAP%E8%AE%A4%E8%AF%81-%E5%9F%BA%E4%BA%8EAD/</url>
    <content><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><a href="#%E4%BB%8B%E7%BB%8D"></a><a href="#%E4%BB%8B%E7%BB%8D" title="介绍"></a>介绍</h1><p>本教程适用于6.4-7.0+版本的Zabbix，域控（AD）使用Windows Server 2022搭建，域控等级为 2016。</p>
<p>域控域名为 songxwn.com</p>
<p>最终实现AD用户统一认证，统一改密，Zabbix用户自动添加。（6.4之前不支持）</p>
<h1 id="认证配置"><a href="#认证配置" class="headerlink" title="认证配置"></a><a href="#%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE"></a><a href="#%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE" title="认证配置"></a>认证配置</h1><h2 id="创建Zabbix本地LDAP映射组"><a href="#创建Zabbix本地LDAP映射组" class="headerlink" title="创建Zabbix本地LDAP映射组"></a><a href="#%E5%88%9B%E5%BB%BAZabbix%E6%9C%AC%E5%9C%B0LDAP%E6%98%A0%E5%B0%84%E7%BB%84"></a><a href="#%E5%88%9B%E5%BB%BAZabbix%E6%9C%AC%E5%9C%B0LDAP%E6%98%A0%E5%B0%84%E7%BB%84" title="创建Zabbix本地LDAP映射组"></a>创建Zabbix本地LDAP映射组</h2><p>创建一个LDAP用户组，用于权限管理等。注意配置前端访问模式为LDAP。</p>
<p><a href="https://img.songxwn.com/file/6e7aaa3f6b8b655cd9352.png"><img src="/images/1717148961-0bb1b158c4e48032240dff5816957a39.png"></a></p>
<h2 id="修改默认认证方式"><a href="#修改默认认证方式" class="headerlink" title="修改默认认证方式"></a><a href="#%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E8%AE%A4%E8%AF%81%E6%96%B9%E5%BC%8F"></a><a href="#%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E8%AE%A4%E8%AF%81%E6%96%B9%E5%BC%8F" title="修改默认认证方式"></a>修改默认认证方式</h2><p>修改默认认证方式为LDAP，并添加取消配置用户组（禁止使用用户组）一般配置自带的Disabled组即可。</p>
<p><a href="https://img.songxwn.com/file/8abfe8954f9f3fb6e32d7.png"><img src="/images/1717148961-d1e210a5627b5ef2abff7c6190d67acb.png"></a></p>
<h2 id="接入AD域控服务器-实现LDAP身份统一认证"><a href="#接入AD域控服务器-实现LDAP身份统一认证" class="headerlink" title="接入AD域控服务器-实现LDAP身份统一认证"></a><a href="#%E6%8E%A5%E5%85%A5AD%E5%9F%9F%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%AE%9E%E7%8E%B0LDAP%E8%BA%AB%E4%BB%BD%E7%BB%9F%E4%B8%80%E8%AE%A4%E8%AF%81"></a><a href="#%E6%8E%A5%E5%85%A5AD%E5%9F%9F%E6%8E%A7%E6%9C%8D%E5%8A%A1%E5%99%A8-%E5%AE%9E%E7%8E%B0LDAP%E8%BA%AB%E4%BB%BD%E7%BB%9F%E4%B8%80%E8%AE%A4%E8%AF%81" title="接入AD域控服务器-实现LDAP身份统一认证"></a>接入AD域控服务器-实现LDAP身份统一认证</h2><h3 id="选择启用LDAP验证，启用JIT服务开通功能。然后点击添加LDAP服务器。"><a href="#选择启用LDAP验证，启用JIT服务开通功能。然后点击添加LDAP服务器。" class="headerlink" title="选择启用LDAP验证，启用JIT服务开通功能。然后点击添加LDAP服务器。"></a><a href="#%E9%80%89%E6%8B%A9%E5%90%AF%E7%94%A8LDAP%E9%AA%8C%E8%AF%81%EF%BC%8C%E5%90%AF%E7%94%A8JIT%E6%9C%8D%E5%8A%A1%E5%BC%80%E9%80%9A%E5%8A%9F%E8%83%BD%E3%80%82%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E6%B7%BB%E5%8A%A0LDAP%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82"></a><a href="#%E9%80%89%E6%8B%A9%E5%90%AF%E7%94%A8LDAP%E9%AA%8C%E8%AF%81%EF%BC%8C%E5%90%AF%E7%94%A8JIT%E6%9C%8D%E5%8A%A1%E5%BC%80%E9%80%9A%E5%8A%9F%E8%83%BD%E3%80%82%E7%84%B6%E5%90%8E%E7%82%B9%E5%87%BB%E6%B7%BB%E5%8A%A0LDAP%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82" title="选择启用LDAP验证，启用JIT服务开通功能。然后点击添加LDAP服务器。"></a>选择启用LDAP验证，启用JIT服务开通功能。然后点击添加LDAP服务器。</h3><p><a href="https://img.songxwn.com/file/6621c32d35098a1414f3c.png"><img src="/images/1717148961-81058379c5caa1573b618bd5474cfaea.png"></a></p>
<h3 id="配置LDAP服务器"><a href="#配置LDAP服务器" class="headerlink" title="配置LDAP服务器"></a><a href="#%E9%85%8D%E7%BD%AELDAP%E6%9C%8D%E5%8A%A1%E5%99%A8"></a><a href="#%E9%85%8D%E7%BD%AELDAP%E6%9C%8D%E5%8A%A1%E5%99%A8" title="配置LDAP服务器"></a>配置LDAP服务器</h3><ul>
<li><p>名称：任意填写即可</p>
</li>
<li><p>主机为域控的主域名或域控服务器IP地址。（使用域名需要配置对DNS）</p>
</li>
<li><p>端口默认389即可。</p>
</li>
<li><p>基于DN，参考下面配置，我的域控域名为songxwn.com (可以使用域控上ADSI工具查看)</p>
</li>
<li><p>搜索属性AD环境必须为sAMAccountName</p>
</li>
<li><p>绑定DN为可登录的域控账号</p>
</li>
<li><p>绑定密码为上面域账号的密码</p>
</li>
<li><p>勾选配置准时(JIT)服务开通</p>
</li>
<li><p>组名属性为CN</p>
</li>
<li><p>组成员属性为memberOf</p>
</li>
<li><p>用户姓氏属性为givenName</p>
</li>
</ul>
<p>最终，点击用户组映射配置，将Zabbix组和AD的用户组映射</p>
<p><a href="https://img.songxwn.com/file/85d1955e0da5b4913fa11.png"><img src="/images/1717148961-848af793a457bc57a3eb59ffc644e0fd.png"></a></p>
<h3 id="用户组映射配置"><a href="#用户组映射配置" class="headerlink" title="用户组映射配置"></a><a href="#%E7%94%A8%E6%88%B7%E7%BB%84%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE"></a><a href="#%E7%94%A8%E6%88%B7%E7%BB%84%E6%98%A0%E5%B0%84%E9%85%8D%E7%BD%AE" title="用户组映射配置"></a>用户组映射配置</h3><ul>
<li><p>LDAP组模式为AD域控里面的用户组名</p>
</li>
<li><p>用户群组写Zabbix 上面创建的组</p>
</li>
<li><p>用户角色根据需求选择，一般为User即可。</p>
</li>
</ul>
<p>最后点击添加</p>
<p><a href="https://img.songxwn.com/file/55b658fac4369737059a5.png"><img src="/images/1717148961-2408331f40e52a6b6ffbf914b2a4a568.png"></a></p>
<h3 id="点击添加即可，最终如下面所示。点击测试可以测试配置是否正确。"><a href="#点击添加即可，最终如下面所示。点击测试可以测试配置是否正确。" class="headerlink" title="点击添加即可，最终如下面所示。点击测试可以测试配置是否正确。"></a><a href="#%E7%82%B9%E5%87%BB%E6%B7%BB%E5%8A%A0%E5%8D%B3%E5%8F%AF%EF%BC%8C%E6%9C%80%E7%BB%88%E5%A6%82%E4%B8%8B%E9%9D%A2%E6%89%80%E7%A4%BA%E3%80%82%E7%82%B9%E5%87%BB%E6%B5%8B%E8%AF%95%E5%8F%AF%E4%BB%A5%E6%B5%8B%E8%AF%95%E9%85%8D%E7%BD%AE%E6%98%AF%E5%90%A6%E6%AD%A3%E7%A1%AE%E3%80%82"></a><a href="#%E7%82%B9%E5%87%BB%E6%B7%BB%E5%8A%A0%E5%8D%B3%E5%8F%AF%EF%BC%8C%E6%9C%80%E7%BB%88%E5%A6%82%E4%B8%8B%E9%9D%A2%E6%89%80%E7%A4%BA%E3%80%82%E7%82%B9%E5%87%BB%E6%B5%8B%E8%AF%95%E5%8F%AF%E4%BB%A5%E6%B5%8B%E8%AF%95%E9%85%8D%E7%BD%AE%E6%98%AF%E5%90%A6%E6%AD%A3%E7%A1%AE%E3%80%82" title="点击添加即可，最终如下面所示。点击测试可以测试配置是否正确。"></a>点击添加即可，最终如下面所示。点击测试可以测试配置是否正确。</h3><p><a href="https://img.songxwn.com/file/544aafcf3cb65d594070c.png"><img src="/images/1717148961-f5b316d8b08e40390b18f6e5e8f3c388.png"></a></p>
<h3 id="最终点击更新后保存配置，至此配置完成。"><a href="#最终点击更新后保存配置，至此配置完成。" class="headerlink" title="最终点击更新后保存配置，至此配置完成。"></a><a href="#%E6%9C%80%E7%BB%88%E7%82%B9%E5%87%BB%E6%9B%B4%E6%96%B0%E5%90%8E%E4%BF%9D%E5%AD%98%E9%85%8D%E7%BD%AE%EF%BC%8C%E8%87%B3%E6%AD%A4%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90%E3%80%82"></a><a href="#%E6%9C%80%E7%BB%88%E7%82%B9%E5%87%BB%E6%9B%B4%E6%96%B0%E5%90%8E%E4%BF%9D%E5%AD%98%E9%85%8D%E7%BD%AE%EF%BC%8C%E8%87%B3%E6%AD%A4%E9%85%8D%E7%BD%AE%E5%AE%8C%E6%88%90%E3%80%82" title="最终点击更新后保存配置，至此配置完成。"></a>最终点击更新后保存配置，至此配置完成。</h3><p><a href="https://img.songxwn.com/file/dfddaad3666761e1eb37a.png"><img src="/images/1717148961-8e59f2a1aceb9071bd5f3aa82bc92d17.png"></a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a><a href="#%E5%8F%82%E8%80%83"></a><a href="#%E5%8F%82%E8%80%83" title="参考"></a>参考</h1><p><a href="https://blog.zabbix.com/just-in-time-user-provisioning-explained/25515/" title="https://blog.zabbix.com/just-in-time-user-provisioning-explained/25515/">https://blog.zabbix.com/just-in-time-user-provisioning-explained/25515/</a></p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix：历史数据与趋势数据</title>
    <url>/2024/06/03/Zabbix%EF%BC%9A%E5%8E%86%E5%8F%B2%E6%95%B0%E6%8D%AE%E4%B8%8E%E8%B6%8B%E5%8A%BF%E6%95%B0%E6%8D%AE/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a><a href="#%E7%AE%80%E4%BB%8B"></a><a href="#%E7%AE%80%E4%BB%8B" title="简介"></a>简介</h1><p>历史数据（history）和趋势数据（trends）是Zabbix中存储收集到的数据的两种方式。</p>
<p>历史数据：每一个收集到的监控数据， 趋势数据：按小时统计计算的平均值数据。</p>
<h2 id="历史数据的留存"><a href="#历史数据的留存" class="headerlink" title="历史数据的留存"></a><a href="#%E5%8E%86%E5%8F%B2%E6%95%B0%E6%8D%AE%E7%9A%84%E7%95%99%E5%AD%98"></a><a href="#%E5%8E%86%E5%8F%B2%E6%95%B0%E6%8D%AE%E7%9A%84%E7%95%99%E5%AD%98" title="历史数据的留存"></a>历史数据的留存</h2><p>通过设置历史数据保留时长，可以指定历史数据留存的时长。在以下位置，你可以找到相关的输入框：</p>
<ul>
<li>监控项属性 <a href="https://www.zabbix.com/documentation/6.0/zh/manual/config/items/item">表单</a></li>
<li>批量更新监控项</li>
<li><a href="https://www.zabbix.com/documentation/6.0/zh/manual/web_interface/frontend_sections/administration/general#%E7%AE%A1%E5%AE%B6">管家配置页</a></li>
</ul>
<p>任何过旧的历史数据会被管家从数据库中删除。</p>
<p>一般来讲，强烈建议将历史数据保留时长设置得尽可能的小。这么做可以让数据库不会因存储了大量的历史数据，导致超负荷运行。</p>
<p>可以选择长时间的保留趋势数据，来替代长期需要的历史数据。例如：设置成保留14天历史数据和5年的趋势数据。</p>
<p>参考<a href="https://www.zabbix.com/documentation/6.0/zh/manual/installation/requirements#database-size">数据库空间大小</a>页，来了解历史数据和趋势数据各自需要的数据库空间。</p>
<p>当设置了较短的历史数据保留时间，图形会使用趋势数据值显示旧数据，因此依旧可以通过图形查看旧数据。</p>
<h2 id="趋势数据的留存"><a href="#趋势数据的留存" class="headerlink" title="趋势数据的留存"></a><a href="#%E8%B6%8B%E5%8A%BF%E6%95%B0%E6%8D%AE%E7%9A%84%E7%95%99%E5%AD%98"></a><a href="#%E8%B6%8B%E5%8A%BF%E6%95%B0%E6%8D%AE%E7%9A%84%E7%95%99%E5%AD%98" title="趋势数据的留存"></a>趋势数据的留存</h2><p>趋势数据是一种内建的历史数据压缩机制，可以用来存储数字类型监控项的每小时的最小值、最大值、平均值和记录数量。</p>
<p>通过设置趋势存储时间，可以指定趋势数据留存的时长。 在以下位置，你可以找到相关的输入框：</p>
<ul>
<li>监控项属性 <a href="https://www.zabbix.com/documentation/6.0/zh/manual/config/items/item">表单</a></li>
<li>批量更新监控项</li>
<li><a href="https://www.zabbix.com/documentation/6.0/zh/manual/web_interface/frontend_sections/administration/general#%E7%AE%A1%E5%AE%B6">管家配置页</a></li>
</ul>
<p>通常趋势数据设置的的留存时间应当比历史数据留存时间设置的长。任何过旧的趋势数据会被管家从数据库删除。</p>
<p>Zabbix server在运行时会在趋势缓存中积累趋势数据，因为有数据流入。 在这些情况下，Zabbix Server会将每个监控项的<strong>前一个小时</strong>趋势数据写入数据库(在前端可以看到):</p>
<ul>
<li>服务器接收到监控项首个当前一小时的值</li>
<li>在还差5分钟或更少时间达到一小时，仍然没有该监控项当前一小时的值</li>
<li>服务器停止</li>
</ul>
<p>要查看图表上的趋势，你需要至少等待到下一个小时的开始(如果监控项经常更新)，最多等待到下一个小时的结束(如果监控项很少更新)，最多2个小时。</p>
<p>当服务器刷新趋势缓存时，如果数据库中已经有这一小时的趋势(例如，服务器在这一小时中已经重新启动)，服务器需要使用更新语句，而不是简单的插入。 因此，在大型环境的安装中，如果需要重新启动，最好在一个小时结束时停止服务器，在下一个小时开始时开始，以避免趋势数据重叠。</p>
<p>趋势数据生成和历史表没有关系。</p>
<h2 id="优点和缺点"><a href="#优点和缺点" class="headerlink" title="优点和缺点"></a><a href="#%E4%BC%98%E7%82%B9%E5%92%8C%E7%BC%BA%E7%82%B9"></a><a href="#%E4%BC%98%E7%82%B9%E5%92%8C%E7%BC%BA%E7%82%B9" title="优点和缺点"></a>优点和缺点</h2><p>历史数据可以保留每一次监控项的具体数值，如有95计费等流量计费方式，确保数值的准确性。但会占用大量存储空间。</p>
<p>趋势数据会已一小时内的所有历史数据进行平均值计算存储数据，大量减少存储空间，可以较为准确的获取数值。但会失去数值的精确值。</p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a><a href="#%E5%8F%82%E8%80%83"></a><a href="#%E5%8F%82%E8%80%83" title="参考"></a>参考</h1><p><a href="https://www.zabbix.com/documentation/6.0/zh/manual/config/items/history_and_trends">历史数据与趋势数据 (zabbix.com)</a></p>
]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
  <entry>
    <title>Elasticsearch 索引模板、生命周期策略、节点角色介绍</title>
    <url>/2024/06/03/Elasticsearch-%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF%E3%80%81%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E7%AD%96%E7%95%A5%E3%80%81%E8%8A%82%E7%82%B9%E8%A7%92%E8%89%B2%E4%BB%8B%E7%BB%8D/</url>
    <content><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a><a href="#%E7%AE%80%E4%BB%8B"></a><a href="#%E7%AE%80%E4%BB%8B" title="简介"></a>简介</h1><ul>
<li><p>索引模板可以帮助简化创建和二次配置索引的过程，让我们更高效地管理索引的配置和映射。</p>
</li>
<li><p>索引生命周期策略是一项有意义的功能。它通常用于管理索引和分片的热（hot）、温（warm）和冷（cold）数据，以及定期删除过期的数据，以确保Elasticsearch的健康运行。</p>
</li>
<li><p>Elasticsearch集群中，不同节点扮演着不同的角色（热（hot）、温（warm）和冷（cold）主节点），共同构成了强大的搜索和分析引擎。</p>
</li>
</ul>
<p>此文档基于 8.0版本编写。</p>
<h1 id="索引模板-Template"><a href="#索引模板-Template" class="headerlink" title="索引模板 - Template"></a><a href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF-Template"></a><a href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF-Template" title="索引模板 - Template"></a>索引模板 - Template</h1><p>索引可使用预定义的模板进行创建，这个模板称作Index templates。模板设置包括设置和映射，通过模式匹配的方式使得多个索引重用一个模板。</p>
<h2 id="索引模式"><a href="#索引模式" class="headerlink" title="索引模式"></a><a href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%BC%8F"></a><a href="#%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%BC%8F" title="索引模式"></a>索引模式</h2><p>用于匹配创建的索引。</p>
<h2 id="索引设置"><a href="#索引设置" class="headerlink" title="索引设置"></a><a href="#%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE"></a><a href="#%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE" title="索引设置"></a>索引设置</h2><p>settings主要作用于index的一些相关配置信息，如分片数、副本数，tranlog同步条件、refresh等。</p>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/8.12/index-modules.html#index-modules-settings" title="官方文档">官方文档</a></p>
<p>下面就是把副本数量指定为2，默认副本数量为1。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;4&lt;br&gt;5&lt;br&gt;</code></td>
<td><code>text&lt;br&gt;&#123;&lt;br&gt;  &quot;index&quot;: &#123;&lt;br&gt;    &quot;number_of_replicas&quot;: &quot;2&quot;&lt;br&gt;  &#125;&lt;br&gt;&#125;&lt;br&gt;</code></td>
</tr>
</tbody></table>
<ul>
<li><p>index.codec 默认使用 LZ4 压缩存储的数 压缩，但可以将其设置为使用 DEFLATE 进行更高的压缩比，以较慢的存储字段性能为代价。</p>
</li>
<li><p>index.number_of_replicas 每个主分片的副本数。默认值为 1。</p>
</li>
<li><p>index.number_of_shards 索引应具有的主分片数。默认值为1 。此设置只能在创建索引时设置。不能在索引上的更改它。</p>
</li>
</ul>
<h2 id="索引映射"><a href="#索引映射" class="headerlink" title="索引映射"></a><a href="#%E7%B4%A2%E5%BC%95%E6%98%A0%E5%B0%84"></a><a href="#%E7%B4%A2%E5%BC%95%E6%98%A0%E5%B0%84" title="索引映射"></a>索引映射</h2><p>mappings主要是一些说明信息，大致又分为_all、_source、prpperties这三部分：</p>
<ol>
<li><p>_all：主要指的是AllField字段，我们可以将一个或多个都包含进来，在进行检索时无需指定字段的情况下检索多个字段。设置</p>
</li>
<li><p>_source：主要指的是SourceField字段，Source可以理解为ES除了将数据保存在索引文件中，另外还有一份源数据。_source字段在我们进行检索时相当重要，如果在{“enabled” ： false}情况下默认检索只会返回ID， 你需要通过Fields字段去到索引中去取数据，效率不是很高。但是enabled设置为true时，索引会比较大，这时可以通过Compress进行压缩和inclueds、excludes来在字段级别上进行一些限制，自定义哪些字段允许存储。</p>
</li>
<li><p>properties：这是最重要的步骤，主要针对索引结构和字段级别上的一些设置。”_all” : {“enabled” : true}</p>
</li>
</ol>
<p>咱们通常在elasticsearch中 post mapping信息，每重新创建索引便到设置mapping，分片，副本信息。非常繁琐。强烈建议大家通过设置模板方式设置索引信息。设置索引名，通过正则匹配的方式匹配到相应的模板。</p>
<p>直接修改mapping的优先级&gt;索引模板。索引匹配了多个模板，当属性等配置出现不一致的，以order的最大值为准，order默认值为0</p>
<h2 id="创建过程-Kibana"><a href="#创建过程-Kibana" class="headerlink" title="创建过程 - Kibana"></a><a href="#%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B-Kibana"></a><a href="#%E5%88%9B%E5%BB%BA%E8%BF%87%E7%A8%8B-Kibana" title="创建过程 - Kibana"></a>创建过程 - Kibana</h2><p>选择 Stack Management &gt; 数据 &gt; 索引管理 &gt; 索引模板 &gt; 创建模板</p>
<p><a href="https://img.songxwn.com/file/df86ebe1a243672dc5ca6.png"><img src="/images/1717394732-bddbb09a1eebc2084f4d0aa08f5821a1.png"></a></p>
<h3 id="配置名称和索引模式"><a href="#配置名称和索引模式" class="headerlink" title="配置名称和索引模式"></a><a href="#%E9%85%8D%E7%BD%AE%E5%90%8D%E7%A7%B0%E5%92%8C%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%BC%8F"></a><a href="#%E9%85%8D%E7%BD%AE%E5%90%8D%E7%A7%B0%E5%92%8C%E7%B4%A2%E5%BC%95%E6%A8%A1%E5%BC%8F" title="配置名称和索引模式"></a>配置名称和索引模式</h3><p>填写名称、和索引模式和开启允许自动创建索引。点击下一步，跳过组件模板。</p>
<p>注意索引模式需要匹配要创建的索引名称。</p>
<p><a href="https://img.songxwn.com/file/0a7a7adaf0d968b9eeabf.png"><img src="/images/1717394732-9be93c9f9f07f6e0af35d71c07a9d938.png"></a></p>
<h3 id="索引设置-1"><a href="#索引设置-1" class="headerlink" title="索引设置"></a><a href="#%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE-x20"></a><a href="#%E7%B4%A2%E5%BC%95%E8%AE%BE%E7%BD%AE-x20" title="索引设置 "></a>索引设置</h3><p>配置副本数量为2，点击下一步到复查模板。最后点击创建模板。</p>
<p><a href="https://img.songxwn.com/file/417de2d87940eb07cb565.png"><img src="/images/1717394732-761a9a15caaaebd28ffdf2ce137f571c.png"></a></p>
<p>最终索引模式匹配的创建模板，都会套用模板配置。</p>
<p><a href="https://img.songxwn.com/file/8cf2c4731e542253669ed.png"><img src="/images/1717394732-4cc8b1d1e9b4071e6a3d42b67e5befe7.png"></a></p>
<h1 id="索引生命周期"><a href="#索引生命周期" class="headerlink" title="索引生命周期"></a><a href="#%E7%B4%A2%E5%BC%95%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"></a><a href="#%E7%B4%A2%E5%BC%95%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F" title="索引生命周期"></a>索引生命周期</h1><p>索引生命周期可以手动关联模板，也可以通过索引模板自动关联。</p>
<p><a href="https://img.songxwn.com/file/f8f5a5294bd7704b68c1d.png"><img src="/images/1717394732-782c8b2ce2071559927c9a14d57bafe0.png"></a></p>
<h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a><a href="#%E5%88%9B%E5%BB%BA"></a><a href="#%E5%88%9B%E5%BB%BA" title="创建"></a>创建</h2><p>选择 Stack Management &gt; 数据 &gt; 索引管理 &gt; 索引生命周期策略 &gt; 点击创建策略。</p>
<p>创建策略，配置热阶段 180天后转换为冷阶段，并把副本数量改为0。再过365天后删除。</p>
<p><a href="https://img.songxwn.com/file/aa8baf0c6ddd2c25031f3.png"><img src="/images/1717394732-ba1de3551fb01bcda8a849e915363159.png"></a></p>
<h3 id="冷阶段配置"><a href="#冷阶段配置" class="headerlink" title="冷阶段配置"></a><a href="#%E5%86%B7%E9%98%B6%E6%AE%B5%E9%85%8D%E7%BD%AE"></a><a href="#%E5%86%B7%E9%98%B6%E6%AE%B5%E9%85%8D%E7%BD%AE" title="冷阶段配置"></a>冷阶段配置</h3><p>配置副本分片重定为0，并配置此阶段后删除。</p>
<p><a href="https://img.songxwn.com/file/97d95f926ba9698744667.png"><img src="/images/1717394732-8a581bcd8698a291c831e0ed41159850.png"></a></p>
<h3 id="删除阶段"><a href="#删除阶段" class="headerlink" title="删除阶段"></a><a href="#%E5%88%A0%E9%99%A4%E9%98%B6%E6%AE%B5"></a><a href="#%E5%88%A0%E9%99%A4%E9%98%B6%E6%AE%B5" title="删除阶段"></a>删除阶段</h3><p>配置冷阶段365天后删除索引。</p>
<p><a href="https://img.songxwn.com/file/c22c0d1abe8903fc6b9ee.png"><img src="/images/1717394732-f294d843cb5256b9d8d1ada30fbcd10a.png"></a></p>
<h2 id="关联索引模板"><a href="#关联索引模板" class="headerlink" title="关联索引模板"></a><a href="#%E5%85%B3%E8%81%94%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF"></a><a href="#%E5%85%B3%E8%81%94%E7%B4%A2%E5%BC%95%E6%A8%A1%E6%9D%BF" title="关联索引模板"></a>关联索引模板</h2><p>点击+号关联索引模板，之后创建的索引就会自动关联索引生命周期策略。</p>
<p><a href="https://img.songxwn.com/file/6dc5988f2e6e7ef9aa8e9.png"><img src="/images/1717394732-4853400a2c05838fb5475696c8c6a31e.png"></a></p>
<p><a href="https://img.songxwn.com/file/17f9ab659b0ea591884b1.png"><img src="/images/1717394732-badd33ed924c2c471b16d7768b203168.png"></a></p>
<h1 id="集群角色"><a href="#集群角色" class="headerlink" title="集群角色"></a><a href="#%E9%9B%86%E7%BE%A4%E8%A7%92%E8%89%B2"></a><a href="#%E9%9B%86%E7%BE%A4%E8%A7%92%E8%89%B2" title="集群角色"></a>集群角色</h1><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>text&lt;br&gt;node.roles: [ data, master ]&lt;br&gt;# 配置文件示例&lt;br&gt;</code></td>
</tr>
</tbody></table>
<p><a href="https://img.songxwn.com/file/afa9e2e04080b21ac4595.png"><img src="/images/1717394732-231768cbe3cf5f7a962101df488306c9.png"></a></p>
<h2 id="主节点（Master-eligible-node）"><a href="#主节点（Master-eligible-node）" class="headerlink" title="主节点（Master-eligible node）"></a><a href="#%E4%B8%BB%E8%8A%82%E7%82%B9%EF%BC%88Master-eligible-node%EF%BC%89"></a><a href="#%E4%B8%BB%E8%8A%82%E7%82%B9%EF%BC%88Master-eligible-node%EF%BC%89" title="主节点（Master-eligible node）"></a><strong>主节点（Master-eligible node</strong>）</h2><ul>
<li><p>主节点的核心用途：集群层面的管理，例如创建或删除索引、跟踪哪些节点是集群的一部分，以及决定将哪些分片分配给哪些节点。主节点的path.data 用于存储集群元数据信息，不可缺少。</p>
</li>
<li><p>主节点的重要性：拥有稳定的主节点对于集群健康非常重要。</p>
</li>
</ul>
<p>和早期版本不同，节点角色划分后，主节点又被细分为：候选主节点和仅投票主节点。</p>
<ul>
<li>主节点存储数据：集群中每个索引的索引元数据，集群层面的元数据。</li>
</ul>
<h3 id="专用候选主节点（Dedicated-master-eligible-node）"><a href="#专用候选主节点（Dedicated-master-eligible-node）" class="headerlink" title="专用候选主节点（Dedicated master-eligible node）"></a><a href="#%E4%B8%93%E7%94%A8%E5%80%99%E9%80%89%E4%B8%BB%E8%8A%82%E7%82%B9%EF%BC%88Dedicated-master-eligible-node%EF%BC%89"></a><a href="#%E4%B8%93%E7%94%A8%E5%80%99%E9%80%89%E4%B8%BB%E8%8A%82%E7%82%B9%EF%BC%88Dedicated-master-eligible-node%EF%BC%89" title="专用候选主节点（Dedicated master-eligible node）"></a><strong>专用候选主节点（Dedicated master-eligible node</strong>）</h3><p>如果集群规模大、节点多之后，有必要独立设置专用候选主节点。</p>
<p>专用候选主节点配置：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ master ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h3 id="仅投票主节点（Voting-only-master-eligible-node）"><a href="#仅投票主节点（Voting-only-master-eligible-node）" class="headerlink" title="仅投票主节点（Voting-only master-eligible node）"></a><a href="#%E4%BB%85%E6%8A%95%E7%A5%A8%E4%B8%BB%E8%8A%82%E7%82%B9%EF%BC%88Voting-only-master-eligible-node%EF%BC%89"></a><a href="#%E4%BB%85%E6%8A%95%E7%A5%A8%E4%B8%BB%E8%8A%82%E7%82%B9%EF%BC%88Voting-only-master-eligible-node%EF%BC%89" title="仅投票主节点（Voting-only master-eligible node）"></a><strong>仅投票主节点（Voting-only master-eligible node</strong>）</h3><p>用途：仅投票，不会被选为主节点。</p>
<p>硬件配置可以较专用候选主节点低一些。</p>
<p>仅投票主节点配置：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ master, voting_only ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<p>注意：master 在集群中必不可少。</p>
<p>关于集群主节点配置，要强调说明如下：</p>
<ul>
<li><p>高可用性 (HA) 集群需要至少三个符合主节点资格的节点；其中至少两个不是仅投票节点。</p>
</li>
<li><p>即使其中一个节点发生故障，这样的集群也将能够选举一个主节点。</p>
</li>
</ul>
<h2 id="数据节点（Data-node）"><a href="#数据节点（Data-node）" class="headerlink" title="数据节点（Data node）"></a><a href="#%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9%EF%BC%88Data-node%EF%BC%89"></a><a href="#%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9%EF%BC%88Data-node%EF%BC%89" title="数据节点（Data node）"></a><strong>数据节点（Data node</strong>）</h2><p>数据节点用途：数据落地存储、数据增、删、改、查、搜索、聚合操作等处理操作。</p>
<p>数据节点硬件配置：CPU 要求高、内存要求高、磁盘要求高。</p>
<p>专属数据节点好处：主节点和数据节点分离，各司其职。</p>
<p>数据节点存储内容：</p>
<ul>
<li><p>分片数据。</p>
</li>
<li><p>每个分片对应的元数据。</p>
</li>
<li><p>集群层面的元数据，如：setting 和 索引模板。</p>
</li>
</ul>
<p>拥有专用数据节点的主要好处是主角色和数据角色的分离。</p>
<p>数据节点的配置：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;</code></td>
<td><code>haskell&lt;br&gt;node.roles: [ data ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<p>用途：运行转换并处理转换 API 请求。这块，咱们之前文章没有涉及。</p>
<p>在 Elastic 多层（tires）冷热集群架构体系下，数据节点又可以细分为：</p>
<ul>
<li><p>内容数据节点（Content data node）</p>
</li>
<li><p>热数据节点（Hot data node）</p>
</li>
<li><p>温数据节点（Warm data node）</p>
</li>
<li><p>冷数据节点（Cold data node）</p>
</li>
<li><p>冷冻数据节点（Frozen data node）</p>
</li>
</ul>
<p><a href="https://img.songxwn.com/file/ad4f145a79bf57b0943c6.png"><img src="/images/1717394732-fecd8cdf29c96e81de7972601d27f4d7.png"></a></p>
<p><a href="https://img.songxwn.com/file/0d5954c83bd6a4c41ab1a.gif"><img src="/images/1717394732-2bdbff73c0f48f5c1d8569736213003b.gif"></a></p>
<h2 id="内容数据节点"><a href="#内容数据节点" class="headerlink" title="内容数据节点"></a><a href="#%E5%86%85%E5%AE%B9%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9"></a><a href="#%E5%86%85%E5%AE%B9%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9" title="内容数据节点"></a><strong>内容数据节点</strong></h2><p>用途：处理写入和查询负载，具有较长的数据保留要求。</p>
<p>建议至少设置一个副本，以保证数据的高可用。</p>
<p>不属于数据流的系统索引或其他索引会自动分配到内容数据节点。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ data_content ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h3 id="热数据节点"><a href="#热数据节点" class="headerlink" title="热数据节点"></a><a href="#%E7%83%AD%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9"></a><a href="#%E7%83%AD%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9" title="热数据节点"></a><strong>热数据节点</strong></h3><p>用途：保存最近、最常访问的时序数据。</p>
<p>推荐使用：SSD 磁盘，至少设置一个副本。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ data_hot ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h5 id=""><a href="#" class="headerlink" title="****"></a><a href="#"></a><a href="#" title="****"></a>****</h5><h3 id="温数据节点"><a href="#温数据节点" class="headerlink" title="温数据节点"></a><a href="#%E6%B8%A9%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9"></a><a href="#%E6%B8%A9%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9" title="温数据节点"></a><strong>温数据节点</strong></h3><p>用途：保存访问频次低且很少更新的时序数据。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ data_warm ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h3 id="冷数据节点"><a href="#冷数据节点" class="headerlink" title="冷数据节点"></a><a href="#%E5%86%B7%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9"></a><a href="#%E5%86%B7%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9" title="冷数据节点"></a><strong>冷数据节点</strong></h3><p>用途：保存不经常访问且通常不更新的时序数据。可存储可搜索快照。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ data_cold ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h3 id="冷冻数据节点"><a href="#冷冻数据节点" class="headerlink" title="冷冻数据节点"></a><a href="#%E5%86%B7%E5%86%BB%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9"></a><a href="#%E5%86%B7%E5%86%BB%E6%95%B0%E6%8D%AE%E8%8A%82%E7%82%B9" title="冷冻数据节点"></a><strong>冷冻数据节点</strong></h3><p>用途：保存很少访问且从不更新的时序数据。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ data_frozen ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<p>在冷热集群架构时序数据 <a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&mid=2247488541&idx=1&sn=16b07ca9247f23990dd69d4d264063b5&chksm=eaa83c35dddfb523e357c738d64d02b8b7fc7febbd911e254c6b043690356e6db33b73ba2f34&scene=21%23wechat_redirect&source=article&objectId=2009025">ILM 索引生命周期管理</a>的实战演练环节，验证发现：</p>
<p>在配置节点角色时，data_hot、data_warm、data_cold 要和 data_content 要一起配置。且 data_hot、data_warm、data_cold 不要和原有的data 节点一起配置了。</p>
<p>如果仅data_hot 不设置 data_content 会导致集群数据写入后无法落地。</p>
<p>我的理解：data_hot, data_warm, data_cold 是标识性的节点，实际落地存储还得靠 data_content 角色。</p>
<h2 id="数据预处理节点（ingest-node）"><a href="#数据预处理节点（ingest-node）" class="headerlink" title="数据预处理节点（ingest node）"></a><a href="#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E8%8A%82%E7%82%B9%EF%BC%88ingest-node%EF%BC%89"></a><a href="#%E6%95%B0%E6%8D%AE%E9%A2%84%E5%A4%84%E7%90%86%E8%8A%82%E7%82%B9%EF%BC%88ingest-node%EF%BC%89" title="数据预处理节点（ingest node）"></a><strong>数据预处理节点（ingest node</strong>）</h2><p>用途：执行由预处理管道组成的预处理任务。</p>
<p>关于啥是数据的预处理？之前有多篇文章解读过：</p>
<p><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&mid=2247485003&idx=1&sn=1f0d1c933d458bb9e3c71794d354aff1&chksm=eaa82e63dddfa77584bde5083adcdb4b33ef0c35fce8749dd6b6980ff92071b567a6a7ff93f7&scene=21%23wechat_redirect&source=article&objectId=2009025">Elasticsearch 预处理没有奇技淫巧，请先用好这一招！</a></p>
<p><a href="https://cloud.tencent.com/developer/tools/blog-entry?target=http://mp.weixin.qq.com/s?__biz=MzI2NDY1MTA3OQ==&mid=2247484473&idx=1&sn=1b3b07b9893f36e32ba20845f906e04a&chksm=eaa82c11dddfa50788e996fa50d2dce2d88ec0b42d2e28a9d43d8e220519eda7e9d854ce964b&scene=21%23wechat_redirect&source=article&objectId=2009025">Elasticsearch的ETL利器——Ingest节点</a></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ ingest ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h2 id="仅协调节点（Coordinating-only-node）"><a href="#仅协调节点（Coordinating-only-node）" class="headerlink" title="仅协调节点（Coordinating only node）"></a><a href="#%E4%BB%85%E5%8D%8F%E8%B0%83%E8%8A%82%E7%82%B9%EF%BC%88Coordinating-only-node%EF%BC%89"></a><a href="#%E4%BB%85%E5%8D%8F%E8%B0%83%E8%8A%82%E7%82%B9%EF%BC%88Coordinating-only-node%EF%BC%89" title="仅协调节点（Coordinating only node）"></a><strong>仅协调节点（Coordinating only node</strong>）</h2><p>用途：类似智能负载均衡器，负责：路由分发请求、聚集搜索或聚合结果。</p>
<p>注意事项：在一个集群中添加太多的仅协调节点会增加整个集群的负担，因为当选的主节点必须等待来自每个节点的集群状态更新的确认。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ ]&lt;br&gt;&lt;br&gt;# 空配置&lt;br&gt;</code></td>
</tr>
</tbody></table>
<p>空即是“色”，不对，这里空即是“仅协调节点”。</p>
<h2 id="远程节点（Remote-eligible-node）"><a href="#远程节点（Remote-eligible-node）" class="headerlink" title="远程节点（Remote-eligible node）"></a><a href="#%E8%BF%9C%E7%A8%8B%E8%8A%82%E7%82%B9%EF%BC%88Remote-eligible-node%EF%BC%89"></a><a href="#%E8%BF%9C%E7%A8%8B%E8%8A%82%E7%82%B9%EF%BC%88Remote-eligible-node%EF%BC%89" title="远程节点（Remote-eligible node）"></a><strong>远程节点（Remote-eligible node</strong>）</h2><p>用途：跨集群检索或跨集群复制。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ remote_cluster_client ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h4 id="3-6-机器学习节点（Machine-learning-node）"><a href="#3-6-机器学习节点（Machine-learning-node）" class="headerlink" title="3.6 机器学习节点（Machine learning node）"></a><a href="#3-6-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%8A%82%E7%82%B9%EF%BC%88Machine-learning-node%EF%BC%89"></a><a href="#3-6-%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E8%8A%82%E7%82%B9%EF%BC%88Machine-learning-node%EF%BC%89" title="3.6 机器学习节点（Machine learning node）"></a><strong>3.6 机器学习节点（Machine learning node</strong>）</h4><p>用途：机器学习，系收费功能。</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>plain&lt;br&gt;node.roles: [ ml, remote_cluster_client]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h4 id="3-7-转换节点（Transform-node）"><a href="#3-7-转换节点（Transform-node）" class="headerlink" title="3.7 转换节点（Transform node）"></a><a href="#3-7-%E8%BD%AC%E6%8D%A2%E8%8A%82%E7%82%B9%EF%BC%88Transform-node%EF%BC%89"></a><a href="#3-7-%E8%BD%AC%E6%8D%A2%E8%8A%82%E7%82%B9%EF%BC%88Transform-node%EF%BC%89" title="3.7 转换节点（Transform node）"></a><strong>3.7 转换节点（Transform node</strong>）</h4><p>用途：运行转换并处理转换 API 请求。这块，咱们之前文章没有涉及。</p>
<p>推荐阅读：</p>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/transform-overview.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/transform-overview.html</a></p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td><code>plain&lt;br&gt;1&lt;br&gt;2&lt;br&gt;</code></td>
<td><code>text&lt;br&gt;node.roles: [ transform, remote_cluster_client ]&lt;br&gt;</code></td>
</tr>
</tbody></table>
<h2 id="角色资源耗费"><a href="#角色资源耗费" class="headerlink" title="角色资源耗费"></a><a href="#%E8%A7%92%E8%89%B2%E8%B5%84%E6%BA%90%E8%80%97%E8%B4%B9"></a><a href="#%E8%A7%92%E8%89%B2%E8%B5%84%E6%BA%90%E8%80%97%E8%B4%B9" title="角色资源耗费"></a>角色资源耗费</h2><p><a href="https://img.songxwn.com/file/4eda1f34e9d96f7625bdb.png"><img src="/images/1717394732-50623a20e7c65d29954b30cab08ff640.png"></a></p>
<h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a><a href="#%E5%8F%82%E8%80%83"></a><a href="#%E5%8F%82%E8%80%83" title="参考"></a>参考</h1><p><a href="https://chenzhonzhou.github.io/2021/01/31/elasticsearch-suo-yin-mo-ban-template/" title="https://chenzhonzhou.github.io/2021/01/31/elasticsearch-suo-yin-mo-ban-template/">https://chenzhonzhou.github.io/2021/01/31/elasticsearch-suo-yin-mo-ban-template/</a></p>
<p><a href="https://cloud.tencent.com/developer/article/2009025" title="https://cloud.tencent.com/developer/article/2009025">https://cloud.tencent.com/developer/article/2009025</a></p>
]]></content>
      <categories>
        <category>Elasticsearch</category>
      </categories>
      <tags>
        <tag>Elasticsearch</tag>
      </tags>
  </entry>
  <entry>
    <title>Zabbix邮件告警通知模板</title>
    <url>/2024/06/03/Zabbix%E9%82%AE%E4%BB%B6%E5%91%8A%E8%AD%A6%E9%80%9A%E7%9F%A5%E6%A8%A1%E6%9D%BF/</url>
    <content><![CDATA[<p><strong>告警通知模板：</strong></p>
<p>告警主机：{HOSTNAME1}<br>告警时间：{EVENT.DATE} {EVENT.TIME}<br>告警等级：{TRIGGER.SEVERITY}<br>告警对象：{TRIGGER.KEY1}<br>告警信息：{TRIGGER.NAME}<br>问题详情：{ITEM.NAME}:{ITEM.VALUE}<br>当前状态：{TRIGGER.STATUS}<br>事件ID：{EVENT.ID}</p>
<p><strong>告警恢复模板：</strong></p>
<p>告警主机：{HOSTNAME1}<br>告警时间：{EVENT.DATE} {EVENT.TIME}<br>恢复时间：{EVENT.RECOVERY.DATE} {EVENT.RECOVERY.TIME}<br>告警等级：{TRIGGER.SEVERITY}<br>告警对象：{TRIGGER.KEY1}<br>告警信息：{TRIGGER.NAME}<br>问题详情：{ITEM.NAME}:{ITEM.VALUE}<br>当前状态：{TRIGGER.STATUS}<br>事件ID：{EVENT.ID}</p>
<p><strong>媒介 Email(HTML) 告警通知模板：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F0F0F0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #BEBEBE&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;2&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;8&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">style</span>=<span class="string">&quot;table-layout:fixed&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">style</span>=<span class="string">&quot;border-collapse: collapse&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F75000&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:35px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;DFKai-sb&quot;</span>&gt;</span>[告警信息] - &#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>应用名称: 数据管理系统<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警主机: &#123;HOSTNAME1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警内容: &#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警时间: &#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>当前值: &#123;ITEM.VALUE&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警状态: &#123;TRIGGER.STATUS&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>事件ID:  &#123;EVENT.ID&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#8E8E8E&quot;</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>此邮件为监控平台自动发送，请勿回复!<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p><strong>媒介 Email(HTML) 告警恢复模板：</strong></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#F0F0F0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">style</span>=<span class="string">&quot;border: 1px solid #BEBEBE&quot;</span> <span class="attr">cellspacing</span>=<span class="string">&quot;2&quot;</span> <span class="attr">cellpadding</span>=<span class="string">&quot;8&quot;</span> <span class="attr">width</span>=<span class="string">&quot;600&quot;</span> <span class="attr">style</span>=<span class="string">&quot;table-layout:fixed&quot;</span></span></span><br><span class="line"><span class="tag"> <span class="attr">style</span>=<span class="string">&quot;border-collapse: collapse&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#02DF82&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">th</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span> <span class="attr">style</span>=<span class="string">&quot;font-size:35px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;DFKai-sb&quot;</span>&gt;</span>[告警恢复] - &#123;TRIGGER.NAME&#125;<span class="tag">&lt;/<span class="name">marquee</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>应用名称: 数据管理系统<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警主机: &#123;HOSTNAME1&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警内容: &#123;TRIGGER.NAME&#125;，当前告警已恢复。<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警时间: &#123;EVENT.DATE&#125; &#123;EVENT.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>恢复时间: &#123;EVENT.RECOVERY.DATE&#125; &#123;EVENT.RECOVERY.TIME&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>当前值: &#123;ITEM.VALUE&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>告警状态: &#123;TRIGGER.STATUS&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#FFFFFF&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>事件ID:  &#123;EVENT.ID&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">&quot;2&quot;</span> <span class="attr">color</span>=<span class="string">&quot;#8E8E8E&quot;</span> <span class="attr">face</span>=<span class="string">&quot;Microsoft YaHei&quot;</span>&gt;</span>此邮件为监控平台自动发送，请勿回复!<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Zabbix</category>
      </categories>
      <tags>
        <tag>Zabbix</tag>
      </tags>
  </entry>
</search>
